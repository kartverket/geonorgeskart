// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://@sbaseurl@/jsapi/jsapi/esri/copyright.txt and http://www.arcgis.com/apps/webappbuilder/copyright.txt for details.
//>>built
require({
    cache: {
        "jimu/ConfigManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/topic dojo/Deferred dojo/on ./utils ./WidgetManager ./shared/AppVersionManager ./ConfigLoader ./tokenUtils ./dijit/LoadingIndicator esri/config esri/tasks/GeometryService".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g) {
                function t(b, c) {
                    var g = e.clone(b),
                        l = a.widgetProperties;
                    "undefined" === typeof c && (c = !1);
                    delete g.mode;
                    a.visitElement(g, function(b, w) {
                        b.widgets ? (delete b.isOnScreen,
                            delete b.gid, "jimu.js/images/group_icon.png" === b.icon && delete b.icon, delete b.openType, w.isOnScreen && b.panel && a.isEqual(b.panel, g.widgetOnScreen.panel) && delete b.panel) : (b.icon && b.icon === b.folderUrl + "images/icon.png?wab_dv\x3d" + window.deployVersion && delete b.icon, delete b.panel, delete b.folderUrl, delete b.amdFolder, delete b.thumbnail, delete b.configFile, delete b.gid, delete b.isOnScreen, delete b.isRemote, l.forEach(function(w) {
                            delete b[w]
                        }), c ? "undefined" === typeof b.openAtStart && (b.openAtStart = !1) : (b.visible &&
                            delete b.visible, b.manifest && b.label === b.manifest.label && delete b.label, b.isDefaultConfig && (delete b.config, delete b.isDefaultConfig)), delete b.manifest)
                    });
                    delete g.rawAppConfig;
                    delete g._ssl;
                    delete g.getConfigElementById;
                    delete g.getConfigElementsByName;
                    delete g.processNoUriWidgets;
                    delete g.addElementId;
                    delete g.getCleanConfig;
                    delete g.visitElement;
                    delete g.agolConfig;
                    delete g._itemData;
                    delete g.oldWabVersion;
                    return g
                }
                var b = null,
                    v;
                v = p(null, {
                    urlParams: null,
                    appConfig: null,
                    configFile: null,
                    _configLoaded: !1,
                    portalSelf: null,
                    constructor: function(b) {
                        this.urlParams = b || {};
                        this.listenBuilderEvents();
                        this.versionManager = new c;
                        this.widgetManager = k.getInstance();
                        this.configLoader = s.getInstance(this.urlParams, {
                            versionManager: this.versionManager
                        });
                        "config" === this.urlParams.mode && (window.parent.setConfigViewerTopic && e.isFunction(window.parent.setConfigViewerTopic)) && window.parent.setConfigViewerTopic(d);
                        "preview" === this.urlParams.mode && (window.parent.setPreviewViewerTopic && e.isFunction(window.parent.setPreviewViewerTopic)) &&
                            window.parent.setPreviewViewerTopic(d);
                        a.isMobileUa() || q(window, "resize", e.hitch(this, this._onWindowResize));
                        q(window, "orientationchange", e.hitch(this, this._onOrientationChange))
                    },
                    listenBuilderEvents: function() {
                        d.subscribe("builder/widgetChanged", e.hitch(this, this._onWidgetChanged));
                        d.subscribe("builder/groupChanged", e.hitch(this, this._onGroupChanged));
                        d.subscribe("builder/widgetPoolChanged", e.hitch(this, this._onWidgetPoolChanged));
                        d.subscribe("builder/openAtStartChange", e.hitch(this, this._onOpenAtStartChanged));
                        d.subscribe("builder/mapChanged", e.hitch(this, this._onMapChanged));
                        d.subscribe("builder/mapOptionsChanged", e.hitch(this, this._onMapOptionsChanged));
                        d.subscribe("builder/appAttributeChanged", e.hitch(this, this._onAppAttributeChanged));
                        d.subscribe("builder/setAppConfig", e.hitch(this, this._onAppConfigSet));
                        d.subscribe("builder/themeChanged", e.hitch(this, this._onThemeChanged));
                        d.subscribe("builder/layoutChanged", e.hitch(this, this._onLayoutChanged));
                        d.subscribe("builder/styleChanged", e.hitch(this, this._onStyleChanged));
                        d.subscribe("builder/syncExtent", e.hitch(this, this._onSyncExtent));
                        d.subscribe("builder/loadingPageChanged", e.hitch(this, this._onLoadingPageChanged));
                        d.subscribe("builder/templateConfigChanged", e.hitch(this, this._onTemplateConfigChanged));
                        d.subscribe("builder/appProxyForMapChanged", e.hitch(this, this._onAppProxyForMapChanged));
                        d.subscribe("builder/appProxyForUrlChanged", e.hitch(this, this._onAppProxyForUrlChanged))
                    },
                    loadConfig: function() {
                        if (!("preview" === this.urlParams.mode || "config" === this.urlParams.mode)) {
                            var b =
                                new r;
                            b.placeAt(window.jimuConfig.layoutId);
                            return this.configLoader.loadConfig().then(e.hitch(this, function(c) {
                                this.portalSelf = this.configLoader.portalSelf;
                                this.appConfig = this._addDefaultValues(c);
                                window.appInfo.isRunInMobile = a.inMobileSize();
                                console.timeEnd("Load Config");
                                c = this.getAppConfig();
                                b.destroy();
                                d.publish("appConfigLoaded", c);
                                return c
                            }), e.hitch(this, function(a) {
                                b.destroy();
                                console.error(a);
                                a && (a.message && "string" === typeof a.message) && this._showErrorMessage(a.message)
                            }))
                        }
                    },
                    _showErrorMessage: function(b) {
                        h.create("div", {
                            "class": "app-error",
                            innerHTML: b
                        }, document.body)
                    },
                    getAppConfig: function() {
                        var b;
                        window.appInfo.isRunInMobile ? (b = e.clone(this._getMobileConfig(this.appConfig)), b._originConfig = e.clone(this.appConfig)) : b = e.clone(this.appConfig);
                        b.getConfigElementById = function(b) {
                            return a.getConfigElementById(this, b)
                        };
                        b.getConfigElementsByName = function(b) {
                            return a.getConfigElementsByName(this, b)
                        };
                        b.getCleanConfig = function(b) {
                            return this._originConfig ? t(this._originConfig, b) : t(this, b)
                        };
                        b.visitElement = function(b) {
                            a.visitElement(this,
                                b)
                        };
                        return b
                    },
                    _onOrientationChange: function() {
                        this.appConfig && d.publish("appConfigChanged", this.getAppConfig(), "layoutChange")
                    },
                    _onWindowResize: function() {
                        var b = a.inMobileSize();
                        window.appInfo.isRunInMobile !== b && (window.appInfo.isRunInMobile = b, this.appConfig && d.publish("appConfigChanged", this.getAppConfig(), "layoutChange"))
                    },
                    _getMobileConfig: function(b) {
                        return a.mixinAppConfigPosition(b, b.mobileLayout)
                    },
                    _onWidgetChanged: function(b) {
                        var c = a.reCreateObject(b);
                        b = a.getConfigElementById(this.appConfig,
                            b.id);
                        !1 === c.inPanel && !b.uri && (c.closeable = !0);
                        for (var g in c) b[g] = c[g];
                        delete b.isDefaultConfig;
                        this.configLoader.addNeedValues(this.appConfig);
                        this._addDefaultValues(this.appConfig);
                        d.publish("appConfigChanged", this.getAppConfig(), "widgetChange", c)
                    },
                    _onGroupChanged: function(b) {
                        var c = a.reCreateObject(b);
                        b = a.getConfigElementById(this.appConfig, b.id);
                        for (var g in c) b[g] = c[g];
                        this.configLoader.addNeedValues(this.appConfig);
                        this._addDefaultValues(this.appConfig);
                        d.publish("appConfigChanged", this.getAppConfig(),
                            "groupChange", c)
                    },
                    _onWidgetPoolChanged: function(b) {
                        var c = a.reCreateObject(b);
                        1 === this.widgetManager.getControllerWidgets().length ? (this.appConfig.widgetPool.widgets = c.widgets, this.appConfig.widgetPool.groups = c.groups) : (b = a.getConfigElementById(this.appConfig, c.controllerId), f.forEach(b.controlledWidgets, function(b) {
                                this._removeWidgetOrGroupFromPoolById(this.appConfig, b)
                            }, this), f.forEach(b.controlledGroups, function(b) {
                                this._removeWidgetOrGroupFromPoolById(this.appConfig, b)
                            }, this), this.appConfig.widgetPool.widgets =
                            "undefined" === typeof this.appConfig.widgetPool.widgets ? c.widgets : this.appConfig.widgetPool.widgets.concat(c.widgets), this.appConfig.widgetPool.groups = "undefined" === typeof this.appConfig.widgetPool.groups ? c.groups : this.appConfig.widgetPool.groups.concat(c.groups), this.configLoader.addNeedValues(this.appConfig), b.controlledWidgets = f.map(c.widgets, function(b) {
                                return b.id
                            }), b.controlledGroups = f.map(c.groups, function(b) {
                                return b.id
                            }));
                        this.configLoader.addNeedValues(this.appConfig);
                        this.configLoader.loadAndUpgradeAllWidgetsConfig(this.appConfig).then(e.hitch(this,
                            function(b) {
                                this.appConfig = b;
                                this._addDefaultValues(this.appConfig);
                                d.publish("appConfigChanged", this.getAppConfig(), "widgetPoolChange", c)
                            }))
                    },
                    _removeWidgetOrGroupFromPoolById: function(b, a) {
                        f.some(b.widgetPool.widgets, function(c, g) {
                            if (c.id === a) return b.widgetPool.widgets.splice(g, 1), !0
                        });
                        f.some(b.widgetPool.groups, function(c, g) {
                            if (c.id === a) return b.widgetPool.groups.splice(g, 1), !0
                        })
                    },
                    _onOpenAtStartChanged: function(b) {
                        var c = a.reCreateObject(b),
                            g = this.appConfig;
                        b.isOnScreen ? (g = g.widgetOnScreen && g.widgetOnScreen.widgets) &&
                            0 < g.length && f.forEach(g, e.hitch(this, function(a) {
                                a.id === b.id ? a.openAtStart = !a.openAtStart : delete a.openAtStart
                            })) : ((g = g.widgetPool) && (g.groups && 0 < g.groups.length) && f.forEach(g.groups, e.hitch(this, function(a) {
                                a.id === b.id ? a.openAtStart = !a.openAtStart : delete a.openAtStart
                            })), g && (g.widgets && 0 < g.widgets.length) && f.forEach(g.widgets, e.hitch(this, function(a) {
                                a.id === b.id ? a.openAtStart = !a.openAtStart : delete a.openAtStart
                            })));
                        d.publish("appConfigChanged", this.getAppConfig(), "openAtStartChange", c)
                    },
                    _onAppAttributeChanged: function(b) {
                        b =
                            a.reCreateObject(b);
                        e.mixin(this.appConfig, b);
                        this.configLoader.processProxy(this.appConfig);
                        this.configLoader.addNeedValues(this.appConfig);
                        this._addDefaultValues(this.appConfig);
                        d.publish("appConfigChanged", this.getAppConfig(), "attributeChange", b)
                    },
                    _onLoadingPageChanged: function(b) {
                        b = a.reCreateObject(b);
                        var c;
                        "backgroundColor" in b ? this.appConfig.loadingPage.backgroundColor = b.backgroundColor : "backgroundImage" in b ? (c = this.appConfig.loadingPage.backgroundImage || {}, this.appConfig.loadingPage.backgroundImage =
                            e.mixin(c, b.backgroundImage)) : "loadingGif" in b && (c = this.appConfig.loadingPage.loadingGif || {}, this.appConfig.loadingPage.loadingGif = e.mixin(c, b.loadingGif));
                        this.configLoader.addNeedValues(this.appConfig);
                        this._addDefaultValues(this.appConfig);
                        d.publish("appConfigChanged", this.getAppConfig(), "loadingPageChange", b)
                    },
                    _onAppProxyForMapChanged: function(b) {
                        b = a.reCreateObject(b);
                        "appProxy" in this.appConfig.map ? this.appConfig.map.appProxy.mapItemId !== b.mapItemId ? this.appConfig.map.appProxy = b : f.forEach(b.proxyItems,
                            e.hitch(this, function(b) {
                                f.some(this.appConfig.map.appProxy.proxyItems, function(a) {
                                    if (a.sourceUrl === b.sourceUrl) return a.useProxy = b.useProxy, a.proxyUrl = b.proxyUrl || "", a.proxyId = b.proxyId || "", !0
                                })
                            })) : this.appConfig.map.appProxy = b;
                        d.publish("appConfigChanged", this.getAppConfig(), "appProxyChange", b)
                    },
                    _onAppProxyForUrlChanged: function(b) {
                        b = a.reCreateObject(b);
                        this.appConfig.appProxies = b;
                        d.publish("appConfigChanged", this.getAppConfig(), "appProxyChange", b)
                    },
                    _onTemplateConfigChanged: function(b) {
                        b = a.reCreateObject(b);
                        this.appConfig.templateConfig = b;
                        this.configLoader.addNeedValues(this.appConfig);
                        this._addDefaultValues(this.appConfig);
                        d.publish("appConfigChanged", this.getAppConfig(), "templateConfigChange", b)
                    },
                    _onMapChanged: function(b) {
                        var c = a.reCreateObject(b);
                        this.appConfig.map.mapOptions && a.deleteMapOptions(this.appConfig.map.mapOptions);
                        e.mixin(this.appConfig.map, c);
                        this.configLoader.addNeedValues(this.appConfig);
                        this.configLoader.loadAndUpgradeAllWidgetsConfig(this.appConfig).then(e.hitch(this, function(b) {
                            this.appConfig =
                                b;
                            this._addDefaultValues(this.appConfig);
                            d.publish("appConfigChanged", this.getAppConfig(), "mapChange", c)
                        }))
                    },
                    _onMapOptionsChanged: function(b) {
                        b = a.reCreateObject(b);
                        this.appConfig.map.mapOptions || (this.appConfig.map.mapOptions = {});
                        e.mixin(this.appConfig.map.mapOptions, b);
                        d.publish("appConfigChanged", this.getAppConfig(), "mapOptionsChange", b)
                    },
                    _onThemeChanged: function(b) {
                        this._getAppConfigFromTheme(b).then(e.hitch(this, function(a) {
                            this.appConfig = a;
                            d.publish("appConfigChanged", this.getAppConfig(), "themeChange",
                                b.getName())
                        }))
                    },
                    _onLayoutChanged: function(b) {
                        this.appConfig = a.mixinAppConfigPosition(this.appConfig, b.layoutConfig);
                        this._addDefaultPanelAndPosition(this.appConfig);
                        d.publish("appConfigChanged", this.getAppConfig(), "layoutChange", b.name)
                    },
                    _onStyleChanged: function(b) {
                        this.appConfig.theme.styles = this._genStyles(this.appConfig.theme.styles, b.name);
                        b.isCustom ? this.appConfig.theme.customStyles = {
                            mainBackgroundColor: b.styleColor
                        } : delete this.appConfig.theme.customStyles;
                        d.publish("appConfigChanged", this.getAppConfig(),
                            "styleChange", b.name)
                    },
                    _onSyncExtent: function(b) {
                        d.publish("syncExtent", b)
                    },
                    _genStyles: function(b, a) {
                        var c = [];
                        c.push(a);
                        f.forEach(b, function(b) {
                            0 > c.indexOf(b) && c.push(b)
                        });
                        return c
                    },
                    _getAppConfigFromTheme: function(b) {
                        var a = new m,
                            c, g = [],
                            g = this.getAppConfig().getCleanConfig();
                        g.mode = this.urlParams.mode;
                        f.forEach(g.widgetPool.groups, function(b) {
                            delete b.panel
                        }, this);
                        if (b.appConfig) c = e.clone(b.appConfig), c.map = g.map, c.map.position = b.appConfig.map.position, this._copyPoolToThemePool(g, c), c.links = g.links,
                            c.title = g.title, c.subtitle = g.subtitle, c.logo = g.logo;
                        else {
                            var l = b.getCurrentLayout(),
                                k = b.getCurrentStyle();
                            c = e.clone(g);
                            l = e.clone(l.layoutConfig);
                            c.widgetOnScreen = l.widgetOnScreen;
                            l.widgetPool && (f.forEach(l.widgetPool.widgets, function(b) {
                                b.isPreconfiguredInTheme = !0
                            }), f.forEach(l.widgetPool.groups, function(b) {
                                b.isPreconfiguredInTheme = !0
                            }));
                            this._copyPoolToThemePool(g, l);
                            c.widgetPool = l.widgetPool;
                            l.map && l.map.position && (c.map.position = l.map.position);
                            c.mobileLayout = l.mobileLayout;
                            g = this._genStyles(f.map(b.getStyles(),
                                function(b) {
                                    return b.name
                                }), k.name);
                            c.theme = {
                                name: b.getName(),
                                styles: g,
                                version: b.getVersion()
                            }
                        }
                        this.configLoader.addNeedValues(c);
                        this.configLoader.loadWidgetsManifest(c).then(e.hitch(this, function(b) {
                            return this.configLoader.loadAndUpgradeAllWidgetsConfig(b)
                        })).then(e.hitch(this, function() {
                            this._addDefaultValues(c);
                            a.resolve(c)
                        }));
                        return a
                    },
                    _copyPoolToThemePool: function(b, a) {
                        var c = b.widgetPool;
                        a.widgetPool || (a.widgetPool = {});
                        var g = a.widgetPool,
                            l = f.filter(g.widgets, function(b) {
                                if (b.isPreconfiguredInTheme ||
                                    !f.some(c.widgets, function(a) {
                                        return a.name === b.name
                                    })) return !0
                            }),
                            k = f.filter(g.groups, function(b) {
                                return b.isPreconfiguredInTheme
                            }),
                            n = f.filter(c.widgets, function(b) {
                                return !b.isPreconfiguredInTheme
                            }),
                            t = f.filter(c.groups, function(b) {
                                return !b.isPreconfiguredInTheme
                            }),
                            n = this._getPoolWidgetsWithoutDuplicated(n, a.widgetOnScreen.widgets || []);
                        g.widgets = n.concat(l);
                        g.groups = t.concat(k)
                    },
                    _getPoolWidgetsWithoutDuplicated: function(b, c) {
                        for (var g = e.clone(b), l = this.getAppConfig(), k = b.length - 1; 0 <= k; k--)
                            for (var n =
                                    c.length - 1; 0 <= n; n--)
                                if (c[n].uri) {
                                    var t = c[n].name;
                                    t || (t = a.getWidgetNameFromUri(c[n].uri));
                                    var d = l.getConfigElementById(b[k].id);
                                    b[k] && (b[k].name === t && !1 === d.supportMultiInstance) && (console.log("Widget", b[k].name, "is not copied to new theme because this widget exists in new theme."), g.splice(k, 1))
                                }
                        return g
                    },
                    _onAppConfigSet: function(b) {
                        b = a.reCreateObject(b);
                        window.appInfo.isRunInMobile = a.inMobileSize();
                        this.configLoader.processProxy(b);
                        this.configLoader.addNeedValues(b);
                        this.configLoader.loadAndUpgradeAllWidgetsConfig(b).then(e.hitch(this,
                            function(b) {
                                this._addDefaultValues(b);
                                n.setPortalUrl(b.portalUrl);
                                window.portalUrl = b.portalUrl;
                                this.appConfig ? (a.deleteMapOptions(b.map.mapOptions), this.appConfig = b, d.publish("appConfigChanged", this.getAppConfig(), "resetConfig", b)) : (this.appConfig = b, d.publish("appConfigLoaded", this.getAppConfig()))
                            }))
                    },
                    _addDefaultValues: function(b) {
                        this._addDefaultPortalUrl(b);
                        this._addDefaultGeometryService(b);
                        this._addDefaultStyle(b);
                        this._addDefaultMap(b);
                        this._addDefaultVisible(b);
                        "undefined" === typeof b.widgetOnScreen &&
                            (b.widgetOnScreen = {});
                        "undefined" === typeof b.widgetPool && (b.widgetPool = {});
                        this._addDefaultPanelAndPosition(b);
                        this._addDefaultOfWidgetGroup(b);
                        (b.widgetPool.widgets && 0 < b.widgetPool.widgets.length && void 0 === b.widgetPool.widgets[0].index || b.widgetPool.groups && 0 < b.widgetPool.groups.length && void 0 === b.widgetPool.groups[0].index) && this._addIndexForWidgetPool(b);
                        return b
                    },
                    _addDefaultPortalUrl: function(b) {
                        "undefined" === typeof b.portalUrl && (b.portalUrl = "http://www.arcgis.com/");
                        b.portalUrl && "/" !== b.portalUrl.substr(b.portalUrl.length -
                            1) && (b.portalUrl += "/")
                    },
                    _addDefaultGeometryService: function(b) {
                        var a = b && b.geometryService,
                            a = a && "string" === typeof a && e.trim(a) ? e.trim(a) : this.portalSelf.helperServices.geometry.url;
                        b.geometryService = a;
                        l.defaults.geometryService = new g(b.geometryService)
                    },
                    _addDefaultStyle: function(b) {
                        if (b.theme && (!b.theme.styles || 0 === b.theme.styles.length)) b.theme.styles = ["default"]
                    },
                    _addDefaultMap: function(b) {
                        b.map.id = "map";
                        "undefined" === typeof b.map["3D"] && "undefined" === typeof b.map["2D"] && (b.map["2D"] = !0);
                        "undefined" ===
                        typeof b.map.position && (b.map.position = {
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0
                        });
                        "undefined" === typeof b.map.portalUrl && (b.map.portalUrl = b.portalUrl)
                    },
                    _addDefaultVisible: function(b) {
                        a.visitElement(b, function(b) {
                            void 0 === b.visible && (b.visible = !0)
                        })
                    },
                    _addDefaultPanelAndPosition: function(b) {
                        this._addOnScreenDefaultPanelAndPosition(b);
                        this._addPoolDefaultPanelAndPosition(b)
                    },
                    _addOnScreenDefaultPanelAndPosition: function(b) {
                        var a, c;
                        if (b = b.widgetOnScreen) {
                            a = b.panel && b.panel.positionRelativeTo ? b.panel.positionRelativeTo :
                                "map";
                            "undefined" === typeof b.panel || "undefined" === typeof b.panel.uri ? b.panel = {
                                uri: "jimu/OnScreenWidgetPanel",
                                position: {
                                    relativeTo: a
                                }
                            } : "undefined" === typeof b.panel.position ? b.panel.position = {
                                relativeTo: a
                            } : "undefined" === typeof b.panel.position.relativeTo && (b.panel.position.relativeTo = a);
                            if (b.widgets)
                                for (a = 0; a < b.widgets.length; a++) b.widgets[a].position || (b.widgets[a].position = {}), b.widgets[a].position.relativeTo || (b.widgets[a].position.relativeTo = b.widgets[a] && b.widgets[a].positionRelativeTo ? b.widgets[a].positionRelativeTo :
                                    "map"), !0 === b.widgets[a].inPanel && !b.widgets[a].panel && (b.widgets[a].panel = e.clone(b.panel), b.widgets[a].panel.position = b.widgets[a].position, b.widgets[a].panel.position.relativeTo = b.widgets[a].position.relativeTo);
                            if (b.groups)
                                for (a = 0; a < b.groups.length; a++) {
                                    b.groups[a].panel || (b.groups[a].panel = b.panel);
                                    b.groups[a].panel && !b.groups[a].panel.position && (b.groups[a].panel.position = {});
                                    b.groups[a].panel.position.relativeTo || (b.groups[a].panel.position.relativeTo = b.groups[a].panel.positionRelativeTo ? b.groups[a].panel.positionRelativeTo :
                                        "map");
                                    b.groups[a].widgets || (b.groups[a].widgets = []);
                                    for (c = 0; c < b.groups[a].widgets.length; c++) b.groups[a].widgets[c].panel = b.groups[a].panel
                                }
                        }
                    },
                    _addPoolDefaultPanelAndPosition: function(b) {
                        var a, c, g = b.widgetPool;
                        if (g) {
                            a = g.panel && g.panel.positionRelativeTo ? g.panel.positionRelativeTo : "map";
                            "undefined" === typeof g.panel || "undefined" === typeof g.panel.uri ? g.panel = {
                                    uri: "jimu/OnScreenWidgetPanel",
                                    position: {
                                        relativeTo: a
                                    }
                                } : "undefined" === typeof g.panel.position ? g.panel.position = {
                                    relativeTo: a
                                } : "undefined" === typeof g.panel.position.relativeTo &&
                                (g.panel.position.relativeTo = a);
                            if (g.groups)
                                for (a = 0; a < g.groups.length; a++) {
                                    g.groups[a].panel ? g.groups[a].panel.position.relativeTo || (g.groups[a].panel.position.relativeTo = g.groups[a].panel.positionRelativeTo ? g.groups[a].panel.positionRelativeTo : "map") : g.groups[a].panel = g.panel;
                                    g.groups[a].widgets || (g.groups[a].widgets = []);
                                    for (c = 0; c < g.groups[a].widgets.length; c++) g.groups[a].widgets[c].panel = g.groups[a].panel
                                }
                            if (g.widgets)
                                for (a = 0; a < g.widgets.length; a++) !1 === g.widgets[a].inPanel ? (c = g.widgets[a].positionRelativeTo ?
                                    g.widgets[a].positionRelativeTo : "map", g.widgets[a].position ? g.widgets[a].position.relativeTo || (g.widgets[a].position.relativeTo = c) : g.widgets[a].position = {
                                        relativeTo: c
                                    }) : g.widgets[a].panel || (g.widgets[a].panel = b.widgetPool.panel)
                        }
                    },
                    _addDefaultOfWidgetGroup: function(b) {
                        a.visitElement(b, e.hitch(this, function(b, a) {
                            b.isOnScreen = a.isOnScreen;
                            b.widgets ? (b.gid = b.id, 1 === b.widgets.length ? (b.label || (b.label = b.widgets[0].label ? b.widgets[0].label : "Group"), b.icon || (b.icon = b.widgets[0].uri ? this._getDefaultIconFromUri(b.widgets[0].uri) :
                                "jimu.js/images/group_icon.png")) : (b.icon = b.icon ? b.icon : "jimu.js/images/group_icon.png", b.label = b.label ? b.label : "Group_" + a.index)) : b.gid = a.groupId
                        }))
                    },
                    _getDefaultIconFromUri: function(b) {
                        b = b.split("/");
                        b.pop();
                        return b.join("/") + "/images/icon.png?wab_dv\x3d" + window.deployVersion
                    },
                    _addIndexForWidgetPool: function(b) {
                        var a = 0,
                            c, g;
                        if (b.widgetPool.widgets)
                            for (c = 0; c < b.widgetPool.widgets.length; c++) b.widgetPool.widgets[c].index = a, a++;
                        if (b.widgetPool.groups)
                            for (c = 0; c < b.widgetPool.groups.length; c++) {
                                b.widgetPool.groups[c].index =
                                    a;
                                a++;
                                for (g = 0; g < b.widgetPool.groups[c].widgets.length; g++) b.widgetPool.groups[c].widgets[g].index = g
                            }
                    }
                });
                v.getInstance = function(a) {
                    null === b ? b = new v(a) : a && (b.urlParams = a, b.configLoader && (b.configLoader.urlParams = a));
                    window.getAppConfig = e.hitch(b, b.getAppConfig);
                    return b
                };
                return v
            })
        },
        "jimu/utils": function() {
            define("dojo/_base/lang dojo/_base/array dojo/_base/html dojo/_base/sniff dojo/_base/config dojo/io-query dojo/query dojo/NodeList-traverse dojo/Deferred dojo/on dojo/json dojo/cookie dojo/number dojo/date/locale dojo/i18n!dojo/cldr/nls/number dojox/encoding/base64 esri/lang esri/arcgis/utils esri/dijit/PopupTemplate esri/SpatialReference esri/geometry/Extent esri/geometry/Multipoint esri/geometry/Polyline esri/geometry/Polygon esri/geometry/webMercatorUtils esri/tasks/GeometryService esri/tasks/ProjectParameters esri/tasks/FeatureSet esri/symbols/PictureMarkerSymbol esri/urlUtils esri/request esri/tasks/query esri/tasks/QueryTask esri/graphicsUtils jimu/portalUrlUtils ./shared/utils".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A, x, C, u, E, D, B, G, I, K, R, N, P, J, H, O) {
                    function L(b, a) {
                        b = b || "";
                        for (var c = 0, g = [{
                                test: window.File && window.FileReader && window.FileList && window.Blob || !y.file.isEnabledFlash(),
                                failure: [b + "libs/polyfills/fileAPI/FileAPI.js"],
                                callback: function() {
                                    c++;
                                    c === g.length && a()
                                }
                            }], l = 0; l < g.length; l++) testLoad(g[l])
                    }

                    function M(b, a) {
                        var c = b.match(/url\([^)]+\)/gi),
                            g, l;
                        if (null === c || "" === a) return b;
                        for (g = 0; g < c.length; g++)
                            if (l = c[g].match(/(url\(["|']?)(.*)((?:['|"]?)\))/i), 4 <= l.length) {
                                var k =
                                    l[2];
                                a.endWith("/") || (a += "/");
                                b = b.replace(l[1] + k + l[3], l[1] + a + k + l[3])
                            }
                        return b
                    }

                    function F(b, a) {
                        var c = Array.isArray(a),
                            g = c && [] || {};
                        c ? (b = b || [], g = g.concat(b), a.forEach(function(a, c) {
                            "undefined" === typeof b[c] ? g[c] = a : "object" === typeof a ? g[c] = F(b[c], a) : -1 === b.indexOf(a) && g.push(a)
                        })) : (b && "object" === typeof b && Object.keys(b).forEach(function(a) {
                            g[a] = b[a]
                        }), Object.keys(a).forEach(function(c) {
                            g[c] = "object" !== typeof a[c] || !a[c] ? a[c] : b[c] ? F(b[c], a[c]) : a[c]
                        }));
                        return g
                    }

                    function Q(b, a, c) {
                        a = function(b) {
                            var a = [];
                            b.split("_").forEach(function(b) {
                                var c = !1,
                                    g;
                                "--" === b.slice(b.length - 2) && (c = !0, b = b.slice(0, b.length - 2));
                                g = b.search(/\[[0-9]+\]/); - 1 === g && (g = b.length);
                                a.push({
                                    key: b.slice(0, g),
                                    index: Number(b.slice(g + 1, -1)),
                                    deleteFlag: c
                                })
                            });
                            return a
                        }(a);
                        for (var g = 1; g < a.length - 1; g++)
                            if (b = p.isArray(b[a[g].key]) ? b[a[g].key][a[g].index] : b[a[g].key], !b) return;
                        if (a[a.length - 1].deleteFlag) !0 === c && (p.isArray(b[a[a.length - 1].key]) ? delete b[a[a.length - 1].key][a[a.length - 1].index] : delete b[a[a.length - 1].key]);
                        else if (p.isArray(b[a[a.length -
                                1].key])) {
                            if (void 0 === c) return b[a[a.length - 1].key][a[a.length - 1].index];
                            b[a[a.length - 1].key][a[a.length - 1].index] = c
                        } else {
                            if (void 0 === c) return b[a[a.length - 1].key];
                            b[a[a.length - 1].key] = c
                        }
                    }

                    function U(b, a, c) {
                        function g(c) {
                            c = y.template.getSearchRange(a, c, "]");
                            var l = a.slice(c.firstPos, c.lastPos);
                            return -1 !== c.firstPos ? (l = a.slice(c.firstPos + l.indexOf("[") + 1, c.lastPos - 1), c = a.slice(c.lastPos + 1), (l = y.getConfigElementById(b, l)) ? {
                                object: l,
                                key: "section_" + c,
                                state: "isSection"
                            } : {
                                state: "deleted"
                            }) : {
                                state: "isNotSection"
                            }
                        }
                        var l = b,
                            k = a = a.replace(/\//g, "_"),
                            n = g("groups\\[.+\\]");
                        if ("deleted" !== n.state && ("isSection" === n.state && (l = n.object, k = n.key), n = g("widgets\\[.+\\]"), "delete" !== n.state)) return "isSection" === n.state && (l = n.object, k = n.key), Q(l, k, c)
                    }
                    var y = {},
                        aa = {
                            geometryService: "http://utility.arcgisonline.com/arcgis/rest/services/Geometry/GeometryServer"
                        };
                    p.mixin(y, O);
                    window.atob || (window.atob = function(b) {
                        b = t.decode(b);
                        for (var a = "", c = 0, g = b.length; c < g; c++) a += String.fromCharCode(b[c]);
                        return a
                    });
                    window.btob || (window.btob =
                        function(b) {
                            for (var a = [], c = 0, g = b.length; c < g; c++) a.push(String.charCodeAt(b[c]));
                            return t.encode(a)
                        });
                    var W = "unload",
                        Y = [];
                    require.on("error", function(b) {
                        e.forEach(Y, function(a) {
                            b.info[0] && -1 < b.info[0].indexOf(a.resKey) && a.def.reject(b);
                            for (var c in b.info) - 1 < c.indexOf(a.resKey) && a.def.reject(b)
                        })
                    });
                    y.checkError = function(b, a) {
                        Y.push({
                            resKey: b,
                            def: a
                        })
                    };
                    y.replacePlaceHolder = function(b, a) {
                        var c = s.stringify(b),
                            g = c.match(/\$\{(\w)+\}/g),
                            l;
                        if (null === g) return b;
                        for (l = 0; l < g.length; l++) {
                            var k = g[l].match(/(\w)+/g)[0];
                            a[k] && (c = c.replace(g[l], a[k]))
                        }
                        return s.parse(c)
                    };
                    y.changeUnit = function(b) {
                        var a = Math.abs(b),
                            c;
                        b = Math.floor(a);
                        c = Math.floor(60 * (a - b));
                        a = (60 * (60 * (a - b) - c)).toFixed(2);
                        return b + "\u00b0" + (10 > c ? "0" + c : c) + "'" + (10 > a ? "0" + a : a) + '"'
                    };
                    y.formatTime = function(b) {
                        var a = b / 1E3;
                        b = Math.floor(a / 60);
                        a = Number(a - 60 * b).toFixed(1);
                        return (10 > b ? "0" + b : b) + ":" + (10 > a ? "0" + a : a)
                    };
                    y.parseTime = function(b) {
                        var a = /(\d{2,})\:(\d{2})\.(\d{1})/;
                        if (!a.test(b)) return console.log("wrong time format."), -1;
                        b = b.match(a);
                        return 1E3 * (60 * parseInt(b[1],
                            10) + parseInt(b[2], 10) + parseInt(b[3], 10) / 10)
                    };
                    y.preloadImg = function(b, a) {
                        var c = [],
                            c = "string" === typeof b ? [b] : b;
                        e.forEach(c, function(b) {
                            (new Image).src = a ? a + b : b
                        })
                    };
                    var T = null;
                    y.getImagesSize = function(b) {
                        var a = new k;
                        if (!b || 0 !== b.indexOf("http")) return a.reject(), a;
                        null === T && (T = f.create("img", {
                            id: "__test-image-size",
                            style: {
                                position: "absolute",
                                left: "-9999px",
                                top: "-9999px"
                            }
                        }, document.body));
                        var g = c(T, "load", function() {
                                clearTimeout(l);
                                l = null;
                                g.remove();
                                var b = f.getContentBox(T);
                                1 === b.w && 1 === b.h || 0 === b.w || 0 ===
                                    b.h ? a.reject() : a.resolve([b.w, b.h])
                            }, {}),
                            l = setTimeout(function() {
                                clearTimeout(l);
                                l = null;
                                a.reject()
                            }, 5E3);
                        f.setAttr(T, "src", b);
                        return a
                    };
                    y.getPositionStyle = function(b) {
                        var a = {};
                        if (!b) return a;
                        b = p.clone(b);
                        if (window.isRTL) {
                            var c;
                            "undefined" !== typeof b.left && "undefined" !== typeof b.right ? (c = b.left, b.left = b.right, b.right = c) : "undefined" !== typeof b.left ? (b.right = b.left, delete b.left) : "undefined" !== typeof b.right && (b.left = b.right, delete b.right);
                            "undefined" !== typeof b.paddingLeft && "undefined" !== typeof b.paddingRight ?
                                (c = b.paddingLeft, b.paddingLeft = b.paddingRight, b.paddingRight = c) : "undefined" !== typeof b.paddingLeft ? (b.paddingRight = b.paddingLeft, delete b.paddingLeft) : "undefined" !== typeof b.paddingRight && (b.paddingLeft = b.paddingRight, delete b.paddingRight)
                        }
                        c = "left top right bottom width height padding paddingLeft paddingRight paddingTop paddingBottom".split(" ");
                        for (var g = 0; g < c.length; g++) {
                            var l = c[g];
                            "number" === typeof b[l] ? a[l] = b[l] + "px" : "undefined" !== typeof b[l] ? a[l] = b[l] : "padding" === l.substr(0, 7) ? a[l] = 0 : a[l] = "auto"
                        }
                        a.zIndex =
                            "undefined" === typeof b.zIndex ? "auto" : b.zIndex;
                        return a
                    };
                    y.isEqual = function(b, a) {
                        function c(b, a) {
                            var k;
                            if (null === b && null === a || "undefined" === typeof b && "undefined" === typeof a) return !0;
                            if (null === b && null !== a || null === a && null !== b || "undefined" === typeof b && "undefined" !== typeof a || "undefined" === typeof a && "undefined" !== typeof b) return !1;
                            if (isNaN(b) && isNaN(a) && "number" === typeof b && "number" === typeof a || b === a) return !0;
                            if ("function" === typeof b && "function" === typeof a || b instanceof Date && a instanceof Date || b instanceof RegExp && a instanceof RegExp || b instanceof String && a instanceof String || b instanceof Number && a instanceof Number) return b.toString() === a.toString();
                            if (-1 < g.indexOf(b) || -1 < l.indexOf(a)) return !1;
                            if (null !== a) {
                                for (k in a)
                                    if (a.hasOwnProperty(k) !== b.hasOwnProperty(k) || typeof a[k] !== typeof b[k]) return !1;
                                for (k in b) {
                                    if (a.hasOwnProperty(k) !== b.hasOwnProperty(k) || typeof a[k] !== typeof b[k]) return !1;
                                    switch (typeof b[k]) {
                                        case "object":
                                        case "function":
                                            g.push(b);
                                            l.push(a);
                                            if (!c(b[k], a[k])) return !1;
                                            g.pop();
                                            l.pop();
                                            break;
                                        default:
                                            if (isNaN(b[k]) && isNaN(a[k]) && "number" === typeof b[k] && "number" === typeof a[k]) return !0;
                                            if (b[k] !== a[k]) return !1
                                    }
                                }
                            }
                            return !0
                        }
                        var g, l;
                        g = [];
                        l = [];
                        return !c(b, a) ? !1 : !0
                    };
                    y.file = {
                        loadFileAPI: function() {
                            var b = new k;
                            if ("unload" === W) {
                                var a = window.isBuilder ? "stemapp/" : "";
                                window.FileAPI = {
                                    debug: !1,
                                    flash: !0,
                                    staticPath: a + "libs/polyfills/fileAPI/",
                                    flashUrl: a + "libs/polyfills/fileAPI/FileAPI.flash.swf",
                                    flashImageUrl: a + "libs/polyfills/fileAPI/FileAPI.flash.image.swf"
                                };
                                L(a, p.hitch(this, function() {
                                    W = "loaded";
                                    b.resolve()
                                }));
                                W = "loading"
                            } else "loaded" === W && b.resolve();
                            return b
                        },
                        supportHTML5: function() {
                            return window.File && window.FileReader && window.FileList && window.Blob ? !0 : !1
                        },
                        supportFileAPI: function() {
                            return h("safari") && 6 > h("safari") ? !1 : window.FileAPI && window.FileAPI.readAsDataURL ? !0 : !1
                        },
                        isEnabledFlash: function() {
                            var b = null;
                            if (document.all) try {
                                b = new ActiveXObject("ShockwaveFlash.ShockwaveFlash")
                            } catch (a) {
                                b = null
                            } else navigator.plugins && 0 < navigator.plugins.length && (b = navigator.plugins["Shockwave Flash"]);
                            return !!b
                        },
                        containSeparator: function(b) {
                            return 0 <= b.indexOf("/") ? !0 : 0 <= b.indexOf("\\") ? !0 : !1
                        },
                        getNameFromPath: function(b) {
                            var a = "",
                                a = 0 <= b.indexOf("/") ? "/" : "\\";
                            b = b.split(a);
                            return 0 < b.length ? b[b.length - 1] : null
                        },
                        getFolderFromPath: function(b) {
                            return b.substr(0, b.length - y.file.getNameFromPath(b).length)
                        },
                        readFile: function(b, a, c, g) {
                            if (this.supportHTML5()) {
                                var l = b.target.files[0];
                                l && (l.type.match(a) ? l.size >= c ? g({
                                        errCode: "exceed"
                                    }) : (b = new FileReader, b.onload = function(b) {
                                        g(null, l.name, b.target.result)
                                    }, b.readAsDataURL(l)) :
                                    g({
                                        errCode: "invalidType"
                                    }))
                            } else if (this.supportFileAPI()) {
                                var k = window.FileAPI.getFiles(b);
                                k[0].type.match(a) ? k[0].size >= c ? g({
                                    errCode: "exceed"
                                }) : window.FileAPI.readAsDataURL(k[0], function(b) {
                                    b && b.result ? g(null, k[0].name, b.result) : g({
                                        errCode: "readError"
                                    })
                                }) : g({
                                    errCode: "invalidType"
                                })
                            }
                        }
                    };
                    y.getUriInfo = function(b) {
                        var a, c = {};
                        a = b.indexOf("/");
                        b.substring(0, a);
                        a = b.substring(0, b.lastIndexOf("/") + 1);
                        c.folderUrl = require(y.getRequireConfig()).toUrl(a);
                        c.amdFolder = a;
                        c.url = c.folderUrl;
                        if (/^http(s)?:\/\//.test(b) ||
                            /^\/\//.test(b)) c.isRemote = !0;
                        return c
                    };
                    y.widgetJson = function() {
                        return {
                            addManifest2WidgetJson: function(b, a) {
                                p.mixin(b, a.properties);
                                b.name = a.name;
                                b.label || (b.label = a.label);
                                b.manifest = a;
                                b.isRemote = a.isRemote;
                                b.isRemote && (b.itemId = a.itemId);
                                a.featureActions && (b.featureActions = a.featureActions);
                                b.icon || (b.icon = a.icon);
                                b.thumbnail || (b.thumbnail = a.thumbnail);
                                b.folderUrl = a.folderUrl;
                                b.amdFolder = a.amdFolder
                            },
                            removeManifestFromWidgetJson: function(b) {
                                if (b.manifest) {
                                    for (var a in b.manifest.properties) b[a] =
                                        void 0;
                                    b.name = void 0;
                                    b.label = void 0;
                                    b.featureActions = void 0;
                                    b.manifest = void 0
                                }
                            }
                        }
                    }();
                    y.getRequireConfig = function() {
                        if (jimuConfig) {
                            var b = [];
                            jimuConfig.widgetsPackage && (b = b.concat(jimuConfig.widgetsPackage));
                            jimuConfig.themesPackage && (b = b.concat(jimuConfig.themesPackage));
                            jimuConfig.configsPackage && (b = b.concat(jimuConfig.configsPackage));
                            return {
                                packages: b
                            }
                        }
                        return {}
                    };
                    y.getTypeByGeometryType = function(b) {
                        var a = "",
                            c = "esriGeometryLine esriGeometryCircularArc esriGeometryEllipticArc esriGeometryBezier3Curve esriGeometryPath esriGeometryPolyline".split(" "),
                            g = ["esriGeometryRing", "esriGeometryPolygon", "esriGeometryEnvelope"];
                        0 <= ["esriGeometryPoint", "esriGeometryMultipoint"].indexOf(b) ? a = "point" : 0 <= c.indexOf(b) ? a = "polyline" : 0 <= g.indexOf(b) && (a = "polygon");
                        return a
                    };
                    y.getSymbolTypeByGeometryType = function(b) {
                        var a = null;
                        b = y.getTypeByGeometryType(b);
                        "point" === b ? a = "marker" : "polyline" === b ? a = "line" : "polygon" === b && (a = "fill");
                        return a
                    };
                    y.getServices = function() {
                        return aa
                    };
                    y.getArcGISDefaultGeometryService = function() {
                        return new D(aa.geometryService)
                    };
                    y.restoreToDefaultWebMapExtent =
                        function(b, a, c) {
                            var g = new k;
                            if (!(b && "esri.Map" === b.declaredClass)) return setTimeout(function() {
                                g.reject("Invalid map.")
                            }, 0), g;
                            a = a && a.itemInfo;
                            if (!a) return setTimeout(function() {
                                g.reject("Invalid itemInfo")
                            }, 0), g;
                            a = a.item && a.item.extent;
                            if (!a) return setTimeout(function() {
                                g.reject("Invalid itemInfo.item.extent")
                            }), g;
                            var l = new z({
                                    wkid: 4326
                                }),
                                l = new A(a[0][0], a[0][1], a[1][0], a[1][1], l);
                            if (4326 === parseInt(b.spatialReference.wkid, 10)) return b.setExtent(l);
                            if (b.spatialReference.isWebMercator()) return l = E.geographicToWebMercator(l),
                                b.setExtent(l);
                            a = new B;
                            a.geometries = [l];
                            a.outSR = b.spatialReference;
                            l = esriConfig && esriConfig.defaults && esriConfig.defaults.geometryService;
                            l && "esri.tasks.GeometryService" === l.declaredClass || (c && "string" === typeof c && p.trim(c) ? (c = p.trim(c), l = new D(c)) : l = y.getArcGISDefaultGeometryService());
                            l.project(a).then(function(a) {
                                if (a = a && a[0]) return b.setExtent(a);
                                g.reject("Invalid projected geometry.");
                                return g
                            }, function(b) {
                                console.error(b);
                                g.reject(b);
                                return g
                            });
                            return g
                        };
                    y.getAncestorWindow = function() {
                        for (var b =
                                window; b && b.parent && b !== b.parent;) b = b.parent;
                        return b
                    };
                    y.getAncestorDom = function(b, a, c) {
                        if (b && 1 === b.nodeType && a && "function" === typeof a) {
                            var g = 100,
                                l = document.body;
                            c && ("number" === typeof c ? (c = parseInt(c, 10), 0 < c && (g = c)) : 1 === c.nodeType && (l = c));
                            for (c = 0; b.parentNode && c < g && f.isDescendant(b.parentNode, l);) {
                                if (a(b.parentNode)) return b.parentNode;
                                b = b.parentNode;
                                c++
                            }
                        }
                        return null
                    };
                    y.bindClickAndDblclickEvents = function(b, a, g, l) {
                        var k = null;
                        if (b && 1 === b.nodeType && a && "function" === typeof a && g && "function" === typeof g) {
                            var n =
                                200;
                            l && "number" === typeof l && (l = parseInt(l, 10), 0 < l && (n = l));
                            var t = 0,
                                k = c(b, "click", function(b) {
                                    t++;
                                    1 === t ? setTimeout(function() {
                                        1 === t && (t = 0, a(b))
                                    }, n) : 2 === t && (t = 0, g(b))
                                })
                        }
                        return k
                    };
                    y.isScrollToBottom = function(b) {
                        var a = f.getContentBox(b);
                        return 1 > b.scrollHeight - (b.scrollTop + a.h)
                    };
                    y.getAllItemTypes = function() {
                        var b = [],
                            b = b.concat(["Web Map", "Web Scene", "CityEngine Web Scene"]).concat("Feature Service;Map Service;Image Service;KML;WMS;Feature Collection;Feature Collection Template;Geodata Service;Globe Service".split(";")).concat(["Geometry Service",
                                "Geocoding Service", "Network Analysis Service", "Geoprocessing Service"
                            ]).concat(["Web Mapping Application", "Mobile Application", "Code Attachment", "Operations Dashboard Add In", "Operation View"]).concat("Symbol Set;Color Set;Shapefile;CSV;Service Definition;Document Link;Microsoft Word;Microsoft PowerPoint;Microsoft Excel;PDF;Image;Visio Document".split(";"));
                        return b = b.concat("Map Document;Map Package;Tile Package;ArcPad Package;Explorer Map;Globe Document;Scene Document;Published Map;Map Template;Windows Mobile Package".split(";")).concat(["Layer",
                            "Layer Package", "Explorer Layer"
                        ]).concat(["Geoprocessing Package", "Geoprocessing Sample", "Locator Package", "Rule Package"]).concat("Workflow Manager Package;Desktop Application;Desktop Application Template;Code Sample;Desktop Add In;Explorer Add In".split(";"))
                    };
                    y.getItemQueryStringByTypes = function(b) {
                        var a = "",
                            c = y.getAllItemTypes();
                        if (b && 0 < b.length && 0 < b.length) {
                            var g = "";
                            e.forEach(b, function(a, c) {
                                g += ' type:"' + a + '" ';
                                c !== b.length - 1 && (g += " OR ")
                            });
                            a = " ( " + g + " ) ";
                            c = b.concat(c);
                            c = e.filter(c, function(a) {
                                return e.every(b,
                                    function(b) {
                                        return 0 > b.toLowerCase().indexOf(a.toLowerCase())
                                    })
                            });
                            e.forEach(c, function(b) {
                                a += ' -type:"' + b + '" '
                            })
                        }
                        return a
                    };
                    y.getItemQueryStringByTypeKeywords = function(b) {
                        var a = "";
                        b && 0 < b.length && (a = ' typekeywords:"' + b.join(",") + '" ');
                        return a
                    };
                    y.isNotEmptyString = function(b, a) {
                        var c = b && "string" === typeof b;
                        return c ? a ? c && p.trim(b) : !0 : !1
                    };
                    y.isValidNumber = function(b) {
                        return "number" === typeof b && !isNaN(b)
                    };
                    y.isObject = function(b) {
                        return b && "object" === typeof b
                    };
                    y.createWebMap = function(b, a, c, g) {
                        b = H.getStandardPortalUrl(b);
                        b = H.getBaseItemUrl(b);
                        v.arcgisUrl = b;
                        return v.createMap(a, c, g)
                    };
                    y.getRandomString = function() {
                        var b = Math.random().toString();
                        return b = b.slice(2, b.length)
                    };
                    y._getDomainsByServerName = function(b) {
                        var a = b.split("."),
                            c = a.length;
                        return e.map(a, p.hitch(this, function(b, g) {
                            var l = a.slice(g, c),
                                k = "",
                                n = l.length - 1;
                            e.forEach(l, p.hitch(this, function(b, a) {
                                k += b;
                                a !== n && (k += ".")
                            }));
                            return k
                        }))
                    };
                    y.removeCookie = function(b, a) {
                        var c = this._getDomainsByServerName(window.location.hostname);
                        e.forEach(c, p.hitch(this, function(c) {
                            n(b,
                                null, {
                                    expires: -1,
                                    path: a
                                });
                            n(b, null, {
                                expires: -1,
                                path: a,
                                domain: c
                            });
                            n(b, null, {
                                expires: -1,
                                path: a,
                                domain: "." + c
                            })
                        }))
                    };
                    y.isLocaleChanged = function(b, a) {
                        return !b.startWith(a)
                    };
                    y.hashToObject = function(b) {
                        b = b.replace("#", "");
                        b = m.queryToObject(b);
                        for (var a in b)
                            if (b.hasOwnProperty(a)) try {
                                b[a] = s.parse(b[a])
                            } catch (c) {}
                        return b
                    };
                    y.reCreateObject = function(b) {
                        function a(b) {
                            var g = [];
                            b.forEach(function(b) {
                                Array.isArray(b) ? g.push(a(b)) : "object" === typeof b ? g.push(c(b)) : g.push(b)
                            });
                            return g
                        }

                        function c(b) {
                            var g = {},
                                l;
                            for (l in b) b.hasOwnProperty(l) &&
                                (null === b[l] ? g[l] = null : Array.isArray(b[l]) ? g[l] = a(b[l]) : g[l] = "object" === typeof b[l] ? c(b[l]) : b[l]);
                            return g
                        }
                        return Array.isArray(b) ? a(b) : c(b)
                    };
                    y.setVerticalCenter = function(b) {
                        setTimeout(function() {
                            var a = q(".jimu-vcenter-text", b),
                                c, g;
                            e.forEach(a, function(b) {
                                c = f.getContentBox(b).h;
                                f.setStyle(b, {
                                    lineHeight: c + "px"
                                })
                            }, this);
                            a = q(".jimu-vcenter", b);
                            e.forEach(a, function(b) {
                                c = f.getContentBox(b).h;
                                g = f.getContentBox(q(b).parent()[0]).h;
                                f.setStyle(b, {
                                    marginTop: (g - c) / 2 + "px"
                                })
                            }, this)
                        }, 10)
                    };
                    y.merge = F;
                    y.loadStyleLink =
                        function(b, a, g) {
                            var l = new k,
                                n, t = require(y.getRequireConfig()).toUrl(a);
                            if (require.cache["url:" + t]) {
                                n = require.cache["url:" + t];
                                var w = t.split("/").pop(),
                                    t = t.substr(0, t.length - w.length);
                                n = M(n, t);
                                b = g ? f.create("style", {
                                    id: b,
                                    type: "text/css"
                                }, f.byId(g), "before") : f.create("style", {
                                    id: b,
                                    type: "text/css"
                                }, document.getElementsByTagName("head")[0]);
                                b.styleSheet && !b.sheet ? b.styleSheet.cssText = n : b.appendChild(f.toDom(n));
                                l.resolve("load");
                                return l
                            }
                            n = g ? f.create("link", {
                                id: b,
                                rel: "stylesheet",
                                type: "text/css",
                                href: t +
                                    "?wab_dv\x3d" + window.deployVersion
                            }, f.byId(g), "before") : f.create("link", {
                                id: b,
                                rel: "stylesheet",
                                type: "text/css",
                                href: t + "?wab_dv\x3d" + window.deployVersion
                            }, document.getElementsByTagName("head")[0]);
                            c(n, "load", function() {
                                l.resolve("load")
                            });
                            var d = setInterval(function() {
                                    var b;
                                    if (e.some(document.styleSheets, function(c) {
                                            if (c.href && c.href.substr(c.href.indexOf(a), c.href.length) === a) return b = c, !0
                                        })) try {
                                        !l.isFulfilled() && (b.cssRules && b.cssRules.length || b.rules && b.rules.length) && l.resolve("load"), clearInterval(d)
                                    } catch (c) {}
                                },
                                50);
                            return l
                        };
                    y.changeLocation = function(b) {
                        window.history.pushState && window.history.pushState({
                            path: b
                        }, "", b)
                    };
                    y.urlToObject = function(b) {
                        var a = null; - 1 === b.indexOf("#") ? (a = K.urlToObject(b), a.hash = null) : (b = b.split("#"), a = K.urlToObject(b[0]), a.hash = b[1] ? -1 < b[1].indexOf("\x3d") ? m.queryToObject(b[1]) : b[1] : null);
                        return a
                    };
                    y.manifest = function() {
                        function b(a) {
                            a.panels.forEach(function(b) {
                                b.uri = "panels/" + b.name + "/Panel.js"
                            });
                            a.styles.forEach(function(b) {
                                b.uri = "styles/" + b.name + "/style.css"
                            });
                            a.layouts.forEach(function(b) {
                                b.uri =
                                    "layouts/" + b.name + "/config.json";
                                b.icon = "layouts/" + b.name + "/icon.png";
                                b.RTLIcon = "layouts/" + b.name + "/icon_rtl.png"
                            })
                        }
                        return {
                            addManifestProperies: function(a) {
                                a.icon || (a.icon = a.folderUrl + "images/icon.png?wab_dv\x3d" + window.deployVersion);
                                a.thumbnail || (a.thumbnail = a.folderUrl + "images/thumbnail.png");
                                "theme" === a.category ? b(a) : ("undefined" !== typeof a["2D"] && (a.support2D = a["2D"]), "undefined" !== typeof a["3D"] && (a.support3D = a["3D"]), "undefined" === typeof a["2D"] && "undefined" === typeof a["3D"] && (a.support2D = !0), delete a["2D"], delete a["3D"], "undefined" === typeof a.properties && (a.properties = {}), O.processWidgetProperties(a))
                            },
                            processManifestLabel: function(b, a) {
                                var c = a.split("-")[0];
                                b.label = b.i18nLabels && (b.i18nLabels[a] || b.i18nLabels[c] || b.i18nLabels.defaultLabel) || b.label || b.name;
                                b.layouts && e.forEach(b.layouts, function(c) {
                                    var g = "i18nLabels_layout_" + c.name;
                                    c.label = b[g] && (b[g][a] || b[g].defaultLabel) || c.label || c.name
                                });
                                b.styles && e.forEach(b.styles, function(c) {
                                    var g = "i18nLabels_style_" + c.name;
                                    c.label = b[g] &&
                                        (b[g][a] || b[g].defaultLabel) || c.label || c.name
                                })
                            },
                            addI18NLabel: function(b) {
                                var a = new k;
                                if (b.i18nLabels) return a.resolve(b), a;
                                b.i18nLabels = {};
                                if (b.properties && !1 === b.properties.hasLocale) return a.resolve(b), a;
                                var c;
                                c = b.isRemote ? b.amdFolder + "nls/strings.js" : b.amdFolder + "nls/strings";
                                require(y.getRequireConfig(), ["dojo/i18n!" + c], function(c) {
                                    var g = {};
                                    g[dojoConfig.locale] = c;
                                    O.addI18NLabelToManifest(b, null, g);
                                    a.resolve(b)
                                });
                                return a
                            }
                        }
                    }();
                    y.getUniqueValues = function(b, a, c) {
                        var g = new k;
                        b = b.replace(/\/*$/g,
                            "");
                        c || (c = "1\x3d1");
                        return g = /\/ImageServer$/gi.test(b) ? y._getUniqueValuesByQueryTask(b, a, c) : y._getUniqueValuesByGenerateRenderer(b, a, c)
                    };
                    y._getUniqueValuesByQueryTask = function(b, a, c) {
                        var g = new N;
                        g.where = c;
                        g.returnDistinctValues = !0;
                        g.returnGeometry = !1;
                        g.outFields = [a];
                        return (new P(b)).execute(g).then(function(b) {
                            var c = [];
                            b.features && 0 < b.features.length && e.forEach(b.features, function(b) {
                                b && b.attributes && c.push(b.attributes[a])
                            });
                            return c
                        })
                    };
                    y._getUniqueValuesByGenerateRenderer = function(b, a, c) {
                        var g =
                            new k;
                        b = b.replace(/\/*$/g, "") + "/generateRenderer";
                        a = s.stringify({
                            type: "uniqueValueDef",
                            uniqueValueFields: [a]
                        });
                        R({
                            url: b,
                            content: {
                                classificationDef: a,
                                f: "json",
                                where: c
                            },
                            handleAs: "json",
                            callbackParamName: "callback"
                        }).then(p.hitch(this, function(b) {
                            var a = [];
                            (b = b && b.uniqueValueInfos) && 0 < b.length && (a = e.map(b, p.hitch(this, function(b) {
                                return b.value
                            })));
                            g.resolve(a)
                        }), p.hitch(this, function(b) {
                            g.reject(b)
                        }));
                        return g
                    };
                    y.combineRadioCheckBoxWithLabel = function(b, a) {
                        var c = !1;
                        if (b && 1 === b.nodeType && "input" === b.tagName.toLowerCase()) {
                            var g =
                                b.getAttribute("type") || "",
                                g = g.toLowerCase();
                            if ("radio" === g || "checkbox" === g) c = !0
                        }
                        g = !1;
                        a && (1 === a.nodeType && "label" === a.tagName.toLowerCase()) && (g = !0);
                        c && g && (c = b.getAttribute("id"), c || (c = "input_" + y.getRandomString(), b.setAttribute("id", c)), a.setAttribute("for", c), f.setStyle(a, "cursor", "pointer"))
                    };
                    y.groupRadios = function(b, a) {
                        var g = [],
                            l = "radiogroup_" + y.getRandomString();
                        e.forEach(b, function(b) {
                            b.name = l;
                            a && (b = c(b, "change", a), g.push(b))
                        });
                        return g
                    };
                    y.convertExtentToPolygon = function(b) {
                        var a = b.xmin,
                            c = b.xmax,
                            g = b.ymin,
                            l = b.ymax;
                        return new u({
                            rings: [
                                [
                                    [a, l],
                                    [c, l],
                                    [c, g],
                                    [a, g],
                                    [a, l]
                                ]
                            ],
                            spatialReference: b.toJson()
                        })
                    };
                    y.combineGeometries = function(b) {
                        function a(b) {
                            var c = {
                                points: [],
                                spatialReference: b[0].spatialReference.toJson()
                            };
                            e.forEach(b, function(b) {
                                "point" === b.type ? c.points = c.points.concat([
                                    [b.x, b.y]
                                ]) : "multipoint" === b.type && (c.points = c.points.concat(b.points))
                            });
                            return new x(c)
                        }

                        function c(b) {
                            var a = {
                                paths: [],
                                spatialReference: b[0].spatialReference.toJson()
                            };
                            e.forEach(b, function(b) {
                                a.paths = a.paths.concat(b.paths)
                            });
                            return new C(a)
                        }

                        function g(b) {
                            var a = {
                                rings: [],
                                spatialReference: b[0].spatialReference.toJson()
                            };
                            e.forEach(b, function(b) {
                                "polygon" === b.type ? a.rings = a.rings.concat(b.rings) : "extent" === b.type && (b = y.convertExtentToPolygon(b), a.rings = a.rings.concat(b.rings))
                            });
                            return new u(a)
                        }
                        var l = null;
                        if (b && 0 < b.length)
                            if (1 === b.length) l = b[0];
                            else {
                                for (var k = null, n = null, t = null, w = null, d = 0; d < b.length; d++) {
                                    k = b[d];
                                    switch (k.type) {
                                        case "point":
                                        case "multipoint":
                                            w = "point";
                                            break;
                                        case "polyline":
                                            w = "polyline";
                                            break;
                                        case "polygon":
                                        case "extent":
                                            w =
                                                "polygon";
                                            break;
                                        default:
                                            return null
                                    }
                                    if (0 === d) t = w;
                                    else if (t !== w) return null;
                                    if (d !== b.length - 1 && (n = b[d + 1], !k.spatialReference.equals(n.spatialReference))) return null
                                }
                                "point" === w ? l = a(b) : "polyline" === w ? l = c(b) : "polygon" === w && (l = g(b))
                            }
                        return l
                    };
                    y.combineGeometriesByGraphics = function(b) {
                        var a = null;
                        b && 0 < b.length && (b = e.map(b, function(b) {
                            return b.geometry
                        }), a = y.combineGeometries(b));
                        return a
                    };
                    y.isFeaturelayerUrlSupportQuery = function(b, a) {
                        var c = !1,
                            g = /\/featureserver\//gi.test(b),
                            l = /\/mapserver\//gi.test(b);
                        a = (a || "").toLowerCase();
                        g ? c = 0 <= a.indexOf("query") : l && (c = 0 <= a.indexOf("data"));
                        return c
                    };
                    y.isImageServiceSupportQuery = function(b) {
                        return 0 <= (b || "").toLowerCase().indexOf("catalog")
                    };
                    y.isStringEndWith = function(b, a) {
                        return b.lastIndexOf(a) + a.length === b.length
                    };
                    y.localizeNumber = function(b, a) {
                        var c = (b.toString().split(".")[1] || "").length,
                            g = "",
                            g = a && isFinite(a.places) && a.places,
                            g = 0 < g || 0 < c ? "#,###,###,##0.0" + Array.prototype.join.call({
                                length: 0 < g ? g + 1 : c
                            }, "0") : "#,###,###,##0",
                            c = {
                                locale: d.locale,
                                pattern: g
                            };
                        p.mixin(c,
                            a || {});
                        try {
                            return r.format(b, c)
                        } catch (l) {
                            return console.error(l), b.toLocaleString()
                        }
                    };
                    y.parseNumber = function(b, a) {
                        var c = {
                            locale: d.locale
                        };
                        p.mixin(c, a || {});
                        try {
                            return r.parse(b, c)
                        } catch (g) {
                            return console.error(g), b
                        }
                    };
                    y.localizeDate = function(b, a) {
                        var c = {
                            locale: d.locale,
                            fullYear: !0
                        };
                        p.mixin(c, a || {});
                        try {
                            return l.format(b, c)
                        } catch (g) {
                            return console.error(g), "date" === c.selector ? b.toLocaleDateString() : "time" === c.selector ? b.toLocaleTimeString() : b.toLocaleString()
                        }
                    };
                    y.localizeNumberByFieldInfo = function(b,
                        a) {
                        var c = null,
                            c = p.exists("format.places", a) && a.format.places,
                            c = y.localizeNumber(b, {
                                places: c
                            });
                        return p.exists("format.digitSeparator", a) && !a.format.digitSeparator ? c.toString().replace(RegExp("\\" + g.group, "g"), "") : c
                    };
                    y.localizeDateByFieldInfo = function(a, c) {
                        var g = null;
                        try {
                            var l = {
                                    date: a instanceof Date ? a.getTime() : a
                                },
                                k = p.exists("format.dateFormat", c) ? c.format.dateFormat : "longMonthDayYear",
                                g = b.substitute(l, "${date}", {
                                    dateFormat: {
                                        properties: ["date"],
                                        formatter: "DateFormat" + w.prototype._dateFormats[k]
                                    }
                                })
                        } catch (n) {
                            console.error(n),
                                g = a
                        }
                        return g
                    };
                    y.fieldFormatter = {
                        getFormattedUrl: function(b) {
                            if (b && "string" === typeof b) {
                                var a = b.indexOf("http:"); - 1 === a && (a = b.indexOf("https:"));
                                if (-1 < a && -1 === b.indexOf("href\x3d")) {
                                    var c = b.indexOf(" ", a); - 1 === c && (c = b.length);
                                    var g = b.substring(a, c);
                                    b = b.substring(0, a) + '\x3cA href\x3d"' + g + '" target\x3d"_blank"\x3e' + g + "\x3c/A\x3e" + b.substring(c, b.length)
                                }
                            }
                            return b || ""
                        },
                        getFormattedNumber: function(b, a) {
                            if ("number" === typeof b) {
                                var c = (b.toString().split(".")[1] || "").length;
                                b = y.localizeNumberByFieldInfo(b, {
                                    format: {
                                        places: a && "number" === typeof a.places ? parseInt(a.places, 10) : c,
                                        digitSeparator: a && a.digitSeparator
                                    }
                                });
                                return '\x3cspan class\x3d"jimu-numeric-value"\x3e' + (b || "") + "\x3c/span\x3e"
                            }
                            return b
                        },
                        getFormattedDate: function(b, a) {
                            if ("number" === typeof b || b instanceof Date) b = y.localizeDateByFieldInfo(b, {
                                format: a
                            });
                            return b || ""
                        },
                        getCodedValue: function(a, c) {
                            if (a && a.codedValues) {
                                for (var g = 0, l = a.codedValues.length; g < l; g++) {
                                    var k = a.codedValues[g];
                                    if (b.isDefined(c) && p.exists("code", k) && c.toString() === k.code.toString()) return k.name
                                }
                                return c
                            }
                            return c ||
                                null
                        },
                        getTypeName: function(b, a) {
                            for (var c = a.length, g = 0; g < c; g++)
                                if (b === a[g].id) return a[g].name;
                            return b
                        }
                    };
                    y.addRelativePathInCss = M;
                    y.url = {
                        isAbsolute: function(b) {
                            return !b ? !1 : b.startWith("http") || b.startWith("/")
                        },
                        removeQueryParamFromUrl: function(b, a) {
                            var c = K.urlToObject(b);
                            c.query && delete c.query[a];
                            var g = c.path,
                                l;
                            for (l in c.query) g = g === c.path ? g + "?" + l + "\x3d" + c.query[l] : g + "\x26" + l + "\x3d" + c.query[l];
                            return g
                        },
                        addQueryParamToUrl: function(b, a, c) {
                            b = K.urlToObject(b);
                            b.query || (b.query = {});
                            b.query[a] = c;
                            a =
                                b.path;
                            for (var g in b.query) a = a === b.path ? a + "?" + g + "\x3d" + b.query[g] : a + "\x26" + g + "\x3d" + b.query[g];
                            return a
                        }
                    };
                    y.processUrlInWidgetConfig = function(b, a) {
                        if (b) return b.startWith("data:") || b.startWith("http") || b.startWith("/") ? b : b.startWith("${appPath}") ? b.replace("${appPath}", window.appInfo.appPath) : a + b
                    };
                    y.processUrlInAppConfig = function(b) {
                        if (b) return b.startWith("data:") || b.startWith("http") || b.startWith("/") ? b : window.appInfo.appPath + b
                    };
                    y.getLocationUrlWithoutHashAndQueryParams = function() {
                        var b = window.location,
                            a = b.protocol + "//" + b.host + b.pathname,
                            b = K.urlToObject(b.href);
                        b.query && b.query.apiurl && (a = y.url.addQueryParamToUrl(a, "apiurl", b.query.apiurl));
                        return a
                    };
                    y.getDefaultWebMapThumbnail = function() {
                        return require.toUrl("jimu/images/webmap.png")
                    };
                    y.invertColor = function(b) {
                        b = b.substring(1);
                        3 === b.length && (b = b.slice(0, 1) + b.slice(0, 1) + b.slice(1, 1) + b.slice(1, 1) + b.slice(2, 1) + b.slice(2, 1));
                        b = parseInt(b, 16);
                        return 7829367 < b ? "#000000" : "#ffffff"
                    };
                    y.mixinAppConfigPosition = function(b, a) {
                        var c = p.clone(b);
                        if (!a) return c;
                        a = p.clone(a);
                        var g = c.widgetOnScreen,
                            l = a.widgetOnScreen;
                        l && l.widgets && ("[object Object]" === Object.prototype.toString.call(l.widgets) ? e.forEach(g.widgets, function(b, a) {
                            var c;
                            c = b.uri ? b.uri : "ph_" + a;
                            l.widgets[c] && l.widgets[c].position && (l.widgets[c].position.relativeTo || (l.widgets[c].position.relativeTo = "map"), b.position = l.widgets[c].position)
                        }, this) : e.forEach(l.widgets, function(b, a) {
                            b.position && !b.position.relativeTo && (b.position.relativeTo = "map");
                            g.widgets[a] && b.position && (g.widgets[a].position = b.position)
                        }));
                        l && l.groups && ("[object Object]" === Object.prototype.toString.call(l.groups) ? e.forEach(g.groups, function(b, a) {
                            var c;
                            c = b.label ? b.label : "g_" + a;
                            l.groups[c] && (l.groups[c].panel && l.groups[c].panel.position) && (l.groups[c].panel.position.relativeTo || (l.groups[c].panel.position.relativeTo = "map"), b.panel.position = l.groups[c].panel.position)
                        }, this) : e.forEach(l.groups, function(b, a) {
                            b.panel && (b.panel.position && !b.panel.position.relativeTo) && (b.panel.position.relativeTo = "map");
                            g.groups[a] && b.panel.position && (g.groups[a].panel.position =
                                b.panel.position)
                        }));
                        a.map && a.map.position && (c.map ? c.map.position = a.map.position : c.map = {
                            position: a.map.position
                        });
                        a.widgetPool && a.widgetPool.panel && (a.widgetPool.panel.position && !a.widgetPool.panel.position.relativeTo && (a.widgetPool.panel.position.relativeTo = "map"), c.widgetPool.panel.position = a.widgetPool.panel.position);
                        a.mobileLayout && (c.mobileLayout = a.mobileLayout);
                        return c
                    };
                    y.template = {
                        groupIdentification: "groups\\[.+\\]",
                        widgetIdentification: "widgets\\[.+\\]",
                        getSearchRange: function(b, a, c) {
                            var g = -1;
                            a = b.search(RegExp(a));
                            0 <= a && (b = b.slice(a, b.length), b = b.indexOf(c), g = a + b + c.length);
                            return {
                                firstPos: a,
                                lastPos: g
                            }
                        },
                        setConfigValue: function(b, a, c) {
                            Q(b, a, c)
                        },
                        getConfigValue: function(b, a) {
                            return Q(b, a)
                        },
                        setConfigValueWithId: function(b, a, c) {
                            U(b, a, c)
                        },
                        getConfigValueWithId: function(b, a) {
                            return U(b, a)
                        },
                        getKeyInfo: function(b) {
                            var a = this.getWidgetIdByKey(b);
                            if (null !== a) return {
                                type: "widget",
                                id: a
                            };
                            b = this.getGroupIdByKey(b);
                            return null !== b ? {
                                type: "group",
                                id: b
                            } : {
                                type: "unknow",
                                id: null
                            }
                        },
                        getWidgetIdByKey: function(b) {
                            var a =
                                y.template.getSearchRange(b, y.template.widgetIdentification, "]");
                            if (-1 === a.firstPos) b = null;
                            else {
                                var c = b.slice(a.firstPos, a.lastPos);
                                b = b.slice(a.firstPos + c.indexOf("[") + 1, a.lastPos - 1)
                            }
                            return b
                        },
                        getGroupIdByKey: function(b) {
                            var a = y.template.getSearchRange(b, y.template.groupIdentification, "]");
                            if (-1 === a.firstPos) b = null;
                            else {
                                var c = b.slice(a.firstPos, a.lastPos);
                                b = b.slice(a.firstPos + c.indexOf("[") + 1, a.lastPos - 1)
                            }
                            return b
                        },
                        getConfigedWidgetsByTemplateConfig: function(b) {
                            var a = [],
                                c = y.template.widgetIdentification +
                                "_config",
                                g;
                            e.forEach(b.configurationSettings, function(b) {
                                e.forEach(b.fields, function(b) {
                                    b.fieldName && (g = y.template.getSearchRange(b.fieldName, c, "]"), 0 <= g.firstPos && (b = y.template.getWidgetIdByKey(b.fieldName), -1 === a.indexOf(b) && a.push(b)))
                                }, this)
                            }, this);
                            return a
                        },
                        mergeTemplateAppConfigToAppConfig: function(b, a, c) {
                            function g(b) {
                                var a = [];
                                e.forEach(b, function(b) {
                                    b && a.push(b)
                                }, this);
                                return a
                            }
                            var l = b.widgetOnScreen,
                                k = b.portalUrl;
                            a.values.webmap && (b.map.itemId = a.values.webmap);
                            c && (b.map.mapOptions && y.deleteMapOptions(b.map.mapOptions),
                                b.map.portalUrl = k, a.values.app_title || (a.values.app_title = c.title), a.values.app_subtitle || (a.values.app_subtitle = c.snippet));
                            for (var n in a.values) "webmap" !== n && y.template.setConfigValueWithId(b, n, a.values[n]);
                            b.widgetPool.widgets = g(b.widgetPool.widgets);
                            l.widgets = g(l.widgets);
                            if (b.widgetPool.groups)
                                for (a = 0; a < b.widgetPool.groups.length; a++) b.widgetPool.groups[a].widgets = g(b.widgetPool.groups[a].widgets);
                            if (l.groups)
                                for (a = 0; a < l.groups.length; a++) l.groups[a].widgets = g(l.groups[a].widgets);
                            return b
                        }
                    };
                    y.deleteMapOptions = function(b) {
                        b && (delete b.extent, delete b.lods, delete b.center, delete b.scale, delete b.zoom, delete b.maxScale, delete b.maxZoom, delete b.minScale, delete b.minZoom)
                    };
                    y.graphicsExtent = function(b, a) {
                        var c = null;
                        try {
                            0 < b.length && (c = J.graphicsExtent(b)) && "number" === typeof a && 0 < a && (c = c.expand(a))
                        } catch (g) {
                            console.error(g)
                        }
                        return c
                    };
                    y.sanitizeHTML = function(b) {
                        return html_sanitize(b, function(b) {
                            return b
                        }, function(b) {
                            return b
                        })
                    };
                    y.stripHTML = function(b) {
                        return !b ? b : -1 < b.indexOf("\x3c") && -1 < b.indexOf("\x3e") ?
                            b.replace(/<(?:.|\s)*?>/g, "") : b
                    };
                    y.removeSuffixSlashes = function(b) {
                        return b.replace(/\/*$/g, "")
                    };
                    y.getBestDisplayAttributes = function(b, a) {
                        var c = {},
                            g = null,
                            l;
                        for (l in b) g = y.getBestDisplayValue(l, b, a), c[l] = g;
                        return c
                    };
                    y.getBestDisplayValue = function(b, a, c) {
                        var g = "",
                            l = null;
                        p.isArrayLike(c) ? l = y.getFieldInfoByFieldName(c, b) : "object" === typeof c && c.name === b && (l = c);
                        l && (g = a[b], "esriFieldTypeDate" === l.type ? g && (b = new Date(parseInt(g, 10)), g = y._tryLocaleDate(b)) : "number" === typeof g && (l.domain && "codedValue" === l.domain.type ?
                            e.some(l.domain.codedValues, function(b) {
                                if (b.code === g) return g = b.name, !0
                            }) : g = y._tryLocaleNumber(g)));
                        if (null === g || void 0 === g) g = "";
                        return g
                    };
                    y.getDefaultPortalFieldInfo = function(b) {
                        var a = b.name,
                            a = {
                                fieldName: a,
                                label: b.alias || a,
                                tooltip: "",
                                visible: !1,
                                format: null,
                                stringFieldOption: "textbox"
                            };
                        switch (b.type) {
                            case "esriFieldTypeSmallInteger":
                            case "esriFieldTypeInteger":
                                a.format = {
                                    places: 0,
                                    digitSeparator: !0
                                };
                                break;
                            case "esriFieldTypeSingle":
                            case "esriFieldTypeDouble":
                                a.format = {
                                    places: 2,
                                    digitSeparator: !0
                                };
                                break;
                            case "esriFieldTypeDate":
                                a.format = {
                                    dateFormat: "longMonthDayYear"
                                }
                        }
                        return a
                    };
                    y._tryLocaleNumber = function(b) {
                        var a = y.localizeNumber(b);
                        if (null === a || void 0 === a) a = b;
                        return a
                    };
                    y._tryLocaleDate = function(b) {
                        var a = y.localizeDate(b);
                        a || (a = b.toLocaleDateString());
                        return a
                    };
                    y.getFieldInfoByFieldName = function(b, a) {
                        var c = null;
                        b && 0 < b.length && e.some(b, p.hitch(this, function(b) {
                            return b.name === a ? (c = b, !0) : !1
                        }));
                        return c
                    };
                    y.containsNonLatinCharacter = function(b) {
                        for (var a = 0; a < b.length; a++)
                            if (255 < b.charCodeAt(a)) return !0;
                        return !1
                    };
                    y.has = function(b) {
                        var a = h(b);
                        if (a) return a;
                        if ("ie" === b.toLowerCase()) {
                            b = 0;
                            var c = /MSIE (\d+\.\d+);/.test(navigator.userAgent),
                                g = !!navigator.userAgent.match(/Trident\/7.0/),
                                l = navigator.userAgent.indexOf("rv:11.0");
                            c && (b = Number(RegExp.$1)); - 1 !== navigator.appVersion.indexOf("MSIE 10") && (b = 10);
                            g && -1 !== l && (b = 11);
                            return 11 === b && 11 || a
                        }
                        if ("edge" === b.toLowerCase()) return navigator.userAgent.split("Edge/")[1] || a
                    };
                    y.detectUserAgent = function() {
                        var b = {},
                            a = {},
                            c = navigator.userAgent,
                            g = navigator.platform,
                            l = c.match(/Web[kK]it[\/]{0,1}([\d.]+)/),
                            k = c.match(/(Android);?[\s\/]+([\d.]+)?/),
                            n = !!c.match(/\(Macintosh\; Intel /),
                            t = c.match(/(iPad).*OS\s([\d_]+)/),
                            w = c.match(/(iPod)(.*OS\s([\d_]+))?/),
                            d = !t && c.match(/(iPhone\sOS)\s([\d_]+)/),
                            v = c.match(/(webOS|hpwOS)[\s\/]([\d.]+)/),
                            g = /Win\d{2}|Windows/.test(g),
                            r = c.match(/Windows Phone ([\d.]+)/),
                            e = v && c.match(/TouchPad/),
                            s = c.match(/Kindle\/([\d.]+)/),
                            m = c.match(/Silk\/([\d._]+)/),
                            q = c.match(/(BlackBerry).*Version\/([\d.]+)/),
                            f = c.match(/(BB10).*Version\/([\d.]+)/),
                            h = c.match(/(RIM\sTablet\sOS)\s([\d.]+)/),
                            x = c.match(/PlayBook/),
                            u = c.match(/Chrome\/([\d.]+)/) || c.match(/CriOS\/([\d.]+)/),
                            z = c.match(/Firefox\/([\d.]+)/),
                            C = c.match(/\((?:Mobile|Tablet); rv:([\d.]+)\).*Firefox\/[\d.]+/),
                            A = c.match(/MSIE\s([\d.]+)/) || c.match(/Trident\/[\d](?=[^\?]+).*rv:([0-9.].)/),
                            E = !u && c.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/),
                            p = E || c.match(/Version\/([\d.]+)([^S](Safari)|[^M]*(Mobile)[^S]*(Safari))/);
                        a.webkit = !!l;
                        a.webkit && (a.version = l[1]);
                        k && (b.android = !0, b.version = k[2]);
                        d && !w && (b.ios = b.iphone = !0, b.version = d[2].replace(/_/g, "."));
                        t && (b.ios = b.ipad = !0, b.version = t[2].replace(/_/g, "."));
                        w && (b.ios = b.ipod = !0, b.version = w[3] ? w[3].replace(/_/g, ".") : null);
                        r && (b.wp = !0, b.version = r[1]);
                        v && (b.webos = !0, b.version = v[2]);
                        e && (b.touchpad = !0);
                        q && (b.blackberry = !0, b.version = q[2]);
                        f && (b.bb10 = !0, b.version = f[2]);
                        h && (b.rimtabletos = !0, b.version = h[2]);
                        x && (a.playbook = !0);
                        s && (b.kindle = !0, b.version = s[1]);
                        m && (a.silk = !0, a.version = m[1]);
                        !m && (b.android && c.match(/Kindle Fire/)) && (a.silk = !0);
                        u && (a.chrome = !0, a.version = u[1]);
                        z && (a.firefox = !0, a.version = z[1]);
                        C && (b.firefoxos = !0, b.version = C[1]);
                        A && (a.ie = !0, a.version = A[1]);
                        if (p && (n || b.ios || g)) a.safari = !0, b.ios || (a.version = p[1]);
                        E && (a.webview = !0);
                        b.tablet = !(!t && !x && !(k && !c.match(/Mobile/) || z && c.match(/Tablet/) || A && !c.match(/Phone/) && c.match(/Touch/)));
                        b.phone = !(b.tablet || b.ipod || !k && !d && !v && !q && !f && !(u && c.match(/Android/) || u && c.match(/CriOS\/([\d.]+)/) || z && c.match(/Mobile/) || A && c.match(/Touch/)));
                        return {
                            os: b,
                            browser: a
                        }
                    };
                    y.isMobileUa = function() {
                        var b = y.detectUserAgent();
                        return !0 === b.os.phone || !0 === b.os.tablet ? !0 : !1
                    };
                    y.inMobileSize = function() {
                        var b = f.getMarginBox(window.jimuConfig.layoutId);
                        if (b.w <= window.jimuConfig.breakPoints[0] || b.h <= window.jimuConfig.breakPoints[0]) return f.addClass(window.jimuConfig.layoutId, "jimu-ismobile"), !0;
                        f.removeClass(window.jimuConfig.layoutId, "jimu-ismobile");
                        return !1
                    };
                    y.getObjectIdField = function(b) {
                        if (b.objectIdField) return b.objectIdField;
                        b = b.fields;
                        for (var a = 0; a < b.length; a++) {
                            var c = b[a];
                            if ("esriFieldTypeOID" === c.type) return c.name
                        }
                        return null
                    };
                    y.isNeedHttpsButNot = function() {
                        return window.hasOwnProperty("isSecureContext") && !window.isSecureContext ? !0 : !1
                    };
                    y.toFeatureSet = function(b) {
                        var a = new G;
                        "[object Object]" === Object.prototype.toString.call(b) && (b = [b]);
                        a.features = b;
                        if (0 < b.length) {
                            var c;
                            e.some(b, function(b) {
                                if (b.geometry) return c = b, !0
                            });
                            if (c) {
                                b = c.getLayer();
                                var g = {};
                                b && (a.displayFieldName = b.displayField, e.forEach(b.fields, p.hitch(this, function(b) {
                                    var a = b.name;
                                    g[a] = b.alias || a
                                })), a.fieldAliases = g);
                                a.geometryType = c.geometry.type;
                                a.spatialReference =
                                    c.geometry.spatialReference
                            }
                        }
                        return a
                    };
                    y.showValidationErrorTipForFormDijit = function(b) {
                        try {
                            !b.validate() && b.domNode && b.focusNode && (b.focusNode.focus(), setTimeout(p.hitch(this, function() {
                                b.focusNode.blur()
                            }), 100))
                        } catch (a) {
                            console.error(a)
                        }
                    };
                    y.getFeatureLayerDefinition = function(b) {
                        var a = null,
                            c = b.graphics;
                        b.graphics = [];
                        var g = b.toJson();
                        b.graphics = c;
                        g && (a = g.layerDefinition);
                        return a
                    };
                    y.simulateClickEvent = function(b) {
                        if (h("safari")) {
                            var a = document.createEvent("MouseEvents");
                            a.initEvent("click", !0, !0);
                            b.dispatchEvent(a)
                        } else b.click()
                    };
                    y.getFeatureSetByLayerAndFeatures = function(b, a) {
                        var c = new G;
                        c.fields = p.clone(b.fields);
                        c.features = a;
                        c.geometryType = b.geometryType;
                        c.fieldAliases = {};
                        e.forEach(c.fields, p.hitch(this, function(b) {
                            var a = b.name;
                            c.fieldAliases[a] = b.alias || a
                        }));
                        return c
                    };
                    y.featureAction = function() {
                        return {
                            zoomTo: function(b, a, c) {
                                c || (c = {});
                                c.hasOwnProperty("extentFactor") || (c.extentFactor = 1.2);
                                if (b && a && 0 < a.length) {
                                    var g = e.every(a, function(b) {
                                        return b && b.spatialReference && b.type
                                    });
                                    if (e.every(a,
                                            function(b) {
                                                return b && b.geometry && b.geometry.spatialReference && b.geometry.type
                                            }) || g) g && (a = e.map(a, function(b) {
                                        return {
                                            geometry: b
                                        }
                                    })), 1 === a.length && "point" === a[0].type ? (c = 15, c = -1 < b.getMaxZoom() ? b.getMaxZoom() : 0.1, b.centerAndZoom(a[0].geometry, c)) : (a = J.graphicsExtent(a), b.setExtent(a.expand(c.extentFactor)))
                                }
                            },
                            flash: function(b, a) {
                                function c(b, a) {
                                    e.forEach(l, function(c, g) {
                                        c.setSymbol(a ? b : n[g] || t)
                                    })
                                }

                                function g(b) {
                                    return function() {
                                        setTimeout(function() {
                                            c(w, !0);
                                            l[0] && a && a.redraw();
                                            setTimeout(function() {
                                                c(null, !1);
                                                l[0] && a && a.redraw();
                                                b()
                                            }, 200)
                                        }, 200)
                                    }
                                }
                                if (e.every(b || [], function(b) {
                                        return b && b.geometry
                                    })) {
                                    var l = b,
                                        k = l[0],
                                        n = e.map(l, function(b) {
                                            return b.symbol
                                        }),
                                        t = k.symbol || p.getObject("renderer.symbol", !1, a),
                                        w = null;
                                    a && "esriGeometryPoint" === a.geometryType ? w = new I(require.toUrl("jimu") + "/images/flash.gif", 20, 20) : (w = p.clone(t)) && (w.outline ? w.outline.setColor("#ffc500") : w.setColor("#ffc500"));
                                    k && (t && w && a) && ("esriGeometryPoint" === a.geometryType ? (c(w, !0), a.redraw(), setTimeout(function() {
                                            c(null, !1);
                                            a.redraw()
                                        }, 2E3)) :
                                        g(g(g(function() {})))())
                                }
                            },
                            panTo: function(b, a) {
                                if (e.every(a || [], function(b) {
                                        return b && b.geometry
                                    })) {
                                    var c;
                                    0 < a.length ? c = J.graphicsExtent(a).getCenter() : (c = a[0].geometry, c = "polyline" === c.type || "polygon" === c.type ? c.getExtent().getCenter() : "extent" === c.type ? c.getCenter() : "multipoint" === c.type ? 1 < c.points.length ? c.getExtent().getCenter() : c.getPoint(0) : c);
                                    b.centerAt(c)
                                }
                            },
                            showPopup: function(b, a) {
                                if (e.every(a || [], function(b) {
                                        return b && b.geometry
                                    })) {
                                    var c = b.infoWindow;
                                    c.setFeatures(a);
                                    var g = a[0];
                                    "point" ===
                                    g.geometry.type ? c.show(g.geometry, {
                                        closetFirst: !0
                                    }) : c.show(g.geometry.getExtent().getCenter(), {
                                        closetFirst: !0
                                    })
                                }
                            }
                        }
                    }();
                    y.getAppIdFromUrl = function() {
                        var b = !0,
                            a = window.top.location.href;
                        if (-1 !== a.indexOf("id\x3d") || -1 !== a.indexOf("appid\x3d") || -1 !== a.indexOf("apps")) b = !1;
                        if (!0 === b) return a;
                        b = this.urlToObject(window.location.href);
                        if (b.query && (b.query.id || b.query.appid)) return b.query.id || b.query.appid;
                        if (window.appInfo) {
                            if (window.appInfo.id) return window.appInfo.id;
                            if (window.appInfo.appPath) {
                                if (b = window.appInfo.appPath.split("/"),
                                    b.length && 2 < b.length) return b[b.length - 2]
                            } else console.error("CAN NOT getAppIdFromUrl")
                        }
                    };
                    y.getEditorContentHeight = function(b, a, c) {
                        var g = new k;
                        this._content = b;
                        this._dom = a;
                        this._domParam = c;
                        var l = setTimeout(p.hitch(this, function() {
                            clearTimeout(l);
                            l = null;
                            var b = 0,
                                a = this._domParam.contentWidth;
                            try {
                                var c = document.createElement("div");
                                c.setAttribute("id", "fakeContent");
                                f.setStyle(c, "background-size", "contain");
                                c.innerHTML = this._content;
                                this._dom.appendChild(c);
                                if (c) {
                                    var k = q("img", c);
                                    k && k.length && k.style({
                                        maxWidth: a -
                                            20 + "px"
                                    });
                                    f.setStyle(c, "position", "absolute");
                                    f.setStyle(c, "width", a + "px");
                                    f.setStyle(c, "left", "-99999px");
                                    f.setStyle(c, "top", "-99999px");
                                    f.setStyle(c, "visibility", "hidden");
                                    var n = f.getContentBox(c);
                                    n.h && (b = n.h, b += this._domParam.contentMarginTop + this._domParam.footerHeight + 8)
                                }
                            } catch (t) {
                                console.error("can't getEditorContentHeight" + t), b = 200
                            }
                            g.resolve(b)
                        }), 1500);
                        return g
                    };
                    return y
                })
        },
        "dojo/NodeList-traverse": function() {
            define(["./query", "./_base/lang", "./_base/array"], function(p, e, f) {
                var h = p.NodeList;
                e.extend(h, {
                    _buildArrayFromCallback: function(d) {
                        for (var e = [], q = 0; q < this.length; q++) {
                            var a = d.call(this[q], this[q], e);
                            a && (e = e.concat(a))
                        }
                        return e
                    },
                    _getUniqueAsNodeList: function(d) {
                        for (var e = [], q = 0, a; a = d[q]; q++) 1 == a.nodeType && -1 == f.indexOf(e, a) && e.push(a);
                        return this._wrap(e, null, this._NodeListCtor)
                    },
                    _getUniqueNodeListWithParent: function(d, e) {
                        var q = this._getUniqueAsNodeList(d),
                            q = e ? p._filterResult(q, e) : q;
                        return q._stash(this)
                    },
                    _getRelatedUniqueNodes: function(d, e) {
                        return this._getUniqueNodeListWithParent(this._buildArrayFromCallback(e),
                            d)
                    },
                    children: function(d) {
                        return this._getRelatedUniqueNodes(d, function(d, q) {
                            return e._toArray(d.childNodes)
                        })
                    },
                    closest: function(d, e) {
                        return this._getRelatedUniqueNodes(null, function(q, a) {
                            do
                                if (p._filterResult([q], d, e).length) return q; while (q != e && (q = q.parentNode) && 1 == q.nodeType);
                            return null
                        })
                    },
                    parent: function(d) {
                        return this._getRelatedUniqueNodes(d, function(d, e) {
                            return d.parentNode
                        })
                    },
                    parents: function(d) {
                        return this._getRelatedUniqueNodes(d, function(d, e) {
                            for (var a = []; d.parentNode;) d = d.parentNode, a.push(d);
                            return a
                        })
                    },
                    siblings: function(d) {
                        return this._getRelatedUniqueNodes(d, function(d, e) {
                            for (var a = [], k = d.parentNode && d.parentNode.childNodes, c = 0; c < k.length; c++) k[c] != d && a.push(k[c]);
                            return a
                        })
                    },
                    next: function(d) {
                        return this._getRelatedUniqueNodes(d, function(d, e) {
                            for (var a = d.nextSibling; a && 1 != a.nodeType;) a = a.nextSibling;
                            return a
                        })
                    },
                    nextAll: function(d) {
                        return this._getRelatedUniqueNodes(d, function(d, e) {
                            for (var a = [], k = d; k = k.nextSibling;) 1 == k.nodeType && a.push(k);
                            return a
                        })
                    },
                    prev: function(d) {
                        return this._getRelatedUniqueNodes(d,
                            function(d, e) {
                                for (var a = d.previousSibling; a && 1 != a.nodeType;) a = a.previousSibling;
                                return a
                            })
                    },
                    prevAll: function(d) {
                        return this._getRelatedUniqueNodes(d, function(d, e) {
                            for (var a = [], k = d; k = k.previousSibling;) 1 == k.nodeType && a.push(k);
                            return a
                        })
                    },
                    andSelf: function() {
                        return this.concat(this._parent)
                    },
                    first: function() {
                        return this._wrap(this[0] && [this[0]] || [], this)
                    },
                    last: function() {
                        return this._wrap(this.length ? [this[this.length - 1]] : [], this)
                    },
                    even: function() {
                        return this.filter(function(d, e) {
                            return 0 != e % 2
                        })
                    },
                    odd: function() {
                        return this.filter(function(d,
                            e) {
                            return 0 == e % 2
                        })
                    }
                });
                return h
            })
        },
        "dojox/encoding/base64": function() {
            define(["dojo/_base/lang"], function(p) {
                p = p.getObject("dojox.encoding.base64", !0);
                p.encode = function(e) {
                    for (var f = [], h = e.length, d = h % 3, h = h - d, m = 0; m < h;) {
                        var q = e[m++] << 16 | e[m++] << 8 | e[m++];
                        f.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(q >>> 18 & 63));
                        f.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(q >>> 12 & 63));
                        f.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(q >>>
                            6 & 63));
                        f.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(q & 63))
                    }
                    switch (d) {
                        case 2:
                            q = e[m++] << 16 | e[m++] << 8;
                            f.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(q >>> 18 & 63));
                            f.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(q >>> 12 & 63));
                            f.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(q >>> 6 & 63));
                            f.push("\x3d");
                            break;
                        case 1:
                            q = e[m++] << 16, f.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(q >>>
                                18 & 63)), f.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(q >>> 12 & 63)), f.push("\x3d"), f.push("\x3d")
                    }
                    return f.join("")
                };
                p.decode = function(e) {
                    e = e.split("");
                    for (var f = [], h = e.length;
                        "\x3d" == e[--h];);
                    for (var d = 0; d < h;) {
                        var m = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[d++]) << 18;
                        d <= h && (m |= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[d++]) << 12);
                        d <= h && (m |= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[d++]) <<
                            6);
                        d <= h && (m |= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[d++]));
                        f.push(m >>> 16 & 255);
                        f.push(m >>> 8 & 255);
                        f.push(m & 255)
                    }
                    for (; 0 == f[f.length - 1];) f.pop();
                    return f
                };
                return p
            })
        },
        "esri/tasks/ProjectParameters": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/json dojo/has ../kernel ../lang ../geometry/jsonUtils".split(" "), function(p, e, f, h, d, m, q, a) {
                return p(null, {
                    declaredClass: "esri.tasks.ProjectParameters",
                    geometries: null,
                    outSR: null,
                    transformation: null,
                    transformForward: null,
                    toJson: function() {
                        var k = f.map(this.geometries, function(a) {
                                return a.toJson()
                            }),
                            c = {};
                        c.outSR = this.outSR.wkid || h.toJson(this.outSR.toJson());
                        c.inSR = this.geometries[0].spatialReference.wkid || h.toJson(this.geometries[0].spatialReference.toJson());
                        c.geometries = h.toJson({
                            geometryType: a.getJsonType(this.geometries[0]),
                            geometries: k
                        });
                        this.transformation && (c.transformation = this.transformation.wkid || h.toJson(this.transformation));
                        q.isDefined(this.transformForward) && (c.transformForward =
                            this.transformForward);
                        return c
                    }
                })
            })
        },
        "jimu/portalUrlUtils": function() {
            define(["dojo/_base/lang", "jimu/shared/basePortalUrlUtils"], function(p, e) {
                var f = p.clone(e);
                f.declaredClass = "jimu.portalUrlUtils";
                f.getPortalUrlFromLocation = function() {
                    return f.getPortalServerFromLocation() + f.getDeployContextFromLocation()
                };
                f.getPortalSignInUrlFromLocation = function() {
                    var e = f.getPortalUrlFromLocation() + "home/signin.html";
                    return e = f.setHttpsProtocol(e)
                };
                f.getPortalServerFromLocation = function() {
                    return window.location.protocol +
                        "//" + window.location.host
                };
                f.getDeployContextFromLocation = function() {
                    var e = window.location.href.split("?")[0],
                        d = e.indexOf("/home");
                    0 > d && (d = e.indexOf("/apps"));
                    e = e.substring(e.indexOf(window.location.host) + window.location.host.length + 1, d);
                    "/" !== e && (e = "/" + e + "/");
                    return e
                };
                f.getRestBaseUrlFromLocation = function() {
                    return window.location.protocol + "//" + window.location.host + f.getDeployContextFromLocation() + "sharing/rest/"
                };
                return f
            })
        },
        "jimu/shared/basePortalUrlUtils": function() {
            define(function() {
                var p = {
                    declaredClass: "jimu.shared.basePortalUrlUtils"
                };
                "function" !== typeof String.prototype.trim && (String.prototype.trim = function() {
                    return this.replace(/^\s*/gi, "").replace(/\s*$/gi, "")
                });
                "function" !== typeof String.prototype.startWith && (String.prototype.startWith = function(e) {
                    return this.substr(0, e.length) === e
                });
                "function" !== typeof String.prototype.endWith && (String.prototype.endWith = function(e) {
                    return this.substr(this.length - e.length, e.length) === e
                });
                p.getServerByUrl = function(e) {
                    e = (e || "").trim();
                    e = e.replace(/^(http(s?):?)\/\//gi, "");
                    0 === e.indexOf("//") &&
                        (e = e.slice(2));
                    return e.split("/")[0]
                };
                p.getServerWithProtocol = function(e) {
                    var f = "";
                    if (e = (e || "").trim()) {
                        var h = p.getServerByUrl(e);
                        if (!h) return f;
                        var d = p.getProtocol(e);
                        d ? f = d + "://" + h : 0 === e.indexOf("//") && (f = "//" + h)
                    }
                    return f
                };
                p.isSameServer = function(e, f) {
                    e = p.getServerByUrl(e) || "";
                    f = p.getServerByUrl(f) || "";
                    return e.toLowerCase() === f.toLowerCase()
                };
                p.getDomain = function(e) {
                    var f = "";
                    if (e = p.getServerByUrl(e)) e = e.replace(/:\d+$/, ""), e = e.match(/[^.]\w+\.\w+$/), null !== e && (f = e[0], /^\d+\.\d+$/.test(f) && (f = ""));
                    return f
                };
                p.isSameDomain = function(e, f) {
                    var h = p.getDomain(e),
                        d = p.getDomain(f);
                    return "" !== h && h === d
                };
                p.isOnline = function(e) {
                    return 0 <= p.getServerByUrl(e).toLowerCase().indexOf(".arcgis.com")
                };
                p.isArcGIScom = function(e) {
                    e = p.getServerByUrl(e).toLowerCase();
                    return "www.arcgis.com" === e || "arcgis.com" === e
                };
                p.getStandardPortalUrl = function(e) {
                    var f = p.getServerByUrl(e);
                    if ("" === f) return "";
                    p.isOnline(f) ? (p.isArcGIScom(f) && (f = "www.arcgis.com"), e = p.addProtocol(e), e = p.getProtocol(e) + "://" + f) : (e = (e || "").trim().replace(/sharing(.*)/gi,
                        "").replace(/\/*$/g, ""), e = p.addProtocol(e), e.replace(RegExp("http(s?)://" + f, "g"), "") || (e += "/arcgis"));
                    return e
                };
                p.isSamePortalUrl = function(e, f) {
                    var h = /^http(s?):\/\//gi,
                        d = /^\/\//gi;
                    e = p.getStandardPortalUrl(e).toLowerCase().replace(h, "").replace(d, "");
                    f = p.getStandardPortalUrl(f).toLowerCase().replace(h, "").replace(d, "");
                    return e === f
                };
                p.addProtocol = function(e) {
                    if (-1 >= e.toLowerCase().indexOf("http://") && -1 >= e.toLowerCase().indexOf("https://")) {
                        var f = "";
                        "undefined" !== typeof window && window.location ? (f =
                            window.location.protocol, e = e.startWith("//") ? f + e : e.startWith("/") ? f + "//" + window.location.host + e : f + "//" + e) : (f = "http:", e = e.startWith("//") ? f + e : f + "//" + e)
                    }
                    return e
                };
                p.getProtocol = function(e) {
                    var f = "";
                    e = e.toLowerCase();
                    0 === e.indexOf("https://") ? f = "https" : 0 === e.indexOf("http://") && (f = "http");
                    return f
                };
                p.updateUrlProtocolByOtherUrl = function(e, f) {
                    f = f.toLowerCase();
                    0 === f.indexOf("https://") ? e = p.setHttpsProtocol(e) : 0 === f.indexOf("http://") && (e = p.setHttpProtocol(e));
                    return e
                };
                p.removeProtocol = function(e) {
                    return e.replace(/^http(s?):\/\//i,
                        "//")
                };
                p.setHttpProtocol = function(e) {
                    e = p.addProtocol(e);
                    return e.replace(/^https:\/\//, "http://")
                };
                p.setHttpsProtocol = function(e) {
                    e = p.addProtocol(e);
                    return e.replace(/^http:\/\//, "https://")
                };
                p.setProtocol = function(e, f) {
                    return 0 <= f.indexOf("https") ? p.setHttpsProtocol(e) : 0 <= f.indexOf("http") ? p.setHttpProtocol(e) : e
                };
                p.getSharingUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/sharing/rest");
                    return f
                };
                p.getOAuth2Url = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/sharing/rest/oauth2");
                    return f
                };
                p.getAppIdUrl = function(e, f) {
                    var h = "",
                        d = p.getStandardPortalUrl(e);
                    d && (h = d + "/sharing/rest/oauth2/apps/" + f);
                    return h
                };
                p.getSignInUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/home/signin.html");
                    return f
                };
                p.getBaseSearchUrl = function(e) {
                    var f = "";
                    e = p.getStandardPortalUrl(e);
                    (e = e.replace(/\/*$/g, "")) && (f = e + "/sharing/rest/search");
                    return f
                };
                p.getBaseItemUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/sharing/rest/content/items");
                    return f
                };
                p.getItemUrl = function(e,
                    f) {
                    var h = "",
                        d = p.getBaseItemUrl(e);
                    d && f && (h = d + "/" + f);
                    return h
                };
                p.getItemDataUrl = function(e, f) {
                    var h = "",
                        d = p.getItemUrl(e, f);
                    d && (h = d + "/data");
                    return h
                };
                p.getItemGroupsUrl = function(e, f) {
                    var h = "",
                        d = p.getItemUrl(e, f);
                    d && (h = d + "/groups");
                    return h
                };
                p.getGenerateTokenUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/sharing/rest/generateToken");
                    return f
                };
                p.getItemDetailsPageUrl = function(e, f) {
                    var h = "";
                    e && f && (e = p.getStandardPortalUrl(e), h = e + "/home/item.html?id\x3d" + f);
                    return h
                };
                p.getUserProfilePageUrl =
                    function(e, f) {
                        var h = "";
                        e && f && (e = p.getStandardPortalUrl(e), h = e + "/home/user.html?user\x3d" + f);
                        return h
                    };
                p.getBaseGroupUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/sharing/rest/community/groups");
                    return f
                };
                p.getPortalSelfInfoUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e || "")) && (f = e + "/sharing/rest/portals/self");
                    return f
                };
                p.getCommunitySelfUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e || "")) && (f = e + "/sharing/rest/community/self");
                    return f
                };
                p.getBaseUserUrl = function(e) {
                    var f =
                        "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/sharing/rest/community/users");
                    return f
                };
                p.getUserUrl = function(e, f) {
                    var h = "",
                        d = p.getBaseUserUrl(e);
                    e && f && (h = d + "/" + f);
                    return h
                };
                p.getUserTagsUrl = function(e, f) {
                    var h = "",
                        d = p.getUserUrl(e, f);
                    e && f && (h = d + "/tags");
                    return h
                };
                p.getUserThumbnailUrl = function(e, f, h) {
                    var d = "";
                    (e = p.getUserUrl(e, f)) && h && (d = e + "/info/" + h);
                    return d
                };
                p.getContentUrl = function(e) {
                    var f = "";
                    e && (e = p.getStandardPortalUrl(e), f = e + "/sharing/rest/content");
                    return f
                };
                p.getUserContentUrl = function(e, f, h) {
                    var d =
                        "",
                        d = "";
                    e && f && (d = p.getContentUrl(e), d = h ? d + "/users/" + f + "/" + h : d + "/users/" + f);
                    return d
                };
                p.getAddItemUrl = function(e, f, h) {
                    var d = "",
                        d = "";
                    e && f && (d = p.getUserContentUrl(e, f, h), d += "/addItem");
                    return d
                };
                p.getDeleteItemUrl = function(e, f, h) {
                    var d = "";
                    (e = p.getUserItemsUrl(e, f)) && (d = e + "/" + h + "/delete");
                    return d
                };
                p.getUserItemsUrl = function(e, f, h) {
                    var d = "",
                        d = "";
                    e && f && (d = p.getUserContentUrl(e, f, h), d += "/items");
                    return d
                };
                p.getUpdateItemUrl = function(e, f, h, d) {
                    var m = "",
                        m = "";
                    e && f && (m = p.getUserItemsUrl(e, f, d), m = m + "/" + h + "/update");
                    return m
                };
                p.shareItemUrl = function(e, f, h, d) {
                    var m = "",
                        m = "";
                    e && f && (m = p.getUserItemsUrl(e, f, d), m = m + "/" + h + "/share");
                    return m
                };
                p.getHomeIndexUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/home/index.html");
                    return f
                };
                p.getHomeMapViewerUrl = function(e, f) {
                    var h = "",
                        d = p.getStandardPortalUrl(e);
                    d && (h = d + "/home/webmap/viewer.html", h = f ? h + ("?webmap\x3d" + f) : h + "?useExisting\x3d1");
                    return h
                };
                p.getHomeSceneViewerUrl = function(e, f) {
                    var h = "",
                        d = p.getStandardPortalUrl(e);
                    d && (h = d + "/home/webscene/viewer.html",
                        f && (h += "?webscene\x3d" + f));
                    return h
                };
                p.getHomeGalleryUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/home/gallery.html");
                    return f
                };
                p.getHomeGroupsUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/home/groups.html");
                    return f
                };
                p.getHomeMyContentUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/home/content.html");
                    return f
                };
                p.getHomeMyOrganizationUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/home/organization.html");
                    return f
                };
                p.getHomeUserUrl =
                    function(e) {
                        var f = "";
                        (e = p.getStandardPortalUrl(e)) && (f = e + "/home/user.html");
                        return f
                    };
                p.getPortalHelpUrl = function(e, f) {
                    var h = "",
                        d = p.getStandardPortalUrl(e);
                    d && (h = d + "/portalhelp/" + (f || "en") + "/website/help/");
                    return h
                };
                p.getPortalAdminHelpUrl = function(e, f) {
                    var h = "",
                        d = p.getStandardPortalUrl(e);
                    d && (h = d + "/portalhelp/" + (f || "en") + "/admin/help/");
                    return h
                };
                p.getPortalProxyUrl = function(e) {
                    var f = "";
                    (e = p.getStandardPortalUrl(e)) && (f = e + "/sharing/proxy");
                    return f
                };
                p.getOAuth2SignOutUrl = function(e) {
                    var f = "";
                    (e =
                        p.getStandardPortalUrl(e)) && (f = e + "/sharing/rest/oauth2/signout");
                    return f
                };
                p.getNewPrintUrl = function(e) {
                    var f = "";
                    if (e = p.getStandardPortalUrl(e)) e = p.setHttpProtocol(e), f = e + "/sharing/tools/newPrint";
                    return f
                };
                return p
            })
        },
        "jimu/shared/utils": function() {
            define(["./basePortalUrlUtils"], function(p) {
                function e(d, e) {
                    function q(a, k) {
                        var c, e, n, r, l = "widgetOnScreen" === a;
                        if (d[a]) {
                            if (d[a].groups)
                                for (c = 0; c < d[a].groups.length; c++)
                                    if (n = d[a].groups[c], k(n, {
                                            index: c,
                                            isWidget: !1,
                                            groupId: n.id,
                                            isThemeWidget: !1,
                                            isOnScreen: l
                                        }),
                                        d[a].groups[c].widgets)
                                        for (e = 0; e < d[a].groups[c].widgets.length; e++) r = d[a].groups[c].widgets[e], k(r, {
                                            index: e,
                                            isWidget: !0,
                                            groupId: n.id,
                                            isThemeWidget: r.uri && -1 < r.uri.indexOf("themes/" + d.theme.name),
                                            isOnScreen: l
                                        });
                            if (d[a].widgets)
                                for (c = 0; c < d[a].widgets.length; c++) r = d[a].widgets[c], k(d[a].widgets[c], {
                                    index: c,
                                    isWidget: !0,
                                    groupId: a,
                                    isThemeWidget: r.uri && -1 < r.uri.indexOf("themes/" + d.theme.name),
                                    isOnScreen: l
                                })
                        }
                    }
                    q("widgetOnScreen", e);
                    q("widgetPool", e)
                }
                var f = {},
                    h = "inPanel hasLocale hasStyle hasConfig hasUIFile hasSettingPage hasSettingUIFile hasSettingLocale hasSettingStyle keepConfigAfterMapSwitched isController hasVersionManager isThemeWidget supportMultiInstance".split(" ");
                f.visitElement = e;
                f.getConfigElementById = function(d, m) {
                    var q;
                    if ("map" === m) return d.map;
                    e(d, function(a) {
                        if (a.id === m) return q = a, !0
                    });
                    return q
                };
                f.getConfigElementByLabel = function(d, m) {
                    var q;
                    if ("map" === m) return d.map;
                    e(d, function(a) {
                        if (a.label || a.name === m) return q = a, !0
                    });
                    return q
                };
                f.getConfigElementsByName = function(d, m) {
                    var q = [];
                    if ("map" === m) return [d.map];
                    e(d, function(a) {
                        a.name === m && q.push(a)
                    });
                    return q
                };
                f.getWidgetNameFromUri = function(d) {
                    d = d.split("/");
                    d.pop();
                    return d.pop()
                };
                f.getAmdFolderFromUri = function(d) {
                    d =
                        d.split("/");
                    d.pop();
                    return d.join("/") + "/"
                };
                f.widgetProperties = h;
                f.processWidgetProperties = function(d) {
                    "undefined" === typeof d.properties.isController && (d.properties.isController = !1);
                    "undefined" === typeof d.properties.isThemeWidget && (d.properties.isThemeWidget = !1);
                    "undefined" === typeof d.properties.hasVersionManager && (d.properties.hasVersionManager = !1);
                    h.forEach(function(e) {
                        "undefined" === typeof d.properties[e] && (d.properties[e] = !0)
                    })
                };
                f.getControllerWidgets = function(d) {
                    var e = [];
                    d.visitElement(function(d) {
                        d.isController &&
                            e.push(d)
                    });
                    return e
                };
                f.addI18NLabelToManifest = function(d, e, q) {
                    function a(a, c) {
                        c[k] && (d.i18nLabels[a] = c[k]);
                        "theme" === d.category && (d.layouts && d.layouts.forEach(function(k) {
                            d["i18nLabels_layout_" + k.name] || (d["i18nLabels_layout_" + k.name] = {});
                            d["i18nLabels_layout_" + k.name][a] = c["_layout_" + k.name]
                        }), d.styles && d.styles.forEach(function(k) {
                            d["i18nLabels_style_" + k.name] || (d["i18nLabels_style_" + k.name] = {});
                            d["i18nLabels_style_" + k.name][a] = c["_style_" + k.name]
                        }));
                        "widget" === d.category && d.featureActions && d.featureActions.forEach(function(k) {
                            d["i18nLabels_featureAction_" +
                                k.name] || (d["i18nLabels_featureAction_" + k.name] = {});
                            d["i18nLabels_featureAction_" + k.name][a] = c["_featureAction_" + k.name]
                        })
                    }
                    d.i18nLabels = {};
                    var k = "widget" === d.category ? "_widgetLabel" : "_themeLabel";
                    e && (e.root && e.root[k]) && (d.i18nLabels.defaultLabel = e.root[k], "theme" === d.category && (d.layouts && d.layouts.forEach(function(a) {
                        d["i18nLabels_layout_" + a.name] = {};
                        d["i18nLabels_layout_" + a.name].defaultLabel = e.root["_layout_" + a.name]
                    }), d.styles && d.styles.forEach(function(a) {
                        d["i18nLabels_style_" + a.name] = {};
                        d["i18nLabels_style_" +
                            a.name].defaultLabel = e.root["_style_" + a.name]
                    })), "widget" === d.category && d.featureActions && d.featureActions.forEach(function(a) {
                        d["i18nLabels_featureAction_" + a.name] = {};
                        d["i18nLabels_featureAction_" + a.name].defaultLabel = e.root["_featureAction_" + a.name]
                    }));
                    for (var c in q) a(c, q[c])
                };
                f.isHostedService = function(d) {
                    var e = p.getServerByUrl(d) + "/[^/]+/[^/]+/rest/services";
                    return RegExp(e, "gi").test(d)
                };
                return f
            })
        },
        "jimu/WidgetManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/Deferred dojo/topic dojo/Evented dojo/on dojo/aspect dojo/json dojo/query dojo/request/xhr dojo/promise/all ./utils jimu/tokenUtils ./dijit/Message".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t) {
                    var b = null,
                        v = p(q, {
                            constructor: function() {
                                this.loaded = [];
                                this.missedActions = [];
                                this.activeWidget = null;
                                window.isBuilder ? (m.subscribe("app/mapLoaded", e.hitch(this, this._onMapLoaded)), m.subscribe("app/mapChanged", e.hitch(this, this._onMapChanged))) : (m.subscribe("mapLoaded", e.hitch(this, this._onMapLoaded)), m.subscribe("mapChanged", e.hitch(this, this._onMapChanged)));
                                window.isBuilder ? (m.subscribe("app/sceneViewLoaded", e.hitch(this, this._onSceneViewLoaded)), m.subscribe("app/sceneViewChanged",
                                    e.hitch(this, this._onSceneViewChanged))) : (m.subscribe("sceneViewLoaded", e.hitch(this, this._onSceneViewLoaded)), m.subscribe("sceneViewChanged", e.hitch(this, this._onSceneViewChanged)));
                                window.isBuilder ? (m.subscribe("app/appConfigLoaded", e.hitch(this, this._onAppConfigLoaded)), m.subscribe("app/appConfigChanged", e.hitch(this, this._onAppConfigChanged))) : (m.subscribe("appConfigLoaded", e.hitch(this, this._onAppConfigLoaded)), m.subscribe("appConfigChanged", e.hitch(this, this._onAppConfigChanged)));
                                m.subscribe("userSignIn",
                                    e.hitch(this, this._onUserSignIn));
                                m.subscribe("userSignOut", e.hitch(this, this._onUserSignOut));
                                m.subscribe("builder/actionTriggered", e.hitch(this, this._onActionTriggered));
                                m.subscribe("/dnd/move/start", e.hitch(this, this._onMoveStart))
                            },
                            loadWidget: function(b) {
                                var a = new d,
                                    c;
                                b = e.clone(b);
                                (c = this.getWidgetById(b.id)) ? a.resolve(c): r([this.loadWidgetClass(b), this.loadWidgetManifest(b)]).then(e.hitch(this, function(b) {
                                    var c = b[0],
                                        g = b[1];
                                    this.loadWidgetResources(g).then(e.hitch(this, function(b) {
                                        try {
                                            var l = this.createWidget(g,
                                                c, b);
                                            h.setAttr(l.domNode, "data-widget-name", g.name);
                                            console.log("widget [" + g.uri + "] created.")
                                        } catch (k) {
                                            console.log("create [" + g.uri + "] error:" + k.stack), new t({
                                                message: window.jimuNls.widgetManager.createWidgetError + ": " + g.uri
                                            }), a.reject(k)
                                        }
                                        setTimeout(e.hitch(this, function() {
                                            a.resolve(l);
                                            this.emit("widget-created", l);
                                            m.publish("widgetCreated", l)
                                        }), 50)
                                    }), function(b) {
                                        a.reject(b)
                                    })
                                }), function(b) {
                                    a.reject(b)
                                });
                                return a
                            },
                            loadWidgetClass: function(b) {
                                var a = new d,
                                    c;
                                c = b.isRemote ? b.uri + ".js" : b.uri;
                                require(l.getRequireConfig(), [c], e.hitch(this, function(b) {
                                    a.resolve(b)
                                }));
                                l.checkError(b.uri, a);
                                return a
                            },
                            loadWidgetResources: function(b) {
                                var a = new d,
                                    c, g, l, k = [];
                                l = e.clone(b);
                                b = this.tryLoadWidgetConfig(l);
                                c = this._tryLoadResource(l, "i18n");
                                g = this._tryLoadResource(l, "style");
                                l = this._tryLoadResource(l, "template");
                                k.push(b);
                                k.push(c);
                                k.push(l);
                                k.push(g);
                                r(k).then(e.hitch(this, function(b) {
                                    var c = {};
                                    c.config = b[0];
                                    c.i18n = b[1];
                                    c.template = b[2];
                                    c.style = b[3];
                                    a.resolve(c)
                                }), function(b) {
                                    a.reject(b)
                                });
                                return a
                            },
                            loadWidgetManifest: function(b) {
                                var a =
                                    new d,
                                    c = l.getUriInfo(b.uri).folderUrl + "manifest.json";
                                if (b.manifest) return a.resolve(b), a;
                                n(c, {
                                    handleAs: "json",
                                    headers: {
                                        "X-Requested-With": null
                                    }
                                }).then(e.hitch(this, function(c) {
                                    c.category = "widget";
                                    e.mixin(c, l.getUriInfo(b.uri));
                                    l.manifest.addI18NLabel(c).then(e.hitch(this, function() {
                                        this._processManifest(c);
                                        l.widgetJson.addManifest2WidgetJson(b, c);
                                        a.resolve(b)
                                    }))
                                }), function(b) {
                                    a.reject(b)
                                });
                                return a
                            },
                            getWidgetMarginBox: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return {};
                                if (b._marginBox) return b._marginBox;
                                b.setPosition({
                                    left: -9999,
                                    top: -9999,
                                    relativeTo: b.position.relativeTo
                                });
                                this.openWidget(b);
                                b._marginBox = b.getMarginBox();
                                this.closeWidget(b);
                                return b._marginBox
                            },
                            _processManifest: function(b) {
                                l.manifest.addManifestProperies(b);
                                l.manifest.processManifestLabel(b, window.dojoConfig.locale)
                            },
                            createWidget: function(b, c, g) {
                                if (this.getWidgetById(b.id)) return this.getWidgetById(b.id);
                                g.config && g.i18n && (g.config = l.replacePlaceHolder(g.config, g.i18n));
                                b.rawConfig = b.config;
                                b.config = g.config || {};
                                this.appConfig._appData &&
                                    this._mergeAgolConfig(b);
                                b.nls = g.i18n || {};
                                g.template && (b.templateString = g.template);
                                b["class"] = "jimu-widget";
                                b.label || (b.label = b.name);
                                this.map && (b.map = this.map);
                                b.appConfig = this.appConfig;
                                g = {};
                                for (var n in b) b.hasOwnProperty(n) && (g[n] = b[n]);
                                g.widgetManager = this;
                                b = new c(g);
                                b.clazz = c;
                                k.after(b, "startup", e.hitch(this, this._postWidgetStartup, b));
                                k.before(b, "destroy", e.hitch(this, this._onDestroyWidget, b));
                                a(b.domNode, "click", e.hitch(this, this._onClickWidget, b));
                                this.loaded.push(b);
                                return b
                            },
                            getAllWidgets: function() {
                                return this.loaded
                            },
                            destroyAllWidgets: function() {
                                var b = f.map(this.loaded, function(b) {
                                    return b.id
                                });
                                f.forEach(b, function(b) {
                                    this.destroyWidget(b)
                                }, this);
                                this.loaded = []
                            },
                            loadWidgetSettingPage: function(b) {
                                var a = new d;
                                b = e.clone(b);
                                b.id += "_setting";
                                r([this.loadWidgetSettingClass(b)]).then(e.hitch(this, function(c) {
                                    var g = c[0];
                                    this.loadWidgetSettingPageResources(b).then(e.hitch(this, function(c) {
                                        var l;
                                        c = {
                                            nls: c.i18n,
                                            templateString: c.template,
                                            appConfig: this.appConfig,
                                            "class": "jimu-widget-setting"
                                        };
                                        "HTML3D" === window.appInfo.appType ?
                                            c.sceneView = this.sceneView : c.map = this.map;
                                        for (var n in b) b.hasOwnProperty(n) && (c[n] = b[n]);
                                        try {
                                            l = new g(c), h.setAttr(l.domNode, "data-widget-name-setting", c.name), k.before(l, "destroy", e.hitch(this, this._onDestroyWidgetSetting, l)), a.resolve(l)
                                        } catch (d) {
                                            new t({
                                                message: window.jimuNls.widgetManager.createWidgetSettingPageError + ":" + b.uri
                                            }), a.reject(d)
                                        }
                                    }), function(b) {
                                        console.log(b)
                                    })
                                }), function(b) {
                                    a.reject(b)
                                });
                                return a
                            },
                            loadWidgetSettingClass: function(b) {
                                var a = new d,
                                    c;
                                c = b.isRemote ? b.folderUrl + "setting/Setting.js" :
                                    b.amdFolder + "setting/Setting";
                                require(l.getRequireConfig(), [c], e.hitch(this, function(b) {
                                    a.resolve(b)
                                }));
                                l.checkError(b.folderUrl + "setting/Setting.js", a);
                                return a
                            },
                            loadWidgetSettingPageResources: function(b) {
                                var a = new d,
                                    c, g, l = [];
                                b = e.clone(b);
                                c = this._tryLoadResource(b, "settingI18n");
                                g = this._tryLoadResource(b, "settingTemplate");
                                b = this._tryLoadResource(b, "settingStyle");
                                l.push(c);
                                l.push(g);
                                l.push(b);
                                r(l).then(e.hitch(this, function(b) {
                                        var c = {};
                                        c.i18n = b[0] || {};
                                        c.template = b[1];
                                        c.style = b[2];
                                        a.resolve(c)
                                    }),
                                    function(b) {
                                        console.log(b)
                                    });
                                return a
                            },
                            getWidgetById: function(b) {
                                var a;
                                f.some(this.loaded, function(c) {
                                    if (c.id === b) return a = c, !0
                                }, this);
                                return a
                            },
                            getWidgetByLabel: function(b) {
                                var a;
                                f.some(this.loaded, function(c) {
                                    if (c.label === b) return a = c, !0
                                }, this);
                                return a
                            },
                            getWidgetsByName: function(b) {
                                var a = [];
                                f.some(this.loaded, function(c) {
                                    c.name === b && a.push(c)
                                }, this);
                                return a
                            },
                            changeWindowStateTo: function(b, a) {
                                "normal" === a ? this.normalizeWidget(b) : "minimized" === a ? this.minimizeWidget(b) : "maximized" === a ? this.maximizeWidget(b) :
                                    console.log("error state: " + a)
                            },
                            closeWidget: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return;
                                if ("closed" !== b.state) {
                                    this.activeWidget && this.activeWidget.id === b.id && (this.activeWidget.onDeActive(), this.activeWidget = null);
                                    h.setStyle(b.domNode, "display", "none");
                                    b.setState("closed");
                                    try {
                                        b.onClose()
                                    } catch (a) {
                                        console.log(console.error("fail to close widget " + b.name + ". " + a.stack))
                                    }
                                }
                            },
                            openWidget: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return;
                                if (!b.started) try {
                                    b.started = !0, b.startup()
                                } catch (a) {
                                    console.error("fail to startup widget " + b.name + ". " + a.stack)
                                }
                                if ("closed" === b.state) {
                                    h.setStyle(b.domNode, "display", "");
                                    b.setState("opened");
                                    try {
                                        b.onOpen()
                                    } catch (c) {
                                        console.error("fail to open widget " + b.name + ". " + c.stack)
                                    }
                                }
                            },
                            activateWidget: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return;
                                "opened" === b.state && this._activeWidget(b)
                            },
                            maximizeWidget: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return;
                                "closed" === b.state && this.openWidget(b);
                                b.setWindowState("maximized");
                                try {
                                    b.onMaximize()
                                } catch (a) {
                                    console.log(console.error("fail to maximize widget " + b.name + ". " + a.stack))
                                }
                            },
                            minimizeWidget: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return;
                                "closed" === b.state && this.openWidget(b);
                                b.setWindowState("minimized");
                                try {
                                    b.onMinimize()
                                } catch (a) {
                                    console.log(console.error("fail to minimize widget " + b.name + ". " + a.stack))
                                }
                            },
                            normalizeWidget: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return;
                                "closed" === b.state &&
                                    this.openWidget(b);
                                b.setWindowState("normal");
                                try {
                                    b.onNormalize()
                                } catch (a) {
                                    console.log(console.error("fail to normalize widget " + b.name + ". " + a.stack))
                                }
                            },
                            destroyWidget: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return;
                                this._removeWidget(b);
                                try {
                                    b.destroy()
                                } catch (a) {
                                    console.log(console.error("fail to destroy widget " + b.name + ". " + a.stack))
                                }
                            },
                            tryLoadWidgetConfig: function(b) {
                                return this._tryLoadWidgetConfig(b).then(e.hitch(this, function(a) {
                                    return this._upgradeWidgetConfig(b, a).then(function(a) {
                                        return b.config =
                                            a
                                    })
                                }))
                            },
                            triggerWidgetOpen: function(b) {
                                function a(b) {
                                    var g = k.after(b, "onOpen", function() {
                                        g.remove();
                                        c.resolve(b)
                                    })
                                }
                                var c = new d,
                                    g = this.getWidgetById(b);
                                if (g) {
                                    if ("closed" !== g.state) return c.resolve(g), c;
                                    a(g)
                                } else var l = m.subscribe("widgetCreated", e.hitch(this, function(a) {
                                    a.id === b && (l.remove(), c.resolve(a))
                                }));
                                m.publish("openWidget", b);
                                return c
                            },
                            _tryLoadWidgetConfig: function(b) {
                                var a = new d;
                                if (b.config && e.isObject(b.config)) return a.resolve(b.config), a;
                                if (b.config) {
                                    if (require.cache["url:" + b.config]) return a.resolve(c.parse(require.cache["url:" +
                                        b.config])), a;
                                    a = l.processUrlInAppConfig(b.config);
                                    a = a.split("/");
                                    a[a.length - 1] = encodeURIComponent(a[a.length - 1]);
                                    a = a.join("/");
                                    return n(a, {
                                        handleAs: "json",
                                        headers: {
                                            "X-Requested-With": null
                                        }
                                    })
                                }
                                return this._tryLoadResource(b, "config").then(function(a) {
                                    b.isDefaultConfig = !0;
                                    return a
                                })
                            },
                            _upgradeWidgetConfig: function(b, a) {
                                var c = new d,
                                    g = b.manifest.version,
                                    k = b.version,
                                    n;
                                if (g === k) return c.resolve(a), c;
                                if (!1 === b.hasVersionManager) return b.version = g, c.resolve(a), c;
                                require(l.getRequireConfig(), [b.amdFolder + "VersionManager"],
                                    e.hitch(this, function(l) {
                                        l = new l;
                                        var t = l.getVersionIndex(k),
                                            d = l.getVersionIndex(g);
                                        if (t > d) c.reject("Bad widget version number, " + b.name + "," + k);
                                        else try {
                                            n = l.upgrade(a, k, g), b.version = g, c.resolve(n)
                                        } catch (v) {
                                            console.log("Read widget [" + b.name + "] old config error," + v.stack), c.resolve(a)
                                        }
                                    }));
                                return c
                            },
                            loadWidgetStyle: function(b) {
                                var a = "widget/style/" + b.uri,
                                    c = new d,
                                    a = this._replaceId(a);
                                return h.byId(a) ? (c.resolve("load"), c) : l.loadStyleLink(a, b.styleFile, "theme_" + this.appConfig.theme.name + "_style_common")
                            },
                            loadWidgetSettingStyle: function(b) {
                                var a = "widget/style/" + b.uri + "/setting",
                                    c = new d,
                                    a = this._replaceId(a);
                                return h.byId(a) ? (c.resolve("load"), c) : l.loadStyleLink(a, b.settingStyleFile)
                            },
                            loadWidgetConfig: function(b) {
                                b = require(l.getRequireConfig()).toUrl(b.configFile);
                                if (require.cache["url:" + b]) {
                                    var a = new d;
                                    a.resolve(c.parse(require.cache["url:" + b]));
                                    return a
                                }
                                return n(b, {
                                    handleAs: "json",
                                    headers: {
                                        "X-Requested-With": null
                                    }
                                })
                            },
                            loadWidgetI18n: function(b) {
                                var a = new d;
                                require(l.getRequireConfig(), ["dojo/i18n!" +
                                    b.i18nFile
                                ], function(b) {
                                    a.resolve(b)
                                });
                                return a
                            },
                            loadWidgetSettingI18n: function(b) {
                                var a = new d;
                                require(l.getRequireConfig(), ["dojo/i18n!" + b.settingI18nFile], function(b) {
                                    a.resolve(b)
                                });
                                return a
                            },
                            loadWidgetTemplate: function(b) {
                                var a = new d;
                                require(l.getRequireConfig(), ["dojo/text!" + b.templateFile], function(b) {
                                    a.resolve(b)
                                });
                                l.checkError(b.templateFile, a);
                                return a
                            },
                            loadWidgetSettingTemplate: function(b) {
                                var a = new d;
                                require(l.getRequireConfig(), ["dojo/text!" + b.settingTemplateFile], function(b) {
                                    a.resolve(b)
                                });
                                l.checkError(b.settingTemplateFile, a);
                                return a
                            },
                            removeWidgetStyle: function(b) {
                                h.destroy(this._replaceId("widget/style/" + b.uri))
                            },
                            removeWidgetSettingStyle: function(b) {
                                h.destroy(this._replaceId("widget/style/" + b.uri + "/setting"))
                            },
                            getControllerWidgets: function() {
                                return f.filter(this.loaded, function(b) {
                                    return b.isController
                                })
                            },
                            getOffPanelWidgets: function() {
                                return f.filter(this.loaded, function(b) {
                                    return !b.inPanel
                                })
                            },
                            getOnScreenOffPanelWidgets: function() {
                                return f.filter(this.loaded, function(b) {
                                    return b.isOnScreen &&
                                        !b.inPanel
                                })
                            },
                            closeOtherWidgetsInTheSameGroup: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return;
                                for (var a = 0; a < this.loaded.length; a++) this.loaded[a].gid === b.gid && this.loaded[a].id !== b.id && this.closeWidget(this.loaded[a])
                            },
                            closeAllWidgetsInGroup: function(b) {
                                for (var a = 0; a < this.loaded.length; a++) this.loaded[a].gid === b && this.closeWidget(this.loaded[a])
                            },
                            _mergeAgolConfig: function(b) {
                                var a = this.appConfig._appData.values,
                                    c = "widgets[" + b.id + "]",
                                    g;
                                for (g in a) {
                                    var k = g.replace(/\//g, "_").indexOf(c +
                                        "_config");
                                    0 <= k && l.template.setConfigValue(b, g.replace(/\//g, "_").substr(k, g.length).replace(c, "widget"), a[g])
                                }
                            },
                            _onUserSignIn: function(b) {
                                f.forEach(this.loaded, function(a) {
                                    a.onSignIn(b)
                                }, this)
                            },
                            _onUserSignOut: function() {
                                f.forEach(this.loaded, function(b) {
                                    b.onSignOut()
                                }, this)
                            },
                            _activeWidget: function(b) {
                                if (this.activeWidget) {
                                    if (this.activeWidget.id === b.id) {
                                        !1 === this.activeWidget.inPanel && this.activeWidget.moveTopOnActive && h.setStyle(this.activeWidget.domNode, "zIndex", 101);
                                        return
                                    }
                                    "active" === this.activeWidget.state &&
                                        (this.activeWidget.setState("opened"), !1 === this.activeWidget.inPanel && h.setStyle(b.domNode, "zIndex", "zIndex" in b.position ? b.position.zIndex : "auto"), this.activeWidget.onDeActive())
                                }
                                this.activeWidget = b;
                                "opened" === this.activeWidget.state && (this.activeWidget.setState("active"), !1 === this.activeWidget.inPanel && this.activeWidget.moveTopOnActive && h.setStyle(this.activeWidget.domNode, "zIndex", 101), this.activeWidget.onActive(), m.publish("widgetActived", b))
                            },
                            _onClickWidget: function(b, a) {
                                var c = s(".jimu-widget",
                                    b.domNode);
                                if (0 < c.length)
                                    for (var g = 0; g < c.length; g++)
                                        if (a.target === c[g] || h.isDescendant(a.target, c[g])) return;
                                this._activeWidget(b)
                            },
                            _onMoveStart: function(b) {
                                f.forEach(this.loaded, function(a) {
                                    a.domNode === b.node && this._activeWidget(a)
                                }, this)
                            },
                            _onAppConfigLoaded: function(b) {
                                this.appConfig = b = e.clone(b);
                                g.setPortalUrl(b.portalUrl)
                            },
                            _onMapLoaded: function(b) {
                                this.map = b
                            },
                            _onMapChanged: function(b) {
                                this.map = b
                            },
                            _onSceneViewLoaded: function(b) {
                                this.sceneView = b
                            },
                            _onSceneViewChanged: function(b) {
                                this.sceneView = b
                            },
                            _onAppConfigChanged: function(b, a, c, g) {
                                var l = e.clone(b);
                                this.appConfig = l;
                                f.forEach(this.loaded, function(b) {
                                    b && (b.onAppConfigChanged(l, a, c, g), "widgetChange" === a && this._onConfigChanged(c.id, c.config, g))
                                }, this)
                            },
                            _onConfigChanged: function(b, a) {
                                var c = this.getWidgetById(b);
                                c && (c.onConfigChanged(a), e.mixin(c.config, a))
                            },
                            _onActionTriggered: function(b) {
                                if (!("map" === b.elementId || "app" === b.elementId)) {
                                    var a = this.getWidgetById(b.elementId);
                                    if (a) a.onAction(b.action, b.data);
                                    else this.missedActions.push({
                                        id: b.elementId,
                                        action: {
                                            name: b.action,
                                            data: b.data
                                        }
                                    });
                                    f.forEach(this.getControllerWidgets(), function(a) {
                                        if (a.widgetIsControlled(b.elementId)) a.onAction(b.action, {
                                            widgetId: b.elementId,
                                            data: b.data
                                        })
                                    }, this)
                                }
                            },
                            _postWidgetStartup: function(b) {
                                b.started = !0;
                                l.setVerticalCenter(b.domNode);
                                k.after(b, "resize", e.hitch(this, l.setVerticalCenter, b.domNode));
                                this.openWidget(b);
                                var a = g.getPortalCredential(this.appConfig.portalUrl);
                                if (a) b.onSignIn(a);
                                else b.onSignOut();
                                this._triggerMissedAction(b)
                            },
                            _triggerMissedAction: function(b) {
                                this.missedActions.forEach(function(a) {
                                    if (a.id ===
                                        b.id) b.onAction(a.action.name, a.action.data)
                                })
                            },
                            _remove: function(b) {
                                return f.some(this.loaded, function(a, c) {
                                    if (a.id === b) return this.loaded.splice(c, 1), !0
                                }, this)
                            },
                            _tryLoadResource: function(b, a) {
                                var c, g = new d;
                                if ("config" === a) c = b.amdFolder + "config.json", b.configFile = c, c = "hasConfig";
                                else if ("style" === a) c = b.amdFolder + "css/style.css", b.styleFile = c, c = "hasStyle";
                                else if ("i18n" === a) c = b.amdFolder + "nls/strings.js", b.i18nFile = b.isRemote ? c : b.amdFolder + "nls/strings", c = "hasLocale";
                                else if ("template" === a) c = b.amdFolder +
                                    "Widget.html", b.templateFile = c, c = "hasUIFile";
                                else if ("settingTemplate" === a) c = b.amdFolder + "setting/Setting.html", b.settingTemplateFile = c, c = "hasSettingUIFile";
                                else if ("settingI18n" === a) c = b.amdFolder + "setting/nls/strings.js", b.settingI18nFile = b.isRemote ? c : b.amdFolder + "setting/nls/strings", c = "hasSettingLocale";
                                else if ("settingStyle" === a) c = b.amdFolder + "setting/css/style.css", b.settingStyleFile = c, c = "hasSettingStyle";
                                else return g;
                                b[c] ? function() {
                                    var c;
                                    if ("config" === a) c = this.loadWidgetConfig(b);
                                    else if ("style" ===
                                        a) c = this.loadWidgetStyle(b);
                                    else if ("i18n" === a) c = this.loadWidgetI18n(b);
                                    else if ("template" === a) c = this.loadWidgetTemplate(b);
                                    else if ("settingTemplate" === a) c = this.loadWidgetSettingTemplate(b);
                                    else if ("settingStyle" === a) c = this.loadWidgetSettingStyle(b);
                                    else if ("settingI18n" === a) c = this.loadWidgetSettingI18n(b);
                                    else return g;
                                    c.then(function(b) {
                                        g.resolve(b)
                                    }, function(a) {
                                        new t({
                                            message: window.jimuNls.widgetManager.loadWidgetResourceError + ": " + b.uri
                                        });
                                        g.reject(a)
                                    })
                                }.apply(this) : g.resolve(null);
                                return g
                            },
                            _replaceId: function(b) {
                                return b.replace(/\//g, "_").replace(/\./g, "_")
                            },
                            _onDestroyWidget: function(b) {
                                "closed" !== b.state && this.closeWidget(b);
                                this._removeWidget(b);
                                this.emit("widget-destroyed", b.id);
                                m.publish("widgetDestroyed", b.id);
                                console.log("destroy widget [" + b.uri + "].")
                            },
                            _onDestroyWidgetSetting: function(b) {
                                this.removeWidgetSettingStyle(b)
                            },
                            _removeWidget: function(b) {
                                if ("string" === typeof b && (b = this.getWidgetById(b), !b)) return;
                                this.activeWidget && this.activeWidget.id === b.id && (this.activeWidget = null);
                                this._remove(b.id);
                                0 === this.getWidgetsByName(b.name).length && this.removeWidgetStyle(b)
                            }
                        });
                    v.getInstance = function(a) {
                        null === b && (b = new v(a), window._widgetManager = b);
                        return b
                    };
                    return v
                })
        },
        "jimu/tokenUtils": function() {
            define("dojo/_base/lang dojo/_base/array dojo/aspect dojo/Deferred dojo/cookie dojo/json dojo/topic dojo/request/script esri/kernel esri/config esri/request esri/urlUtils esri/IdentityManager esri/arcgis/OAuthInfo jimu/portalUrlUtils jimu/utils".split(" "), function(p, e, f, h, d, m, q, a, k, c, s,
                n, r, l, g, t) {
                "function" !== typeof d.getAll && (d.getAll = function(b) {
                    var a = [];
                    (b = d(b)) && a.push(b);
                    return a
                });
                r = {
                    portalUrl: null,
                    cookiePath: "/",
                    _started: !1,
                    webTierPortalUrls: [],
                    isInBuilderWindow: function() {
                        return !!window.isBuilder
                    },
                    isInConfigOrPreviewWindow: function() {
                        var b = !1;
                        try {
                            b = !window.isBuilder && window.parent && window.parent !== window && window.parent.isBuilder
                        } catch (a) {
                            console.log(a), b = !1
                        }
                        return !!b
                    },
                    isStringStartWith: function(b, a) {
                        return b.substr(0, a.length) === a
                    },
                    getCookiePath: function() {
                        return this.cookiePath
                    },
                    setPortalUrl: function(b) {
                        (b = g.getStandardPortalUrl(b)) && (b += "/");
                        this.portalUrl = b
                    },
                    getPortalUrl: function() {
                        return this.portalUrl
                    },
                    isWebTierPortal: function(b) {
                        var l = new h,
                            t = g.getStandardPortalUrl(b);
                        b = t + "/sharing";
                        var d = g.setHttpsProtocol(t + "/sharing/rest/generateToken?f\x3djson"),
                            e = g.setHttpsProtocol(b);
                        a.get(d, {
                            jsonp: "callback"
                        }).then(p.hitch(this, function(b) {
                            b.token ? (this.webTierPortalUrls.push(t), this.removeWabAuthCookie(), k.id.getCredential(e).then(p.hitch(this, function(a) {
                                a.token || (a.token = b.token);
                                a = n.canUseXhr(a.server, !0); - 1 < a && c.defaults.io.corsEnabledServers.splice(a, 1);
                                this._pushCorsEnabledServerInfo({
                                    host: g.getServerByUrl(t),
                                    withCredentials: !0
                                });
                                l.resolve(!0)
                            }), p.hitch(this, function() {
                                l.resolve(!0)
                            }))) : l.resolve(!1)
                        }), p.hitch(this, function(b) {
                            console.error(b);
                            l.reject(b)
                        }));
                        return l
                    },
                    addAuthorizedCrossOriginDomains: function(b) {
                        if (b && 0 < b.length)
                            for (var a = 0; a < b.length; a++) this.addWithCredentialDomain(b[a])
                    },
                    addWithCredentialDomain: function(b) {
                        if (b && "string" === typeof b) {
                            var a = c.defaults.io.corsEnabledServers,
                                l = g.getServerByUrl(b);
                            (b = g.getServerWithProtocol(b)) || (b = "http://" + l);
                            b = n.canUseXhr(b, !0); - 1 < b && a.splice(b, 1);
                            this._pushCorsEnabledServerInfo({
                                host: l,
                                withCredentials: !0
                            })
                        }
                    },
                    _pushCorsEnabledServerInfo: function(b) {
                        if (b) {
                            var a = c.defaults.io.corsEnabledServers,
                                g = "charAt charCodeAt concat endsWith indexOf lastIndexOf localeCompare match replace search slice split startsWith substr substring toLocaleLowerCase toLocaleUpperCase toLowerCase toString toUpperCase trim trimLeft trimRight valueOf".split(" ");
                            if ("object" === typeof b && "string" === typeof b.host) {
                                for (var l in b.host) b[l] = "function" === typeof b.host[l] ? function() {
                                    return b.host[l].apply(b.host, arguments)
                                } : b.host[l];
                                b.length = b.host.length;
                                e.forEach(g, function(a) {
                                    "function" === typeof b.host[a] && (b[a] = function() {
                                        return b.host[a].apply(b.host, arguments)
                                    })
                                })
                            }
                            a.push(b)
                        }
                    },
                    tryRegisterCredential: function(b) {
                        return !this.isValidCredential(b) ? !1 : !e.some(k.id.credentials, p.hitch(this, function(a) {
                            return b.token === a.token
                        })) ? (k.id.credentials.push(b), !0) : !1
                    },
                    registerToken: function(b) {
                        var a = g.getSharingUrl(this.portalUrl);
                        k.id.findCredential(a) && e.some(k.id.credentials, p.hitch(this, function(b, a) {
                            if (this.isValidPortalCredentialOfPortalUrl(this.portalUrl, b)) return k.id.credentials.splice(a, 1), !0
                        }));
                        return this._getTokenInfo(b).then(function(b) {
                            k.id.registerToken(b)
                        })
                    },
                    _getTokenInfo: function(b) {
                        var c = g.getPortalSelfInfoUrl(this.portalUrl);
                        return a.get(c + ("?f\x3djson\x26token\x3d" + b), {
                            jsonp: "callback"
                        }).then(p.hitch(this, function(a) {
                            if (a.user) return {
                                server: g.getSharingUrl(this.portalUrl),
                                ssl: a.allSSL,
                                token: b,
                                userId: a.user.username
                            };
                            throw Error(window.jimuNls.urlParams.invalidToken);
                        }), function(b) {
                            console.error(b);
                            throw Error(window.jimuNls.urlParams.validateTokenError);
                        })
                    },
                    _isInvalidPortalUrl: function(b) {
                        return b && "string" === typeof b && p.trim(b)
                    },
                    signInPortal: function(b) {
                        var a = new h;
                        if (this._isInvalidPortalUrl(b)) {
                            b = g.getStandardPortalUrl(b);
                            var c = g.getSharingUrl(b),
                                l = this.getPortalCredential(b);
                            l ? setTimeout(p.hitch(this, function() {
                                a.resolve(l)
                            }), 0) : a = k.id.getCredential(c)
                        } else setTimeout(p.hitch(this,
                            function() {
                                a.reject("Invalid portalurl.")
                            }), 0);
                        return a
                    },
                    _loadPortalSelfInfo: function(b) {
                        b = g.getPortalSelfInfoUrl(b);
                        return s({
                            url: b,
                            handleAs: "json",
                            content: {
                                f: "json"
                            },
                            callbackParamName: "callback"
                        })
                    },
                    registerOAuthInfo: function(b, a) {
                        if (!b || !("string" === typeof b && a && "string" === typeof a)) return null;
                        var c = k.id.findOAuthInfo(b);
                        c || (c = window.location.protocol + "//" + window.location.host + require.toUrl("jimu") + "/oauth-callback.html", c = new l({
                            appId: a,
                            expiration: 20160,
                            portalUrl: b,
                            authNamespace: "/",
                            popup: !0,
                            popupCallbackUrl: c
                        }), k.id.registerOAuthInfos([c]));
                        c.appId = a;
                        return c
                    },
                    signOutAll: function() {
                        var b = g.getStandardPortalUrl(this.portalUrl),
                            a = !!k.id.findCredential(b + "/sharing/rest");
                        window.appInfo.isRunInPortal ? this.removeEsriAuthCookieStorage() : this.removeWabAuthCookie();
                        k.id.destroyCredentials();
                        k.id._oAuthHash = null;
                        a && this._publishCurrentPortalUserSignOut(b)
                    },
                    userHaveSignInPortal: function(b) {
                        return !!this.getPortalCredential(p.trim(b || ""))
                    },
                    isValidCredential: function(b) {
                        var a = !1;
                        if (b) {
                            var a = b.token,
                                c = b.server,
                                g = b.scope,
                                a = a && "string" === typeof a && p.trim(a),
                                c = c && "string" === typeof c && p.trim(c),
                                g = "portal" === g || "server" === g,
                                l = !0;
                            b.expires && (b = parseInt(b.expires, 10), l = (new Date).getTime(), l = b > l);
                            a = a && c && g && l
                        }
                        return a
                    },
                    isValidPortalCredentialOfPortalUrl: function(b, a) {
                        var c = !1;
                        if (this.isValidCredential(a)) var c = "portal" === a.scope,
                            l = g.isSameServer(b, a.server),
                            c = c && l;
                        return c
                    },
                    getPortalCredential: function(b) {
                        var a = null;
                        b = p.trim(b || "");
                        if (!b) return null;
                        b = g.getStandardPortalUrl(b);
                        return a = this._filterPortalCredential(b,
                            k.id.credentials)
                    },
                    saveAndRegisterCookieToCredential: function(b) {
                        b = p.clone(b);
                        b.referer = window.location.host;
                        b.scope = "portal";
                        b.isAdmin = !!b.isAdmin;
                        this.saveWabCookie(b);
                        var a = b.server + "/sharing/rest";
                        b.server = a;
                        k.id.registerToken(b);
                        return k.id.findCredential(a, b.userId)
                    },
                    registerAuth2Hash: function(b) {
                        b = p.clone(b);
                        var a = 1E3 * parseInt(b.expires_in, 10),
                            a = (new Date).getTime() + a,
                            c = g.getStandardPortalUrl(b.state.portalUrl);
                        return this.saveAndRegisterCookieToCredential({
                            referer: window.location.host,
                            server: c,
                            token: b.access_token,
                            expires: a,
                            userId: b.username,
                            scope: "portal",
                            isAdmin: !!b.isAdmin
                        })
                    },
                    saveWabCookie: function(b) {
                        this.removeCookie("wab_auth");
                        d("wab_auth", m.stringify(b), {
                            expires: new Date(b.expires),
                            path: "/"
                        })
                    },
                    removeWabAuthCookie: function() {
                        this.removeCookie("wab_auth")
                    },
                    removeEsriAuthCookieStorage: function() {
                        this.removeCookie("esri_auth");
                        window.localStorage && window.localStorage.removeItem("esriJSAPIOAuth");
                        window.sessionStorage && window.sessionStorage.removeItem("esriJSAPIOAuth")
                    },
                    _filterPortalCredential: function(b,
                        a) {
                        var c = null;
                        if (a && 0 < a.length) {
                            var g = e.filter(a, p.hitch(this, function(a) {
                                return this.isValidPortalCredentialOfPortalUrl(b, a)
                            }));
                            0 < g.length && (c = g[g.length - 1])
                        }
                        return c
                    },
                    _removePortalCredential: function(b) {
                        var a = p.trim(b || "");
                        if (a) {
                            a = g.getStandardPortalUrl(a);
                            for (b = e.filter(k.id.credentials, p.hitch(this, function(b) {
                                    return this.isValidPortalCredentialOfPortalUrl(a, b)
                                })); 0 < b.length;) b[0].destroy(), b.splice(0, 1);
                            k.id.credentials = e.filter(k.id.credentials, p.hitch(this, function(b) {
                                return !this.isValidPortalCredentialOfPortalUrl(a,
                                    b)
                            }))
                        }
                    },
                    getUserIdByToken: function(b, a) {
                        var c = new h;
                        if (b && "string" === typeof b && a && "string" === typeof a) {
                            var l = g.getStandardPortalUrl(a),
                                n = e.filter(k.id.credentials, p.hitch(this, function(a) {
                                    var c = a.token === b && a.userId;
                                    a = g.isSameServer(l, a.server);
                                    return c && a
                                }));
                            if (0 < n.length) {
                                var t = n[0];
                                setTimeout(p.hitch(this, function() {
                                    c.resolve(t.userId)
                                }), 0);
                                return c
                            }
                            n = g.getCommunitySelfUrl(l);
                            s({
                                url: n,
                                handleAs: "json",
                                content: {
                                    f: "json"
                                },
                                callbackParamName: "callback"
                            }).then(p.hitch(this, function(b) {
                                c.resolve(b && b.username ||
                                    "")
                            }), p.hitch(this, function(b) {
                                console.error(b);
                                c.reject("fail to get userId by token")
                            }))
                        } else setTimeout(p.hitch(this, function() {
                            c.reject("invalid parameters")
                        }), 0);
                        return c
                    },
                    xtGetCredentialFromCookie: function(b) {
                        var a = d("wab_auth"),
                            c = null;
                        if (a) try {
                            c = m.parse(a)
                        } catch (l) {
                            console.error(l)
                        }
                        if (!(c && "object" === typeof c) || !g.isSameServer(b, c.server) || window.location.host !== c.referer) return null;
                        c.expires = parseInt(c.expires, 10);
                        a = (new Date).getTime();
                        if (!(c.expires > a)) return this.removeCookie("wab_auth"),
                            null;
                        b += "/sharing/rest";
                        c.server = b;
                        (a = k.id.findCredential(b)) || k.id.registerToken(c);
                        return a = k.id.findCredential(b)
                    },
                    removeCookie: function(b) {
                        var a = this.getCookiePath();
                        t.removeCookie(b, a)
                    },
                    _getDomainsByServerName: function(b) {
                        var a = b.split("."),
                            c = a.length;
                        return e.map(a, p.hitch(this, function(b, g) {
                            var l = a.slice(g, c),
                                k = "",
                                n = l.length - 1;
                            e.forEach(l, p.hitch(this, function(b, a) {
                                k += b;
                                a !== n && (k += ".")
                            }));
                            return k
                        }))
                    },
                    _publishCurrentPortalUserSignIn: function(b) {
                        if (this.isValidCredential(b)) try {
                            q.publish("userSignIn",
                                b)
                        } catch (a) {
                            console.error(a)
                        }
                    },
                    _publishAnyUserSignIn: function(b) {
                        if (this.isValidCredential(b)) try {
                            q.publish("anyUserSignIn", b)
                        } catch (a) {
                            console.error(a)
                        }
                    },
                    _publishCurrentPortalUserSignOut: function(b) {
                        try {
                            q.publish("userSignOut", b)
                        } catch (a) {
                            console.error(a)
                        }
                    },
                    _signInSuccess: function(b) {
                        try {
                            this.isValidPortalCredentialOfPortalUrl(this.portalUrl, b) && this._publishCurrentPortalUserSignIn(b), this._publishAnyUserSignIn(b)
                        } catch (a) {
                            console.error(a)
                        }
                    },
                    _bindEvents: function() {
                        f.after(k.id, "signIn", p.hitch(this,
                            function(b, a) {
                                console.log(a[1]);
                                f.after(b, "callback", p.hitch(this, function(b, a) {
                                    this._signInSuccess(a[0], !1)
                                }));
                                return b
                            }))
                    },
                    isStart: function() {
                        return this._started
                    },
                    startup: function() {
                        if (!this._started) {
                            if (this.isInConfigOrPreviewWindow()) {
                                var b = window.parent;
                                if (b) {
                                    var a = b.esri && b.esri.id;
                                    a && (k.id = a, a = window.esriConfig.defaults.io, b = b.esriConfig.defaults.io, a.corsEnabledServers = b.corsEnabledServers, a.webTierAuthServers = b.webTierAuthServers, a._processedCorsServers = b._processedCorsServers, a.corsStatus =
                                        b.corsStatus)
                                }
                            }
                            this._bindEvents();
                            this._started = !0
                        }
                    }
                };
                r.startup();
                return r
            })
        },
        "jimu/dijit/Message": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/html dojo/keys dojo/on jimu/dijit/Popup".split(" "), function(p, e, f, h, d, m) {
                return p(m, {
                    baseClass: "jimu-popup jimu-message",
                    declaredClass: "jimu.dijit.Message",
                    type: "message",
                    message: "",
                    autoHeight: !0,
                    maxWidth: 350,
                    maxHeight: 180,
                    postMixInProperties: function() {
                        this.content = this.message
                    },
                    _createTitleNode: function() {
                        this.titleLabel && (this.titleNode =
                            f.create("div", {
                                "class": "title"
                            }, this.domNode), this.titleLabeNode = f.create("span", {
                                "class": "title-label jimu-float-leading",
                                innerHTML: this.titleLabel || "\x26nbsp"
                            }, this.titleNode), this.closeBtnNode = f.create("div", {
                                "class": "close-btn jimu-float-trailing"
                            }, this.titleNode), this.own(d(this.closeBtnNode, "click", e.hitch(this, this.close))))
                    },
                    _preProcessing: function() {
                        0 === this.buttons.length && this.buttons.push({
                            label: window.jimuNls.common.ok,
                            key: h.ENTER,
                            onClick: e.hitch(this, this.close)
                        })
                    },
                    _increaseZIndex: function() {
                        f.setStyle(this.domNode,
                            "zIndex", 501);
                        f.setStyle(this.overlayNode, "zIndex", 500)
                    }
                })
            })
        },
        "jimu/dijit/Popup": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/_base/fx dojo/on dojo/sniff dojo/touch dojo/query dojo/dnd/move dijit/_WidgetBase jimu/utils".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n) {
                var r = 0;
                return p(s, {
                    declaredClass: "jimu.dijit.Popup",
                    baseClass: "jimu-popup",
                    titleLabel: "",
                    content: null,
                    container: null,
                    buttons: [],
                    enabledButtons: [],
                    disabledButtons: [],
                    onClose: null,
                    _fixedHeight: !1,
                    autoHeight: !1,
                    maxHeight: 800,
                    maxWidth: 1024,
                    constructor: function() {
                        this.buttons = [];
                        this.enabledButtons = [];
                        this.disabledButtons = [];
                        this.pauseKeyHandles = [];
                        this.container = jimuConfig.layoutId
                    },
                    postCreate: function() {
                        this._preProcessing();
                        this.inherited(arguments);
                        this._initDomNode();
                        this._positioning();
                        h.place(this.domNode, this.container);
                        setTimeout(e.hitch(this, function() {
                            this._moveToMiddle()
                        }), 50);
                        this.own(m(window, "resize", e.hitch(this, function() {
                            this._fixedHeight || this.autoHeight ? (this._calculatePosition(),
                                this._moveToMiddle()) : this._positioning()
                        })));
                        this.overlayNode = h.create("div", {
                            "class": "jimu-overlay"
                        }, this.container);
                        this._increaseZIndex();
                        d.animateProperty({
                            node: this.domNode,
                            properties: {
                                opacity: 1
                            },
                            duration: 200
                        }).play();
                        this.domNode.focus()
                    },
                    _preProcessing: function() {
                        "number" === typeof this.height && (this._fixedHeight = !0, this.autoHeight = !1);
                        this.autoHeight && (this.maxHeight = 598)
                    },
                    _createTitleNode: function() {
                        this.titleNode = h.create("div", {
                            "class": "title"
                        }, this.domNode);
                        this.titleLabeNode = h.create("span", {
                            "class": "title-label jimu-float-leading",
                            innerHTML: this.titleLabel || "\x26nbsp"
                        }, this.titleNode);
                        this.closeBtnNode = h.create("div", {
                            "class": "close-btn jimu-icon jimu-icon-close jimu-float-trailing"
                        }, this.titleNode);
                        var c = null,
                            c = "ontouchstart" in document ? a.press : "click";
                        this.own(m(this.closeBtnNode, c, e.hitch(this, this.close)))
                    },
                    _initDomNode: function() {
                        this._createTitleNode();
                        this.contentContainerNode = h.create("div", {
                            "class": "content"
                        }, this.domNode);
                        this.content && ("string" === typeof this.content ? this.contentContainerNode.innerHTML =
                            this.content : this.content.domNode ? (this.content.placeAt(this.contentContainerNode), this.content.popup = this) : 1 === this.content.nodeType && h.place(this.content, this.contentContainerNode));
                        this.buttonContainer = h.create("div", {
                            "class": "button-container"
                        }, this.domNode);
                        0 === this.buttons.length && h.setStyle(this.buttonContainer, "display", "none");
                        for (var a = this.buttons.length - 1; - 1 < a; a--) this._createButton(this.buttons[a]), this.buttons[a].disable && this.disableButton(a)
                    },
                    _limitButtonsMaxWidth: function() {
                        var a =
                            this.enabledButtons.length;
                        if (0 !== a) {
                            var c = h.getContentBox(this.buttonContainer),
                                k = h.getMarginExtents(this.enabledButtons[0]),
                                b = h.getPadBorderExtents(this.enabledButtons[0]),
                                n = 0,
                                b = 8 === q("ie") ? b.l + b.r : 0,
                                n = (c.w - (k.l + k.r + b) * a) / a;
                            0 < n && (f.forEach(this.enabledButtons, e.hitch(this, function(b) {
                                h.setStyle(b, "maxWidth", n + "px")
                            })), f.forEach(this.disabledButtons, e.hitch(this, function(b) {
                                h.setStyle(b, "maxWidth", n + "px")
                            })))
                        }
                    },
                    _moveableNode: function(a, g) {
                        this.moveable && (this.moveable.destroy(), this.moveable = null);
                        var k = h.getMarginBox(this.container);
                        k.l = k.l - a + g;
                        k.w += 2 * (a - g);
                        this.moveable = new c.boxConstrainedMoveable(this.domNode, {
                            box: k,
                            handle: this.titleNode || this.contentContainerNode,
                            within: !0
                        });
                        this.own(m(this.moveable, "Moving", e.hitch(this, this.onMoving)));
                        this.own(m(this.moveable, "MoveStop", e.hitch(this, this.onMoveStop)))
                    },
                    _getHeaderBox: function() {
                        return 0 === k("#header").length ? {
                            t: 0,
                            l: 0,
                            w: 0,
                            h: 0
                        } : h.getMarginBox("header")
                    },
                    _getFooterBox: function() {
                        return 0 === k(".footer", this.container).length ? {
                            t: 0,
                            l: 0,
                            w: 0,
                            h: 0
                        } : h.getMarginBox(k(".footer", this.container)[0])
                    },
                    _calculatePosition: function() {
                        var a = h.getContentBox(this.container),
                            c = this._getHeaderBox(),
                            k = this._getFooterBox(),
                            k = a.h - c.h - k.h - 40,
                            b = 0;
                        b = this._fixedHeight ? this.height : this.autoHeight ? k - 200 : this.height = k > this.maxHeight ? this.maxHeight : k;
                        k = (k - b) / 2 + c.h + 20;
                        k = k < c.h ? c.h : k;
                        this.width = this.width || this.maxWidth;
                        h.setStyle(this.domNode, {
                            left: (a.w - this.width) / 2 + "px",
                            top: k + "px",
                            width: this.width + "px"
                        })
                    },
                    _calculateHeight: function() {
                        this.autoHeight ? (h.setStyle(this.domNode,
                            "height", "auto"), h.addClass(this.contentContainerNode, "content-static"), 0 === this.buttons.length && h.setStyle(this.contentContainerNode, {
                            marginBottom: "15px"
                        })) : (h.setStyle(this.domNode, "height", this.height + "px"), h.addClass(this.contentContainerNode, "content-absolute"), h.addClass(this.buttonContainer, "button-container-absolute"), 0 === this.buttons.length && h.setStyle(this.contentContainerNode, {
                            bottom: "15px"
                        }));
                        this._moveableNode(this.width, 100)
                    },
                    _moveToMiddle: function() {
                        if (this.autoHeight) {
                            var a = h.getMarginBox(this.domNode),
                                c = h.getContentBox(this.container),
                                k = this._getHeaderBox(),
                                b = this._getFooterBox(),
                                b = c.h - k.h - b.h - 40,
                                n = 0,
                                n = a.h || b - 200,
                                a = (b - n) / 2 + k.h + 20,
                                a = a < k.h ? k.h : a;
                            h.setStyle(this.domNode, {
                                left: (c.w - this.width) / 2 + "px",
                                top: a + "px",
                                width: this.width + "px"
                            })
                        }
                    },
                    _positioning: function() {
                        this._calculatePosition();
                        this._calculateHeight()
                    },
                    _increaseZIndex: function() {
                        h.setStyle(this.domNode, "zIndex", r + 200 + 1);
                        h.setStyle(this.overlayNode, "zIndex", r + 200);
                        r++
                    },
                    setTitleLabel: function(a) {
                        this.titleNode.innerHTML = n.stripHTML(a)
                    },
                    onMoving: function(a) {
                        h.setStyle(a.node,
                            "opacity", 0.9)
                    },
                    onMoveStop: function(a) {
                        h.setStyle(a.node, "opacity", 1)
                    },
                    close: function() {
                        if (!(this.onClose && !1 === this.onClose())) {
                            var a = this.domNode.parentNode,
                                c = e.clone(this.domNode);
                            h.setStyle(this.domNode, "display", "none");
                            h.destroy(this.overlayNode);
                            this.destroy();
                            this.moveable.destroy();
                            h.place(c, a);
                            d.animateProperty({
                                node: c,
                                properties: {
                                    opacity: 0
                                },
                                duration: 200,
                                onEnd: function() {
                                    h.destroy(c)
                                }
                            }).play()
                        }
                    },
                    addButton: function(a) {
                        this._createButton(a)
                    },
                    _createButton: function(a) {
                        var c = " ";
                        a.classNames &&
                            0 < a.classNames.length && "function" === typeof a.classNames.join && (c += a.classNames.join(" "));
                        var k = h.create("div", {
                            "class": "jimu-btn jimu-popup-action-btn jimu-float-trailing jimu-trailing-margin1 " + c,
                            innerHTML: a.label,
                            title: a.title || a.label
                        }, this.buttonContainer);
                        this.enabledButtons.unshift(k);
                        c = h.create("div", {
                            "class": "jimu-btn jimu-state-disabled jimu-float-trailing jimu-trailing-margin1 " + c,
                            title: a.title || a.label,
                            innerHTML: a.label,
                            style: {
                                display: "none"
                            }
                        }, this.buttonContainer);
                        this.disabledButtons.unshift(c);
                        this.own(m(k, "click", e.hitch(this, function(b) {
                            if (a.onClick) a.onClick(b);
                            else this.close()
                        })))
                    },
                    setButtonProps: function(a, c) {
                        "number" === typeof a && isFinite(a) || (c = a, a = 0);
                        if (c && 0 !== this.enabledButtons.length)
                            for (var k in c) "title" === k ? (h.setAttr(this.enabledButtons[a], "title", c[k]), h.setAttr(this.disabledButtons[a], "title", c[k])) : "label" === k && (h.setProp(this.enabledButtons[a], "innerHTML", c[k]), h.setProp(this.disabledButtons[a], "innerHTML", c[k]))
                    },
                    enableButton: function(a) {
                        "number" === typeof a && isFinite(a) &&
                            a < this.enabledButtons.length ? (h.setStyle(this.enabledButtons[a], "display", "inline-block"), h.setStyle(this.disabledButtons[a], "display", "none")) : (f.forEach(this.enabledButtons[a], e.hitch(this, function(a) {
                                h.setStyle(a, "display", "inline-block")
                            })), f.forEach(this.disabledButtons[a], e.hitch(this, function(a) {
                                h.setStyle(a, "display", "none")
                            })))
                    },
                    disableButton: function(a) {
                        "number" === typeof a && isFinite(a) && a < this.disabledButtons.length ? (h.setStyle(this.disabledButtons[a], "display", "inline-block"), h.setStyle(this.enabledButtons[a],
                            "display", "none")) : (f.forEach(this.disabledButtons, e.hitch(this, function(a) {
                            h.setStyle(a, "display", "inline-block")
                        })), f.forEach(this.enabledButtons, e.hitch(this, function(a) {
                            h.setStyle(a, "display", "none")
                        })))
                    },
                    showButton: function(a) {
                        this.enableButton(a)
                    },
                    hideButton: function(a) {
                        "number" === typeof a && isFinite(a) && a < this.disabledButtons.length ? (h.setStyle(this.disabledButtons[a], "display", "none"), h.setStyle(this.enabledButtons[a], "display", "none")) : (f.forEach(this.disabledButtons, e.hitch(this, function(a) {
                            h.setStyle(a,
                                "display", "none")
                        })), f.forEach(this.enabledButtons, e.hitch(this, function(a) {
                            h.setStyle(a, "display", "none")
                        })))
                    }
                })
            })
        },
        "dojo/dnd/move": function() {
            define("../_base/declare ../dom-geometry ../dom-style ./common ./Mover ./Moveable".split(" "), function(p, e, f, h, d, m) {
                h = p("dojo.dnd.move.constrainedMoveable", m, {
                    constraints: function() {},
                    within: !1,
                    constructor: function(d, a) {
                        a || (a = {});
                        this.constraints = a.constraints;
                        this.within = a.within
                    },
                    onFirstMove: function(d) {
                        var a = this.constraintBox = this.constraints.call(this,
                            d);
                        a.r = a.l + a.w;
                        a.b = a.t + a.h;
                        this.within && (d = e.getMarginSize(d.node), a.r -= d.w, a.b -= d.h)
                    },
                    onMove: function(d, a) {
                        var k = this.constraintBox,
                            c = d.node.style;
                        this.onMoving(d, a);
                        a.l = a.l < k.l ? k.l : k.r < a.l ? k.r : a.l;
                        a.t = a.t < k.t ? k.t : k.b < a.t ? k.b : a.t;
                        c.left = a.l + "px";
                        c.top = a.t + "px";
                        this.onMoved(d, a)
                    }
                });
                d = p("dojo.dnd.move.boxConstrainedMoveable", h, {
                    box: {},
                    constructor: function(d, a) {
                        var k = a && a.box;
                        this.constraints = function() {
                            return k
                        }
                    }
                });
                p = p("dojo.dnd.move.parentConstrainedMoveable", h, {
                    area: "content",
                    constructor: function(d,
                        a) {
                        var k = a && a.area;
                        this.constraints = function() {
                            var a = this.node.parentNode,
                                d = f.getComputedStyle(a),
                                n = e.getMarginBox(a, d);
                            if ("margin" == k) return n;
                            var r = e.getMarginExtents(a, d);
                            n.l += r.l;
                            n.t += r.t;
                            n.w -= r.w;
                            n.h -= r.h;
                            if ("border" == k) return n;
                            r = e.getBorderExtents(a, d);
                            n.l += r.l;
                            n.t += r.t;
                            n.w -= r.w;
                            n.h -= r.h;
                            if ("padding" == k) return n;
                            r = e.getPadExtents(a, d);
                            n.l += r.l;
                            n.t += r.t;
                            n.w -= r.w;
                            n.h -= r.h;
                            return n
                        }
                    }
                });
                return {
                    constrainedMoveable: h,
                    boxConstrainedMoveable: d,
                    parentConstrainedMoveable: p
                }
            })
        },
        "jimu/shared/AppVersionManager": function() {
            define(["./BaseVersionManager",
                "./utils"
            ], function(p, e) {
                function f() {
                    this.versions = [{
                            version: "1.0",
                            description: "The version embedded in portal 10.3 final.",
                            upgrader: function(e) {
                                return e
                            },
                            compatible: !0
                        }, {
                            version: "1.1",
                            description: "The version embedded in online3.6, and used in developer edition 1.0.",
                            upgrader: function(e) {
                                if (e.widgetOnScreen && e.widgetOnScreen.panel && ("themes/FoldableTheme/panels/TitlePanel/Panel" === e.widgetOnScreen.panel.uri || "jimu/BaseWidgetPanel" === e.widgetOnScreen.panel.uri)) e.widgetOnScreen.panel.uri = "jimu/PreloadWidgetIconPanel";
                                return e
                            },
                            compatible: !0
                        }, {
                            version: "1.2",
                            description: "The version embedded in online3.7.",
                            upgrader: function(e) {
                                var d = 0;
                                if (e.widgetOnScreen && e.widgetOnScreen.widgets) {
                                    for (var m = !1, d = 0; d < e.widgetOnScreen.widgets.length; d++) "widgets/Splash/Widget" === e.widgetOnScreen.widgets[d].uri && (m = !0);
                                    m || e.widgetOnScreen.widgets.push({
                                        uri: "widgets/Splash/Widget",
                                        visible: !1,
                                        positionRelativeTo: "browser",
                                        version: "1.2"
                                    });
                                    m = !1;
                                    for (d = 0; d < e.widgetOnScreen.widgets.length; d++) "widgets/TimeSlider/Widget" === e.widgetOnScreen.widgets[d].uri &&
                                        (m = !0);
                                    m || e.widgetOnScreen.widgets.push({
                                        uri: "widgets/TimeSlider/Widget",
                                        visible: !1,
                                        position: {
                                            bottom: 55,
                                            left: 7
                                        },
                                        version: "1.2"
                                    });
                                    m = !1;
                                    for (d = 0; d < e.widgetOnScreen.widgets.length; d++) "widgets/Swipe/Widget" === e.widgetOnScreen.widgets[d].uri && (m = !0);
                                    m || e.widgetOnScreen.widgets.push({
                                        uri: "widgets/Swipe/Widget",
                                        visible: !1,
                                        position: {
                                            top: 145,
                                            left: 7
                                        },
                                        version: "1.2"
                                    })
                                }
                                return e
                            },
                            compatible: !0
                        }, {
                            version: "1.3",
                            description: "The version embedded in online3.8 \x26 online3.9.",
                            upgrader: function(f) {
                                (function(d) {
                                    e.visitElement(d,
                                        function(d) {
                                            d.positionRelativeTo && (d.position ? d.position.relativeTo = d.positionRelativeTo : d.position = {
                                                relativeTo: d.positionRelativeTo
                                            }, d.panel && (d.panel.position ? d.panel.position.relativeTo = d.panel.positionRelativeTo : d.panel.position = {
                                                relativeTo: d.panel.positionRelativeTo
                                            }))
                                        });
                                    var m = d.widgetOnScreen;
                                    m && (m.panel && m.panel.positionRelativeTo) && (m.panel.position ? m.panel.position.relativeTo = m.panel.positionRelativeTo : m.panel.position = {
                                        relativeTo: m.panel.positionRelativeTo
                                    });
                                    if ((m = d.widgetPool) && m.panel &&
                                        m.panel.positionRelativeTo) m.panel.position ? m.panel.position.relativeTo = m.panel.positionRelativeTo : m.panel.position = {
                                        relativeTo: m.panel.positionRelativeTo
                                    }
                                })(f);
                                f.widgetOnScreen && (f.widgetOnScreen.panel && "jimu/PreloadWidgetIconPanel" === f.widgetOnScreen.panel.uri) && (f.widgetOnScreen.panel.uri = "jimu/OnScreenWidgetPanel");
                                (function(d) {
                                    if (d.widgetOnScreen && d.widgetOnScreen.widgets && d.theme && "FoldableTheme" === d.theme.name) {
                                        var e = null,
                                            f = null;
                                        if (e = d.widgetOnScreen.widgets[4]) void 0 !== e.position.top ? (e = {
                                            position: {
                                                left: 205,
                                                top: 45
                                            }
                                        }, f = {
                                            position: {
                                                left: 255,
                                                top: 45
                                            }
                                        }) : (e = {
                                            position: {
                                                left: 205,
                                                bottom: 55
                                            }
                                        }, f = {
                                            position: {
                                                left: 255,
                                                bottom: 55
                                            }
                                        }), d.widgetOnScreen.widgets.splice(7, 0, e, f)
                                    }
                                })(f);
                                (function() {
                                    for (var d = 0, e = 0, q = !1, d = 0; d < f.widgetOnScreen.widgets.length; d++)
                                        if ("widgets/Geocoder/Widget" === f.widgetOnScreen.widgets[d].uri) {
                                            q = !0;
                                            break
                                        }
                                    for (var a = !1, e = 0; e < f.widgetOnScreen.widgets.length; e++)
                                        if ("widgets/Search/Widget" === f.widgetOnScreen.widgets[e].uri) {
                                            a = !0;
                                            break
                                        }!a && q && (d = f.widgetOnScreen.widgets[d], d.uri = "widgets/Search/Widget",
                                        d.name = "Search")
                                })(f);
                                (function(d) {
                                    for (var e = 0, e = d.widgetOnScreen.widgets.length - 1; 0 <= e; e--) {
                                        var f = d.widgetOnScreen.widgets[e];
                                        if ("widgets/Swipe/Widget" === f.uri && !f.closeable && (d.widgetOnScreen.widgets.splice(e, 1), !1 !== f.visible)) {
                                            f.closeable = !0;
                                            var a;
                                            a: {
                                                for (a = a = 0; a < d.widgetOnScreen.widgets.length; a++)
                                                    if (!d.widgetOnScreen.widgets[a].uri) break a;a = -1
                                            }
                                            0 <= a && (f.position = d.widgetOnScreen.widgets[a].position, d.widgetOnScreen.widgets[a] = f)
                                        }
                                        "widgets/TimeSlider/Widget" === f.uri && (!1 === f.visible ? d.widgetOnScreen.widgets.splice(e,
                                            1) : f.closeable = !0)
                                    }
                                })(f);
                                f.widgetOnScreen.widgets.push({
                                    uri: "widgets/ZoomSlider/Widget",
                                    position: {
                                        top: 5,
                                        left: 7
                                    },
                                    version: "1.3"
                                });
                                f.loadingPage || (f.loadingPage = {
                                    backgroundColor: "#508dca",
                                    backgroundImage: {
                                        visible: !1
                                    },
                                    loadingGif: {
                                        visible: !0,
                                        uri: "configs/loading/images/predefined_loading_1.gif",
                                        width: 58,
                                        height: 58
                                    }
                                });
                                return f
                            },
                            compatible: !0
                        }, {
                            version: "1.4",
                            description: "The version embedded in online3.10.",
                            upgrader: function(e) {
                                if (e.theme) {
                                    var d = e.theme.name;
                                    if (("FoldableTheme" === d || "JewelryBoxTheme" === d) &&
                                        e.widgetOnScreen) {
                                        var f = e.widgetOnScreen.widgets;
                                        if (f && 0 < f.length)
                                            for (var d = "themes/" + d + "/widgets/HeaderController/Widget", q = null, a = 0; a < f.length; a++)
                                                if ((q = f[a]) && q.uri === d && q.position && 310 === q.position.paddingRight) q.position.paddingRight = 275
                                    }
                                }
                                return e
                            },
                            compatible: !0
                        }, {
                            version: "2.0beta",
                            description: "The version for Developer Edition beta 2.0.",
                            upgrader: function(e) {
                                e.keepAppState = !0;
                                return e
                            },
                            compatible: !0
                        }, {
                            version: "2.0",
                            description: "The version for Online 4.1.",
                            upgrader: function(e) {
                                return e
                            },
                            compatible: !0
                        },
                        {
                            version: "2.0.1",
                            description: "The version for Developer Edition 2.0.",
                            upgrader: function(e) {
                                return e
                            },
                            compatible: !0
                        }, {
                            version: "2.1",
                            description: "The version for Online 4.2.",
                            upgrader: function(e) {
                                return e
                            },
                            compatible: !0
                        }, {
                            version: "2.2",
                            description: "The version for Online 4.3.",
                            upgrader: function(e) {
                                return e
                            },
                            compatible: !0
                        }
                    ];
                    this.isCompatible = function(e, d) {
                        for (var f = this.getVersionIndex(e), q = this.getVersionIndex(d), f = f + 1; f <= q; f++)
                            if (!1 === this.versions[f].compatible) return !1;
                        return !0
                    }
                }
                f.prototype = new p;
                return f.prototype.constructor = f
            })
        },
        "jimu/shared/BaseVersionManager": function() {
            define(function() {
                return function() {
                    this.versions = [];
                    this.upgrade = function(p, e, f) {
                        e = this.getVersionIndex(e);
                        f = this.getVersionIndex(f);
                        if (e > f) throw Error("New version should higher than old version.");
                        for (e += 1; e <= f; e++) this.versions[e].upgrader && (p = this.versions[e].upgrader(p));
                        return p
                    };
                    this.getVersionIndex = function(p) {
                        p = this.fixVersion(p);
                        var e, f;
                        for (f = 0; f < this.versions.length; f++) this.versions[f].version === p && (e = f);
                        null === p && (e = -1);
                        void 0 === e && (e = this.versions.length - 1);
                        return e
                    };
                    this.fixVersion = function(p) {
                        return !p ? null : p
                    }
                }
            })
        },
        "jimu/ConfigLoader": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/_base/config dojo/cookie dojo/Deferred dojo/promise/all dojo/request/xhr ./utils ./WidgetManager ./shared/utils ./tokenUtils ./portalUtils ./portalUrlUtils ./AppStateManager esri/IdentityManager esri/config esri/urlUtils esri/arcgis/utils".split(" "), function(p, e, f, h, d, m, q,
                a, k, c, s, n, r, l, g, t, b, v, w, z) {
                var A = null,
                    x;
                x = p(null, {
                    urlParams: null,
                    appConfig: null,
                    rawAppConfig: null,
                    configFile: null,
                    _configLoaded: !1,
                    portalSelf: null,
                    constructor: function(b, a) {
                        this._removeHash(b);
                        this.urlParams = b || {};
                        this.widgetManager = s.getInstance();
                        e.mixin(this, a)
                    },
                    loadConfig: function() {
                        console.time("Load Config");
                        return this._tryLoadConfig().then(e.hitch(this, function(b) {
                            var a = this.checkConfig(b);
                            if (a) throw Error(a);
                            this.rawAppConfig = e.clone(b);
                            t.getInstance().setRawAppConfig(this.rawAppConfig);
                            b = this._upgradeAppConfig(b);
                            this._processAfterTryLoad(b);
                            this.appConfig = b;
                            if (this.urlParams.id) return this.loadWidgetsManifest(b).then(e.hitch(this, function() {
                                return this.loadAndUpgradeAllWidgetsConfig(b)
                            })).then(e.hitch(this, function() {
                                this._configLoaded = !0;
                                this._setDocumentTitle(b);
                                return this.getAppConfig()
                            }));
                            r.setPortalUrl(b.portalUrl);
                            z.arcgisUrl = g.getBaseItemUrl(b.portalUrl);
                            return this._proesssWebTierAndSignin(b).then(e.hitch(this, function() {
                                return this.urlParams.appid ? window.appInfo.isRunInPortal ?
                                    this._getAppConfigFromTemplateAppId(b.portalUrl, this.urlParams.appid).then(e.hitch(this, function(b) {
                                        this._tryUpdateAppConfigByLocationUrl(b);
                                        return this._processInPortalAppProtocol(b)
                                    })) : this._processNotInPortalAppProtocol(b).then(e.hitch(this, function(b) {
                                        return this._getAppDataAddTemplateDataFromTemplateAppId(b.portalUrl, this.urlParams.appid).then(e.hitch(this, function(a) {
                                            a.appData.appConfig && (b = a.appData.appConfig);
                                            b._appData = a.appData;
                                            b.templateConfig = a.templateData;
                                            b.isTemplateApp = !0;
                                            return b
                                        }))
                                    })) :
                                    this._processNotInPortalAppProtocol(b)
                            })).then(e.hitch(this, function(b) {
                                this._processAfterTryLoad(b);
                                this.appConfig = b;
                                return b.map.itemId ? b : (b.map["3D"] ? l.getDefaultWebScene(b.portalUrl) : l.getDefaultWebMap(b.portalUrl)).then(function(a) {
                                    b.map.itemId = a;
                                    return b
                                })
                            })).then(e.hitch(this, function(b) {
                                return this.loadWidgetsManifest(b)
                            })).then(e.hitch(this, function(b) {
                                return b._appData ? b._appData.values && b._appData.values.webmap ? l.getPortal(b.portalUrl).getItemById(b._appData.values.webmap).then(e.hitch(this,
                                    function(a) {
                                        return c.template.mergeTemplateAppConfigToAppConfig(b, b._appData, a)
                                    })) : c.template.mergeTemplateAppConfigToAppConfig(b, b._appData) : b
                            })).then(e.hitch(this, function(b) {
                                return this.loadAndUpgradeAllWidgetsConfig(b)
                            })).then(e.hitch(this, function(b) {
                                this._configLoaded = !0;
                                this._setDocumentTitle(b);
                                return this.getAppConfig()
                            }))
                        }), e.hitch(this, function(b) {
                            this.showError(b);
                            var a = new q;
                            a.reject(b);
                            return a
                        }))
                    },
                    _setDocumentTitle: function(b) {
                        !window.isBuilder && (b && b.title) && (document.title = c.stripHTML(b.title))
                    },
                    getAppConfig: function() {
                        var b = e.clone(this.appConfig);
                        b.getConfigElementById = function(b) {
                            return c.getConfigElementById(this, b)
                        };
                        b.getConfigElementsByName = function(b) {
                            return c.getConfigElementsByName(this, b)
                        };
                        b.visitElement = function(b) {
                            c.visitElement(this, b)
                        };
                        this._addAuthorizedCrossOriginDomains(this.portalSelf, b);
                        return b
                    },
                    _addAuthorizedCrossOriginDomains: function(b, a) {
                        b && b.authorizedCrossOriginDomains && r.addAuthorizedCrossOriginDomains(b.authorizedCrossOriginDomains);
                        a && a.authorizedCrossOriginDomains &&
                            r.addAuthorizedCrossOriginDomains(a.authorizedCrossOriginDomains)
                    },
                    checkConfig: function(b) {
                        return (b = this._getRepeatedId(b)) ? "repeated id:" + b : null
                    },
                    processProxy: function(b) {
                        v.defaults.io.alwaysUseProxy = b.httpProxy && b.httpProxy.useProxy && b.httpProxy.alwaysUseProxy;
                        v.defaults.io.proxyUrl = "";
                        v.defaults.io.proxyRules = [];
                        b.httpProxy && (b.httpProxy.useProxy && b.httpProxy.url) && (v.defaults.io.proxyUrl = b.httpProxy.url);
                        b.httpProxy && (b.httpProxy.useProxy && b.httpProxy.rules) && f.forEach(b.httpProxy.rules, function(b) {
                            w.addProxyRule(b)
                        })
                    },
                    addNeedValues: function(b) {
                        this._processNoUriWidgets(b);
                        this._addElementId(b)
                    },
                    showError: function(b) {
                        b && b.message && h.create("div", {
                            "class": "app-error",
                            innerHTML: b.message
                        }, document.body)
                    },
                    _tryLoadConfig: function() {
                        "stemapp" === this.urlParams.id && (this.urlParams.config = window.appInfo.appPath + "config.json", delete this.urlParams.id);
                        if (this.urlParams.config) return this.configFile = this.urlParams.config, k(this.configFile, {
                            handleAs: "json",
                            headers: {
                                "X-Requested-With": null
                            }
                        }).then(e.hitch(this, function(b) {
                            r.setPortalUrl(b.portalUrl);
                            b.portalUrl && (window.portalUrl = b.portalUrl);
                            return this.urlParams.token ? r.registerToken(this.urlParams.token).then(function() {
                                return b
                            }) : b
                        }));
                        if (this.urlParams.id) {
                            window.appInfo.isRunInPortal = !0;
                            var b = g.getPortalUrlFromLocation(),
                                a = new q;
                            r.setPortalUrl(b);
                            window.portalUrl = b;
                            z.arcgisUrl = g.getBaseItemUrl(b);
                            var c;
                            this.urlParams.token ? c = r.registerToken(this.urlParams.token) : (c = new q, c.resolve());
                            c.then(e.hitch(this, function() {
                                l.getPortal(b).loadSelfInfo().then(e.hitch(this, function(c) {
                                    this.portalSelf =
                                        c;
                                    c.allSSL && "http:" === window.location.protocol ? (console.log("redirect from http to https"), window.location.href = g.setHttpsProtocol(window.location.href), a.reject()) : this._processSignIn(b).then(e.hitch(this, function() {
                                        this._getAppConfigFromAppId(b, this.urlParams.id).then(e.hitch(this, function(b) {
                                            this._tryUpdateAppConfigByLocationUrl(b);
                                            return this._processInPortalAppProtocol(b)
                                        })).then(function(b) {
                                            a.resolve(b)
                                        }, function(b) {
                                            a.reject(b)
                                        })
                                    }))
                                }))
                            }), e.hitch(this, function(b) {
                                this.showError(b)
                            }));
                            return a
                        }
                        this.configFile =
                            "config.json";
                        return k(this.configFile, {
                            handleAs: "json"
                        }).then(e.hitch(this, function(b) {
                            r.setPortalUrl(b.portalUrl);
                            b.portalUrl && (window.portalUrl = b.portalUrl);
                            return this.urlParams.token ? r.registerToken(this.urlParams.token).then(function() {
                                return b
                            }) : b
                        }))
                    },
                    _upgradeAppConfig: function(b) {
                        var a = window.wabVersion,
                            c = b.wabVersion;
                        if (a === c) return b;
                        var g = this.versionManager.getVersionIndex(c),
                            l = this.versionManager.getVersionIndex(a);
                        if (g > l) throw Error("Bad version number, " + c);
                        b = this.versionManager.upgrade(b,
                            c, a);
                        b.wabVersion = a;
                        return b
                    },
                    loadAndUpgradeAllWidgetsConfig: function(b) {
                        var c = new q,
                            g = [];
                        n.visitElement(b, e.hitch(this, function(b) {
                            b.uri && (b = this.widgetManager.tryLoadWidgetConfig(b), g.push(b))
                        }));
                        a(g).then(e.hitch(this, function() {
                            c.resolve(b)
                        }), function(b) {
                            c.reject(b)
                        });
                        return c
                    },
                    _processAfterTryLoad: function(a) {
                        this._setPortalUrl(a);
                        this._tryUpdateAppConfigByLocationUrl(a);
                        this._processUrlParams(a);
                        this.addNeedValues(a);
                        this.processProxy(a);
                        b.tokenValidity = 10080;
                        return a
                    },
                    _tryUpdateAppConfigByLocationUrl: function(b) {
                        if (!(this.urlParams.config &&
                                -1 < this.urlParams.config.indexOf("arcgis.com/sharing/rest/content/items/"))) {
                            var a = g.getPortalUrlFromLocation(),
                                a = g.getStandardPortalUrl(a);
                            g.isOnline(a) && (a = g.updateUrlProtocolByOtherUrl(a, b.portalUrl), b.map.portalUrl && g.isSamePortalUrl(b.portalUrl, b.map.portalUrl) && (b.map.portalUrl = a), b.portalUrl = a, b.httpProxy && b.httpProxy.url && (b.httpProxy.url = g.getPortalProxyUrl(a)))
                        }
                    },
                    _processWidgetJsons: function(b) {
                        n.visitElement(b, function(b, a) {
                            a.isWidget && b.uri && c.widgetJson.processWidgetJson(b)
                        })
                    },
                    _processNoUriWidgets: function(b) {
                        var a =
                            0;
                        n.visitElement(b, function(b, c) {
                            c.isWidget && !b.uri && (a++, b.placeholderIndex = a)
                        })
                    },
                    _addElementId: function(b) {
                        var a = 0,
                            c;
                        n.visitElement(b, function(b) {
                            if (b.id) {
                                b.id = b.id.replace(/\//g, "_");
                                var g = b.id.lastIndexOf("_"); - 1 < g && (c = b.id.substr(g + 1), a = Math.max(a, c))
                            }
                        });
                        n.visitElement(b, function(b) {
                            b.id || (a++, b.id = b.uri ? b.uri.replace(/\//g, "_") + "_" + a : "_" + a)
                        })
                    },
                    _setPortalUrl: function(b) {
                        if (b.portalUrl) {
                            var a = g.getPortalUrlFromLocation(),
                                c = g.isOnline(a);
                            !g.isSamePortalUrl(b.portalUrl, a) && !c && (window.appInfo.isRunInPortal = !1)
                        } else window.isXT && m("wab_portalurl") ? b.portalUrl = m("wab_portalurl") : (window.appInfo.isRunInPortal = !0, b.portalUrl = g.getPortalUrlFromLocation())
                    },
                    _changePortalUrlProtocol: function(b, a) {
                        b.portalUrl = g.setProtocol(b.portalUrl, a);
                        b.map.portalUrl && (b.map.portalUrl = g.setProtocol(b.map.portalUrl, a));
                        b.httpProxy && (b.httpProxy.url = g.setProtocol(b.httpProxy.url, a), b.httpProxy && b.httpProxy.rules && f.forEach(b.httpProxy.rules, e.hitch(this, function(b) {
                            b.proxyUrl = g.setProtocol(b.proxyUrl, a)
                        })))
                    },
                    _processInPortalAppProtocol: function(b) {
                        var a =
                            new q,
                            c = l.getPortal(b.portalUrl),
                            k = e.hitch(this, function(c) {
                                if ("https:" === window.location.protocol) this._changePortalUrlProtocol(b, "https");
                                else {
                                    if (c) {
                                        console.log("redirect from http to https");
                                        window.location.href = g.setHttpsProtocol(window.location.href);
                                        a.reject();
                                        return
                                    }
                                    this._changePortalUrlProtocol(b, "http")
                                }
                                this._checkLocale();
                                a.resolve(b)
                            });
                        c.loadSelfInfo().then(e.hitch(this, function(a) {
                            "private" === a.access ? (a = 0 === b.portalUrl.toLowerCase().indexOf("https://"), k(a)) : k(a.allSSL)
                        }), e.hitch(this,
                            function(b) {
                                a.reject(b)
                            }));
                        return a
                    },
                    _processNotInPortalAppProtocol: function(b) {
                        var a = new q;
                        b.portalUrl ? l.getPortal(b.portalUrl).loadSelfInfo().then(e.hitch(this, function(c) {
                            var l = "https:" === window.location.protocol;
                            (c.allSSL || l) && this._changePortalUrlProtocol(b, "https");
                            0 === b.portalUrl.toLowerCase().indexOf("https://") && !l && !r.isInConfigOrPreviewWindow() ? (console.log("redirect from http to https"), window.location.href = g.setHttpsProtocol(window.location.href), a.reject()) : a.resolve(b)
                        }), e.hitch(this,
                            function(b) {
                                a.reject(b)
                            })) : a.resolve(b);
                        return a
                    },
                    _proesssWebTierAndSignin: function(b) {
                        var a = new q,
                            c = !1,
                            g = b.portalUrl;
                        this._processWebTier(b).then(e.hitch(this, function(b) {
                            c = b;
                            return l.getPortal(g).loadSelfInfo()
                        })).then(e.hitch(this, function(b) {
                            this.portalSelf = b;
                            return this._processSignIn(g, c)
                        })).then(e.hitch(this, function() {
                            a.resolve()
                        }), function(b) {
                            a.reject(b)
                        });
                        return a
                    },
                    _processWebTier: function(b) {
                        var a = new q,
                            c = b.portalUrl;
                        b.isWebTier ? (r.addAuthorizedCrossOriginDomains([c]), r.isWebTierPortal(c).then(e.hitch(this,
                            function() {
                                var l = r.getPortalCredential(c);
                                l && l.ssl && "http:" === window.location.protocol && !r.isInConfigOrPreviewWindow() ? (console.log("redirect from http to https"), window.location.href = g.setHttpsProtocol(window.location.href)) : a.resolve(b.isWebTier)
                            }), e.hitch(this, function(b) {
                            a.reject(b)
                        }))) : a.resolve(!1);
                        return a
                    },
                    _processSignIn: function(a, c) {
                        var k = new q,
                            n = l.getPortal(a),
                            d = g.getSharingUrl(a);
                        window.appInfo.isRunInPortal ? (d = b.checkSignInStatus(d), d.promise.always(e.hitch(this, function() {
                                k.resolve()
                            }))) :
                            (!r.isInBuilderWindow() && (!r.isInConfigOrPreviewWindow() && this.portalSelf.supportsOAuth && this.rawAppConfig && this.rawAppConfig.appId && !c) && r.registerOAuthInfo(a, this.rawAppConfig.appId), d = b.checkSignInStatus(d), d.promise.always(e.hitch(this, function() {
                                r.xtGetCredentialFromCookie(a);
                                n.loadSelfInfo().then(e.hitch(this, function(b) {
                                    this.portalSelf = b;
                                    this._checkLocale();
                                    k.resolve()
                                }))
                            })));
                        return k
                    },
                    _checkLocale: function() {
                        if (!r.isInConfigOrPreviewWindow()) {
                            var b = this.portalSelf.user && this.portalSelf.user.culture ||
                                d.locale,
                                b = b.toLowerCase();
                            !this.urlParams.locale && c.isLocaleChanged(d.locale, b) && (m("wab_app_locale", b), window.location.reload())
                        }
                    },
                    _getAppConfigFromTemplateAppId: function(b, c) {
                        var g = l.getPortal(b);
                        return this._getWabAppIdAndDataFromTemplateAppId(b, c).then(e.hitch(this, function(c) {
                            var l = c.appData;
                            return a([this._getAppConfigFromAppId(b, c.appId), g.getItemData(l.source)]).then(e.hitch(this, function(b) {
                                var a;
                                l.appConfig ? (a = l.appConfig, delete l.appConfig) : a = b[0];
                                a = this._upgradeAppConfig(a);
                                b = b[1];
                                a._appData =
                                    l;
                                a.templateConfig = b;
                                a.isTemplateApp = !0;
                                return a
                            }))
                        }))
                    },
                    _getAppDataAddTemplateDataFromTemplateAppId: function(b, a) {
                        var c = l.getPortal(b);
                        return c.getItemData(a).then(function(b) {
                            return c.getItemData(b.source).then(function(a) {
                                return {
                                    appData: b,
                                    templateData: a
                                }
                            })
                        })
                    },
                    _getWabAppIdAndDataFromTemplateAppId: function(b, a) {
                        var c = new q,
                            g = l.getPortal(b);
                        g.getItemData(a).then(e.hitch(this, function(b) {
                                g.getItemById(b.source).then(e.hitch(this, function(a) {
                                    a = w.urlToObject(a.url);
                                    c.resolve({
                                        appId: a.query.id,
                                        appData: b
                                    })
                                }))
                            }),
                            function(b) {
                                c.reject(b)
                            });
                        return c
                    },
                    _getAppConfigFromAppId: function(b, a) {
                        return l.getPortal(b).getItemData(a)
                    },
                    _removeHash: function(b) {
                        for (var a in b) b[a] && (b[a] = b[a].replace("#", ""))
                    },
                    loadWidgetsManifest: function(b) {
                        var g = [],
                            l = new q;
                        b._buildInfo && b._buildInfo.widgetManifestsMerged ? this._loadMergedWidgetManifests().then(e.hitch(this, function(k) {
                            n.visitElement(b, e.hitch(this, function(b) {
                                !b.widgets && b.uri && (k[b.uri] ? (this._addNeedValuesForManifest(k[b.uri], b.uri), c.widgetJson.addManifest2WidgetJson(b,
                                    k[b.uri])) : g.push(this.widgetManager.loadWidgetManifest(b)))
                            }));
                            a(g).then(function() {
                                l.resolve(b)
                            })
                        })) : (n.visitElement(b, e.hitch(this, function(b) {
                            !b.widgets && b.uri && g.push(this.widgetManager.loadWidgetManifest(b))
                        })), a(g).then(function() {
                            l.resolve(b)
                        }));
                        setTimeout(function() {
                            function a(b) {
                                function c(a) {
                                    b[a] && b[a].widgets && (b[a].widgets = b[a].widgets.filter(function(b) {
                                        b.uri && !b.manifest && console.error("Widget is removed because it is not loaded successfully.", b.uri);
                                        return b.manifest
                                    }));
                                    b[a] && b[a].groups &&
                                        b[a].groups.forEach(function(b) {
                                            b.widgets && (b.widgets = b.widgets.filter(function(b) {
                                                b.uri && !b.manifest && console.error("Widget is removed because it is not loaded successfully.", b.uri);
                                                return b.manifest
                                            }))
                                        })
                                }
                                c("widgetOnScreen");
                                c("widgetPool")
                            }
                            l.isResolved() || (a(b), l.resolve(b))
                        }, 6E4);
                        return l
                    },
                    _addNeedValuesForManifest: function(b, a) {
                        e.mixin(b, c.getUriInfo(a));
                        c.manifest.addManifestProperies(b);
                        c.manifest.processManifestLabel(b, d.locale)
                    },
                    _loadMergedWidgetManifests: function() {
                        return k(window.appInfo.appPath +
                            "widgets/widgets-manifest.json", {
                                handleAs: "json"
                            })
                    },
                    _getRepeatedId: function(b) {
                        var a = [],
                            c;
                        n.visitElement(b, function(b) {
                            if (0 <= a.indexOf(b.id)) return c = b.id, !0;
                            a.push(b.id)
                        });
                        return c
                    },
                    _processUrlParams: function(b) {
                        var a = this.urlParams.itemid || this.urlParams.webmap;
                        a && b.map.itemId !== a && (b.map.mapOptions && c.deleteMapOptions(b.map.mapOptions), b.map.itemId = a);
                        this.urlParams.mode && (b.mode = this.urlParams.mode);
                        b.map.mapOptions || (b.map.mapOptions = {});
                        this.urlParams.scale && (b.map.mapOptions.scale = this.urlParams.scale);
                        if (this.urlParams.level || this.urlParams.zoom) b.map.mapOptions.zoom = this.urlParams.level || this.urlParams.zoom
                    }
                });
                x.getInstance = function(b, a) {
                    null === A ? A = new x(b, a) : (A.urlParams = b, A.options = a);
                    return A
                };
                return x
            })
        },
        "jimu/portalUtils": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/config dojo/Deferred dojo/topic dojo/json esri/request ./utils ./portalUrlUtils ./tokenUtils".split(" "), function(p, e, f, h, d, m, q, a, k, c, s) {
                var n = p([], {
                        declaredClass: "jimu.Portal",
                        selfUrl: null,
                        user: null,
                        selfInfo: null,
                        portalUrl: null,
                        credential: null,
                        constructor: function(b) {
                            this.portalUrl = c.getStandardPortalUrl(b);
                            this.selfUrl = c.getPortalSelfInfoUrl(b)
                        },
                        loadSelfInfo: function() {
                            var b = new d,
                                c = {
                                    url: this.selfUrl,
                                    content: {
                                        f: "json"
                                    },
                                    handleAs: "json",
                                    callbackParamName: "callback",
                                    preventCache: !0
                                };
                            this.isValidCredential() && (c.content.token = this.credential.token);
                            a(c).then(e.hitch(this, function(a) {
                                var c = a.user;
                                delete a.user;
                                e.mixin(this, a);
                                a.user = c;
                                b.resolve(a)
                            }), e.hitch(this, function(a) {
                                console.error(a);
                                b.reject(a)
                            }));
                            return b
                        },
                        _checkCredential: function() {
                            var b = s.isValidCredential(this.credential);
                            b || this.clearCredentialAndUser();
                            return b
                        },
                        isValidCredential: function() {
                            this.updateCredential();
                            return this._checkCredential()
                        },
                        updateCredential: function() {
                            this._checkCredential() || (this.credential = s.getPortalCredential(this.portalUrl))
                        },
                        signIn: function() {
                            var b = new d;
                            this.updateCredential();
                            this.isValidCredential() ? setTimeout(e.hitch(this, function() {
                                b.resolve(this.credential)
                            }), 0) : b = s.signInPortal(this.portalUrl);
                            return b
                        },
                        haveSignIn: function() {
                            return s.userHaveSignInPortal(this.portalUrl)
                        },
                        clearCredentialAndUser: function() {
                            this.user = this.credential = null
                        },
                        getUser: function() {
                            this.updateCredential();
                            var b = new d;
                            this.user && "jimu.PortalUser" === this.user.declaredClass ? setTimeout(e.hitch(this, function() {
                                this.user.updateCredential();
                                b.resolve(this.user)
                            }), 0) : this.isValidCredential() ? this.credential.userId ? this._getUser(this.credential.userId).then(e.hitch(this, function(a) {
                                this.user = a;
                                b.resolve(this.user)
                            }), e.hitch(this,
                                function(a) {
                                    console.error(a);
                                    b.reject(a)
                                })) : s.getUserIdByToken(this.credential.token, this.portalUrl).then(e.hitch(this, function(a) {
                                this.credential.userId = a;
                                this._getUser(this.credential.userId).then(e.hitch(this, function(a) {
                                    this.user = a;
                                    b.resolve(this.user)
                                }), e.hitch(this, function(a) {
                                    console.error(a);
                                    b.reject(a)
                                }))
                            }), e.hitch(this, function(a) {
                                console.error(a);
                                b.reject(a)
                            })) : setTimeout(e.hitch(this, function() {
                                b.reject("credential is null.")
                            }), 0);
                            return b
                        },
                        queryItems: function(b) {
                            this.updateCredential();
                            var l = new d,
                                k = c.getBaseSearchUrl(this.portalUrl),
                                n = {
                                    f: "json"
                                };
                            b && (n = e.mixin(n, b));
                            this.isValidCredential() && (n.token = this.credential.token);
                            !n.sortField && !n.sortOrder && (n.sortField = "title", n.sortOrder = "asc");
                            a({
                                url: k,
                                handleAs: "json",
                                content: n,
                                callbackParamName: "callback"
                            }).then(e.hitch(this, function(b) {
                                b.results = f.map(b.results, e.hitch(this, function(b) {
                                    b.portalUrl = this.portalUrl;
                                    b.credential = this.credential;
                                    b.portal = this;
                                    return new g(b)
                                }));
                                l.resolve(b)
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                l.reject(b)
                            }));
                            return l
                        },
                        getItemData: function(b) {
                            this.updateCredential();
                            b = {
                                url: c.getItemDataUrl(this.portalUrl, b),
                                handleAs: "json",
                                content: {
                                    f: "json"
                                },
                                callbackParamName: "callback"
                            };
                            this.isValidCredential() && (b.content.token = this.credential.token);
                            return a(b)
                        },
                        getItemById: function(b) {
                            var l = new d;
                            this.updateCredential();
                            b = {
                                url: c.getItemUrl(this.portalUrl, b),
                                handleAs: "json",
                                content: {
                                    f: "json"
                                },
                                callbackParamName: "callback"
                            };
                            this.isValidCredential() && (b.content.token = this.credential.token);
                            a(b).then(e.hitch(this,
                                function(b) {
                                    b.portalUrl = this.portalUrl;
                                    b.credential = this.credential;
                                    b.portal = this;
                                    b = new g(b);
                                    l.resolve(b)
                                }), e.hitch(this, function(b) {
                                console.error(b);
                                l.reject(b)
                            }));
                            return l
                        },
                        getAppById: function(b) {
                            var g = new d;
                            this.updateCredential();
                            this.isValidCredential() ? (b = c.getAppIdUrl(this.portalUrl, b), g = a({
                                url: b,
                                handleAs: "json",
                                content: {
                                    f: "json",
                                    token: this.credential.token
                                }
                            })) : setTimeout(e.hitch(this, function() {
                                g.reject("token is null.")
                            }), 0);
                            return g
                        },
                        queryGroups: function(b) {
                            this.updateCredential();
                            var g =
                                new d,
                                k = c.getBaseGroupUrl(this.portalUrl),
                                n = {
                                    f: "json"
                                };
                            b && (n = e.mixin(n, b));
                            this.isValidCredential() && (n.token = this.credential.token);
                            a({
                                url: k,
                                handleAs: "json",
                                content: n,
                                callbackParamName: "callback"
                            }).then(e.hitch(this, function(b) {
                                b.results = f.map(b.results, e.hitch(this, function(b) {
                                    b.portalUrl = this.portalUrl;
                                    b.credential = this.credential;
                                    b.portal = this;
                                    return new l(b)
                                }));
                                g.resolve(b)
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                g.reject(b)
                            }));
                            return g
                        },
                        registerApp: function(b, g, l) {
                            var k = new d;
                            this.updateCredential();
                            if (this.isValidCredential()) var n = this.credential && this.credential.token,
                                t = c.getOAuth2Url(this.portalUrl),
                                k = a({
                                    url: t + "/registerApp",
                                    content: {
                                        itemId: b,
                                        appType: g,
                                        redirect_uris: q.stringify(l),
                                        token: n,
                                        f: "json"
                                    },
                                    handleAs: "json"
                                }, {
                                    usePost: !0
                                });
                            else setTimeout(e.hitch(this, function() {
                                k.reject("token is null.")
                            }), 0);
                            return k
                        },
                        createAndRegisterApp: function(b) {
                            var a = new d;
                            this.updateCredential();
                            this.isValidCredential() ? this.getUser().then(e.hitch(this, function(c) {
                                c.addItem({
                                    title: "Web AppBuilder for ArcGIS",
                                    type: "Web Mapping Application",
                                    text: "",
                                    snippet: "",
                                    tags: "Registered App for OAuth"
                                }, "").then(e.hitch(this, function(c) {
                                    c.success ? this.registerApp(c.id, "browser", b).then(e.hitch(this, function(b) {
                                        a.resolve(b)
                                    }), e.hitch(this, function(b) {
                                        console.error(b);
                                        a.reject(b)
                                    })) : a.reject("create app failed")
                                }), e.hitch(this, function(b) {
                                    console.error(b);
                                    a.reject(b)
                                }))
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                a.reject(b)
                            })) : setTimeout(e.hitch(this, function() {
                                a.reject("token is null.")
                            }), 0);
                            return a
                        },
                        _getUser: function(b) {
                            this.updateCredential();
                            var g = new d;
                            b = {
                                url: c.getUserUrl(this.portalUrl, b),
                                content: {
                                    f: "json"
                                },
                                handleAs: "json",
                                callbackParamName: "callback"
                            };
                            this.isValidCredential() && (b.content.token = this.credential && this.credential.token);
                            a(b).then(e.hitch(this, function(b) {
                                b.portalUrl = this.portalUrl;
                                b.credential = this.credential;
                                b.portal = this;
                                this.user = new r(b);
                                g.resolve(this.user)
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                g.reject(b)
                            }));
                            return g
                        }
                    }),
                    r = p([], {
                        declaredClass: "jimu.PortalUser",
                        portalUrl: null,
                        credential: null,
                        portal: null,
                        constructor: function(b) {
                            b &&
                                e.mixin(this, b)
                        },
                        _checkCredential: function() {
                            var b = s.isValidCredential(this.credential);
                            b || (this.credential = null);
                            return b
                        },
                        isValidCredential: function() {
                            this.updateCredential();
                            return this._checkCredential()
                        },
                        updateCredential: function() {
                            this._checkCredential() || (this.portal.updateCredential(), this.credential = this.portal.credential)
                        },
                        getGroups: function() {
                            var b = [];
                            this.groups && (b = f.map(this.groups, e.hitch(this, function(b) {
                                b.portalUrl = this.portalUrl;
                                b.credential = this.credential;
                                b.portal = this.portal;
                                return new l(b)
                            })));
                            return b
                        },
                        getItemsByKeywords: function(b, a) {
                            return this.portal.queryItems({
                                start: a || 1,
                                num: 100,
                                q: "owner:" + this.username + ' AND typekeywords:"' + b + '"'
                            })
                        },
                        getContent: function() {
                            this.updateCredential();
                            var b = {
                                url: c.getUserContentUrl(this.portalUrl, this.username),
                                handleAs: "json",
                                content: {
                                    f: "json"
                                },
                                callbackParamName: "callback"
                            };
                            this.isValidCredential && (b.content.token = this.credential.token);
                            return a(b)
                        },
                        getTags: function() {
                            this.updateCredential();
                            var b = {
                                url: c.getUserTagsUrl(this.portalUrl,
                                    this.username),
                                handleAs: "json",
                                content: {
                                    f: "json"
                                },
                                callbackParamName: "callback"
                            };
                            this.isValidCredential() && (b.content.token = this.credential.token);
                            return a(b)
                        },
                        addItem: function(b, g) {
                            this.updateCredential();
                            var l = new d;
                            if (this.isValidCredential()) {
                                var k = {
                                    f: "json",
                                    token: this.credential.token
                                };
                                b && (k = e.mixin(k, b));
                                a({
                                    url: c.getAddItemUrl(this.portalUrl, this.username, g),
                                    handleAs: "json",
                                    callbackParamName: "callback",
                                    content: k
                                }, {
                                    usePost: !0
                                }).then(e.hitch(this, function(b) {
                                    l.resolve(b)
                                }), e.hitch(this, function(b) {
                                    console.error(b);
                                    l.reject(b)
                                }))
                            } else setTimeout(e.hitch(this, function() {
                                l.reject("token is null.")
                            }), 0);
                            return l
                        },
                        deleteItem: function(b) {
                            this.updateCredential();
                            var g = new d;
                            this.isValidCredential() ? (b = c.getDeleteItemUrl(this.portalUrl, this.username, b), g = a({
                                url: b,
                                content: {
                                    token: this.credential.token,
                                    f: "json"
                                },
                                handleAs: "json"
                            }, {
                                usePost: !0
                            })) : setTimeout(e.hitch(this, function() {
                                g.reject("token is null.")
                            }), 0);
                            return g
                        },
                        getItemById: function(b, l) {
                            this.updateCredential();
                            var k = new d,
                                n = {
                                    url: c.getUserItemsUrl(this.portalUrl,
                                        this.username, l) + "/" + b,
                                    handleAs: "json",
                                    content: {
                                        f: "json"
                                    },
                                    callbackParamName: "callback"
                                };
                            this.isValidCredential() && (n.content.token = this.credential.token);
                            a(n).then(e.hitch(this, function(b) {
                                b.portalUrl = this.portalUrl;
                                b.credential = this.credential;
                                b.portal = this;
                                b = new g(b);
                                k.resolve(b)
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                k.reject(b)
                            }));
                            return k
                        },
                        shareItem: function(b, g, l) {
                            this.updateCredential();
                            var k = new d;
                            this.isValidCredential() ? (g = {
                                url: c.shareItemUrl(this.portalUrl, this.username, g, l),
                                handleAs: "json",
                                callbackParamName: "callback",
                                content: {
                                    f: "json",
                                    token: this.credential.token
                                }
                            }, b && (g.content = e.mixin(g.content, b)), a(g, {
                                usePost: !0
                            }).then(e.hitch(this, function(b) {
                                k.resolve(b)
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                k.reject(b)
                            }))) : setTimeout(e.hitch(this, function() {
                                k.reject("token is null.")
                            }), 0);
                            return k
                        },
                        updateItem: function(b, g) {
                            this.updateCredential();
                            var l = new d;
                            this.isValidCredential() ? this.portal.getItemById(b).then(e.hitch(this, function(k) {
                                var n = {
                                    f: "json",
                                    token: this.credential.token
                                };
                                g &&
                                    (n = e.mixin(n, g));
                                a({
                                    url: c.getUpdateItemUrl(this.portalUrl, k.owner, b, k.ownerFolder),
                                    handleAs: "json",
                                    callbackParamName: "callback",
                                    timeout: 1E5,
                                    content: n
                                }, {
                                    usePost: !0
                                }).then(e.hitch(this, function(b) {
                                    l.resolve(b)
                                }), e.hitch(this, function(b) {
                                    console.error(b);
                                    l.reject(b)
                                }))
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                l.reject(b)
                            })) : setTimeout(e.hitch(this, function() {
                                l.reject("token is null.")
                            }), 0);
                            return l
                        },
                        isAdminRole: function() {
                            return "org_admin" === this.role || "account_admin" === this.role
                        },
                        isPublisherRole: function() {
                            return "org_publisher" ===
                                this.role || "account_publisher" === this.role
                        },
                        isUserRole: function() {
                            return "org_user" === this.role || "account_user" === this.role
                        }
                    }),
                    l = p([], {
                        declaredClass: "jimu.PortalGroup",
                        portalUrl: null,
                        credential: null,
                        portal: null,
                        constructor: function(b) {
                            b && e.mixin(this, b)
                        },
                        _checkCredential: function() {
                            var b = s.isValidCredential(this.credential);
                            b || (this.credential = null);
                            return b
                        },
                        isValidCredential: function() {
                            this.updateCredential();
                            return this._checkCredential()
                        },
                        updateCredential: function() {
                            this._checkCredential() || (this.portal.updateCredential(),
                                this.credential = this.portal.credential)
                        },
                        queryItems: function(b) {
                            b.q = "group:" + this.id + " AND " + b.q;
                            return this.portal.queryItems(b)
                        }
                    }),
                    g = p([], {
                        declaredClass: "jimu.PortalItem",
                        itemUrl: null,
                        detailsPageUrl: null,
                        ownerPageUrl: null,
                        portalUrl: null,
                        credential: null,
                        portal: null,
                        token: null,
                        constructor: function(b) {
                            b && e.mixin(this, b);
                            this.itemUrl = c.getItemUrl(this.portalUrl, this.id);
                            !this.thumbnailUrl && (this.thumbnail && this.itemUrl) && (this.thumbnailUrl = this.itemUrl + "/info/" + this.thumbnail);
                            this.token = this.credential &&
                                this.credential.token;
                            this.thumbnailUrl && this.token && (this.thumbnailUrl += "?token\x3d" + this.token);
                            this.portalUrl && this.id && (this.detailsPageUrl = c.getItemDetailsPageUrl(this.portalUrl, this.id));
                            this.portalUrl && this.owner && (this.ownerPageUrl = c.getUserProfilePageUrl(this.portalUrl, this.owner))
                        },
                        _checkCredential: function() {
                            var b = s.isValidCredential(this.credential);
                            b || (this.credential = null);
                            return b
                        },
                        isValidCredential: function() {
                            this.updateCredential();
                            return this._checkCredential()
                        },
                        updateCredential: function() {
                            this._checkCredential() ||
                                (this.portal.updateCredential(), this.credential = this.portal.credential)
                        },
                        getItemData: function() {
                            return this.portal.getItemData(this.id)
                        },
                        getItemGroups: function() {
                            this.updateCredential();
                            var b = {
                                url: c.getItemGroupsUrl(this.portalUrl, this.id),
                                handleAs: "json",
                                content: {
                                    f: "json"
                                },
                                callbackParamName: "callback"
                            };
                            this.isValidCredential() && (b.content.token = this.credential.token);
                            return a(b)
                        }
                    }),
                    t = {
                        portals: [],
                        webMapQueryStr: " " + k.getItemQueryStringByTypes(["Web Map"]) + " ",
                        webSceneQueryStr: " " + k.getItemQueryStringByTypes(["Web Scene"]) +
                            " ",
                        _findPortal: function(b) {
                            for (var a = 0; a < this.portals.length; a++) {
                                var g = this.portals[a];
                                if (c.isSamePortalUrl(b, g.portalUrl)) return g.updateCredential(), g
                            }
                            return null
                        },
                        getPortal: function(b) {
                            if (!b || !("string" === typeof b && e.trim(b))) return null;
                            b = c.getStandardPortalUrl(b);
                            var a = this._findPortal(b);
                            a || (a = new n(b), a.credential = s.getPortalCredential(a.portalUrl), a.updateCredential(), this.portals.push(a));
                            return a
                        },
                        getPortalSelfInfo: function(b) {
                            return this.getPortal(b).loadSelfInfo()
                        },
                        getBasemapGalleryGroup: function(b) {
                            return this._getPortalSelfGroup(b,
                                "basemapGalleryGroupQuery")
                        },
                        getTemplatesGroup: function(b) {
                            return this._getPortalSelfGroup(b, "templatesGroupQuery")
                        },
                        getUnits: function(b) {
                            var a = "english",
                                c = "",
                                g = new d;
                            this.getPortal(b).getUser().then(e.hitch(this, function(b) {
                                b && b.units ? a = b.units : (c = h.locale, a = c.startWith("en") ? "english" : "metric");
                                g.resolve(a)
                            }), e.hitch(this, function(l) {
                                console.warn(l);
                                this.getPortalSelfInfo(b).then(e.hitch(this, function(b) {
                                    var a = null;
                                    b && b.units ? a = b.units : (c = b && b.culture || h.locale, a = c.startWith("en") ? "english" : "metric");
                                    g.resolve(a)
                                }), e.hitch(this, function(b) {
                                    console.warn(b);
                                    c = h.locale;
                                    a = c.startWith("en") ? "english" : "metric";
                                    g.resolve(a)
                                }))
                            }));
                            return g.promise
                        },
                        _getPortalSelfGroup: function(b, a) {
                            var c = new d,
                                g = this.getPortal(b);
                            g || setTimeout(e.hitch(this, function() {
                                c.reject()
                            }), 0);
                            this.getPortalSelfInfo(b).then(e.hitch(this, function(b) {
                                g.queryGroups({
                                    f: "json",
                                    q: b[a]
                                }).then(e.hitch(this, function(b) {
                                    0 < b.results.length ? (b = b.results[0], b.portalUrl = g.portalUrl, b.credential = g.credential, b.portal = g, b = new l(b), c.resolve(b)) :
                                        c.reject("Can't find portal self group.")
                                }), e.hitch(this, function(b) {
                                    console.error(b);
                                    c.reject(b)
                                }))
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                c.reject(b)
                            }));
                            return c
                        },
                        getWebMapsFromBasemapGalleryGroup: function(b) {
                            var a = new d;
                            this.getBasemapGalleryGroup(b).then(e.hitch(this, function(b) {
                                b ? b.queryItems({
                                    start: 1,
                                    num: 100,
                                    f: "json",
                                    q: this.webMapQueryStr
                                }).then(e.hitch(this, function(b) {
                                    a.resolve(b)
                                }), e.hitch(this, function(b) {
                                    console.error(b);
                                    a.reject(b)
                                })) : a.reject()
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                a.reject(b)
                            }));
                            return a
                        },
                        getDefaultWebScene: function(b) {
                            var a = c.getStandardPortalUrl(b);
                            return this._searchWABDefaultWebScene(a).then(e.hitch(this, function(b) {
                                return b ? b : this._createWABDefaultWebScene(a).then(e.hitch(this, function(b) {
                                    return this.getPortal(a).getUser().then(e.hitch(this, function(a) {
                                        var c = !1;
                                        a && (a.privileges && 0 < a.privileges.length) && (c = f.some(a.privileges, function(b) {
                                            return 0 <= b.indexOf("shareToPublic")
                                        }));
                                        return c ? a.shareItem({
                                            everyone: !0
                                        }, b).then(e.hitch(this, function() {
                                                return b
                                            }),
                                            e.hitch(this, function() {
                                                return b
                                            })) : b
                                    }), e.hitch(this, function(a) {
                                        console.error(a);
                                        return b
                                    }))
                                }))
                            }))
                        },
                        _searchWABDefaultWebScene: function(b) {
                            var a = new d;
                            b = c.getStandardPortalUrl(b);
                            this.getPortal(b).queryItems({
                                q: 'typekeywords:"WABDefaultWebScene" access:public ' + this.webSceneQueryStr
                            }).then(e.hitch(this, function(b) {
                                b && b.results && 0 < b.results.length ? a.resolve(b.results[0].id) : a.resolve(null)
                            }), e.hitch(this, function(b) {
                                console.error("_searchWABDefaultWebScene error:", b);
                                a.reject(b)
                            }));
                            return a
                        },
                        _createWABDefaultWebScene: function(b) {
                            var a =
                                new d;
                            b = c.getStandardPortalUrl(b);
                            this.getPortal(b).getUser().then(e.hitch(this, function(b) {
                                var c = {
                                    title: "Default Web Scene",
                                    type: "Web Scene",
                                    typeKeywords: "WABDefaultWebScene",
                                    tags: "default",
                                    text: q.stringify({
                                        operationalLayers: [],
                                        baseMap: {
                                            id: "151b431fe65-basemap-0",
                                            title: "Topographic",
                                            baseMapLayers: [{
                                                id: "defaultBasemap",
                                                url: "http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer",
                                                layerType: "ArcGISTiledMapServiceLayer"
                                            }],
                                            elevationLayers: [{
                                                id: "globalElevation",
                                                url: "http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer",
                                                layerType: "ArcGISTiledElevationServiceLayer"
                                            }]
                                        },
                                        version: "1.3",
                                        authoringApp: "WebSceneViewer",
                                        authoringAppVersion: "3.10.0.0",
                                        spatialReference: {
                                            wkid: 102100,
                                            latestWkid: 3857
                                        },
                                        viewingMode: "global",
                                        initialState: {
                                            viewpoint: {
                                                scale: 4.5188197847224146E7,
                                                rotation: 0,
                                                targetGeometry: {
                                                    x: 144770.99872895706,
                                                    y: 3232837.215000455,
                                                    spatialReference: {
                                                        wkid: 102100,
                                                        latestWkid: 3857
                                                    },
                                                    z: -127.7412482528016
                                                },
                                                camera: {
                                                    position: {
                                                        x: 144770.99767624016,
                                                        y: 3182557.105058348,
                                                        spatialReference: {
                                                            wkid: 102100,
                                                            latestWkid: 3857
                                                        },
                                                        z: 2.551254800000001E7
                                                    },
                                                    heading: 0,
                                                    tilt: 0.0999986601088944
                                                }
                                            },
                                            environment: {
                                                lighting: {
                                                    datetime: 1426420488E3,
                                                    displayUTCOffset: 0
                                                }
                                            }
                                        },
                                        presentation: {
                                            slides: []
                                        }
                                    }),
                                    snippet: ""
                                };
                                b.addItem(c, "").then(e.hitch(this, function(b) {
                                    b.success ? a.resolve(b.id) : (console.error("Can't create default web scene:", b), a.reject())
                                }))
                            }), e.hitch(this, function(b) {
                                console.error("Can't create default web scene");
                                a.reject(b)
                            }));
                            return a
                        },
                        getDefaultWebMap: function(b) {
                            var a = new d;
                            this.getPortalSelfInfo(b).then(e.hitch(this, function(c) {
                                var g = c.defaultBasemap &&
                                    c.defaultBasemap.id;
                                g ? a.resolve(g) : this._getDefaultWebMapByBasemapGallery(b, c).then(e.hitch(this, function(c) {
                                    c ? a.resolve(c) : this._getMostNumViewsWebMap(b).then(e.hitch(this, function(b) {
                                        b ? a.resolve(b) : a.reject()
                                    }), e.hitch(this, function(b) {
                                        console.error(b);
                                        a.reject(b)
                                    }))
                                }), e.hitch(this, function(b) {
                                    console.error(b);
                                    a.reject(b)
                                }))
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                a.reject(b)
                            }));
                            return a
                        },
                        _getDefaultWebMapByBasemapGallery: function(b, a) {
                            var c = new d,
                                g = this.getPortal(b),
                                l = a.defaultBasemap && a.defaultBasemap.title;
                            g.queryGroups({
                                f: "json",
                                q: a.basemapGalleryGroupQuery
                            }).then(e.hitch(this, function(b) {
                                b = b.results;
                                0 < b.length ? g.queryItems({
                                    start: 1,
                                    num: 1,
                                    f: "json",
                                    q: this.webMapQueryStr + " AND group:" + b[0].id + " AND title:" + l
                                }).then(e.hitch(this, function(b) {
                                    b = b.results;
                                    b = f.filter(b, e.hitch(this, function(b) {
                                        return b.type && "web map" === b.type.toLowerCase()
                                    }));
                                    0 < b.length ? c.resolve(b[0].id) : (console.log("Can't find web map under basemapGalleryGroupQuery."), g.queryItems({
                                        start: 1,
                                        num: 1,
                                        f: "json",
                                        q: this.webMapQueryStr + " AND title:" +
                                            l
                                    }).then(e.hitch(this, function(b) {
                                        b = b.results;
                                        b = f.filter(b, e.hitch(this, function(b) {
                                            return b.type && "web map" === b.type.toLowerCase()
                                        }));
                                        if (0 < b.length) {
                                            var a = b[0];
                                            g.getItemData(a.id).then(e.hitch(this, function(b) {
                                                b && (b.operationalLayers || b.baseMap || b.version) ? c.resolve(a.id) : c.resolve(null)
                                            }), e.hitch(this, function() {
                                                c.resolve(null)
                                            }))
                                        } else console.log("Can't find web map by defaultBasemap.title."), c.resolve(null)
                                    }), e.hitch(this, function(b) {
                                        console.error(b);
                                        c.reject(b)
                                    })))
                                }), e.hitch(this, function(b) {
                                    console.error(b);
                                    c.reject(b)
                                })) : (console.log("Can't find group by basemapGalleryGroupQuery."), c.resolve(null))
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                c.reject(b)
                            }));
                            return c
                        },
                        _getMostNumViewsWebMap: function(b) {
                            var a = new d;
                            this.getPortal(b).queryItems({
                                start: 1,
                                num: 1,
                                f: "json",
                                q: this.webMapQueryStr + " AND access:public AND owner:esri_en",
                                sortField: "numViews",
                                sortOrder: "desc"
                            }).then(e.hitch(this, function(b) {
                                b = b.results;
                                b = f.filter(b, e.hitch(this, function(b) {
                                    return b.type && "web map" === b.type.toLowerCase()
                                }));
                                0 < b.length ?
                                    a.resolve(b[0].id) : a.reject("Can't find most-num-views web map.")
                            }), e.hitch(this, function(b) {
                                console.error(b);
                                a.reject(b)
                            }));
                            return a
                        },
                        comparePortalVersion: function(b, a) {
                            var c = b.split("."),
                                g = parseInt(c[0], 10),
                                c = 1 < c.length ? parseInt(c[1], 10) : 0,
                                l = a.split("."),
                                k = parseInt(l[0], 10),
                                l = 1 < l.length ? parseInt(l[1], 10) : 0;
                            return g > k ? 1 : g < k ? -1 : c > l ? 1 : c < l ? -1 : 0
                        }
                    };
                m.subscribe("userSignOut", function(b) {
                    (b = t._findPortal(b)) && b.clearCredentialAndUser()
                });
                return t
            })
        },
        "jimu/AppStateManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/Deferred dojo/json esri/geometry/Extent esri/SpatialReference libs/storejs/store libs/md5/md5 jimu/tokenUtils".split(" "),
                function(p, e, f, h, d, m, q, a, k) {
                    var c = null,
                        s = p(null, {
                            rawAppConfig: null,
                            mapMd5: null,
                            appStateKey: null,
                            setRawAppConfig: function(a) {
                                this.rawAppConfig = a
                            },
                            _getAppStateMd5: function() {
                                if ("string" !== typeof this.mapMd5) {
                                    var c = h.stringify(this.rawAppConfig.map);
                                    this.mapMd5 = a(c)
                                }
                                return this.mapMd5
                            },
                            _getAppStateKey: function() {
                                return this.appStateKey ? this.appStateKey : this.appStateKey = "wab_appstate_" + this.urlParams.id || this.urlParams.appid || window.path
                            },
                            getWabAppState: function() {
                                var a = new f,
                                    c = {};
                                if (k.isInConfigOrPreviewWindow() ||
                                    !this.rawAppConfig || !this.rawAppConfig.map) return a.resolve(c), a;
                                var l = this._getAppStateKey(),
                                    g = q.get(l);
                                g && g.appStateMd5 === this._getAppStateMd5() ? (l = g.map && g.map.extent, g = g.map && g.map.layers, l && (c.extent = new d(l.xmin, l.ymin, l.xmax, l.ymax, new m(l.spatialReference))), g && (c.layers = g)) : q.remove(l);
                                a.resolve(c);
                                return a
                            },
                            saveWabAppState: function(a, c) {
                                if (a && !k.isInConfigOrPreviewWindow()) {
                                    var l = this._getAppStateKey(),
                                        g = {
                                            extent: {
                                                xmin: a.extent.xmin,
                                                xmax: a.extent.xmax,
                                                ymin: a.extent.ymin,
                                                ymax: a.extent.ymax,
                                                spatialReference: {
                                                    wkid: a.extent.spatialReference.wkid,
                                                    wkt: a.extent.spatialReference.wkt
                                                }
                                            },
                                            layers: {}
                                        };
                                    c && c.traversal && c.traversal(e.hitch(this, function(a) {
                                        g.layers[a.id] = {
                                            visible: a.isVisible()
                                        }
                                    }));
                                    q.set(l, {
                                        map: g,
                                        appStateMd5: this._getAppStateMd5()
                                    })
                                }
                            }
                        });
                    s.getInstance = function(a) {
                        null === c && (c = new s);
                        c.urlParams = a;
                        return c
                    };
                    return s
                })
        },
        "jimu/dijit/LoadingIndicator": function() {
            define(["dojo/_base/declare", "dijit/_WidgetBase", "dojo/dom-style", "dojo/dom-construct"], function(p, e, f, h) {
                return p(e, {
                    baseClass: "jimu-loading-indicator",
                    declaredClass: "jimu.dijit.LoadingIndicator",
                    hidden: !1,
                    postCreate: function() {
                        this.inherited(arguments);
                        (this.hidden = !0 === this.hidden) && f.set(this.domNode, {
                            display: "none"
                        });
                        f.set(this.domNode, {
                            width: "100%",
                            height: "100%"
                        });
                        var d = '\x3cdiv class\x3d"loading-section"\x3e\x3cimg class\x3d"jimu-loading" src\x3d"' + require.toUrl("jimu") + '/images/loading2.gif"\x3e\x3c/div\x3e';
                        h.place(d, this.domNode)
                    },
                    show: function() {
                        this.domNode && f.set(this.domNode, "display", "block")
                    },
                    hide: function() {
                        this.domNode && f.set(this.domNode,
                            "display", "none")
                    }
                })
            })
        },
        "jimu/LayoutManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dijit/_WidgetBase dojo/topic dojo/on dojo/query dojo/dom-construct dojo/dom-geometry dojo/Deferred dojo/promise/all dojo/when require ./WidgetManager ./PanelManager ./MapManager ./utils ./OnScreenWidgetIcon ./WidgetPlaceholder ./dijit/LoadingShelter".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A) {
                var x = null,
                    C;
                C = p([d], {
                    constructor: function(b, a) {
                        this.widgetManager =
                            g.getInstance();
                        this.panelManager = t.getInstance();
                        this.own(m.subscribe("appConfigLoaded", e.hitch(this, this.onAppConfigLoaded)));
                        this.own(m.subscribe("appConfigChanged", e.hitch(this, this.onAppConfigChanged)));
                        this.own(m.subscribe("mapLoaded", e.hitch(this, this.onMapLoaded)));
                        this.own(m.subscribe("mapChanged", e.hitch(this, this.onMapChanged)));
                        this.own(m.subscribe("beforeMapDestory", e.hitch(this, this.onBeforeMapDestory)));
                        this.own(m.subscribe("preloadModulesLoaded", e.hitch(this, this._onPreloadModulesLoaded)));
                        this.own(m.subscribe("builder/actionTriggered", e.hitch(this, this.onActionTriggered)));
                        this.own(m.subscribe("openWidget", e.hitch(this, this._onOpenWidgetRequest)));
                        this.widgetPlaceholders = [];
                        this.preloadWidgetIcons = [];
                        this.preloadGroupPanels = [];
                        this.invisibleWidgetIds = [];
                        v.isMobileUa() || this.own(q(window, "resize", e.hitch(this, this.resize)));
                        this.id = a;
                        this.preloadModulesLoadDef = new s
                    },
                    postCreate: function() {
                        this.containerNode = this.domNode
                    },
                    map: null,
                    mapId: "map",
                    hlDiv: null,
                    animTime: 500,
                    resize: function() {
                        f.forEach(this.widgetManager.getAllWidgets(),
                            function(b) {
                                !1 === b.inPanel && b.resize()
                            }, this)
                    },
                    onAppConfigLoaded: function(b) {
                        this.appConfig = e.clone(b);
                        this._loadMap();
                        this.preloadModulesLoadDef.then(e.hitch(this, function() {
                            this.appConfig.theme && this._loadTheme(this.appConfig.theme)
                        }))
                    },
                    _onPreloadModulesLoaded: function() {
                        this.preloadModulesLoadDef.resolve()
                    },
                    onAppConfigChanged: function(b, a, c) {
                        b = e.clone(b);
                        switch (a) {
                            case "themeChange":
                                this._onThemeChange(b);
                                break;
                            case "styleChange":
                                this._onStyleChange(b);
                                break;
                            case "layoutChange":
                                this._onLayoutChange(b);
                                break;
                            case "widgetChange":
                                this._onWidgetChange(b, c);
                                break;
                            case "groupChange":
                                this._onGroupChange(b, c);
                                break;
                            case "widgetPoolChange":
                                this._onWidgetPoolChange(b, c);
                                break;
                            case "resetConfig":
                                this._onResetConfig(b);
                                break;
                            case "loadingPageChange":
                                this._onLoadingPageChange(b, c)
                        }
                        this.appConfig = b
                    },
                    onMapLoaded: function(b) {
                        this.map = b;
                        this.panelManager.setMap(b);
                        this.preloadModulesLoadDef.then(e.hitch(this, function() {
                            this._loadPreloadWidgets(this.appConfig)
                        }))
                    },
                    onMapChanged: function(b) {
                        this.map = b;
                        this.panelManager.setMap(b);
                        this._loadPreloadWidgets(this.appConfig)
                    },
                    onBeforeMapDestory: function() {
                        this.panelManager.destroyAllPanels();
                        this._destroyOffPanelWidgets();
                        this._destroyWidgetPlaceholders();
                        this._destroyPreloadWidgetIcons()
                    },
                    onActionTriggered: function(b) {
                        "highLight" === b.action && (f.forEach(this.widgetPlaceholders, function(a) {
                            a.configId === b.elementId && this._highLight(a)
                        }, this), f.forEach(this.preloadWidgetIcons, function(a) {
                            a.configId === b.elementId && this._highLight(a)
                        }, this), f.forEach(this.widgetManager.getOnScreenOffPanelWidgets(),
                            function(a) {
                                a.configId === b.elementId && this._highLight(a)
                            }, this), f.forEach(this.preloadGroupPanels, function(a) {
                            a.configId === b.elementId && this._highLight(a)
                        }, this));
                        "removeHighLight" === b.action && this._removeHighLight();
                        "showLoading" === b.action && (h.setStyle(jimuConfig.loadingId, "display", "block"), h.setStyle(jimuConfig.mainPageId, "display", "none"));
                        "showApp" === b.action && (h.setStyle(jimuConfig.loadingId, "display", "none"), h.setStyle(jimuConfig.mainPageId, "display", "block"))
                    },
                    _highLight: function(b) {
                        if (b.domNode) {
                            this.hlDiv &&
                                this._removeHighLight(b);
                            var a = c.getMarginBox(b.domNode);
                            this.hlDiv = k.create("div", {
                                style: {
                                    position: "absolute",
                                    left: a.l + "px",
                                    top: a.t + "px",
                                    width: a.w + "px",
                                    height: a.h + "px"
                                },
                                "class": "icon-highlight"
                            }, b.domNode, "before")
                        }
                    },
                    _removeHighLight: function() {
                        this.hlDiv && (k.destroy(this.hlDiv), this.hlDiv = null)
                    },
                    _onWidgetChange: function(b, a) {
                        a = b.getConfigElementById(a.id);
                        a.isController ? this._reloadControllerWidget(b, a.id) : (f.forEach(this.widgetPlaceholders, function(c) {
                            c.configId === a.id && (c.destroy(), this._loadPreloadWidget(a,
                                b))
                        }, this), this._removeDestroyed(this.widgetPlaceholders), f.forEach(this.preloadWidgetIcons, function(c) {
                            if (c.configId === a.id) {
                                var g = c.state;
                                c.destroy();
                                this._loadPreloadWidget(a, b).then(function(b) {
                                    if (a.uri && "opened" === g) b.onClick()
                                })
                            }
                        }, this), this._removeDestroyed(this.preloadWidgetIcons), f.forEach(this.widgetManager.getOnScreenOffPanelWidgets(), function(c) {
                            c.configId === a.id && (c.destroy(), !1 === a.visible ? 0 > this.invisibleWidgetIds.indexOf(a.id) && this.invisibleWidgetIds.push(a.id) : this._loadPreloadWidget(a,
                                b))
                        }, this), f.forEach(this.preloadGroupPanels, function(b) {
                            b.reloadWidget(a)
                        }, this), this._updatePlaceholder(b), f.forEach(this.invisibleWidgetIds, function(c) {
                            c === a.id && !1 !== a.visible && (this._loadPreloadWidget(a, b), c = this.invisibleWidgetIds.indexOf(a.id), this.invisibleWidgetIds.splice(c, 1))
                        }, this), a.isOnScreen || f.forEach(this.widgetManager.getControllerWidgets(), function(c) {
                            c.widgetIsControlled(a.id) && this._reloadControllerWidget(b, c.id)
                        }, this))
                    },
                    _onGroupChange: function(b, a) {
                        a = b.getConfigElementById(a.id);
                        a.isOnScreen ? (this.panelManager.destroyPanel(a.id + "_panel"), this._removeDestroyed(this.preloadGroupPanels), this._loadPreloadGroup(a, b)) : (f.forEach(this.widgetManager.getControllerWidgets(), function(c) {
                            c.isControlled(a.id) && this._reloadControllerWidget(b, c.id)
                        }, this), f.forEach(this.panelManager.panels, function(b) {
                            b.config.id === a.id && b.updateConfig(a)
                        }, this))
                    },
                    _updatePlaceholder: function(b) {
                        f.forEach(this.widgetPlaceholders, function(a) {
                                a.setIndex(b.getConfigElementById(a.configId).placeholderIndex)
                            },
                            this)
                    },
                    _onWidgetPoolChange: function(b, a) {
                        this._reloadControllerWidget(b, a.controllerId)
                    },
                    _reloadControllerWidget: function(b, a) {
                        var c = this.widgetManager.getWidgetById(a);
                        if (c) {
                            var g = c.getOpenedIds(),
                                l = c.windowState;
                            f.forEach(c.getAllConfigs(), function(b) {
                                if (b.widgets) this.panelManager.destroyPanel(b.id + "_panel"), f.forEach(b.widgets, function(b) {
                                    this.panelManager.destroyPanel(b.id + "_panel")
                                }, this);
                                else {
                                    var a = this.widgetManager.getWidgetById(b.id);
                                    a && (b.inPanel ? this.panelManager.destroyPanel(a.getPanel()) :
                                        this.widgetManager.destroyWidget(a))
                                }
                            }, this);
                            this.widgetManager.destroyWidget(c);
                            c = b.getConfigElementById(a);
                            !1 !== c.visible && this._loadPreloadWidget(c, b).then(e.hitch(this, function(b) {
                                this.widgetManager.changeWindowStateTo(b, l);
                                g && b.setOpenedIds(g)
                            }))
                        }
                    },
                    _removeDestroyed: function(b) {
                        var a = [];
                        f.forEach(b, function(b) {
                            b._destroyed && a.push(b)
                        });
                        f.forEach(a, function(a) {
                            a = b.indexOf(a);
                            b.splice(a, 1)
                        })
                    },
                    _destroyPreloadWidgetIcons: function() {
                        f.forEach(this.preloadWidgetIcons, function(b) {
                            b.destroy()
                        }, this);
                        this.preloadWidgetIcons = []
                    },
                    _destroyOffPanelWidgets: function() {
                        f.forEach(this.widgetManager.getOffPanelWidgets(), function(b) {
                            this.widgetManager.destroyWidget(b)
                        }, this)
                    },
                    _destroyWidgetPlaceholders: function() {
                        f.forEach(this.widgetPlaceholders, function(b) {
                            b.destroy()
                        }, this);
                        this.widgetPlaceholders = []
                    },
                    _destroyPreloadGroupPanels: function() {
                        f.forEach(this.preloadGroupPanels, function(b) {
                            this.panelManager.destroyPanel(b)
                        }, this);
                        this.preloadGroupPanels = []
                    },
                    _changeMapPosition: function(b) {
                        this.map && (v.isEqual(this.mapManager.getMapPosition(),
                            b.map.position) || this.mapManager.setMapPosition(b.map.position))
                    },
                    _onThemeChange: function(b) {
                        this._destroyPreloadWidgetIcons();
                        this._destroyWidgetPlaceholders();
                        this._destroyOffPanelWidgets();
                        this._destroyPreloadGroupPanels();
                        this.panelManager.destroyAllPanels();
                        this._removeThemeCommonStyle(this.appConfig.theme);
                        this._removeThemeCurrentStyle(this.appConfig.theme);
                        this._removeCustomStyle();
                        l(["themes/" + b.theme.name + "/main"], e.hitch(this, function() {
                            this._loadThemeCommonStyle(b.theme);
                            this._loadThemeCurrentStyle(b.theme);
                            this._addCustomStyle(b.theme);
                            this._changeMapPosition(b);
                            this._loadPreloadWidgets(b)
                        }))
                    },
                    _onResetConfig: function(b) {
                        var a = this.appConfig;
                        m.publish("appConfigChanged", b, "mapChange", b);
                        this.appConfig = a;
                        this._updateCommonStyle(b);
                        this._onStyleChange(b);
                        this._changeMapPosition(b)
                    },
                    _onLoadingPageChange: function(b, a) {
                        if ("backgroundColor" in a) h.setStyle(jimuConfig.loadingId, "background-color", b.loadingPage.backgroundColor);
                        else if ("backgroundImage" in a) {
                            var c = b.loadingPage.backgroundImage;
                            c.visible && c.uri ?
                                (h.setStyle(jimuConfig.loadingImageId, "background-image", "url('" + c.uri + "')"), h.setStyle(jimuConfig.loadingImageId, "width", c.width + "px"), h.setStyle(jimuConfig.loadingImageId, "height", c.height + "px")) : (h.setStyle(jimuConfig.loadingImageId, "background-image", "url('')"), h.setStyle(jimuConfig.loadingImageId, "width", "0px"), h.setStyle(jimuConfig.loadingImageId, "height", "0px"))
                        } else "loadingGif" in a && (c = b.loadingPage.loadingGif, c.visible && c.uri ? (h.setStyle(jimuConfig.loadingGifId, "background-image", "url('" +
                            c.uri + "')"), h.setStyle(jimuConfig.loadingGifId, "width", c.width + "px"), h.setStyle(jimuConfig.loadingGifId, "height", c.height + "px")) : (h.setStyle(jimuConfig.loadingGifId, "background-image", "url('')"), h.setStyle(jimuConfig.loadingGifId, "width", "0px"), h.setStyle(jimuConfig.loadingGifId, "height", "0px")))
                    },
                    _updateCommonStyle: function(b) {
                        this._removeThemeCommonStyle(this.appConfig.theme);
                        this._loadThemeCommonStyle(b.theme)
                    },
                    _onStyleChange: function(b) {
                        this._removeThemeCurrentStyle(this.appConfig.theme);
                        this._loadThemeCurrentStyle(b.theme);
                        this._removeCustomStyle();
                        this._addCustomStyle(b.theme)
                    },
                    _onLayoutChange: function(b) {
                        this._changeMapPosition(b);
                        f.forEach(this.widgetPlaceholders, function(a) {
                            a.moveTo(b.getConfigElementById(a.configId).position)
                        }, this);
                        f.forEach(this.preloadWidgetIcons, function(a) {
                            a.moveTo(b.getConfigElementById(a.configId).position)
                        }, this);
                        f.forEach(this.widgetManager.getOnScreenOffPanelWidgets(), function(a) {
                            if (!a.closeable) {
                                var c = b.getConfigElementById(a.id).position;
                                a.setPosition(c)
                            }
                        }, this);
                        f.forEach(this.preloadGroupPanels,
                            function(a) {
                                var c = b.getConfigElementById(a.config.id).panel.position;
                                a.setPosition(c)
                            }, this)
                    },
                    _loadTheme: function(b) {
                        l(["themes/" + b.name + "/main"], e.hitch(this, function() {
                            this._loadThemeCommonStyle(b);
                            this._loadThemeCurrentStyle(b);
                            this._addCustomStyle(b)
                        }))
                    },
                    _loadThemeCommonStyle: function(b) {
                        v.loadStyleLink(this._getThemeCommonStyleId(b), "themes/" + b.name + "/common.css");
                        h.addClass(this.domNode, b.name)
                    },
                    _removeThemeCommonStyle: function(b) {
                        h.removeClass(this.domNode, b.name);
                        h.destroy(this._getThemeCommonStyleId(b))
                    },
                    _loadThemeCurrentStyle: function(b) {
                        v.loadStyleLink(this._getThemeCurrentStyleId(b), "themes/" + b.name + "/styles/" + b.styles[0] + "/style.css");
                        h.addClass(this.domNode, b.styles[0])
                    },
                    _removeThemeCurrentStyle: function(b) {
                        h.removeClass(this.domNode, b.styles[0]);
                        h.destroy(this._getThemeCurrentStyleId(b))
                    },
                    _addCustomStyle: function(b) {
                        var a = e.getObject("customStyles", !1, b);
                        if (a) {
                            var c = ".jimu-main-background{background-color: ${mainBackgroundColor} !important;}";
                            (b = this._getFixedThemeStyles(b)) && (c += b);
                            c = e.replace(c,
                                a, /\$\{([^\}]+)\}/g);
                            a = h.create("style", {
                                type: "text/css"
                            });
                            try {
                                a.appendChild(document.createTextNode(c))
                            } catch (g) {
                                a.styleSheet.cssText = c
                            }
                            a.setAttribute("source", "custom");
                            document.head.appendChild(a)
                        }
                    },
                    _getFixedThemeStyles: function(b) {
                        var a = ".esriPopup .titlePane {background-color: ${mainBackgroundColor} !important;}";
                        "PlateauTheme" === b.name ? (a += ".jimu-widget-header-controller .jimu-title, .jimu-widget-header-controller .jimu-subtitle{color: ${mainBackgroundColor} !important;}.jimu-widget-header-controller .links .jimu-link{color: ${mainBackgroundColor} !important;}",
                                a += ".jimu-widget-homebutton .HomeButton .home, .jimu-widget-mylocation, .jimu-widget-mylocation .place-holder, .jimu-widget-zoomslider.vertical .zoom-in, .jimu-widget-zoomslider.vertical .zoom-out{background-color: ${mainBackgroundColor} !important;}", a += ".jimu-preload-widget-icon-panel \x3e .jimu-panel-title, .jimu-foldable-panel \x3e .jimu-panel-title, .jimu-title-panel \x3e .title{color: ${mainBackgroundColor} !important;}", a += ".jimu-panel{border-color: ${mainBackgroundColor} !important;}", a +=
                                ".jimu-widget-header-controller{border-bottom-color: ${mainBackgroundColor} !important;}", a += ".jimu-tab\x3e.control\x3e.tab{color: ${mainBackgroundColor} !important; border-color: ${mainBackgroundColor} !important}") : "BillboardTheme" === b.name ? (a += ".jimu-widget-homebutton .HomeButton .home, .jimu-widget-mylocation, .jimu-widget-mylocation .place-holder, .jimu-widget-zoomslider.vertical .zoom-in, .jimu-widget-zoomslider.vertical .zoom-out{background-color: ${mainBackgroundColor} !important;}", a += ".jimu-widget-onscreen-icon{background-color: ${mainBackgroundColor} !important;}") :
                            "BoxTheme" === b.name ? a += ".jimu-widget-homebutton .HomeButton .home, .jimu-widget-mylocation, .jimu-widget-mylocation .place-holder, .jimu-widget-zoomslider.vertical .zoom-in, .jimu-widget-zoomslider.vertical .zoom-out{background-color: ${mainBackgroundColor} !important;}" : "TabTheme" === b.name && (a += ".tab-widget-frame .title-label{color: ${mainBackgroundColor} !important;}");
                        return a
                    },
                    _removeCustomStyle: function() {
                        a('style[source\x3d"custom"]', document.head).forEach(function(b) {
                            h.destroy(b)
                        })
                    },
                    _getThemeCommonStyleId: function(b) {
                        return "theme_" +
                            b.name + "_style_common"
                    },
                    _getThemeCurrentStyleId: function(b) {
                        return "theme_" + b.name + "_style_" + b.styles[0]
                    },
                    _loadMap: function() {
                        h.create("div", {
                            id: this.mapId,
                            style: e.mixin({
                                position: "absolute",
                                backgroundColor: "#EEEEEE",
                                overflow: "hidden",
                                minWidth: "1px",
                                minHeight: "1px"
                            })
                        }, this.id);
                        this.mapManager = b.getInstance({
                            appConfig: this.appConfig,
                            urlParams: this.urlParams
                        }, this.mapId);
                        this.mapManager.setMapPosition(this.appConfig.map.position);
                        this.mapManager.showMap()
                    },
                    _createPreloadWidgetPlaceHolder: function(b) {
                        var a;
                        a = "map" === b.position.relativeTo ? this.mapId : this.id;
                        var c = e.clone(b);
                        c.position.width = 40;
                        c.position.height = 40;
                        var g = v.getPositionStyle(c.position);
                        b = new z({
                            index: c.placeholderIndex,
                            configId: b.id
                        });
                        h.setStyle(b.domNode, g);
                        h.place(b.domNode, a);
                        this.widgetPlaceholders.push(b);
                        return b
                    },
                    _createPreloadWidgetIcon: function(b) {
                        var a = new w({
                            panelManager: this.panelManager,
                            widgetManager: this.widgetManager,
                            widgetConfig: b,
                            configId: b.id,
                            map: this.map
                        });
                        "map" === b.position.relativeTo ? h.place(a.domNode, this.mapId) :
                            h.place(a.domNode, this.id);
                        h.setStyle(a.domNode, v.getPositionStyle({
                            top: b.position.top,
                            left: b.position.left,
                            right: b.position.right,
                            bottom: b.position.bottom,
                            width: 40,
                            height: 40
                        }));
                        a.startup();
                        !this.openAtStartWidget && b.openAtStart && (a.switchToOpen(), this.openAtStartWidget = b.name);
                        this.preloadWidgetIcons.push(a);
                        return a
                    },
                    _loadPreloadWidgets: function(b) {
                        console.time("Load widgetOnScreen");
                        var a = new A,
                            c = [];
                        a.placeAt(this.id);
                        a.startup();
                        f.forEach(b.widgetOnScreen.widgets, function(a) {
                            !1 === a.visible ? this.invisibleWidgetIds.push(a.id) :
                                c.push(this._loadPreloadWidget(a, b))
                        }, this);
                        f.forEach(b.widgetOnScreen.groups, function(a) {
                            c.push(this._loadPreloadGroup(a, b))
                        }, this);
                        n(c).then(e.hitch(this, function() {
                            a && (a.destroy(), a = null);
                            console.timeEnd("Load widgetOnScreen");
                            m.publish("preloadWidgetsLoaded");
                            this._doPostLoad()
                        }), e.hitch(this, function() {
                            a && (a.destroy(), a = null);
                            console.timeEnd("Load widgetOnScreen");
                            m.publish("preloadWidgetsLoaded");
                            this._doPostLoad()
                        }))
                    },
                    _doPostLoad: function() {
                        l(["dynamic-modules/postload"])
                    },
                    _loadPreloadWidget: function(b,
                        a) {
                        var c = new s;
                        if ("config" === a.mode && !b.uri) {
                            var g = this._createPreloadWidgetPlaceHolder(b);
                            c.resolve(g);
                            return c
                        }
                        if (!b.uri) return c.resolve(null), c;
                        b.inPanel || b.closeable ? (g = this._createPreloadWidgetIcon(b), c.resolve(g)) : this.widgetManager.loadWidget(b).then(e.hitch(this, function(a) {
                            try {
                                a.setPosition(a.position), this.widgetManager.openWidget(a)
                            } catch (g) {
                                console.log(console.error("fail to startup widget " + a.name + ". " + g.stack))
                            }
                            a.configId = b.id;
                            c.resolve(a)
                        }), function(b) {
                            c.reject(b)
                        });
                        return c
                    },
                    _loadPreloadGroup: function(b,
                        a) {
                        return !a.mode && (!b.widgets || 0 === b.widgets.length) ? r(null) : this.panelManager.showPanel(b).then(e.hitch(this, function(a) {
                            a.configId = b.id;
                            this.preloadGroupPanels.push(a);
                            return a
                        }))
                    },
                    _onOpenWidgetRequest: function(b) {
                        f.forEach(this.preloadWidgetIcons, function(a) {
                            a.configId === b && a.switchToOpen()
                        }, this);
                        f.forEach(this.widgetManager.getControllerWidgets(), function(a) {
                            a.widgetIsControlled(b) && a.setOpenedIds([b])
                        }, this)
                    }
                });
                C.getInstance = function(b, a) {
                    null === x && (x = new C(b, a), window._layoutManager = x);
                    return x
                };
                return C
            })
        },
        "jimu/PanelManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/_base/fx dojo/Deferred dojo/promise/all dojo/on dojo/topic dojo/when require ./utils ./WidgetManager".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r) {
                var l, g = null;
                l = p(null, {
                    constructor: function() {
                        this.panels = [];
                        this.widgetManager = r.getInstance();
                        a(window, "resize", e.hitch(this, this.onWindowResize));
                        this.activePanel = null;
                        k.subscribe("/dnd/move/start", e.hitch(this, this._onMoveStart));
                        k.subscribe("widgetActived", e.hitch(this, this._onWidgetActived))
                    },
                    showPanel: function(c) {
                        var b = new m,
                            g = this.getPanelById(c.id + "_panel");
                        g ? ("closed" === g.state && this.openPanel(g), b.resolve(g)) : q({
                            Panel: this._loadPanelClass(c.panel.uri),
                            nls: this._loadThemeI18N(c.panel.uri)
                        }).then(e.hitch(this, function(g) {
                            var l = c.id + "_panel",
                                k = this.getPanelById(l),
                                d = {
                                    label: c.label,
                                    config: c,
                                    uri: c.panel.uri,
                                    position: c.panel.position,
                                    map: this.map,
                                    widgetManager: this.widgetManager,
                                    panelManager: this,
                                    id: l,
                                    gid: c.gid,
                                    nls: g.nls
                                };
                            e.mixin(d, c.panel.options);
                            try {
                                k = new g.Panel(d), console.log("panel [" + l + "] created.")
                            } catch (r) {
                                console.log("create panel error: " + r + ", panelId: " + l);
                                b.reject(r);
                                return
                            }
                            k.setPosition(c.panel.position);
                            n.setVerticalCenter(k.domNode);
                            this.openPanel(k);
                            this.panels.push(k);
                            a(k.domNode, "click", e.hitch(this, this._onPanelClick, k));
                            b.resolve(k)
                        }));
                        return b
                    },
                    setMap: function(c) {
                        this.map = c;
                        a(this.map, "resize", e.hitch(this, this.onMapResize))
                    },
                    closeOtherPanelsInTheSameGroup: function(a) {
                        if ("string" === typeof a &&
                            (a = this.getPanelById(a), !a)) return;
                        for (var b = 0; b < this.panels.length; b++) this.panels[b].gid === a.gid && this.panels[b].id !== a.id && this.closePanel(this.panels[b])
                    },
                    closeAllPanelsInGroup: function(a) {
                        for (var b = 0; b < this.panels.length; b++) this.panels[b].gid === a && this.closePanel(this.panels[b])
                    },
                    openPanel: function(a) {
                        var b = new m;
                        if ("string" === typeof a && (a = this.getPanelById(a), !a)) return b.reject(), b;
                        if (!a.started) try {
                            a.started = !0, a.startup()
                        } catch (c) {
                            console.error("fail to startup panel " + a.id + ". " + c.stack)
                        }
                        if ("opened" ===
                            a.state) return b.resolve(a), b;
                        a.setState("opened");
                        return this.playOpenPanelAnimation(a).then(e.hitch(this, function() {
                            h.setStyle(a.domNode, "display", "");
                            a.onOpen();
                            this._activePanel(a);
                            return a
                        }))
                    },
                    closePanel: function(a) {
                        var b = new m;
                        return "string" === typeof a && (a = this.getPanelById(a), !a) || "closed" === a.state ? (b.resolve(), b) : this.playClosePanelAnimation(a).then(function() {
                            this.activePanel && this.activePanel.id === a.id && (this.activePanel.onDeActive(), this.activePanel = null);
                            a.setState("closed");
                            a.onClose();
                            a.domNode && h.setStyle(a.domNode, "display", "none")
                        })
                    },
                    minimizePanel: function(a) {
                        if ("string" === typeof a && (a = this.getPanelById(a), !a)) return;
                        "closed" === a.state && this.openPanel(a);
                        a.setWindowState("minimized");
                        try {
                            a.onMinimize()
                        } catch (b) {
                            console.log(console.error("fail to minimize panel " + a.id + ". " + b.stack))
                        }
                    },
                    maximizePanel: function(a) {
                        if ("string" === typeof a && (a = this.getPanelById(a), !a)) return;
                        "closed" === a.state && this.openPanel(a);
                        a.setWindowState("maximized");
                        try {
                            a.onMaximize()
                        } catch (b) {
                            console.log(console.error("fail to maximize panel " +
                                a.id + ". " + b.stack))
                        }
                    },
                    normalizePanel: function(a) {
                        if ("string" === typeof a && (a = this.getPanelById(a), !a)) return;
                        "closed" === a.state && this.openPanel(a);
                        a.setWindowState("normal");
                        try {
                            a.onNormalize()
                        } catch (b) {
                            console.log(console.error("fail to noralize panel " + a.id + ". " + b.stack))
                        }
                    },
                    changeWindowStateTo: function(a, b) {
                        if ("string" === typeof a && (a = this.getPanelById(a), !a)) return;
                        "normal" === b ? this.normalizePanel(a) : "minimized" === b ? this.minimizePanel(a) : "maximized" === b ? this.maximizePanel(a) : console.log("error state: " +
                            b)
                    },
                    getPanelById: function(a) {
                        for (var b = 0; b < this.panels.length; b++)
                            if (this.panels[b].id === a) return this.panels[b]
                    },
                    onWindowResize: function() {
                        for (var a = 0; a < this.panels.length; a++) "closed" !== this.panels[a].state && "map" !== this.panels[a].position.relativeTo && this.panels[a].resize()
                    },
                    onMapResize: function() {
                        for (var a = 0; a < this.panels.length; a++) "closed" !== this.panels[a].state && "map" === this.panels[a].position.relativeTo && this.panels[a].resize()
                    },
                    destroyPanel: function(a) {
                        if ("string" === typeof a && (a = this.getPanelById(a), !a)) return;
                        if (a.domNode) {
                            "closed" !== a.state && this.closePanel(a);
                            this._removePanel(a);
                            try {
                                a.destroy()
                            } catch (b) {
                                console.log(console.error("fail to destroy panel " + a.id + ". " + b.stack))
                            }
                        }
                    },
                    destroyAllPanels: function() {
                        var a = f.map(this.panels, function(b) {
                            return b.id
                        });
                        f.forEach(a, function(b) {
                            this.destroyPanel(b)
                        }, this);
                        this.panels = []
                    },
                    playOpenPanelAnimation: function(a) {
                        if ("string" === typeof a && (a = this.getPanelById(a), !a) || !a.openAnimation || 0 === a.animationDuration) return c();
                        var b = new m;
                        "string" === typeof a.openAnimation ?
                            "fadeIn" === a.openAnimation ? (h.setStyle(a.domNode, {
                                opacity: 0,
                                display: ""
                            }), d.fadeIn({
                                node: a.domNode,
                                duration: a.animationDuration,
                                onEnd: function() {
                                    b.resolve()
                                }
                            }).play()) : b.resolve() : b.resolve();
                        return b
                    },
                    playClosePanelAnimation: function(a) {
                        if ("string" === typeof a && (a = this.getPanelById(a), !a) || !a.closeAnimation || 0 === a.animationDuration) return c();
                        var b = new m;
                        "string" === typeof a.closeAnimation && ("fadeOut" === a.closeAnimation ? d.fadeOut({
                                node: a.domNode,
                                duration: a.animationDuration,
                                onEnd: function() {
                                    b.resolve()
                                }
                            }).play() :
                            b.resolve());
                        return b
                    },
                    getPositionOnMobile: function(a) {
                        if ("string" === typeof a && (a = this.getPanelById(a), !a)) return {};
                        var b = h.getMarginBox(window.jimuConfig.layoutId),
                            c = b.h / 2;
                        a.titleHeight || (a.titleHeight = 35);
                        return "maximized" === a.windowState ? {
                                left: 0,
                                right: 0,
                                top: 0,
                                bottom: 0,
                                width: "auto",
                                height: "auto",
                                contentHeight: b.h - a.titleHeight,
                                borderRadiusStyle: {
                                    borderTopLeftRadius: 0,
                                    borderTopRightRadius: 0,
                                    borderBottomLeftRadius: 0,
                                    borderBottomRightRadius: 0
                                }
                            } : "minimized" === a.windowState ? b.h > b.w ? {
                                left: 0,
                                right: 0,
                                top: "auto",
                                bottom: 0,
                                width: "auto",
                                height: a.titleHeight,
                                contentHeight: 0,
                                borderRadiusStyle: {
                                    borderTopLeftRadius: "4px",
                                    borderTopRightRadius: "4px",
                                    borderBottomLeftRadius: 0,
                                    borderBottomRightRadius: 0
                                }
                            } : {
                                left: b.w - b.w / 2,
                                right: 0,
                                top: "auto",
                                bottom: 0,
                                width: b.w / 2,
                                height: a.titleHeight,
                                contentHeight: b.h,
                                borderRadiusStyle: window.isRTL ? {
                                    borderTopLeftRadius: 0,
                                    borderTopRightRadius: "4px",
                                    borderBottomLeftRadius: 0,
                                    borderBottomRightRadius: "4px"
                                } : {
                                    borderTopLeftRadius: "4px",
                                    borderTopRightRadius: 0,
                                    borderBottomLeftRadius: "4px",
                                    borderBottomRightRadius: 0
                                }
                            } :
                            b.h > b.w ? {
                                left: 0,
                                right: 0,
                                top: c,
                                bottom: 0,
                                width: "auto",
                                height: "auto",
                                contentHeight: b.h - c - a.titleHeight,
                                borderRadiusStyle: {
                                    borderTopLeftRadius: "4px",
                                    borderTopRightRadius: "4px",
                                    borderBottomLeftRadius: 0,
                                    borderBottomRightRadius: 0
                                }
                            } : {
                                left: b.w - b.w / 2,
                                right: 0,
                                top: 0,
                                bottom: 0,
                                width: b.w / 2,
                                height: "auto",
                                contentHeight: b.h - c - a.titleHeight,
                                borderRadiusStyle: window.isRTL ? {
                                    borderTopLeftRadius: 0,
                                    borderTopRightRadius: "4px",
                                    borderBottomLeftRadius: 0,
                                    borderBottomRightRadius: "4px"
                                } : {
                                    borderTopLeftRadius: "4px",
                                    borderTopRightRadius: 0,
                                    borderBottomLeftRadius: "4px",
                                    borderBottomRightRadius: 0
                                }
                            }
                    },
                    _onPanelClick: function(a) {
                        this._activePanel(a)
                    },
                    _activePanel: function(a) {
                        if (this.activePanel) {
                            if (this.activePanel.id === a.id) {
                                this.activePanel.moveTopOnActive && h.setStyle(this.activePanel.domNode, "zIndex", 101);
                                return
                            }
                            "active" === this.activePanel.state && (this.activePanel.setState("opened"), h.setStyle(this.activePanel.domNode, "zIndex", "undefined" !== typeof this.activePanel.position.zIndex ? this.activePanel.position.zIndex : "auto"), this.activePanel.onDeActive())
                        }
                        var b =
                            this.widgetManager.activeWidget;
                        b && ("active" === b.state && b.getPanel() !== a) && (b.setState("opened"), !1 === b.inPanel && h.setStyle(b.domNode, "zIndex", "undefined" !== typeof b.position.zIndex ? b.position.zIndex : "auto"), b.onDeActive(), this.widgetManager.activeWidget = null);
                        this.activePanel = a;
                        "active" !== this.activePanel.state && (this.activePanel.setState("active"), this.activePanel.moveTopOnActive && h.setStyle(this.activePanel.domNode, "zIndex", 101), this.activePanel.onActive())
                    },
                    _removePanel: function(a) {
                        var b = this.panels.indexOf(a); -
                        1 < b && this.panels.splice(b, 1);
                        this.activePanel && this.activePanel.id === a.id && (this.activePanel = null)
                    },
                    _onMoveStart: function(a) {
                        f.forEach(this.panels, function(b) {
                            b.domNode === a.node && this._activePanel(b)
                        }, this)
                    },
                    _onWidgetActived: function(a) {
                        this.activePanel && ("active" === this.activePanel.state && a.getPanel() !== this.activePanel) && (this.activePanel.setState("opened"), h.setStyle(this.activePanel.domNode, "zIndex", "undefined" !== typeof this.activePanel.position.zIndex ? this.activePanel.position.zIndex : "auto"),
                            this.activePanel.onDeActive(), this.activePanel = null)
                    },
                    _loadPanelClass: function(a) {
                        var b = new m;
                        s([a], function(a) {
                            b.resolve(a)
                        });
                        return b
                    },
                    _loadThemeI18N: function(a) {
                        var b = new m;
                        a.startWith("themes") ? (a = a.split("/"), s(["dojo/i18n!" + (a[0] + "/" + a[1] + "/nls/strings")], function(a) {
                            b.resolve(a)
                        })) : b.resolve({});
                        return b
                    }
                });
                l.getInstance = function() {
                    null === g && (g = new l, window._panelManager = g);
                    return g
                };
                return l
            })
        },
        "jimu/MapManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/topic dojo/on dojo/aspect dojo/keys dojo/i18n dojo/_base/config esri/dijit/InfoWindow esri/dijit/PopupMobile esri/InfoTemplate esri/request esri/arcgis/utils esri/geometry/Extent esri/geometry/Point require ./utils ./dijit/LoadingShelter jimu/LayerInfos/LayerInfos jimu/dijit/Message jimu/dijit/AppStatePopup ./MapUrlParamsHandler ./AppStateManager ./PopupManager ./FilterManager".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A, x, C, u, E, D, B) {
                    var G = null,
                        I = p(null, {
                            appConfig: null,
                            mapDivId: "",
                            map: null,
                            previousInfoWindow: null,
                            mobileInfoWindow: null,
                            isMobileInfoWindow: !1,
                            layerInfosObj: null,
                            constructor: function(b, a) {
                                this.appConfig = b.appConfig;
                                this.urlParams = b.urlParams;
                                this.id = this.mapDivId = a;
                                this.appStateManager = E.getInstance(this.urlParams);
                                this.popupManager = D.getInstance(this);
                                this.filterManager = B.getInstance();
                                this.nls = window.jimuNls;
                                d.subscribe("appConfigChanged", e.hitch(this,
                                    this.onAppConfigChanged));
                                d.subscribe("changeMapPosition", e.hitch(this, this.onChangeMapPosition));
                                d.subscribe("syncExtent", e.hitch(this, this.onSyncExtent));
                                m(window, "resize", e.hitch(this, this.onWindowResize));
                                m(window, "beforeunload", e.hitch(this, this.onBeforeUnload))
                            },
                            showMap: function() {
                                this._showMap(this.appConfig)
                            },
                            _showMap: function(b) {
                                console.time("Load Map");
                                this.loading = new z;
                                this.loading.placeAt(this.mapDivId);
                                this.loading.startup();
                                b.map["3D"] ? b.map.itemId ? this._show3DWebScene(b) : this._show3DLayersMap(b) :
                                    b.map.itemId ? this._show2DWebMap(b) : console.log("No webmap found. Please set map.itemId in config.json.")
                            },
                            onBeforeUnload: function() {
                                this.appConfig.keepAppState && this.appStateManager.saveWabAppState(this.map, this.layerInfosObj)
                            },
                            onWindowResize: function() {
                                this.map && this.map.resize && (this.map.resize(), this.resetInfoWindow(!1))
                            },
                            getMapInfoWindow: function() {
                                return {
                                    mobile: this._mapMobileInfoWindow,
                                    bigScreen: this._mapInfoWindow
                                }
                            },
                            resetInfoWindow: function(b) {
                                b && (this._mapInfoWindow = this.map.infoWindow, this._mapMobileInfoWindow &&
                                    this._mapMobileInfoWindow.destroy(), this._mapMobileInfoWindow = new n(null, h.create("div", null, null, this.map.root)), this.isMobileInfoWindow = !1);
                                w.inMobileSize() && !this.isMobileInfoWindow ? (this.map.infoWindow.hide(), this.map.setInfoWindow(this._mapMobileInfoWindow), this.isMobileInfoWindow = !0) : !w.inMobileSize() && this.isMobileInfoWindow && (this.map.infoWindow.hide(), this.map.setInfoWindow(this._mapInfoWindow), this.isMobileInfoWindow = !1)
                            },
                            onChangeMapPosition: function(b) {
                                var a = e.clone(this.mapPosition);
                                e.mixin(a,
                                    b);
                                this.setMapPosition(a)
                            },
                            setMapPosition: function(b) {
                                this.mapPosition = b;
                                b = w.getPositionStyle(b);
                                h.setStyle(this.mapDivId, b);
                                this.map && this.map.resize && this.map.resize()
                            },
                            getMapPosition: function() {
                                return this.mapPosition
                            },
                            onSyncExtent: function(b) {
                                this.map && (b = new t(b.extent), this.map.setExtent(b))
                            },
                            _visitConfigMapLayers: function(b, a) {
                                f.forEach(b.map.basemaps, function(b, c) {
                                    b.isOperationalLayer = !1;
                                    a(b, c)
                                }, this);
                                f.forEach(b.map.operationallayers, function(b, c) {
                                    b.isOperationalLayer = !0;
                                    a(b, c)
                                }, this)
                            },
                            _show3DLayersMap: function(b) {
                                v(["esri3d/Map"],
                                    e.hitch(this, function(a) {
                                        var c;
                                        c = new a(this.mapDivId, {
                                            camera: b.map.mapOptions.camera
                                        });
                                        this._visitConfigMapLayers(b, e.hitch(this, function(b) {
                                            this.createLayer(c, "3D", b)
                                        }));
                                        c.usePlugin = a.usePlugin;
                                        this._publishMapEvent(c)
                                    }))
                            },
                            _show3DWebScene: function(b) {
                                this._getWebsceneData(b.map.itemId).then(e.hitch(this, function(a) {
                                    v(["esri3d/Map"], e.hitch(this, function(c) {
                                        var g = new c(this.mapDivId, b.map.mapOptions);
                                        f.forEach(a.itemData.operationalLayers, function(b) {
                                            this.createLayer(g, "3D", b)
                                        }, this);
                                        f.forEach(a.itemData.baseMap.baseMapLayers,
                                            function(b) {
                                                b.type = "tile";
                                                this.createLayer(g, "3D", b)
                                            }, this);
                                        f.forEach(a.itemData.baseMap.elevationLayers, function(b) {
                                            b.type = "elevation";
                                            this.createLayer(g, "3D", b)
                                        }, this);
                                        g.toc = a.itemData.toc;
                                        g.bookmarks = a.itemData.bookmarks;
                                        g.tours = a.itemData.tours
                                    }))
                                }))
                            },
                            _publishMapEvent: function(b) {
                                window._viewerMap = b;
                                u.postProcessUrlParams(this.urlParams, b);
                                console.timeEnd("Load Map");
                                this.map ? (this.map = b, this.resetInfoWindow(!0), console.log("map changed."), d.publish("mapChanged", this.map)) : (this.map = b, this.resetInfoWindow(!0),
                                    d.publish("mapLoaded", this.map))
									
                            },
                            _getWebsceneData: function(b) {
                                return l({
                                    url: "http://184.169.133.166/sharing/rest/content/items/" + b + "/data",
                                    handleAs: "json"
                                })
                            },
                            _show2DWebMap: function(b) {
                                b.map.mapOptions || (b.map.mapOptions = {});
                                var c = this._processMapOptions(b.map.mapOptions) || {};
                                c.isZoomSlider = !1;
                                var g = b.map.portalUrl,
                                    l = b.map.itemId,
                                    c = {
                                        mapOptions: c,
                                        bingMapsKey: b.bingMapsKey,
                                        usePopupManager: !0
                                    };
                                if (!window.isBuilder && !b.mode && b.map.appProxy && b.map.appProxy.mapItemId === b.map.itemId) {
                                    var k = [];
                                    f.forEach(b.map.appProxy.proxyItems,
                                        function(b) {
                                            b.useProxy && b.proxyUrl && k.push({
                                                url: b.sourceUrl,
                                                mixin: {
                                                    url: b.proxyUrl
                                                }
                                            })
                                        });
                                    0 < k.length && (c.layerMixins = k)
                                }
                                this._createWebMapRaw(g, l, this.mapDivId, c).then(e.hitch(this, function(c) {
                                    var g = c.map;
                                    g.hideZoomSlider();
                                    g.infoWindow.resize(270, 316);
                                    g.itemId = b.map.itemId;
                                    g.itemInfo = c.itemInfo;
                                    g.webMapResponse = c;
                                    g.enableSnapping({
                                        snapKey: a.copyKey
                                    });
                                    h.setStyle(g.root, "zIndex", 0);
                                    g._initialExtent = g.extent;
                                    A.getInstance(g, g.itemInfo).then(e.hitch(this, function(b) {
                                        this.layerInfosObj = b;
                                        this._publishMapEvent(g);
                                        setTimeout(e.hitch(this, this._checkAppState), 500);
                                        this.loading.hide();
                                        this._addDataLoadingOnMapUpdate(g)
                                    }))
                                }), e.hitch(this, function(b) {
                                    console.error(b);
                                    this._destroyLoadingShelter();
                                    this._showError(b);
                                    d.publish("mapCreatedFailed")
                                }))
                            },
                            _showError: function(b) {
                                b && b.message && h.create("div", {
                                    "class": "app-error",
                                    innerHTML: b.message
                                }, document.body)
                            },
                            _createWebMapRaw: function(b, a, l, n) {
                                return w.createWebMap(b, a, l, n).then(e.hitch(this, function(b) {
                                    return b
                                }), e.hitch(this, function(d) {
                                    console.error(d);
                                    if (d && d instanceof Error && d.message) {
                                        var r = e.getObject("arcgis.utils.baseLayerError", !1, k.cache["esri/nls/jsapi/" + c.locale]);
                                        if (r && 0 <= d.message.indexOf(r)) return new x({
                                            message: window.jimuNls.map.basemapNotAvailable + window.jimuNls.map.displayDefaultBasemap
                                        }), g.getItem(a).then(e.hitch(this, function(a) {
                                            a.itemData.spatialReference = {
                                                wkid: 102100,
                                                latestWkid: 3857
                                            };
                                            a.itemData.baseMap = {
                                                baseMapLayers: [{
                                                    url: "http://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer",
                                                    opacity: 1,
                                                    layerType: "ArcGISTiledMapServiceLayer",
                                                    visibility: !0,
                                                    id: "defaultBasemap_0"
                                                }],
                                                title: "Topographic"
                                            };
                                            return w.createWebMap(b, a, l, n)
                                        }))
                                    }
                                    throw d;
                                }))
                            },
                            _addDataLoadingOnMapUpdate: function(b) {
                                var a = h.toDom('\x3cdiv class\x3d"load-container"\x3e\x3cdiv class\x3d"loader"\x3eLoading...\x3c/div\x3e\x3c/div\x3e');
                                h.place(a, b.root);
                                b.updating && h.addClass(a, "loading");
                                m(b, "update-start", e.hitch(this, function() {
                                    h.addClass(a, "loading")
                                }));
                                m(b, "update-end", e.hitch(this, function() {
                                    h.removeClass(a, "loading")
                                }));
                                m(b, "unload", e.hitch(this, function() {
                                    h.destroy(a);
                                    a = null;
                                    this._destroyLoadingShelter()
                                }))
                            },
                            _destroyLoadingShelter: function() {
                                this.loading && (this.loading.destroy(), this.loading = null)
                            },
                            _checkAppState: function() {
                                var b = "extent center marker find query scale level".split(" "),
                                    a = this.appConfig.keepAppState;
                                a && f.forEach(b, function(b) {
                                    b in this.urlParams && (a = !1)
                                }, this);
                                a && this.appStateManager.getWabAppState().then(e.hitch(this, function(b) {
                                    if (b.extent || b.layers) {
                                        var a = new C({
                                            nls: {
                                                title: this.nls.appState.title,
                                                restoreMap: this.nls.appState.restoreMap
                                            }
                                        });
                                        a.placeAt("main-page");
                                        m(a, "applyAppState", e.hitch(this, function() {
                                            this._applyAppState(b, this.map)
                                        }));
                                        a.startup();
                                        a.show()
                                    }
                                }))
                            },
                            _applyAppState: function(b, a) {
                                this.layerInfosObj.restoreState({
                                    layerOptions: b.layers || null
                                });
                                b.extent && a.setExtent(b.extent);
                                this._publishMapEvent(a)
                            },
                            _processMapOptions: function(a) {
                                if (a) return a.lods || delete a.lods, a.lods && 0 === a.lods.length && delete a.lods, a = e.clone(a), a.extent && (a.extent = new t(a.extent)), a.center && !e.isArrayLike(a.center) && (a.center = new b(a.center)), a.infoWindow && (a.infoWindow =
                                    new s(a.infoWindow, h.create("div", {}, this.mapDivId))), a
                            },
                            createLayer: function(b, a, c) {
                                v([{
                                    "2D_tiled": "esri/layers/ArcGISTiledMapServiceLayer",
                                    "2D_dynamic": "esri/layers/ArcGISDynamicMapServiceLayer",
                                    "2D_image": "esri/layers/ArcGISImageServiceLayer",
                                    "2D_feature": "esri/layers/FeatureLayer",
                                    "2D_rss": "esri/layers/GeoRSSLayer",
                                    "2D_kml": "esri/layers/KMLLayer",
                                    "2D_webTiled": "esri/layers/WebTiledLayer",
                                    "2D_wms": "esri/layers/WMSLayer",
                                    "2D_wmts": "esri/layers/WMTSLayer",
                                    "3D_tiled": "esri3d/layers/ArcGISTiledMapServiceLayer",
                                    "3D_dynamic": "esri3d/layers/ArcGISDynamicMapServiceLayer",
                                    "3D_image": "esri3d/layers/ArcGISImageServiceLayer",
                                    "3D_feature": "esri3d/layers/FeatureLayer",
                                    "3D_elevation": "esri3d/layers/ArcGISElevationServiceLayer",
                                    "3D_3dmodle": "esri3d/layers/SceneLayer"
                                }[a + "_" + c.type]], e.hitch(this, function(a) {
                                    var g, l = {};
                                    g = "label url type icon infoTemplate isOperationalLayer".split(" ");
                                    for (var k in c) 0 > g.indexOf(k) && (l[k] = c[k]);
                                    c.infoTemplate ? (g = new r(c.infoTemplate.title, c.infoTemplate.content), l.infoTemplate = g, a = new a(c.url,
                                        l), c.infoTemplate.width && c.infoTemplate.height && q.after(a, "onClick", e.hitch(this, function() {
                                        b.infoWindow.resize(c.infoTemplate.width, c.infoTemplate.height)
                                    }), !0)) : a = new a(c.url, l);
                                    a.isOperationalLayer = c.isOperationalLayer;
                                    a.label = c.label;
                                    a.icon = c.icon;
                                    b.addLayer(a)
                                }))
                            },
                            onAppConfigChanged: function(b, a, c) {
                                this.appConfig = b;
                                "mapChange" === a ? this._recreateMap(b) : "mapOptionsChange" === a && c.lods && this._recreateMap(b)
                            },
                            _recreateMap: function(b) {
                                this.map && (d.publish("beforeMapDestory", this.map), this.map.destroy());
                                this._showMap(b)
                            },
                            disableWebMapPopup: function() {
                                this.map.setInfoWindowOnClick(!1)
                            },
                            enableWebMapPopup: function() {
                                this.map.setInfoWindowOnClick(!0)
                            }
                        });
                    I.getInstance = function(b, a) {
                        null === G && (G = new I(b, a));
                        return G
                    };
                    return I
                })
        },
        "esri/dijit/InfoWindow": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/window dojo/_base/kernel dojo/has dojo/query dojo/sniff dojo/dom-class dojo/dom-construct dojo/dom-style dijit/_Widget dijit/_Templated dijit/_Container ../kernel ../domUtils ../InfoWindowBase ./_EventedWidget dojo/text!./templates/InfoWindow.html".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w) {
                    var z = p([v, n, r, l, b], {
                        declaredClass: "esri.dijit.InfoWindow",
                        isContainer: !0,
                        templateString: w,
                        anchor: "upperright",
                        fixedAnchor: null,
                        coords: null,
                        isShowing: !0,
                        isContentShowing: !0,
                        isTitleBarShowing: !0,
                        width: 250,
                        height: 150,
                        title: "Info Window",
                        setMap: function(b) {
                            this.inherited(arguments);
                            c.place(this.domNode, b.root)
                        },
                        startup: function() {
                            if (!this._started) {
                                this.inherited(arguments);
                                this._ANCHORS = [z.ANCHOR_UPPERRIGHT, z.ANCHOR_LOWERRIGHT, z.ANCHOR_LOWERLEFT, z.ANCHOR_UPPERLEFT];
                                if (7 > m("ie")) {
                                    var b = "progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled\x3d'true', sizingMethod\x3d'crop', src\x3d'" + s.getComputedStyle(this._sprite).backgroundImage.replace(/url\(\"/i, "").replace(/\"\)/, "") + "')",
                                        a = c.create("div", null, h.body());
                                    s.set(a, {
                                        width: "1px",
                                        height: "1px",
                                        display: "none",
                                        backgroundImage: "none",
                                        filter: b
                                    });
                                    var g = setTimeout(function() {
                                        c.destroy(a);
                                        clearTimeout(g);
                                        g = a = null
                                    }, 100);
                                    d.query(".sprite", this.domNode).forEach(function(a) {
                                        a.style.backgroundImage = "none";
                                        a.style.filter =
                                            b
                                    })
                                }
                                this.resize(this.width, this.height);
                                this.hide()
                            }
                        },
                        destroy: function() {
                            this._destroyed || (this.__unregisterMapListeners(), this.destroyDijits(this._title), this.destroyDijits(this._content), this._title.innerHTML = this._content.innerHTML = "", this.inherited(arguments))
                        },
                        resize: function(b, a) {
                            if (b && a) {
                                var c = s.set;
                                c(this._topleft, {
                                    height: a + "px",
                                    marginLeft: b + "px"
                                });
                                c(this._topright, {
                                    width: b + "px",
                                    height: a + "px"
                                });
                                c(this._user, "width", b - 8 + "px");
                                c(this._hide, "marginLeft", b - 22 + "px");
                                c(this._title, "width", b - 25 +
                                    "px");
                                c(this._content, "height", a - 37 + "px");
                                c(this._bottomleft, {
                                    marginLeft: b + "px",
                                    marginTop: a + "px"
                                });
                                c(this._bottomright, {
                                    width: b - 5 + "px",
                                    marginTop: a + "px"
                                });
                                this.width = b;
                                this.height = a;
                                this.coords && this._adjustPosition(this.coords, this.anchor);
                                this.onResize(b, a)
                            }
                        },
                        _adjustPosition: function(b, a) {
                            var c = s.set;
                            c(this._infowindow, {
                                left: Math.round(b.x) + "px",
                                top: Math.round(b.y) + "px"
                            });
                            a === z.ANCHOR_UPPERLEFT ? c(this._window, {
                                    left: null,
                                    right: this.width + 18 + "px",
                                    top: null,
                                    bottom: this.height + 50 + "px"
                                }) : a === z.ANCHOR_UPPERRIGHT ?
                                c(this._window, {
                                    left: "6px",
                                    right: null,
                                    top: null,
                                    bottom: this.height + 50 + "px"
                                }) : a === z.ANCHOR_LOWERRIGHT ? c(this._window, {
                                    left: "6px",
                                    right: null,
                                    top: "43px",
                                    bottom: null
                                }) : a === z.ANCHOR_LOWERLEFT && c(this._window, {
                                    left: null,
                                    right: this.width + 18 + "px",
                                    top: "43px",
                                    bottom: null
                                })
                        },
                        _getAnchor: function(b) {
                            var a = this.map;
                            return a && b ? (b.y < a.height / 2 ? "lower" : "upper") + (b.x < a.width / 2 ? "right" : "left") : "upperright"
                        },
                        show: function(b, a, c) {
                            if (b) {
                                b.spatialReference ? (this.mapCoords = b, b = this.coords = this.map.toScreen(b, !0)) : (this.mapCoords =
                                    null, this.coords = b);
                                var g = this.map._getFrameWidth();
                                if (-1 !== g && (b.x %= g, 0 > b.x && (b.x += g), this.map.width > g))
                                    for (var l = (this.map.width - g) / 2; b.x < l;) b.x += g;
                                if (!a || -1 === f.indexOf(this._ANCHORS, a)) a = this._getAnchor(b);
                                k.remove(this._pointer, this.anchor);
                                a = this.anchor = this.fixedAnchor || a;
                                this._adjustPosition(b, a);
                                k.add(this._pointer, a);
                                t.show(this.domNode);
                                this.isShowing = !0;
                                if (!c) this.onShow()
                            }
                        },
                        hide: function(b, a) {
                            t.hide(this.domNode);
                            this.isShowing = !1;
                            if (!a) this.onHide()
                        },
                        showTitleBar: function() {
                            t.show(this._titlebar);
                            t.show(this._border);
                            this.isTitleBarShowing = !0
                        },
                        hideTitleBar: function() {
                            t.hide(this._titlebar);
                            t.hide(this._border);
                            this.isTitleBarShowing = !1
                        },
                        showContent: function() {
                            t.show(this._content);
                            t.show(this._border);
                            this.isContentShowing = !0
                        },
                        hideContent: function() {
                            t.hide(this._content);
                            t.hide(this._border);
                            this.isContentShowing = !1
                        },
                        move: function(b, a) {
                            a ? b = this.coords.offset(b.x, b.y) : (this.coords = b, this.mapCoords && (this.mapCoords = this.map.toMap(b)));
                            s.set(this._infowindow, {
                                left: Math.round(b.x) + "px",
                                top: Math.round(b.y) +
                                    "px"
                            })
                        },
                        setFixedAnchor: function(b) {
                            b && -1 === f.indexOf(this._ANCHORS, b) || (this.fixedAnchor = b, this.isShowing && this.show(this.mapCoords || this.coords, b), this.onAnchorChange(b))
                        },
                        setTitle: function(b) {
                            this.destroyDijits(this._title);
                            this.__setValue("_title", b);
                            return this
                        },
                        setContent: function(b) {
                            this.destroyDijits(this._content);
                            this.__setValue("_content", b);
                            return this
                        },
                        onShow: function() {
                            this.__registerMapListeners();
                            this.startupDijits(this._title);
                            this.startupDijits(this._content)
                        },
                        onHide: function() {
                            this.__unregisterMapListeners()
                        },
                        onResize: function() {},
                        onAnchorChange: function() {}
                    });
                    e.mixin(z, {
                        ANCHOR_UPPERRIGHT: "upperright",
                        ANCHOR_LOWERRIGHT: "lowerright",
                        ANCHOR_LOWERLEFT: "lowerleft",
                        ANCHOR_UPPERLEFT: "upperleft"
                    });
                    return z
                })
        },
        "esri/dijit/PopupMobile": function() {
            define("require dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/array dojo/_base/window dojo/_base/kernel dojo/has dojo/query dojo/dom dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/dom-geometry dojo/dom-style ../InfoWindowBase ../PopupBase ./InfoView ./NavigationBar ../kernel ../domUtils dojo/i18n!../nls/jsapi dojo/NodeList-dom".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A, x) {
                    return e([t, b], {
                        declaredClass: "esri.dijit.PopupMobile",
                        offsetX: 3,
                        offsetY: 3,
                        zoomFactor: 4,
                        marginLeft: 10,
                        marginTop: 10,
                        highlight: !0,
                        popupNavigationBar: null,
                        popupInfoView: null,
                        location: null,
                        xIcon: p.toUrl("./images/whitex.png"),
                        dArrowIcon: p.toUrl("./images/whitedown.png"),
                        lArrowIcon: p.toUrl("./images/whitel.png"),
                        rArrowIcon: p.toUrl("./images/whiter.png"),
                        constructor: function(b, a) {
                            this.initialize();
                            f.mixin(this, b);
                            this.domNode = c.byId(a);
                            this._nls = f.mixin({},
                                x.widgets.popup);
                            var g = this.domNode;
                            n.add(g, "esriPopupMobile");
                            s.set(g, "innerHTML", "\x3cdiv class\x3d'sizer'\x3e\x3cdiv class\x3d'titlePane'\x3e\x3cdiv class\x3d'spinner hidden'\x3e\x3c/div\x3e\x3cdiv class\x3d'title'\x3e\x3c/div\x3e\x3cdiv style\x3d'text-align:center'\x3e\x3cdiv class\x3d'titleButton prev hidden'\x3e\x3c/div\x3e\x3cdiv class\x3d'footer' style\x3d'display:inline-block;width:60px;height:15px;'\x3e\x3c/div\x3e\x3cdiv class\x3d'titleButton next hidden'\x3e\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d'titleButton close'\x3e\x3c/div\x3e\x3cdiv class\x3d'titleButton arrow hidden'\x3e\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d'pointer top hidden'\x3e\x3c/div\x3e\x3cdiv class\x3d'pointer bottom hidden'\x3e\x3c/div\x3e");
                            var l = q.query(".titlePane", g)[0];
                            this._arrowButton = q.query(".arrow", l)[0];
                            this._pointerTop = q.query(".top", g)[0];
                            this._pointerBottom = q.query(".bottom", g)[0];
                            this._title = q.query(".title", l)[0];
                            this._footer = q.query(".footer", l)[0];
                            this._prev = q.query(".prev", l)[0];
                            this._next = q.query(".next", l)[0];
                            this._spinner = q.query(".spinner", l)[0];
                            this._eventConnections = [h.connect(q.query(".close", l)[0], "onclick", this, this.hide), h.connect(this._arrowButton, "onclick", this, this._toggleView), h.connect(this._prev, "onclick",
                                this,
                                function() {
                                    this.selectPrevious();
                                    this._updateUI()
                                }), h.connect(this._next, "onclick", this, function() {
                                this.selectNext();
                                this._updateUI()
                            })];
                            this._initPopupNavigationBar();
                            this._initPopupInfoView();
                            A.hide(g);
                            this.isShowing = !1
                        },
                        setMap: function(b) {
                            this.inherited(arguments);
                            r.place(this.domNode, b.root);
                            this.highlight && this.enableHighlight(b)
                        },
                        unsetMap: function() {
                            this.disableHighlight(this.map);
                            this.inherited(arguments)
                        },
                        setTitle: function(b, a) {
                            this.destroyDijits(this._title);
                            this.place(b, this._title);
                            this.destroyDijits(this._footer);
                            this.place(a, this._footer);
                            this.isShowing && (this.startupDijits(this._title), this.startupDijits(this._footer))
                        },
                        setContent: function(b) {
                            this.destroyDijits(this._contentPane);
                            this.place(b, this._contentPane);
                            this.startupDijits(this._contentPane)
                        },
                        show: function(b) {
                            if (b) {
                                var a = this.map;
                                b.spatialReference ? (this.location = b, b = a.toScreen(b)) : this.location = a.toMap(b);
                                this._maximized ? this.restore() : this._setPosition(b);
                                this.isShowing || (A.show(this.domNode), this.isShowing = !0, this.onShow())
                            } else A.show(this.domNode),
                                this.isShowing = !0
                        },
                        hide: function() {
                            this.isShowing && (A.hide(this.domNode), this.isShowing = !1, this.onHide())
                        },
                        onShow: function() {
                            this._followMap();
                            this.startupDijits(this._title);
                            this.showHighlight()
                        },
                        onHide: function() {
                            this._unfollowMap();
                            this.hideHighlight()
                        },
                        destroy: function() {
                            this.map && this.unsetMap();
                            this.cleanup();
                            this.isShowing && this.hide();
                            this.destroyDijits(this._title);
                            this.destroyDijits(this._footer);
                            d.forEach(this._eventConnections, h.disconnect);
                            r.destroy(this.domNode)
                        },
                        selectNext: function() {
                            this.select(this.selectedIndex +
                                1)
                        },
                        selectPrevious: function() {
                            this.select(this.selectedIndex - 1)
                        },
                        setFeatures: function() {
                            this.inherited(arguments);
                            this._updateUI()
                        },
                        onSetFeatures: function() {},
                        onClearFeatures: function() {
                            this.setTitle("\x26nbsp;", "\x26nbsp;");
                            n.add(this._arrowButton, "hidden");
                            this._updateUI();
                            this.hideHighlight()
                        },
                        onSelectionChange: function() {
                            var b = this.selectedIndex;
                            this._updateUI();
                            0 <= b && (this.setContent(this.features[b].getContent()), this.updateHighlight(this.map, this.features[b]), this.isShowing && this.showHighlight())
                        },
                        onDfdComplete: function() {
                            this._updateUI()
                        },
                        _followMap: function() {
                            this._unfollowMap();
                            var b = this.map;
                            this._handles = [h.connect(b, "onPanStart", this, this._onPanStart), h.connect(b, "onPan", this, this._onPan), h.connect(b, "onZoomStart", this, this._onZoomStart), h.connect(b, "onExtentChange", this, this._onExtentChange)]
                        },
                        _unfollowMap: function() {
                            var b = this._handles;
                            b && (d.forEach(b, h.disconnect), this._handles = null)
                        },
                        _onPanStart: function() {
                            var b = this.domNode.style;
                            this._panOrigin = {
                                left: b.left,
                                top: b.top,
                                right: b.right,
                                bottom: b.bottom
                            }
                        },
                        _onPan: function(b, a) {
                            var c = this._panOrigin,
                                l = a.x,
                                k = a.y,
                                n = c.left,
                                d = c.top,
                                e = c.right,
                                c = c.bottom;
                            n && (n = parseFloat(n) + l + "px");
                            d && (d = parseFloat(d) + k + "px");
                            e && (e = parseFloat(e) - l + "px");
                            c && (c = parseFloat(c) - k + "px");
                            g.set(this.domNode, {
                                left: n,
                                top: d,
                                right: e,
                                bottom: c
                            })
                        },
                        _onZoomStart: function() {
                            A.hide(this.domNode)
                        },
                        _onExtentChange: function(b, a, c) {
                            c && (A.show(this.domNode), this.show(this._targetLocation || this.location), this._targetLocation = null)
                        },
                        _setPosition: function(b) {
                            var a = b.x;
                            b = b.y;
                            var c =
                                l.getContentBox(this.map.container),
                                k = c.w,
                                c = c.h,
                                d = 0,
                                e = b + 10,
                                r = 118,
                                t = k - 18;
                            18 < a && a < t ? (d = a - 130, 0 > d ? d = 0 : d > k - 260 && (d = k - 260)) : 18 >= a ? d = a - 18 : a >= t && (d = k - 260 + (a - t));
                            118 < a && a < k - 130 ? r = 118 : 118 >= a ? 18 < a ? r = a - 12 : 18 >= a && (r = 6) : a >= k - 130 && (a < t ? r = 118 + a - (k - 130) : a >= t && (r = 118 + t - (k - 130)));
                            b <= c / 2 ? (g.set(this.domNode, {
                                left: d + "px",
                                top: e + "px",
                                bottom: null
                            }), g.set(this._pointerTop, {
                                left: r + "px"
                            }), n.add(this._pointerBottom, "hidden"), n.remove(this._pointerTop, "hidden")) : (g.set(this.domNode, {
                                left: d + "px",
                                top: e - 64 + "px",
                                bottom: null
                            }), g.set(this._pointerBottom, {
                                left: r + "px"
                            }), n.add(this._pointerTop, "hidden"), n.remove(this._pointerBottom, "hidden"))
                        },
                        _showPointer: function(b) {
                            d.forEach(["topLeft", "topRight", "bottomRight", "bottomLeft"], function(a) {
                                a === b ? q.query(".pointer." + a, this.domNode).removeClass("hidden") : q.query(".pointer." + a, this.domNode).addClass("hidden")
                            }, this)
                        },
                        _toggleView: function() {
                            this.popupNavigationBar || this._initPopupNavigationBar();
                            this.popupInfoView || this._initPopupInfoView();
                            this.hide();
                            A.show(this.popupNavigationBar.container);
                            A.show(this.popupInfoView.container);
                            0 <= this.selectedIndex && this.setContent(this.features[this.selectedIndex].getContent())
                        },
                        _handleNavigationBar: function(b) {
                            this.popupInfoView.animateTo(0);
                            switch (b.name) {
                                case "CloseButton":
                                    A.hide(this.popupNavigationBar.container);
                                    A.hide(this.popupInfoView.container);
                                    this.hide();
                                    break;
                                case "ToggleButton":
                                    A.hide(this.popupNavigationBar.container);
                                    A.hide(this.popupInfoView.container);
                                    this.show(this.location);
                                    break;
                                case "PreviousButton":
                                    this.selectPrevious();
                                    this._updateUI();
                                    break;
                                case "NextButton":
                                    this.selectNext(),
                                        this._updateUI()
                            }
                        },
                        _initPopupNavigationBar: function() {
                            var b = {};
                            b.items = [{
                                name: "CloseButton",
                                type: "img",
                                src: this.xIcon,
                                srcAlt: this.xIcon,
                                position: "left"
                            }, {
                                name: "Title",
                                type: "span",
                                text: "",
                                position: "center"
                            }, {
                                name: "ToggleButton",
                                type: "img",
                                src: this.dArrowIcon,
                                srcAlt: this.dArrowIcon,
                                position: "right",
                                toggleGroup: "toggle"
                            }, {
                                name: "PreviousButton",
                                type: "img",
                                src: this.lArrowIcon,
                                srcAlt: this.lArrowIcon,
                                position: "right2",
                                toggleGroup: "previous"
                            }, {
                                name: "NextButton",
                                type: "img",
                                src: this.rArrowIcon,
                                srcAlt: this.rArrowIcon,
                                position: "right1",
                                toggleGroup: "next"
                            }];
                            this.popupNavigationBar = new w(b, r.create("div", {}, m.body()));
                            h.connect(this.popupNavigationBar, "onCreate", this, function(b) {
                                this._prevFeatureButton = b[3]._node;
                                this._nextFeatureButton = b[4]._node
                            });
                            h.connect(this.popupNavigationBar, "onSelect", this, this._handleNavigationBar);
                            h.connect(this.popupNavigationBar, "onUnSelect", this, this._handleNavigationBar);
                            this.popupNavigationBar.startup();
                            A.hide(this.popupNavigationBar.container)
                        },
                        _initPopupInfoView: function() {
                            this.popupInfoView =
                                new v({
                                    items: [{
                                        name: "Navigator",
                                        type: "div",
                                        text: ""
                                    }, {
                                        name: "content",
                                        type: "div",
                                        text: ""
                                    }, {
                                        name: "attachment",
                                        type: "div",
                                        text: ""
                                    }]
                                }, r.create("div", {}, m.body()));
                            n.add(this.popupInfoView.container, "esriMobilePopupInfoView");
                            this.popupInfoView.enableTouchScroll();
                            h.connect(this.popupInfoView, "onCreate", this, function(b) {
                                this._contentPane = b[1]._node;
                                0 <= this.selectedIndex && this.setContent(this.features[this.selectedIndex].getContent())
                            });
                            h.connect(this.popupInfoView, "onSwipeLeft", this, function() {});
                            h.connect(this.popupInfoView,
                                "onSwipeRight", this,
                                function() {});
                            this.popupInfoView.startup()
                        },
                        _updateUI: function() {
                            var b = "\x26nbsp;",
                                a = "\x26nbsp;",
                                c = this.selectedIndex,
                                g = this.features,
                                l = this.deferreds,
                                k = this._prevFeatureButton.parentNode,
                                d = this._nextFeatureButton.parentNode,
                                e = this._spinner,
                                r = this._nls;
                            g && 1 <= g.length ? (b = g[c].getTitle(), a = c + 1 + " of " + g.length, n.remove(this._arrowButton, "hidden"), 0 === c ? (n.add(k, "hidden"), n.add(this._prev, "hidden")) : (n.remove(k, "hidden"), n.remove(this._prev, "hidden")), c === g.length - 1 ? (n.add(d, "hidden"),
                                n.add(this._next, "hidden")) : (n.remove(d, "hidden"), n.remove(this._next, "hidden"))) : (n.add(this._arrowButton, "hidden"), n.add(k, "hidden"), n.add(d, "hidden"), n.add(this._prev, "hidden"), n.add(this._next, "hidden"));
                            this.setTitle(b, a);
                            this.popupNavigationBar.getItems()[1]._node.innerHTML = a;
                            l && l.length ? (n.remove(e, "hidden"), this.setTitle(r.NLS_searching + "...", "\x26nbsp;")) : (n.add(e, "hidden"), (!g || !g.length) && this.setTitle("No Information", "\x26nbsp;"))
                        }
                    })
                })
        },
        "esri/dijit/InfoView": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/_base/kernel dojo/has dojo/query dojo/dom dojo/dom-class dojo/dom-construct dojo/dom-geometry ../kernel ./_TouchBase".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r) {
                    return p(null, {
                        declaredClass: "esri.dijit.InfoView",
                        _items: [],
                        _top: null,
                        _sections: [],
                        _isDecelerate: !1,
                        constructor: function(l, g) {
                            var n;
                            this.container = a.byId(g);
                            this._touchBase = r(this.container, null);
                            this._slideDiv = c.create("div", null, this.container, "first");
                            this.events = [];
                            this._items = l.items;
                            l.sections && (this._sections = l.sections);
                            k.add(this.container, "esriMobileInfoView");
                            if (0 === this._sections.length) c.create("div", {}, this._slideDiv);
                            else
                                for (n = 0; n < this._sections.length; n++) {
                                    var b =
                                        c.create("div", {
                                            "class": "esriMobileInfoViewSection"
                                        }, this._slideDiv);
                                    c.create("div", {
                                        innerHTML: this._sections[n].title
                                    }, b)
                                }
                            for (n = 0; n < this._items.length; n++) {
                                var d, b = 0;
                                this._items[n].section && (b = this._items[n].section);
                                switch (this._items[n].type) {
                                    case "div":
                                        d = c.create("div", {
                                            "class": "esriMobileInfoViewItem",
                                            style: this._items[n].style
                                        }, this._slideDiv.childNodes[b]), d = c.create("div", {
                                            innerHTML: this._items[n].text
                                        }, d)
                                }
                                this._items[n].className && k.add(d, this._items[n].className);
                                d._index = n;
                                d._item = this._items[n];
                                this._items[n]._node = d
                            }
                            this.startTouchY = 0
                        },
                        startup: function() {
                            this.onCreate(this._items);
                            this._animateTo(0)
                        },
                        destroy: function() {
                            f.forEach(this.events, h.disconnect);
                            this._touchBase = null;
                            d.query("img", this.container).forEach(function(a) {
                                a._index = null;
                                a._item = null;
                                c.destroy(a)
                            });
                            this._items = null;
                            c.destroy(this._slideDiv);
                            c.destroy(this.container);
                            this.container = this._slideDiv = null
                        },
                        getItems: function() {
                            return this._items
                        },
                        setPreventDefault: function(a) {
                            this._touchBase.setPreventDefault(a)
                        },
                        enableTouchScroll: function() {
                            this._touchBase.setPreventDefault(!0);
                            this.events.push(h.connect(this._touchBase, "onTouchStart", this, this._onTouchStartHandler));
                            this.events.push(h.connect(this._touchBase, "onTouchMove", this, this._onTouchMoveHandler));
                            this.events.push(h.connect(this._touchBase, "onTouchEnd", this, this._onTouchEndHandler));
                            this._slideDiv.style.webkitTransform = "translate3d(0," + this._top + "px, 0)"
                        },
                        disableTouchScroll: function() {
                            h.disconnect(this.events.pop());
                            h.disconnect(this.events.pop());
                            h.disconnect(this.events.pop());
                            this._touchBase.setPreventDefault(!1);
                            this._slideDiv.style.webkitTransform = "translate3d(0, 0px, 0)"
                        },
                        animateTo: function() {
                            this._slideDiv.style.WebkitTransitionDuration = "0s";
                            this._animateTo(0)
                        },
                        onSelect: function(a) {},
                        onUnSelect: function(a) {},
                        onCreate: function(a) {},
                        onClick: function(a) {},
                        onSwipeLeft: function() {},
                        onSwipeRight: function() {},
                        _onTouchStartHandler: function(a) {
                            this._slideDiv.style.WebkitTransitionDuration = "0s";
                            this._moveDirection = null;
                            this._startTime = new Date;
                            this.startTouchY = a.touches[0].clientY;
                            this.contentStartOffsetY = this.contentOffsetY
                        },
                        _onTouchMoveHandler: function(a) {
                            this._moveDirection || (Math.abs(a.curY) > Math.abs(a.curX) ? this._moveDirection = "vertical" : this._moveDirection = "horizontal");
                            "horizontal" !== this._moveDirection && "vertical" === this._moveDirection && this._animateTo(a.touches[0].clientY - this.startTouchY + this.contentStartOffsetY)
                        },
                        _onTouchEndHandler: function(a) {
                            this._endTime = new Date;
                            this._deltaMovement = a.curY;
                            if ("vertical" === this._moveDirection) this._shouldStartMomentum() ? this._doMomentum() : this._snapToBounds();
                            else if ("horizontal" ===
                                this._moveDirection)
                                if ("left" === a.swipeDirection) this.onSwipeLeft();
                                else if ("right" === a.swipeDirection) this.onSwipeRight()
                        },
                        _shouldStartMomentum: function() {
                            this._diff = this._endTime - this._startTime;
                            this._velocity = this._deltaMovement / this._diff;
                            return 0.2 < Math.abs(this._velocity) && 200 > this._diff ? !0 : !1
                        },
                        _doMomentum: function() {
                            var a, c;
                            a = s.getContentBox(this.container);
                            var k = 0 > this._velocity ? 0.0010 : -0.0010;
                            c = -(this._velocity * this._velocity) / (2 * k);
                            var b = -this._velocity / k,
                                k = 3 * 0.6 - 0,
                                n = 1 - k,
                                d = 0,
                                e = 0;
                            if (a.h >
                                this._slideDiv.scrollHeight) this.contentOffsetY = 0, e = 300;
                            else if (0 < this.contentOffsetY + c) {
                                a = 0;
                                for (c = Math.floor(b / 20); a < c; a++)
                                    if (d = (n * 20 * a ^ 3) + (k * 20 * a ^ 2) + 0 * 20 * a + 0, d = 0 > this._velocity ? -d : d, 0 < this.contentOffsetY + d) {
                                        e = 20 * a;
                                        break
                                    }
                                0 === e && (e = 300);
                                this.contentOffsetY = 0
                            } else if (Math.abs(this.contentOffsetY + c) + a.h > this._slideDiv.scrollHeight) {
                                this.contentOffsetY = a.h - this._slideDiv.scrollHeight;
                                a = 0;
                                for (c = Math.floor(b / 20); a < c; a++)
                                    if (d = (n * 20 * a ^ 3) + (k * 20 * a ^ 2) + 0 * 20 * a + 0, d = 0 > this._velocity ? -d : d, Math.abs(this.contentOffsetY +
                                            d) > this._slideDiv.scrollHeight) {
                                        e = 20 * a;
                                        break
                                    }
                            } else e = b, this.contentOffsetY += c;
                            this._slideDiv.style.webkitTransition = "-webkit-transform " + e + "ms cubic-bezier(0, 0.3, 0.6, 1)";
                            this._animateTo(this.contentOffsetY)
                        },
                        _snapToBounds: function() {
                            var a = s.getContentBox(this.container);
                            a.h > this._slideDiv.scrollHeight ? this.contentOffsetY = 0 : 0 < this.contentOffsetY ? this.contentOffsetY = 0 : Math.abs(this.contentOffsetY) + a.h > this._slideDiv.scrollHeight && (this.contentOffsetY = a.h - this._slideDiv.scrollHeight);
                            this._slideDiv.style.WebkitTransitionDuration =
                                "0.5s";
                            this._animateTo(this.contentOffsetY)
                        },
                        _animateTo: function(a) {
                            this.contentOffsetY = a;
                            this._slideDiv.style.webkitTransform = "translate3d(0, " + a + "px, 0)"
                        },
                        _stopMomentum: function() {
                            if (this._isDecelerating()) {
                                var a = document.defaultView.getComputedStyle(this._slideDiv, null),
                                    a = new WebKitCSSMatrix(a.webkitTransform);
                                this._slideDiv.style.webkitTransition = "";
                                this.animateTo(a.m42)
                            }
                        },
                        _isDecelerating: function() {
                            return this.isDecelerate ? !0 : !1
                        },
                        _toggleNode: function(a, c) {
                            "ON" === c.toggleState ? (c.toggleState =
                                "OFF", c.src && (a.src = c.src.toString()), this.onUnSelect(c)) : (c.toggleState = "ON", c.srcAlt && (a.src = c.srcAlt), this.onSelect(c))
                        }
                    })
                })
        },
        "esri/dijit/_TouchBase": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/dom dojo/has ../kernel".split(" "), function(p, e, f, h, d, m) {
                return p(null, {
                    declaredClass: "esri.dijit._TouchBase",
                    _preventDefault: !0,
                    _swipeThreshold: 20,
                    constructor: function(d, a) {
                        this.domNode = h.byId(d);
                        this.events = [f.connect(this.domNode, "touchstart", this, this._touchStartHandler),
                            f.connect(this.domNode, "touchmove", this, this._touchMoveHandler), f.connect(this.domNode, "touchend", this, this._touchEndHandler), f.connect(this.domNode, "onclick", this, this._clickHandler)
                        ]
                    },
                    setPreventDefault: function(d) {
                        this._preventDefault = d
                    },
                    disableOnClick: function() {
                        f.disconnect(this.events.pop())
                    },
                    _clickHandler: function(d) {
                        if (this._moved) d.preventDefault();
                        else this.onclick(d)
                    },
                    _touchStartHandler: function(d) {
                        this._moved = !1;
                        this.client_x = d.targetTouches[0].clientX;
                        this.client_y = d.targetTouches[0].clientY;
                        this.down_x = d.targetTouches[0].pageX;
                        this.down_y = d.targetTouches[0].pageY;
                        d.downX = this.down_x;
                        d.downY = this.down_y;
                        this.onTouchStart(d)
                    },
                    _touchMoveHandler: function(d) {
                        this._preventDefault && d.preventDefault();
                        this._moved = !0;
                        this.up_x = d.targetTouches[0].pageX;
                        this.cur_x = d.targetTouches[0].pageX - this.down_x;
                        this.cur_y = d.targetTouches[0].pageY - this.down_y;
                        d.curX = this.cur_x;
                        d.curY = this.cur_y;
                        this.onTouchMove(d)
                    },
                    _touchEndHandler: function(d) {
                        this._moved ? (d.curX = this.cur_x, d.curY = this.cur_y, this.down_x - this.up_x >
                            this._swipeThreshold ? d.swipeDirection = "left" : this.up_x - this.down_x > this._swipeThreshold && (d.swipeDirection = "right")) : (d.clientX = this.client_x, d.clientY = this.client_y);
                        this.onTouchEnd(d)
                    },
                    onTouchStart: function(d) {},
                    onTouchMove: function(d) {},
                    onTouchEnd: function(d) {},
                    onclick: function(d) {}
                })
            })
        },
        "esri/dijit/NavigationBar": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/array dojo/_base/kernel dojo/has dojo/query dojo/dom dojo/dom-class dojo/dom-construct ./_TouchBase ../kernel".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n) {
                    return p(null, {
                        declaredClass: "esri.dijit.NavigationBar",
                        _items: [],
                        constructor: function(d, l) {
                            var g;
                            this.container = a.byId(l);
                            this._touchBase = s(this.container, null);
                            this._slideDiv = c.create("div", {}, this.container, "first");
                            this.events = [f.connect(this._touchBase, "onclick", this, this._onClickHandler)];
                            this._items = d.items;
                            k.add(this.container, "esriMobileNavigationBar");
                            var n = c.create("div", {}, this._slideDiv);
                            for (g = 0; g < this._items.length; g++) {
                                var b, e;
                                switch (this._items[g].type) {
                                    case "img":
                                        e =
                                            c.create("div", {
                                                "class": "esriMobileNavigationItem"
                                            }, n);
                                        b = c.create("img", {
                                            src: this._items[g].src.toString(),
                                            style: {
                                                width: "100%",
                                                height: "100%"
                                            }
                                        }, e);
                                        break;
                                    case "span":
                                        e = c.create("div", {
                                            "class": "esriMobileNavigationItem"
                                        }, n);
                                        b = c.create("span", {
                                            innerHTML: this._items[g].text
                                        }, e);
                                        break;
                                    case "div":
                                        e = c.create("div", {
                                            "class": "esriMobileNavigationInfoPanel"
                                        }, n), b = c.create("div", {
                                            innerHTML: this._items[g].text
                                        }, e)
                                }
                                k.add(e, this._items[g].position);
                                this._items[g].className && k.add(b, this._items[g].className);
                                b._index =
                                    g;
                                b._item = this._items[g];
                                this._items[g]._node = b
                            }
                        },
                        startup: function() {
                            this.onCreate(this._items)
                        },
                        destroy: function() {
                            h.forEach(this.events, f.disconnect);
                            this._touchBase = null;
                            d.query("img", this.container).forEach(function(a) {
                                a._index = null;
                                a._item = null;
                                c.destroy(a)
                            });
                            this._items = null;
                            c.destroy(this._slideDiv);
                            c.destroy(this.container);
                            this.container = this._slideDiv = null
                        },
                        getItems: function() {
                            return this._items
                        },
                        select: function(a) {
                            this._markSelected(a._node, a)
                        },
                        onSelect: function(a) {},
                        onUnSelect: function(a) {},
                        onCreate: function(a) {},
                        _onClickHandler: function(a) {
                            if ("img" === a.target.tagName.toLowerCase()) {
                                var c = a.target,
                                    g = c._item;
                                d.query("img", this.container).forEach(function(a) {
                                    a !== c && a._item.toggleGroup === g.toggleGroup && this._markUnSelected(a, a._item)
                                }, this);
                                this._toggleNode(c, g)
                            }
                        },
                        _toggleNode: function(a, c) {
                            "ON" === c.toggleState ? (c.toggleState = "OFF", c.src && (a.src = c.src.toString()), this.onUnSelect(c)) : (c.toggleState = "ON", c.srcAlt && (a.src = c.srcAlt), this.onSelect(c))
                        },
                        _markSelected: function(a, c) {
                            c.toggleState =
                                "ON";
                            c.srcAlt && (a.src = c.srcAlt);
                            this.onSelect(c)
                        },
                        _markUnSelected: function(a, c) {
                            "ON" === c.toggleState && (c.toggleState = "OFF", c.src && (a.src = c.src.toString()), this.onUnSelect(c))
                        }
                    })
                })
        },
        "jimu/dijit/LoadingShelter": function() {
            define(["dojo/_base/declare", "dijit/_WidgetBase", "dijit/_TemplatedMixin", "dojo/text!./templates/LoadingShelter.html", "dojo/_base/html"], function(p, e, f, h, d) {
                return p([e, f], {
                    baseClass: "jimu-loading-shelter",
                    declaredClass: "jimu.dijit.LoadingShelter",
                    templateString: h,
                    loadingText: null,
                    hidden: !1,
                    showLoading: !0,
                    postMixInProperties: function() {
                        this.nls = window.jimuNls.loadingShelter
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.hidden && d.setStyle(this.domNode, "display", "none");
                        d.setStyle(this.domNode, {
                            width: "100%",
                            height: "100%"
                        });
                        this.loadingImg.src = require.toUrl("jimu") + "/images/loading2.gif";
                        this.showLoading || d.setStyle(this.imgDiv, "display", "none");
                        "string" === typeof this.loadingText && (this.textNode.innerHTML = this.loadingText)
                    },
                    show: function(e) {
                        this.domNode && this.hidden &&
                            ("string" === typeof e && (this.textNode.innerHTML = e), d.setStyle(this.domNode, "display", "block"), this.hidden = !1)
                    },
                    hide: function() {
                        this.domNode && !this.hidden && (d.setStyle(this.domNode, "display", "none"), this.hidden = !0)
                    }
                })
            })
        },
        "jimu/LayerInfos/LayerInfos": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/Deferred dojo/on dojo/topic dojo/Evented dojo/promise/all ./LayerInfoFactory".split(" "), function(p, e, f, h, d, m, q, a, k) {
                var c = p([q], {
                    map: null,
                    _operLayers: null,
                    _layerInfos: null,
                    _finalLayerInfos: null,
                    _tableInfos: null,
                    _finalTableInfos: null,
                    _basemapLayers: null,
                    constructor: function(a, c) {
                        this._basemapLayers = c.baseMap.baseMapLayers;
                        this._operLayers = c.operationalLayers;
                        this._tables = c.tables;
                        this.map = a;
                        this._initLayerInfos();
                        this._initTablesInfos();
                        this.update();
                        this._bindEvents()
                    },
                    update: function() {
                        this._extraSetLayerInfos();
                        this._clearAddedFlag(this._layerInfos);
                        this._initFinalTableInfos();
                        this._initFinalLayerInfos(this._layerInfos);
                        this._markFirstOrLastNode()
                    },
                    getLayerInfoArrayOfWebmap: function() {
                        var a = [];
                        e.forEach(this.getLayerInfoArray(), function(c) {
                            for (var b = 0; b < this._operLayers.length; b++)
                                if (c.id === this._operLayers[b].id) {
                                    a.push(c);
                                    break
                                }
                            b === this._operLayers.length && 0 <= this._removedLayerInfoIdsFromFeatureCollection.indexOf(c.id) && a.push(c)
                        }, this);
                        return a
                    },
                    getLayerInfoArray: function() {
                        return this._finalLayerInfos
                    },
                    getTableInfoArray: function() {
                        return this._finalTableInfos
                    },
                    addFeatureCollection: function(a, c) {
                        var b = this._getUniqueTopLayerInfoId(c),
                            l = {
                                layers: []
                            };
                        e.forEach(a, function(a, c) {
                            a.id = b +
                                "_" + c;
                            l.layers.push({
                                id: a.id,
                                layerObject: a
                            })
                        }, this);
                        this.map.addLayers(a);
                        var d;
                        try {
                            d = k.getInstance().create({
                                featureCollection: l,
                                title: c || b,
                                id: b
                            }, this.map), d.init()
                        } catch (n) {
                            console.warn(n.message), d = null
                        }
                        d && (d._extraOfWebmapLayerInfo = !0, this._layerInfos.push(d), this.update(), this._onUpdated())
                    },
                    addTable: function(a) {
                        var c = [];
                        a = this._addTable(a, this._finalTableInfos);
                        this._tableInfos.push(a);
                        c.push(a);
                        this._onTableChange(c, "added");
                        return a
                    },
                    removeTable: function(a) {
                        var c = -1,
                            b = !1;
                        e.forEach(this._tableInfos,
                            function(b, l) {
                                a.id === b.id && (c = l)
                            });
                        0 <= c && (this._tableInfos.splice(c, 1), b = !0);
                        c = -1;
                        e.forEach(this._finalTableInfos, function(b, l) {
                            a.id === b.id && (c = l)
                        });
                        0 <= c && (this._finalTableInfos.splice(c, 1), b = !0);
                        b && this._onTableChange([a], "removed")
                    },
                    _addTable: function(a, c) {
                        var b;
                        try {
                            a.layerObject = {
                                url: a.url,
                                featureCollectionData: a.featureCollectionData,
                                empty: !0
                            }, a.id = this._getUniqueTableId(a.id), a.selfType = "table", b = k.getInstance().create(a), b.init()
                        } catch (l) {
                            console.warn(l.message), b = null
                        }
                        b && c && c.push(b);
                        return b
                    },
                    _getUniqueTableId: function(a) {
                        var c = this._tableInfos.concat(this._finalTableInfos || []);
                        return this._getUniqueLayerOrTableId(a, c)
                    },
                    _getUniqueTopLayerInfoId: function(a) {
                        return this._getUniqueLayerOrTableId(a, this._finalLayerInfos)
                    },
                    _getUniqueLayerOrTableId: function(a, c) {
                        var b = 1,
                            l;
                        a || (a = "table");
                        for (l = a;;) {
                            for (var k = 0; k < c.length && c[k].id !== l; k++);
                            if (k === c.length) return l;
                            l = a + "_" + b.toString();
                            b++
                        }
                    },
                    _traversal: function(a, c) {
                        for (var b = 0; b < c.length; b++)
                            if (c[b].traversal(a)) return !0;
                        return !1
                    },
                    traversal: function(a) {
                        var c =
                            this.getLayerInfoArray();
                        return this._traversal(a, c)
                    },
                    traversalLayerInfosOfWebmap: function(a) {
                        var c = this.getLayerInfoArrayOfWebmap();
                        return this._traversal(a, c)
                    },
                    traversalAll: function(a) {
                        var c = this.getLayerInfoArray(),
                            b = this.getTableInfoArray();
                        return this._traversal(a, c.concat(b))
                    },
                    getLayerInfoById: function(a) {
                        return this._findLayerInfoById(a)
                    },
                    getTableInfoById: function(a) {
                        var c = null;
                        e.some(this.getTableInfoArray(), function(b) {
                            if (b.id === a) return c = b, !0
                        });
                        return c
                    },
                    getLayerOrTableInfoById: function(a) {
                        var c =
                            null;
                        this.traversalAll(function(b) {
                            if (b.id === a) return c = b, !0
                        });
                        return c
                    },
                    getLayerInfoByTopLayerId: function(a) {
                        return this._findTopLayerInfoById(a)
                    },
                    moveUpLayer: function(a, c) {
                        var b = null;
                        c = c ? c : 1;
                        var l = this._getTopLayerInfoIndexById(a.id);
                        0 <= l - c && (b = this._finalLayerInfos[l - c].obtainLayerIndexesInMap().length, this._finalLayerInfos[l].moveLayerByIndex(this._finalLayerInfos[l - c].obtainLayerIndexesInMap()[b - 1].index), b = this._finalLayerInfos[l - c], m.publish("layerInfos/layerReorder", l, c, "moveup"));
                        return b
                    },
                    _reorderLayerInfosArray: function(a, c, b) {
                        "moveup" === b ? (b = this._finalLayerInfos[a], this._finalLayerInfos.splice(a, 1), this._finalLayerInfos.splice(a - c, 0, b)) : (b = this._finalLayerInfos[a], this._finalLayerInfos.splice(a + c + 1, 0, b), this._finalLayerInfos.splice(a, 1));
                        this._markFirstOrLastNode()
                    },
                    moveDownLayer: function(a, c) {
                        var b = null;
                        c = c ? c : 1;
                        var l = this._getTopLayerInfoIndexById(a.id);
                        l + c <= this._finalLayerInfos.length - 1 && (this._finalLayerInfos[l].moveLayerByIndex(this._finalLayerInfos[l + c].obtainLayerIndexesInMap()[0].index),
                            b = this._finalLayerInfos[l + c], m.publish("layerInfos/layerReorder", l, c, "movedown"));
                        return b
                    },
                    getBasemapLayers: function() {
                        var a = [];
                        e.forEach(this.map.layerIds, function(c) {
                            c = this.map.getLayer(c);
                            ("basemap" === c._basemapGalleryLayerType || "reference" === c._basemapGalleryLayerType) && a.push(c)
                        }, this);
                        0 === a.length && (a = this._basemapLayers);
                        return a
                    },
                    getMapNotesLayerInfoArray: function() {
                        return e.filter(this.getLayerInfoArray(), function(a) {
                            return a.isMapNotesLayerInfo()
                        }, this)
                    },
                    restoreState: function(a) {
                        var c =
                            a && a.layerOptions ? a.layerOptions : null;
                        e.forEach(this.getLayerInfoArray(), function(b) {
                            b.resetLayerObjectVisibility(c)
                        }, this)
                    },
                    _initLayerInfos: function() {
                        var a;
                        this._layerInfos = [];
                        e.forEach(this._operLayers, function(c) {
                            try {
                                a = k.getInstance().create(c), a.init()
                            } catch (b) {
                                console.warn(b.message), a = null
                            }
                            a && this._layerInfos.push(a)
                        }, this)
                    },
                    _extraSetLayerInfos: function() {
                        this._removedLayerInfoIdsFromFeatureCollection = [];
                        e.forEach(this._layerInfos, function(a, c) {
                            var b;
                            if ("esri.layers.GeoRSSLayer" === a.layerObject.declaredClass ||
                                "esri.layers.KMLLayer" === a.layerObject.declaredClass) {
                                try {
                                    b = k.getInstance().create(a.originOperLayer), b.init()
                                } catch (l) {
                                    console.warn(l.message), b = null
                                }
                                b && (a.destroyLayerInfo(), this._layerInfos[c] = b)
                            } else if (a.originOperLayer.featureCollection) {
                                var d = [];
                                e.forEach(a.getSubLayers(), function(b) {
                                    d.push(b.id)
                                });
                                e.forEach(d, function(b) {
                                    this.map.getLayer(b) || a.removeSubLayerById(b)
                                }, this);
                                1 === a.getSubLayers().length && (b = a.getSubLayers()[0], this.map.getLayer(b.id).title = a.title, a.removeSubLayerById(b.id),
                                    this._removedLayerInfoIdsFromFeatureCollection.push(b.id))
                            }
                        }, this)
                    },
                    _initFinalLayerInfos: function(a) {
                        var c, b;
                        this._finalLayerInfos = [];
                        for (c = this.map.graphicsLayerIds.length - 1; 0 <= c; c--) b = this.map.graphicsLayerIds[c], this._isBasemap(b) || this._addToFinalLayerInfos(this._findLayerInfoByIdAndReturnTopLayer(b, a), b, !0);
                        for (c = this.map.layerIds.length - 1; 0 <= c; c--) b = this.map.layerIds[c], this._isBasemap(b) || this._addToFinalLayerInfos(this._findLayerInfoByIdAndReturnTopLayer(b, a), b, !1)
                    },
                    _isBasemap: function(a) {
                        for (var c = !1, b = this.getBasemapLayers(), l = 0; l < b.length; l++) b[l].id === a && (c = !0);
                        return c
                    },
                    _addToFinalLayerInfos: function(a, c, b) {
                        var l;
                        if (a) !a._addedFlag && a.isGraphicLayer() === b && (this._finalLayerInfos.push(a), a._addedFlag = !0);
                        else {
                            a = this.map.getLayer(c);
                            if ("esri.layers.GraphicsLayer" !== a.declaredClass && "labels" !== a.id) {
                                try {
                                    l = k.getInstance().create({
                                        layerObject: a,
                                        title: this._getLayerTitle(a),
                                        id: a.id || " "
                                    }, this.map), l.init()
                                } catch (d) {
                                    console.warn(d.message), l = null
                                }
                                l && this._finalLayerInfos.push(l)
                            }("esri.layers.ArcGISDynamicMapServiceLayer" ===
                                a.declaredClass || "esri.layers.ArcGISTiledMapServiceLayer" === a.declaredClass) && l && l._getLayerDefinition().then(f.hitch(this, function(b) {
                                var a = [];
                                e.forEach(b.tables, function(b) {
                                    b.url = l.getUrl() + "/" + b.id;
                                    b.id = l.id + "_" + b.id;
                                    b.title = this._getLayerTitle(b);
                                    (b = this._addTable(b, this._finalTableInfos)) && a.push(b)
                                }, this);
                                this._onTableChange(a, "added")
                            }))
                        }
                    },
                    _getLayerTitle: function(a) {
                        if (a.title) return a.title;
                        var c = a.label || a.name || "";
                        if (a.url) {
                            var b;
                            b = a.url.indexOf("/FeatureServer"); - 1 === b && (b = a.url.indexOf("/MapServer")); -
                            1 === b && (b = a.url.indexOf("/service")); - 1 < b && (b = a.url.substring(0, b), b = b.substring(b.lastIndexOf("/") + 1, b.length), c = c ? b + " - " + c : b)
                        }
                        return c || a.id
                    },
                    _findLayerInfoByIdAndReturnTopLayer: function(a, c) {
                        var b, l = null;
                        c || (c = this._finalLayerInfos);
                        for (b = 0; b < c.length; b++)
                            if (l = c[b].findLayerInfoById(a)) {
                                l = c[b];
                                break
                            }
                        return l
                    },
                    _findLayerInfoById: function(a, c) {
                        var b, l = null;
                        c || (c = this._finalLayerInfos);
                        for (b = 0; b < c.length && !(l = c[b].findLayerInfoById(a)); b++);
                        return l
                    },
                    _findTopLayerInfoById: function(a) {
                        var c, b = null,
                            l = this._finalLayerInfos.concat(this._finalTableInfos);
                        for (c = 0; c < l.length; c++)
                            if (l[c].id === a) {
                                b = l[c];
                                break
                            }
                        return b
                    },
                    _getTopLayerInfoIndexById: function(a) {
                        var c, b = -1;
                        for (c = 0; c < this._finalLayerInfos.length; c++)
                            if (this._finalLayerInfos[c].id === a) {
                                b = c;
                                break
                            }
                        return b
                    },
                    _clearAddedFlag: function(a) {
                        e.forEach(a, function(a) {
                            a._addedFlag = !1
                        })
                    },
                    _markFirstOrLastNode: function() {
                        var a;
                        if (this._finalLayerInfos.length) {
                            for (a = 0; a < this._finalLayerInfos.length; a++) this._finalLayerInfos[a].isFirst = !1, this._finalLayerInfos[a].isLast = !1;
                            this._finalLayerInfos[0].isFirst = !0;
                            this._finalLayerInfos[this._finalLayerInfos.length - 1].isLast = !0;
                            for (a = 0; a < this._finalLayerInfos.length; a++)
                                if (!this._finalLayerInfos[a].isGraphicLayer()) {
                                    a && (this._finalLayerInfos[a - 1].isLast = !0);
                                    this._finalLayerInfos[a].isFirst = !0;
                                    break
                                }
                        }
                    },
                    _onReceiveBasemapGalleryeData: function(a, c, b) {
                        "BasemapGallery" === a && (this._basemapLayers.length = 0, e.forEach(b, f.hitch(this, function(b) {
                            this._basemapLayers.push({
                                layerObject: b,
                                id: b.id
                            })
                        }), this), this.update(), this.emit("layerInfosChanged"))
                    },
                    _onBasemapChange: function(a) {
                        var c;
                        for (c = this._basemapLayers.length = 0; c < a.layers.length; c++) this._basemapLayers.push({
                            layerObject: a.layer[c],
                            id: a.layers[c].id
                        })
                    },
                    _destroyLayerInfos: function() {
                        e.forEach(this.getLayerInfoArray(), f.hitch(this, function(a) {
                            a.destroyLayerInfo()
                        }))
                    },
                    _bindEvents: function() {
                        var a, c, b, l, k, n, e, r;
                        a = d(this.map, "layer-add-result", f.hitch(this, this._onLayersChange, "added"));
                        c = d(this.map, "layer-remove", f.hitch(this, this._onLayersChange, "removed"));
                        e = m.subscribe("layerInfos/layerReorder",
                            f.hitch(this, this._onLayerReorder));
                        l = m.subscribe("layerInfos/layerInfo/isShowInMapChanged", f.hitch(this, this._onShowInMapChanged));
                        k = m.subscribe("layerInfos/layerInfo/visibleChanged", f.hitch(this, this._onVisibleChanged));
                        n = m.subscribe("layerInfos/layerInfo/filterChanged", f.hitch(this, this._onFilterChanged));
                        r = m.subscribe("layerInfos/layerInfo/rendererChanged", f.hitch(this, this._onRendererChanged));
                        b = d(this.map, "before-unload", f.hitch(this, function() {
                            a.remove();
                            c.remove();
                            e.remove();
                            l.remove();
                            k.remove();
                            n.remove();
                            r.remove();
                            b.remove();
                            this._destroyLayerInfos()
                        }))
                    },
                    _onLayersChange: function(a, c) {
                        var b = null,
                            l;
                        !c.error && ("esri.layers.GraphicsLayer" !== c.layer.declaredClass && !c.layer._basemapGalleryLayerType) && ("added" === a ? (this.update(), b = this._findTopLayerInfoById(c.layer.id), l = this._findLayerInfoById(c.layer.id)) : (b = this._findTopLayerInfoById(c.layer.id), l = this._findLayerInfoById(c.layer.id), this.update()), this.emit("layerInfosChanged", b, a, l))
                    },
                    _onShowInMapChanged: function(a) {
                        this.emit("layerInfosIsShowInMapChanged",
                            a)
                    },
                    _onVisibleChanged: function(a) {
                        this.emit("layerInfosIsVisibleChanged", a)
                    },
                    _onFilterChanged: function(a) {
                        this.emit("layerInfosFilterChanged", a)
                    },
                    _onLayerReorder: function(a, c, b) {
                        this._reorderLayerInfosArray(a, c, b);
                        this.emit("layerInfosReorder")
                    },
                    _onRendererChanged: function(a) {
                        this.emit("layerInfosRendererChanged", a)
                    },
                    _initTablesInfos: function() {
                        this._tableInfos = [];
                        e.forEach(this._tables && this._tables.reverse(), function(a) {
                            this._addTable(a, this._tableInfos)
                        }, this)
                    },
                    _initFinalTableInfos: function() {
                        this._finalTableInfos = [];
                        e.forEach(this._tableInfos, function(a) {
                            this._finalTableInfos.push(a)
                        }, this)
                    },
                    _onTableChange: function(a, c) {
                        this.emit("tableInfosChanged", a, c)
                    },
                    _onUpdated: function() {
                        this.emit("updated")
                    }
                });
                c.getLayerInfoArrayByType = function(g, l) {
                    var b = new h,
                        k = [],
                        d = [];
                    c.getInstance(g, g.iteminfo).then(function(c) {
                        c.traversal(function(b) {
                            var a = b.getLayerType();
                            a.layerInfo = b;
                            k.push(a)
                        });
                        a(k).then(function(a) {
                            e.forEach(a, function(b, a) {
                                l === b && d.push(k[a].layerInfo)
                            });
                            b.resolve(d)
                        })
                    });
                    return b
                };
                var s = !0,
                    n = null,
                    r = null,
                    l = new h;
                c.getInstance = function(a, d) {
                    n && n !== a && (s = !0, r = n = null, l = new h);
                    r ? l.resolve(r) : s && (s = !1, k.getInstance(a).init().then(f.hitch(this, function() {
                        var b = new c(a, d.itemData);
                        n = a;
                        r = b;
                        l.resolve(b)
                    })));
                    return l
                };
                c.getInstanceSync = function() {
                    return r
                };
                return c
            })
        },
        "jimu/LayerInfos/LayerInfoFactory": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/Deferred"], function(p, e, f) {
                var h = null,
                    d = p(null, {
                        constructor: function() {},
                        init: function() {
                            var d = new f;
                            require("jimu/LayerInfos/LayerInfoForCollection jimu/LayerInfos/LayerInfoForMapService jimu/LayerInfos/LayerInfoForKML jimu/LayerInfos/LayerInfoForGeoRSS jimu/LayerInfos/LayerInfoForDefault jimu/LayerInfos/LayerInfoForWMS jimu/LayerInfos/LayerInfoForGroup jimu/LayerInfos/LayerInfoForDefaultDynamic jimu/LayerInfos/LayerInfoForDefaultTile jimu/LayerInfos/LayerInfoForDefaultWMS jimu/LayerInfos/LayerInfoForDefaultTable jimu/LayerInfos/LayerInfoForDefaultImage jimu/LayerInfos/LayerInfoForDefaultStream".split(" "),
                                e.hitch(this, function(e, a, k, c, s, n, r, l, g, f, b, h, w) {
                                    this.LayerInfoForCollection = e;
                                    this.LayerInfoForMapService = a;
                                    this.LayerInfoForKML = k;
                                    this.LayerInfoForGeoRSS = c;
                                    this.LayerInfoForDefault = s;
                                    this.LayerInfoForWMS = n;
                                    this.LayerInfoForGroup = r;
                                    this.LayerInfoForDefaultDynamic = l;
                                    this.LayerInfoForDefaultTile = g;
                                    this.LayerInfoForDefaultWMS = f;
                                    this.LayerInfoForDefaultTable = b;
                                    this.LayerInfoForDefaultImage = h;
                                    this.LayerInfoForDefaultStream = w;
                                    d.resolve()
                                }));
                            return d
                        },
                        create: function(d) {
                            if (d.featureCollection) return new this.LayerInfoForCollection(d,
                                this.map);
                            if ("esri.layers.KMLLayer" === d.layerObject.declaredClass) return new this.LayerInfoForKML(d, this.map);
                            if ("esri.layers.GeoRSSLayer" === d.layerObject.declaredClass) return new this.LayerInfoForGeoRSS(d, this.map);
                            if ("esri.layers.WMSLayer" === d.layerObject.declaredClass && !d.selfType) return new this.LayerInfoForWMS(d, this.map);
                            if ("esri.layers.ArcGISDynamicMapServiceLayer" === d.layerObject.declaredClass || "esri.layers.ArcGISTiledMapServiceLayer" === d.layerObject.declaredClass) return new this.LayerInfoForMapService(d,
                                this.map);
                            if ("esri.layers.ArcGISImageServiceLayer" === d.layerObject.declaredClass || "esri.layers.ArcGISImageServiceVectorLayer" === d.layerObject.declaredClass) return new this.LayerInfoForDefaultImage(d, this.map);
                            if ("esri.layers.StreamLayer" === d.layerObject.declaredClass) return new this.LayerInfoForDefaultStream(d, this.map);
                            "Table" === d.layerObject.type && (d.selfType = "table");
                            switch (d.selfType) {
                                case "mapservice_dynamic_group":
                                    return new this.LayerInfoForGroup(d, this.map);
                                case "mapservice_tiled_group":
                                    return new this.LayerInfoForGroup(d,
                                        this.map, !0);
                                case "mapservice_dynamic":
                                    return new this.LayerInfoForDefaultDynamic(d, this.map);
                                case "mapservice_tiled":
                                    return new this.LayerInfoForDefaultTile(d, this.map);
                                case "wms":
                                    return new this.LayerInfoForDefaultWMS(d, this.map);
                                case "table":
                                    return new this.LayerInfoForDefaultTable(d, this.map);
                                default:
                                    return new this.LayerInfoForDefault(d, this.map)
                            }
                        }
                    });
                d.getInstance = function(e) {
                    null === h && (h = new d);
                    e && (h.map = e);
                    return h
                };
                return d
            })
        },
        "jimu/dijit/AppStatePopup": function() {
            define("dojo/_base/declare dijit/_WidgetBase dojo/_base/lang dojo/_base/html dojo/on dojo/mouse dojo/_base/fx dojo/Evented".split(" "),
                function(p, e, f, h, d, m, q, a) {
                    var k = 1E3,
                        c = 1E4;
                    return p([e, a], {
                        baseClass: "jimu-appstate-popup",
                        declaredClass: "jimu.dijit.AppStatePopup",
                        currentState: 0,
                        timeoutHandler: void 0,
                        constructor: function(a) {
                            this.inherited(arguments);
                            "animationDuration" in a && (k = a.animationDuration);
                            "autoCloseInterval" in a && (c = a.autoCloseInterval)
                        },
                        postCreate: function() {
                            window.appInfo.isRunInMobile && h.addClass(this.domNode, "mobile");
                            var a = h.create("div", {
                                "class": "appstate-header"
                            });
                            h.create("div", {
                                    "class": "appstate-title",
                                    innerHTML: this.nls.title
                                },
                                a);
                            var k = h.create("div", {
                                "class": "appstate-close"
                            }, a);
                            h.place(a, this.domNode);
                            a = h.create("div", {
                                "class": "appstate-tips",
                                innerHTML: this.nls.restoreMap
                            });
                            h.place(a, this.domNode);
                            this.own(d(a, "click", f.hitch(this, function() {
                                this.emit("applyAppState");
                                this.hide()
                            })));
                            this.own(d(k, "click", f.hitch(this, function() {
                                this.hide()
                            })));
                            this.own(d(this.domNode, m.enter, f.hitch(this, function() {
                                this.timeoutHandler && (clearTimeout(this.timeoutHandler), this.timeoutHandler = void 0)
                            })));
                            this.own(d(this.domNode, m.leave,
                                f.hitch(this, function() {
                                    1 === this.currentState && !this.timeoutHandler && (this.timeoutHandler = setTimeout(f.hitch(this, this.hide), c))
                                })))
                        },
                        show: function() {
                            q.animateProperty({
                                node: this.domNode,
                                duration: k,
                                properties: window.appInfo.isRunInMobile ? {
                                    top: {
                                        start: -120,
                                        end: 0
                                    }
                                } : {
                                    bottom: {
                                        start: -100,
                                        end: 10
                                    }
                                },
                                onEnd: f.hitch(this, function() {
                                    this.currentState = 1
                                })
                            }).play();
                            this.timeoutHandler = setTimeout(f.hitch(this, this.hide), c)
                        },
                        hide: function() {
                            0 !== this.currentState && q.animateProperty({
                                node: this.domNode,
                                duration: k,
                                properties: window.appInfo.isRunInMobile ? {
                                    top: {
                                        start: 0,
                                        end: -120
                                    }
                                } : {
                                    bottom: {
                                        start: 10,
                                        end: -100
                                    }
                                },
                                onEnd: f.hitch(this, function() {
                                    this.currentState = 0;
                                    h.setStyle(this.domNode, "display", "none")
                                })
                            }).play()
                        }
                    })
                })
        },
        "jimu/MapUrlParamsHandler": function() {
            define("dojo/_base/array dojo/Deferred dojo/topic dojo/promise/all esri/geometry/Point esri/geometry/Extent esri/geometry/scaleUtils esri/SpatialReference esri/tasks/ProjectParameters esri/config esri/geometry/webMercatorUtils esri/symbols/jsonUtils esri/graphic esri/layers/GraphicsLayer esri/InfoTemplate esri/tasks/query ./utils ./LayerInfos/LayerInfos".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v) {
                    function w(b, c) {
                        var g = b.center.split(";");
                        1 === g.length && (g = b.center.split(","));
                        if (2 === g.length || 3 === g.length) {
                            var l = parseFloat(g[0]),
                                k = parseFloat(g[1]);
                            if (isNaN(l) || isNaN(k)) l = parseFloat(g[0]), k = parseFloat(g[1]);
                            if (!isNaN(l) && !isNaN(k)) {
                                var n = 4326;
                                3 === g.length && !isNaN(g[2]) && (n = parseInt(g[2], 10));
                                g = new d(l, k, new a(n));
                                K(g.spatialReference, c.spatialReference) ? c.centerAt(g) : I(g, c.spatialReference, function(b) {
                                    c.centerAt(b[0])
                                }, function() {
                                    console.error("Project center point error.")
                                })
                            }
                        }
                    }

                    function z(b, c) {
                        var g = b.extent.split(";");
                        1 === g.length && (g = b.extent.split(","));
                        if (4 === g.length || 5 === g.length) {
                            var l = parseFloat(g[0]),
                                k = parseFloat(g[1]),
                                d = parseFloat(g[2]),
                                n = parseFloat(g[3]);
                            if (isNaN(l) || isNaN(l) || isNaN(l) || isNaN(l)) l = parseFloat(g[0]), k = parseFloat(g[1]), d = parseFloat(g[2]), n = parseFloat(g[3]);
                            if (!isNaN(l) && !isNaN(k) && !isNaN(d) && !isNaN(n)) {
                                var e = 4326;
                                5 === g.length && !isNaN(g[4]) && (e = parseInt(g[4], 10));
                                g = new m(l, k, d, n, new a({
                                    wkid: e
                                }));
                                K(c.spatialReference, g.spatialReference) ? c.setExtent(g) :
                                    I(g, c.spatialReference, function(b) {
                                        c.setExtent(b[0])
                                    }, function() {
                                        console.error("Project extent error.")
                                    })
                            } else console.error("Wrong extent parameters.")
                        } else console.error("Wrong extent parameters.")
                    }

                    function A(b, c) {
                        var g = b.marker.split(";");
                        1 === g.length && (g = b.marker.split(","));
                        if (2 <= g.length && 6 >= g.length && g[0].length && !isNaN(g[0]) && g[1].length && !isNaN(g[1])) {
                            var l = parseFloat(g[0]),
                                k = parseFloat(g[1]),
                                e = 4326;
                            3 <= g.length && (g[2].length && !isNaN(g[2])) && (e = parseInt(g[2], 10));
                            var r = "";
                            4 <= g.length && (r =
                                g[3]);
                            var s = null;
                            5 <= g.length && 0 === g[4].indexOf("http") && (s = g[4]);
                            var f = null;
                            6 === g.length && (f = g[5]);
                            var t = n.fromJson({
                                    type: "esriPMS",
                                    url: s,
                                    contentType: "image/png"
                                }),
                                m = null;
                            f && (m = n.fromJson({
                                color: [0, 0, 0, 255],
                                type: "esriTS",
                                verticalAlignment: "baseline",
                                horizontalAlignment: "left",
                                angle: 0,
                                xoffset: 0,
                                yoffset: 0,
                                rotated: !1,
                                kerning: !0,
                                font: {
                                    size: 12,
                                    style: "normal",
                                    weight: "bold",
                                    family: "Arial"
                                },
                                text: f
                            }));
                            C(t).then(function() {
                                var b = new d(l, k, new a({
                                    wkid: e
                                }));
                                K(b.spatialReference, c.spatialReference) ? x(b, t, m, r,
                                    c) : I(b, c.spatialReference, function(b) {
                                    x(b[0], t, m, r, c)
                                }, function() {
                                    console.error("Project center point error.")
                                })
                            })
                        }
                    }

                    function x(b, a, c, k, n) {
                        var e;
                        e = new g("", k);
                        k = new l;
                        n.addLayer(k);
                        e = new r(b, a, null, e);
                        k.add(e);
                        c && (c.xoffset = a.width / 2, c.yoffset = a.height / 2 + a.yoffset, a = new r(new d(b.toJson()), c), k.add(a));
                        n.centerAt(b)
                    }

                    function C(a) {
                        var c = new e;
                        a.url ? b.getImagesSize(a.url).then(function(b) {
                            a.width = b[0];
                            a.height = b[1];
                            c.resolve(a)
                        }, function() {
                            a.url = require.toUrl("jimu") + "/images/EsriBluePinCircle26.png";
                            a.width = 26;
                            a.height = 26;
                            a.setOffset(0, a.height / 2);
                            c.resolve(a)
                        }) : (a.url = require.toUrl("jimu") + "/images/EsriBluePinCircle26.png", a.width = 26, a.height = 26, a.setOffset(0, a.height / 2), c.resolve(a));
                        return c
                    }

                    function u(b, a) {
                        var c = b.query.split(";");
                        1 === c.length && (c = b.query.split(","));
                        if (2 !== c.length && 3 !== c.length) console.error("query URL parameter is not correct.");
                        else {
                            var g = c[0];
                            G("name", g, a).then(function(b) {
                                null === b ? G("id", g, a).then(function(b) {
                                    null === b ? console.error("Invalid layer name or id.") : E(a,
                                        b, c)
                                }) : E(a, b, c)
                            })
                        }
                    }

                    function E(a, c, g) {
                        var l = new t,
                            k = "";
                        l.outSpatialReference = a.spatialReference;
                        if (2 === g.length) l.where = g[1];
                        else if (3 === g.length && (c.layerObject.url && (b.isHostedService(c.layerObject.url) && b.containsNonLatinCharacter(g[2])) && (k = "N"), p.forEach(c.layerObject.fields, function(b) {
                                b.alias.toLowerCase() !== g[1].toLowerCase() && b.name.toLowerCase() !== g[1].toLowerCase() || (-1 < ["esriFieldTypeSmallInteger", "esriFieldTypeInteger", "esriFieldTypeSingle", "esriFieldTypeDouble", "esriFieldTypeOID"].indexOf(b.type) ?
                                    l.where = b.name + "\x3d" + g[2] : -1 < ["esriFieldTypeString"].indexOf(b.type) && (l.where = g[1] + "\x3d" + k + "'" + g[2].replace(/\'/g, "''") + "'"))
                            }, this), !l.where)) {
                            console.error("Invalid field name or type in query URL parameter.");
                            return
                        }
                        c.layerObject.selectFeatures(l).then(function(g) {
                            if (0 === g.length) console.log("No result from query URL parameter.");
                            else {
                                if ("esriGeometryPoint" === c.layerObject.geometryType && 1 === g.length) a.setExtent(q.getExtentForScale(a, 1E3)), a.centerAt(g[0].geometry);
                                else {
                                    var l = b.graphicsExtent(g);
                                    a.setExtent(l)
                                }
                                D(a, c, g)
                            }
                        }, function(b) {
                            console.error(b)
                        })
                    }

                    function D(b, a, c) {
                        function g(k) {
                            var d = new l;
                            d.setRenderer(a.layerObject.renderer);
                            b.addLayer(d);
                            p.forEach(c, function(b) {
                                b.setInfoTemplate(k);
                                d.add(b)
                            })
                        }

                        function k() {
                            b.infoWindow.setFeatures(c);
                            b.infoWindow.show(B(c[0]))
                        }
                        if (b.getLayer(a.layerInfo.id)) k();
                        else {
                            var d = a.layerInfo.getInfoTemplate();
                            d ? (g(d), k()) : a.layerInfo.loadInfoTemplate().then(function(b) {
                                g(b);
                                k()
                            })
                        }
                    }

                    function B(b) {
                        b = b.geometry;
                        if ("point" !== b.type)
                            if ("multipoint" === b.type) b = b.getPoint(0);
                            else if ("polyline" === b.type) b = b.getExtent().getCenter();
                        else if ("polygon" === b.type) b = b.getExtent().getCenter();
                        else if ("extent" === b.type) b = b.getCenter();
                        else return console.error("Can not get layer geometry type, unknow error."), null;
                        return b
                    }

                    function G(b, a, c) {
                        var g = new e,
                            l = [];
                        v.getInstance(c, c.itemInfo).then(function(c) {
                            c.traversal(function(c) {
                                if (g.isResolved()) return !0;
                                ("id" === b && c.id.toLowerCase() === a.toLowerCase() || "name" === b && c.title.toLowerCase() === a.toLowerCase()) && l.push(h({
                                    layerType: c.getLayerType(),
                                    layerObject: c.getLayerObject()
                                }).then(function(b) {
                                    "FeatureLayer" === b.layerType && g.resolve({
                                        layerInfo: c,
                                        layerObject: b.layerObject
                                    })
                                }, function(b) {
                                    console.error("Find layer error from query URL parameter", b);
                                    g.resolve(null)
                                }))
                            });
                            h(l).then(function() {
                                g.isResolved() || g.resolve(null)
                            })
                        });
                        return g
                    }

                    function I(b, a, g, l) {
                        var d = [102113, 102100, 3857],
                            n;
                        if (4326 === b.spatialReference.wkid && R(d, a.wkid)) {
                            b.ymin = Math.max(b.ymin, -89.99);
                            b.ymax = Math.min(b.ymax, 89.99);
                            b = s.geographicToWebMercator(b);
                            if ((l = b.spatialReference._getInfo()) &&
                                b.xmin > b.xmax) d = l.valid[1] - b.xmin, n = b.xmax - l.valid[0], d > n ? b.xmax = l.valid[1] + n : b.xmin = l.valid[0] - d;
                            b.spatialReference.wkid = a.wkid;
                            g([b], null)
                        } else if (R(d, b.spatialReference.wkid) && 4326 === a.wkid) {
                            b = s.webMercatorToGeographic(b);
                            if ((l = b.spatialReference._getInfo()) && b.xmin > b.xmax) d = l.valid[1] - b.xmin, n = b.xmax - l.valid[0], d > n ? b.xmax = l.valid[1] + n : b.xmin = l.valid[0] - d;
                            g([b], null)
                        } else d = new k, d.geometries = [b], d.outSR = a, c.defaults.geometryService.project(d, function(b) {
                            b && 0 < b.length && b[0] && "extent" === b[0].type &&
                                !isNaN(b[0].xmin) && !isNaN(b[0].ymin) && !isNaN(b[0].xmax) && !isNaN(b[0].ymax) ? g(b, null) : b && (0 < b.length && b[0] && "point" === b[0].type && !isNaN(b[0].x) && !isNaN(b[0].y)) && g(b, null)
                        }, l)
                    }

                    function K(b, a) {
                        var c = [102113, 102100, 3857];
                        return b && a && b.wkt === a.wkt && (b.wkid === a.wkid || b.latestWkid && b.latestWkid === a.wkid || a.latestWkid && b.wkid === a.latestWkid || b.latestWkid && b.latestWkid === a.latestWkid) || b && a && b.wkid && a.wkid && R(c, b.wkid) && R(c, a.wkid) ? !0 : !1
                    }

                    function R(b, a) {
                        for (var c = b.length; c--;)
                            if (b[c] === a) return !0;
                        return !1
                    }
                    return {
                        postProcessUrlParams: function(b, a) {
                            if ("extent" in b) return z(b, a);
                            if ("center" in b) return w(b, a);
                            if ("marker" in b) return A(b, a);
                            if ("find" in b) f.publish("publishData", "framework", "framework", {
                                searchString: b.find
                            }, !0);
                            else if ("query" in b) return u(b, a)
                        }
                    }
                })
        },
        "jimu/PopupManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/html dojo/topic dojo/on dojo/query ./FeatureActionManager ./utils ./dijit/PopupMenu".split(" "), function(p, e, f, h, d, m, q, a, k) {
                var c = null,
                    s = p(null, {
                        mapManager: null,
                        popupUnion: null,
                        constructor: function(a) {
                            e.mixin(this, a);
                            this.popupMenu = k.getInstance();
                            this.isInited = !1;
                            this.featureActionManager = q.getInstance();
                            h.subscribe("mapLoaded", e.hitch(this, this.onMapLoadedOrChanged));
                            h.subscribe("mapChanged", e.hitch(this, this.onMapLoadedOrChanged));
                            h.subscribe("appConfigChanged", e.hitch(this, this._onAppConfigChanged));
                            h.subscribe("widgetsActionsRegistered", e.hitch(this, this._onWidgetsActionsRegistered))
                        },
                        init: function() {
                            this.popupUnion = this.mapManager.getMapInfoWindow();
                            this.popupUnion.bigScreen && (this.popupUnion.mobile && this.popupUnion.bigScreen.domNode && this.popupUnion.mobile.domNode) && !this.isInited && (this._createPopupMenuButton(), this._bindSelectionChangeEvent(), this.isInited = !0)
                        },
                        _createPopupMenuButton: function() {
                            this.popupMenuButtonDesktop = f.create("span", {
                                "class": "popup-menu-button"
                            }, m(".actionList", this.popupUnion.bigScreen.domNode)[0]);
                            var a = m(".esriMobilePopupInfoView .esriMobileInfoViewItem").parent()[0],
                                a = f.create("div", {
                                        "class": "esriMobileInfoViewItem"
                                    },
                                    a);
                            this.popupMenuButtonMobile = f.create("span", {
                                "class": "popup-menu-button"
                            }, a);
                            d(this.popupMenuButtonMobile, "click", e.hitch(this, this._onPopupMenuButtonClick));
                            d(this.popupMenuButtonDesktop, "click", e.hitch(this, this._onPopupMenuButtonClick))
                        },
                        _onPopupMenuButtonClick: function(a) {
                            a = f.position(a.target);
                            this.popupMenu.show(a)
                        },
                        _bindSelectionChangeEvent: function() {
                            d(this.popupUnion.bigScreen, "selection-change", e.hitch(this, this._onSelectionChange));
                            d(this.popupUnion.mobile, "selection-change", e.hitch(this,
                                this._onSelectionChange))
                        },
                        _onSelectionChange: function(a) {
                            (this.selectedFeature = a.target.getSelectedFeature()) ? this._initPopupMenu(): (f.addClass(this.popupMenuButtonDesktop, "disabled"), f.addClass(this.popupMenuButtonMobile, "disabled"))
                        },
                        _initPopupMenu: function() {
                            this.featureActionManager.getSupportedActions(this.selectedFeature).then(e.hitch(this, function(c) {
                                c = c.filter(e.hitch(this, function(a) {
                                    return 0 > ["ZoomTo", "ShowPopup", "Flash"].indexOf(a.name)
                                }));
                                0 === c.length ? (f.addClass(this.popupMenuButtonDesktop,
                                    "disabled"), f.addClass(this.popupMenuButtonMobile, "disabled")) : (f.removeClass(this.popupMenuButtonDesktop, "disabled"), f.removeClass(this.popupMenuButtonMobile, "disabled"));
                                c = c.map(e.hitch(this, function(c) {
                                    c.data = a.toFeatureSet(this.selectedFeature);
                                    return c
                                }));
                                this.popupMenu.setActions(c)
                            }))
                        },
                        onMapLoadedOrChanged: function() {
                            this.isInited = !1;
                            this.init()
                        },
                        _onAppConfigChanged: function() {
                            this.popupUnion && (this.popupUnion.bigScreen && this.popupUnion.bigScreen.hide && (this.popupUnion.bigScreen.hide(), this.popupMenu.hide()),
                                this.popupUnion.mobile && this.popupUnion.mobile.hide && (this.popupUnion.mobile.hide(), this.popupMenu.hide()))
                        },
                        _onWidgetsActionsRegistered: function() {
                            this.init()
                        }
                    });
                s.getInstance = function(a) {
                    null === c && (c = new s({
                        mapManager: a
                    }));
                    return c
                };
                return s
            })
        },
        "jimu/FeatureActionManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/topic dojo/Deferred dojo/promise/all ./featureActions/main ./utils".split(" "), function(p, e, f, h, d, m, q, a) {
                var k = null,
                    c = p(null, {
                        constructor: function() {
                            this._actions = [];
                            window.isBuilder ? (h.subscribe("app/mapLoaded", e.hitch(this, this._onMapLoaded)), h.subscribe("app/mapChanged", e.hitch(this, this._onMapChanged))) : (h.subscribe("mapLoaded", e.hitch(this, this._onMapLoaded)), h.subscribe("mapChanged", e.hitch(this, this._onMapChanged)));
                            window.isBuilder ? (h.subscribe("app/appConfigLoaded", e.hitch(this, this._onAppConfigLoaded)), h.subscribe("app/appConfigChanged", e.hitch(this, this._onAppConfigChanged))) : (h.subscribe("appConfigLoaded", e.hitch(this, this._onAppConfigLoaded)),
                                h.subscribe("appConfigChanged", e.hitch(this, this._onAppConfigChanged)));
                            this._registerFrameworkActions()
                        },
                        getAllActions: function() {
                            return this._actions
                        },
                        getSupportedActions: function(a) {
                            a = this._getFeatureSet(a);
                            var c = [];
                            f.forEach(this._actions, function(k) {
                                var l = this.testActionSupportFeature(k, a);
                                l.action = k;
                                c.push(l)
                            }, this);
                            return m(c).then(e.hitch(this, function(a) {
                                return a.map(e.hitch(this, function(a, c) {
                                    return {
                                        result: a,
                                        action: this._actions[c]
                                    }
                                })).filter(function(a) {
                                    return a.result
                                }).map(function(a) {
                                    return a.action
                                })
                            }))
                        },
                        testActionSupportFeature: function(a, c) {
                            c = this._getFeatureSet(c);
                            var k;
                            c.features && 0 < c.features.length && (k = c.features[0].getLayer());
                            k = a.isFeatureSupported(c, k);
                            var l = new d;
                            k && "function" === typeof k.then ? k.then(function(a) {
                                l.resolve(a)
                            }, function(a) {
                                console.error(a);
                                l.resolve(!1)
                            }) : l.resolve(k);
                            return l
                        },
                        registerAction: function(a) {
                            var c = new d;
                            require([a.uri], e.hitch(this, function(k) {
                                var l = new k({
                                    map: this.map,
                                    appConfig: this.appConfig,
                                    label: a.label,
                                    name: a.name,
                                    widgetId: a.widgetId
                                });
                                f.some(this._actions,
                                    function(a) {
                                        return l.name === a.name && l.widgetId === a.widgetId
                                    }) ? (console.warn("Feature/FeatureSet action has been registered.", l.name), c.reject("Feature/FeatureSet action has been registered.", l.name)) : (this._actions.push(l), c.resolve(l))
                            }));
                            return c
                        },
                        removeActionsByWidgetId: function(a) {
                            this._actions = f.filter(this._actions, function(c) {
                                return c.widgetId !== a
                            }, this)
                        },
                        getActionsByWidgetId: function(a) {
                            return f.filter(this._actions, function(c) {
                                return c.widgetId === a
                            }, this)
                        },
                        getActionsByActionName: function(a) {
                            return f.filter(this._actions,
                                function(c) {
                                    return c.name === a
                                }, this)
                        },
                        registerWidgetFeatureActions: function(a) {
                            var c = new d;
                            if (!a.featureActions || !a.uri) return c.resolve(), c;
                            var k = [];
                            f.forEach(a.featureActions, function(c) {
                                k.push(this.registerAction({
                                    uri: a.isRemote ? a.amdFolder + c.uri + ".js" : a.amdFolder + c.uri,
                                    widgetId: a.id,
                                    name: c.name,
                                    label: a.manifest["i18nLabels_featureAction_" + c.name][window.dojoConfig.locale] || a.manifest["i18nLabels_featureAction_" + c.name].defaultLabel
                                }))
                            }, this);
                            return m(k)
                        },
                        registerAllWidgetFeatureActions: function(a) {
                            var c = [];
                            a.visitElement(e.hitch(this, function(a) {
                                a.uri && a.visible && c.push(this.registerWidgetFeatureActions(a))
                            }));
                            return m(c).then(function() {
                                h.publish("widgetsActionsRegistered")
                            })
                        },
                        _reRegisterWidgetActions: function(a) {
                            var c = [];
                            f.forEach(this.getAllActions(), function(c) {
                                var l = a.getConfigElementById(c.widgetId);
                                "framework" !== c.widgetId && (!l || !l.uri || !1 === l.visible) && this.removeActionsByWidgetId(c.widgetId)
                            }, this);
                            a.visitElement(e.hitch(this, function(a) {
                                a.uri && (a.visible && 0 === this.getActionsByWidgetId(a.id).length) &&
                                    c.push(this.registerWidgetFeatureActions(a))
                            }));
                            0 < c.length && m(c).then(function() {
                                h.publish("widgetsActionsRegistered")
                            })
                        },
                        _registerFrameworkActions: function() {
                            f.forEach(q, function(a) {
                                this.registerAction({
                                    uri: a.uri,
                                    widgetId: "framework",
                                    label: window.jimuNls.featureActions[a.name],
                                    name: a.name
                                })
                            }, this)
                        },
                        _getFeatureSet: function(c) {
                            return "[object Object]" === Object.prototype.toString.call(c) ? c.features ? c : a.toFeatureSet([c]) : a.toFeatureSet(c)
                        },
                        _onAppConfigLoaded: function(a) {
                            this.appConfig = a = e.clone(a);
                            this._setActionsAppConfig(a);
                            this.registerAllWidgetFeatureActions(this.appConfig)
                        },
                        _onAppConfigChanged: function(a) {
                            this.appConfig = a = e.clone(a);
                            this._reRegisterWidgetActions(this.appConfig);
                            this._setActionsAppConfig(a)
                        },
                        _onMapLoaded: function(a) {
                            this.map = a;
                            this._setActionsMap(a)
                        },
                        _onMapChanged: function(a) {
                            this.map = a;
                            this._setActionsMap(a)
                        },
                        _setActionsMap: function(a) {
                            f.forEach(this._actions, function(c) {
                                c.setMap(a)
                            }, this)
                        },
                        _setActionsAppConfig: function(a) {
                            f.forEach(this._actions, function(c) {
                                c.setAppConfig(a)
                            }, this)
                        }
                    });
                c.getInstance =
                    function() {
                        null === k && (k = new c, window._featureActionManager = k);
                        return k
                    };
                return c
            })
        },
        "jimu/featureActions/main": function() {
            define("./ZoomTo ./PanTo ./Flash ./ShowPopup ./ExportToCSV ./ExportToFeatureCollection ./ExportToGeoJSON ./ShowStatistics ./CreateLayer".split(" "), function() {
                return [{
                    name: "ZoomTo",
                    uri: "jimu/featureActions/ZoomTo"
                }, {
                    name: "PanTo",
                    uri: "jimu/featureActions/PanTo"
                }, {
                    name: "Flash",
                    uri: "jimu/featureActions/Flash"
                }, {
                    name: "ShowPopup",
                    uri: "jimu/featureActions/ShowPopup"
                }, {
                    name: "ExportToCSV",
                    uri: "jimu/featureActions/ExportToCSV"
                }, {
                    name: "ExportToFeatureCollection",
                    uri: "jimu/featureActions/ExportToFeatureCollection"
                }, {
                    name: "ExportToGeoJSON",
                    uri: "jimu/featureActions/ExportToGeoJSON"
                }, {
                    name: "ShowStatistics",
                    uri: "jimu/featureActions/ShowStatistics"
                }, {
                    name: "CreateLayer",
                    uri: "jimu/featureActions/CreateLayer"
                }]
            })
        },
        "jimu/featureActions/ZoomTo": function() {
            define(["dojo/_base/declare", "../BaseFeatureAction", "jimu/utils"], function(p, e, f) {
                return p(e, {
                    name: "ZoomTo",
                    iconClass: "icon-zoomto",
                    isFeatureSupported: function(e) {
                        return 0 <
                            e.features.length && e.features[0].geometry
                    },
                    onExecute: function(e) {
                        f.featureAction.zoomTo(this.map, e.features)
                    }
                })
            })
        },
        "jimu/BaseFeatureAction": function() {
            define(["dojo/_base/declare", "dojo/_base/lang"], function(p, e) {
                return p(null, {
                    name: void 0,
                    label: void 0,
                    iconFormat: "svg",
                    iconClass: "",
                    map: null,
                    appConfig: {},
                    widgetId: null,
                    constructor: function(f) {
                        e.mixin(this, f)
                    },
                    isFeatureSupported: function(e, h) {
                        return !0
                    },
                    onExecute: function(e, h) {},
                    setMap: function(e) {
                        this.map = e
                    },
                    setAppConfig: function(e) {
                        this.appConfig = e
                    },
                    getIcon: function(e) {
                        return "framework" === this.widgetId ? require.toUrl("jimu") + "/images/feature_actions/" + this.name + "_" + e + "." + this.iconFormat : this.appConfig.getConfigElementById(this.widgetId).folderUrl + "images/" + this.name + "_" + e + "." + this.iconFormat
                    }
                })
            })
        },
        "jimu/featureActions/PanTo": function() {
            define(["dojo/_base/declare", "../BaseFeatureAction", "jimu/utils"], function(p, e, f) {
                return p(e, {
                    name: "PanTo",
                    iconClass: "icon-panto",
                    isFeatureSupported: function(e) {
                        return 0 < e.features.length && e.geometryType
                    },
                    onExecute: function(e) {
                        f.featureAction.panTo(this.map,
                            e.features)
                    }
                })
            })
        },
        "jimu/featureActions/Flash": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "../BaseFeatureAction", "jimu/utils"], function(p, e, f, h) {
                return p([f], {
                    name: "Flash",
                    iconClass: "icon-flash",
                    isFeatureSupported: function(d, f) {
                        if (1 > d.features.length || !f) return !1;
                        var q = d.features[0],
                            a = e.getObject("renderer.symbol", !1, f);
                        return q && q.geometry && (q.symbol || a) && this.map.getLayer(f.id)
                    },
                    onExecute: function(d, e) {
                        h.featureAction.flash(d && d.features, e)
                    }
                })
            })
        },
        "jimu/featureActions/ShowPopup": function() {
            define(["dojo/_base/declare",
                "../BaseFeatureAction", "jimu/utils"
            ], function(p, e, f) {
                return p([e], {
                    name: "ShowPopup",
                    iconClass: "icon-show-popup",
                    isFeatureSupported: function(e, d) {
                        return e && e.features && 1 === e.features.length && d && d.infoTemplate
                    },
                    onExecute: function(e) {
                        f.featureAction.showPopup(this.map, e.features)
                    }
                })
            })
        },
        "jimu/featureActions/ExportToCSV": function() {
            define(["dojo/_base/declare", "../BaseFeatureAction", "../exportUtils"], function(p, e, f) {
                return p(e, {
                    name: "ExportToCSV",
                    iconClass: "icon-export",
                    isFeatureSupported: function(e) {
                        return 1 <
                            e.features.length
                    },
                    onExecute: function(e) {
                        e = f.createDataSource({
                            type: f.TYPE_FEATURESET,
                            filename: "features",
                            data: e
                        });
                        e.setFormat(f.FORMAT_CSV);
                        e.download()
                    }
                })
            })
        },
        "jimu/exportUtils": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/json dojo/Deferred esri/tasks/query esri/tasks/QueryTask ./utils ./jsonConverters".split(" "), function(p, e, f, h, d, m, q, a, k) {
                function c(c, l) {
                    var b = "",
                        k = l.length,
                        d = c.length,
                        e = "",
                        n = "",
                        r;
                    try {
                        f.forEach(c, function(a) {
                            b = "string" === typeof a ? b + e + a : b + e + (a.alias ||
                                a.name);
                            e = ","
                        });
                        for (var b = b + "\r\n", s = 0; s < k; s++) {
                            e = "";
                            r = l[s];
                            for (var m = 0; m < d; m++) {
                                var q = c[m],
                                    n = r["string" === typeof q ? q : q.name];
                                !n && "number" !== typeof n && (n = "");
                                n && "esriFieldTypeDate" === q.type && (n = a.localizeDateByFieldInfo(n, null));
                                n && /[",\r\n]/g.test(n) && (n = '"' + n.replace(/(")/g, '""') + '"');
                                b = b + e + n;
                                e = ","
                            }
                            b += "\r\n"
                        }
                        return b
                    } catch (h) {
                        return ""
                    }
                }
                var s = {
                        createDataSource: function(a) {
                            return a.type === s.TYPE_TABLE ? new l(a) : a.type === s.TYPE_FEATURESET ? new r(a) : null
                        },
                        TYPE_TABLE: "table",
                        TYPE_FEATURESET: "FeatureSet",
                        FORMAT_CSV: "CSV",
                        FORMAT_FEATURESET: "FeatureSet",
                        FORMAT_GEOJSON: "GeoJSON"
                    },
                    n = p(null, {
                        filename: void 0,
                        suffix: ".txt",
                        format: void 0,
                        nls: void 0,
                        constructor: function() {
                            this.nls = window.jimuNls.exportTo
                        },
                        getExportString: function() {},
                        getSupportExportFormats: function() {},
                        setFormat: function(a) {
                            this.format = a
                        },
                        download: function() {
                            this.getExportString().then(e.hitch(this, function(a) {
                                var c = this.filename + this.suffix,
                                    b;
                                try {
                                    b = !!new Blob
                                } catch (l) {
                                    b = !1
                                }
                                b ? (a = new Blob([a], {
                                    type: "text/plain;charset\x3dutf-8"
                                }), saveAs(a,
                                    c)) : saveTextAs(a, c, "utf-8")
                            }))
                        },
                        exportToPortal: function(a, c) {}
                    }),
                    r = p(n, {
                        featureSet: null,
                        constructor: function(a) {
                            this.inherited(arguments);
                            this.featureSet = a.data;
                            this.url = a.url;
                            this.filename = a.filename
                        },
                        getExportString: function() {
                            if (this.format === s.FORMAT_CSV) return this.suffix = ".csv", this._getAsCSVString();
                            if (this.format === s.FORMAT_FEATURESET) return this.suffix = ".json", this._getAsFeatureSetString();
                            if (this.format === s.FORMAT_GEOJSON) return this.suffix = ".geojson", this._getAsGeoJsonString();
                            var a = new d;
                            a.resolve("");
                            return a
                        },
                        getSupportExportFormats: function() {
                            return [{
                                value: s.FORMAT_CSV,
                                label: this.nls.toCSV
                            }, {
                                value: s.FORMAT_FEATURESET,
                                label: this.nls.toFeatureCollection
                            }, {
                                value: s.FORMAT_GEOJSON,
                                label: this.nls.toGeoJSON
                            }]
                        },
                        _getFeatureSet: function() {
                            var a = new d;
                            if (this.featureSet) a.resolve(this.featureSet);
                            else if (this.url) {
                                var c = new m;
                                c.returnGeometry = !0;
                                c.outFields = ["*"];
                                this.queryTask = new q(this.url);
                                this.queryTask.execute(c, e.hitch(this, function(b) {
                                    a.resolve(b)
                                }), e.hitch(this, function() {
                                    a.resolve(null)
                                }))
                            } else a.resolve(null);
                            return a
                        },
                        _getAsFeatureSetString: function() {
                            return this._getFeatureSet().then(e.hitch(this, function(a) {
                                var c = "";
                                a && (a = a.toJson()) && (c = h.stringify(a));
                                return c
                            }))
                        },
                        _getAsGeoJsonString: function() {
                            return this._getFeatureSet().then(e.hitch(this, function(a) {
                                var c = "";
                                a && (a = (new k.esriConverter).toGeoJson(a)) && (c = h.stringify(a));
                                return c
                            }))
                        },
                        _getAsCSVString: function() {
                            return this._getFeatureSet().then(e.hitch(this, function(a) {
                                var c = "";
                                a && (c = this._createCSVFromFeatureSet(a));
                                return c
                            }))
                        },
                        _createCSVFromFeatureSet: function(a) {
                            var l =
                                a.features,
                                b = [],
                                k;
                            if (a.fieldAliases)
                                for (k in a.fieldAliases) a.fieldAliases.hasOwnProperty(k) && b.push({
                                    name: k,
                                    alias: a.fieldAliases[k]
                                });
                            else
                                for (k in l = l[0].attributes, l) l.hasOwnProperty(k) && b.push({
                                    name: k
                                });
                            k = f.map(a.features, function(b) {
                                return b.attributes
                            });
                            a.fields && 0 < a.fields.length && f.forEach(b, function(b) {
                                var c = b.name;
                                f.some(a.fields, function(a) {
                                    return a.name === c ? (b.type = a.type, !0) : !1
                                })
                            });
                            return c(b, k)
                        }
                    }),
                    l = p(n, {
                        table: null,
                        constructor: function(a) {
                            this.inherited(arguments);
                            this.table = a.data;
                            this.url = a.url;
                            this.filename = a.filename
                        },
                        getExportString: function() {
                            if (this.format === s.FORMAT_CSV) return this.suffix = ".csv", this._getAsCSVString();
                            var a = new d;
                            a.resolve("");
                            return a
                        },
                        getSupportExportFormats: function() {
                            return [{
                                value: s.FORMAT_CSV,
                                label: this.nls.toCSV
                            }]
                        },
                        _getTableData: function() {
                            var a = new d;
                            if (this.table) a.resolve(this.table);
                            else if (this.url) {
                                var c = new m;
                                c.outFields = ["*"];
                                this.queryTask = new q(this.url);
                                this.queryTask.execute(c, e.hitch(this, function(b) {
                                    var c = {};
                                    c.fields = b.fields;
                                    c.datas =
                                        f.map(b.features, function(b) {
                                            return b.attributes
                                        });
                                    a.resolve(c)
                                }), e.hitch(this, function() {
                                    a.resolve(null)
                                }))
                            } else a.resolve(null);
                            return a
                        },
                        _getAsCSVString: function() {
                            return this._getTableData().then(e.hitch(this, function(a) {
                                var l = "";
                                a && (l = "\ufeff" + c(a.fields, a.datas));
                                return l
                            }))
                        }
                    });
                return s
            })
        },
        "jimu/jsonConverters": function() {
            (function() {
                function p(d) {
                    var e = 0,
                        a = 0,
                        k = d.length,
                        c = d[a],
                        s;
                    for (a; a < k - 1; a++) s = d[a + 1], e += (s[0] - c[0]) * (s[1] + c[1]), c = s;
                    return 0 <= e
                }

                function e() {
                    function d(a) {
                        var k, c, e;
                        if (a) {
                            if ((a.x &&
                                    "NaN" !== a.x || 0 === a.x) && (a.y && "NaN" !== a.y || 0 === a.y)) e = "Point", c = [a.x, a.y];
                            else if (a.points && a.points.length) e = "MultiPoint", c = a.points;
                            else if (a.paths && a.paths.length) a = a.paths, 1 === a.length ? (e = "LineString", c = a[0]) : (e = "MultiLineString", c = a);
                            else if (a.rings && a.rings.length) {
                                e = [];
                                a = a.rings;
                                for (k = 0; k < a.length; k++) c = a[k], p(c) ? e.push([c]) : 0 < e.length && e[e.length - 1].push(c);
                                1 < e.length ? (c = e, e = "MultiPolygon") : (c = e.pop(), e = "Polygon")
                            }
                            k = c && e ? {
                                type: e,
                                coordinates: c
                            } : null
                        }
                        return k
                    }

                    function e(a) {
                        var k = null,
                            c, s;
                        if (a &&
                            (k = {
                                type: "Feature"
                            }, a.geometry && (k.geometry = d(a.geometry)), a.attributes)) {
                            s = {};
                            for (c in a.attributes) s[c] = a.attributes[c];
                            k.properties = s
                        }
                        return k
                    }
                    return {
                        toGeoJson: function(a) {
                            var k, c, s;
                            if (a)
                                if (a.features) {
                                    k = {
                                        type: "FeatureCollection",
                                        features: []
                                    };
                                    c = a.features;
                                    for (a = 0; a < c.length; a++)(s = e(c[a])) && k.features.push(s)
                                } else k = a.geometry ? e(a) : d(a);
                            return k
                        }
                    }
                }

                function f() {
                    function d(a) {
                        var k, e;
                        if ("Point" === a) k = "esriGeometryPoint";
                        else if ("MultiPoint" === a) k = "esriGeometryMultipoint", e = "points";
                        else if ("LineString" ===
                            a || "MultiLineString" === a) k = "esriGeometryPolyline", e = "paths";
                        else if ("Polygon" === a || "MultiPolygon" === a) k = "esriGeometryPolygon", e = "rings";
                        return {
                            type: k,
                            geomHolder: e
                        }
                    }

                    function e(a) {
                        var k, d, r = [],
                            l;
                        k = 0;
                        for (d = a.length; k < d; k++) l = a[k], 0 === k !== p(l) && (l = l.reverse()), r.push(l);
                        return r
                    }

                    function a(a) {
                        var k, n, r, l, g;
                        if ("GeometryCollection" === a.type) {
                            n = [a.geometries.shift()];
                            k = d(n[0].type);
                            for (r = 0; r < a.geometries.length; r++) {
                                l = k.type;
                                g = a.geometries[r].type;
                                var f = !1;
                                if (("esriGeometryPoint" === l || "esriGeometryMultipoint" ===
                                        l) && ("Point" === g || "MultiPoint" === g)) f = !0;
                                else if ("esriGeometryPolyline" === l && ("LineString" === g || "MultiLineString" === g)) f = !0;
                                else if ("esriGeometryPolygon" === l && ("Polygon" === g || "MultiPolygon" === g)) f = !0;
                                f && n.push(a.geometries[r])
                            }
                        } else k = d(a.type), n = [a];
                        "esriGeometryPoint" === k.type && 1 < n.length && (k = d("MultiPoint"));
                        a = {
                            spatialReference: {
                                wkid: 4326
                            }
                        };
                        if ("esriGeometryPoint" === k.type) 0 === n[0].coordinates.length ? (a.x = null, a.y = null) : (a.x = n[0].coordinates[0], a.y = n[0].coordinates[1]);
                        else {
                            a[k.geomHolder] = [];
                            for (r =
                                0; r < n.length; r++) {
                                l = n[r];
                                var b = f = g = void 0;
                                if ("MultiPoint" === l.type || "MultiLineString" === l.type) b = l.coordinates;
                                else if ("Point" === l.type || "LineString" === l.type) b = [l.coordinates];
                                else if ("Polygon" === l.type) b = e(l.coordinates);
                                else if ("MultiPolygon" === l.type) {
                                    b = [];
                                    g = 0;
                                    for (f = l.coordinates.length; g < f; g++) b.push(e(l.coordinates[g])[0])
                                }
                                g = b;
                                for (l = 0; l < g.length; l++) a[k.geomHolder].push(g[l])
                            }
                        }
                        return a
                    }

                    function k(c) {
                        var k, d, e;
                        if (c && (k = {}, c.geometry && (k.geometry = a(c.geometry)), c.properties)) {
                            e = {};
                            for (d in c.properties) e[d] =
                                c.properties[d];
                            k.attributes = e
                        }
                        return k
                    }
                    return {
                        toEsri: function(c) {
                            var d, e, r;
                            if (c)
                                if ("FeatureCollection" === c.type) {
                                    d = {
                                        features: []
                                    };
                                    e = c.features;
                                    for (c = 0; c < e.length; c++)(r = k(e[c])) && d.features.push(r)
                                } else d = "Feature" === c.type ? k(c) : a(c);
                            return d
                        }
                    }
                }
                var h;
                h = "undefined" !== typeof exports && null !== exports ? exports : this;
                if ("function" === typeof define) {
                    var d = {
                        esriConverter: e,
                        geoJsonConverter: f
                    };
                    define([], function() {
                        return d
                    })
                } else h.esriConverter = e, h.geoJsonConverter = f
            }).call(this)
        },
        "jimu/featureActions/ExportToFeatureCollection": function() {
            define(["dojo/_base/declare",
                "../BaseFeatureAction", "../exportUtils"
            ], function(p, e, f) {
                return p(e, {
                    name: "ExportToFeatureCollection",
                    iconClass: "icon-export",
                    isFeatureSupported: function(e) {
                        return 1 < e.features.length && e.features[0].geometry
                    },
                    onExecute: function(e) {
                        e = f.createDataSource({
                            type: f.TYPE_FEATURESET,
                            filename: "features",
                            data: e
                        });
                        e.setFormat(f.FORMAT_FEATURESET);
                        e.download()
                    }
                })
            })
        },
        "jimu/featureActions/ExportToGeoJSON": function() {
            define(["dojo/_base/declare", "../BaseFeatureAction", "../exportUtils"], function(p, e, f) {
                return p(e, {
                    name: "ExportToGeoJSON",
                    iconClass: "icon-export",
                    isFeatureSupported: function(e) {
                        return 1 < e.features.length && e.features[0].geometry
                    },
                    onExecute: function(e) {
                        e = f.createDataSource({
                            type: f.TYPE_FEATURESET,
                            filename: "features",
                            data: e
                        });
                        e.setFormat(f.FORMAT_GEOJSON);
                        e.download()
                    }
                })
            })
        },
        "jimu/featureActions/ShowStatistics": function() {
            define(["dojo/_base/declare", "../BaseFeatureAction", "jimu/dijit/FieldStatistics"], function(p, e, f) {
                return p(e, {
                    iconClass: "icon-statistics",
                    isFeatureSupported: function(e, d) {
                        return 1 <
                            e.features.length && d && 0 < this.getNumbericFields(d).length
                    },
                    onExecute: function(e, d) {
                        var m = new f,
                            q = {
                                featureSet: e,
                                layer: d,
                                fieldNames: this.getNumbericFields(d).map(function(a) {
                                    return a.name
                                })
                            };
                        m.showContentAsPopup(q)
                    },
                    getNumbericFields: function(e) {
                        return e.fields.filter(function(d) {
                            return 0 < ["esriFieldTypeSmallInteger", "esriFieldTypeInteger", "esriFieldTypeSingle", "esriFieldTypeDouble"].indexOf(d.type)
                        })
                    }
                })
            })
        },
        "jimu/dijit/FieldStatistics": function() {
            define("dojo/_base/declare dijit/_WidgetBase dojo/_base/lang dojo/_base/html dojo/_base/array dojo/on dojo/query dojo/NodeList-manipulate dojo/when dijit/form/Select esri/lang jimu/dijit/Popup jimu/dijit/LoadingIndicator jimu/utils jimu/statisticsUtils".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g) {
                    return p([e], {
                        statInfo: null,
                        postMixInProperties: function() {
                            this.nls = window.jimuNls.fieldStatistics;
                            f.mixin(this.nls, window.jimuNls.common)
                        },
                        showContent: function(a) {
                            this.statInfo = a;
                            0 !== this.statInfo.fieldNames.length && (a = h.create("div", {
                                className: "stat-container"
                            }, this.domNode), this._createFieldDom(a), 1 === this.statInfo.fieldNames.length && (this.statInfo.fieldName = this.statInfo.fieldNames[0], this._showOneFieldStatContent(this.statInfo, a)))
                        },
                        showContentAsPopup: function(a) {
                            this.statInfo =
                                a;
                            this._statisticsPopup && this._statisticsPopup.domNode && this._statisticsPopup.close();
                            this._statisticsPopup = null;
                            this._statisticsPopup = new n({
                                titleLabel: this.nls.statistics,
                                content: this.domNode,
                                width: 270,
                                height: 265,
                                buttons: [{
                                    label: this.nls.ok
                                }]
                            });
                            this.showContent(a)
                        },
                        _showOneFieldStatContent: function(a, b) {
                            var c;
                            g.isStatFromServer(this.statInfo) && (c = new r, c.placeAt(b), c.show());
                            g.getStatisticsResult(this.statInfo).then(f.hitch(this, function(a) {
                                c && c.destroy();
                                q(".esriAGOTableStatistics", b).remove();
                                a = this._createStatContent(a);
                                h.place(a, b)
                            }))
                        },
                        _getFieldAliaseFromStatInfo: function(a) {
                            if (this.statInfo.layer) {
                                var b = d.filter(this.statInfo.layer.fields, function(b) {
                                    return b.name === a
                                });
                                return b[0] ? b[0].alias : ""
                            }
                            return this.statInfo.featureSet.fieldAliases ? this.statInfo.featureSet.fieldAliases[a] : a
                        },
                        _createFieldDom: function(a) {
                            var b;
                            if (1 < this.statInfo.fieldNames.length) {
                                b = h.create("div", {
                                    className: "header"
                                }, a);
                                h.create("span", {
                                    innerHTML: this.nls.field + ": "
                                }, b);
                                var g = new c({
                                    options: this.statInfo.fieldNames.map(f.hitch(this,
                                        function(b) {
                                            return {
                                                value: b,
                                                label: this._getFieldAliaseFromStatInfo(b)
                                            }
                                        })),
                                    style: {
                                        width: "150px"
                                    }
                                });
                                this.own(m(g, "change", f.hitch(this, function(b) {
                                    this.statInfo.fieldName = b;
                                    this._showOneFieldStatContent(this.statInfo, a)
                                })));
                                g.placeAt(b);
                                this.statInfo.fieldName = this.statInfo.fieldNames[0];
                                this._showOneFieldStatContent(this.statInfo, a)
                            } else b = h.create("div", {
                                className: "header",
                                innerHTML: "\x3cspan\x3e" + this.nls.field + "\x3c/span\x3e: " + this._getFieldAliaseFromStatInfo(this.statInfo.fieldNames[0])
                            }, a);
                            return b
                        },
                        _createStatContent: function(a) {
                            var b = {},
                                c = "count sum min max ave stddev".split(" "),
                                g, l, k, e, n, r, f, s;
                            g = h.create("div", {
                                className: "esriAGOTableStatistics",
                                innerHTML: ""
                            });
                            h.create("div", {
                                className: "hzLine",
                                innerHTML: ""
                            }, g);
                            l = h.create("table", {
                                className: "attrTable",
                                innerHTML: "",
                                style: {
                                    cellpadding: 0,
                                    cellspacing: 0
                                }
                            }, g);
                            for (n in a) a.hasOwnProperty(n) && (b[n.toLowerCase()] = a[n]);
                            n = b.countfield;
                            s = b.sumfield || "";
                            f = b.minfield || "";
                            r = b.maxfield || "";
                            a = b.avgfield || "";
                            b = b.stddevfield || "";
                            k = h.create("tbody", {}, l);
                            var m = this;
                            d.forEach([n, s, f, r, a, b], function(b, a) {
                                "" !== b && (e = h.create("tr", {
                                    valign: "top"
                                }, k), h.create("td", {
                                    "class": "attrName",
                                    innerHTML: m.nls[c[a]]
                                }, e), h.create("td", {
                                    "class": "attrValue",
                                    innerHTML: b
                                }, e))
                            });
                            h.create("div", {
                                className: "break",
                                innerHTML: ""
                            }, g);
                            return g
                        }
                    })
                })
        },
        "dojo/NodeList-manipulate": function() {
            define("./query ./_base/lang ./_base/array ./dom-construct ./dom-attr ./NodeList-dom".split(" "), function(p, e, f, h, d) {
                function m(a) {
                    for (; a.childNodes[0] && 1 == a.childNodes[0].nodeType;) a = a.childNodes[0];
                    return a
                }

                function q(a, c) {
                    "string" == typeof a ? (a = h.toDom(a, c && c.ownerDocument), 11 == a.nodeType && (a = a.childNodes[0])) : 1 == a.nodeType && a.parentNode && (a = a.cloneNode(!1));
                    return a
                }
                var a = p.NodeList;
                e.extend(a, {
                    _placeMultiple: function(a, c) {
                        for (var d = "string" == typeof a || a.nodeType ? p(a) : a, e = [], r = 0; r < d.length; r++)
                            for (var l = d[r], g = this.length, f = g - 1, b; b = this[f]; f--) 0 < r && (b = this._cloneNode(b), e.unshift(b)), f == g - 1 ? h.place(b, l, c) : l.parentNode.insertBefore(b, l), l = b;
                        e.length && (e.unshift(0), e.unshift(this.length - 1), Array.prototype.splice.apply(this,
                            e));
                        return this
                    },
                    innerHTML: function(a) {
                        return arguments.length ? this.addContent(a, "only") : this[0].innerHTML
                    },
                    text: function(a) {
                        if (arguments.length) {
                            for (var c = 0, e; e = this[c]; c++) 1 == e.nodeType && d.set(e, "textContent", a);
                            return this
                        }
                        for (var n = "", c = 0; e = this[c]; c++) n += d.get(e, "textContent");
                        return n
                    },
                    val: function(a) {
                        if (arguments.length) {
                            for (var c = e.isArray(a), d = 0, n; n = this[d]; d++) {
                                var r = n.nodeName.toUpperCase(),
                                    l = n.type,
                                    g = c ? a[d] : a;
                                if ("SELECT" == r) {
                                    r = n.options;
                                    for (l = 0; l < r.length; l++) {
                                        var m = r[l];
                                        m.selected = n.multiple ?
                                            -1 != f.indexOf(a, m.value) : m.value == g
                                    }
                                } else "checkbox" == l || "radio" == l ? n.checked = n.value == g : n.value = g
                            }
                            return this
                        }
                        if ((n = this[0]) && 1 == n.nodeType) {
                            a = n.value || "";
                            if ("SELECT" == n.nodeName.toUpperCase() && n.multiple) {
                                a = [];
                                r = n.options;
                                for (l = 0; l < r.length; l++) m = r[l], m.selected && a.push(m.value);
                                a.length || (a = null)
                            }
                            return a
                        }
                    },
                    append: function(a) {
                        return this.addContent(a, "last")
                    },
                    appendTo: function(a) {
                        return this._placeMultiple(a, "last")
                    },
                    prepend: function(a) {
                        return this.addContent(a, "first")
                    },
                    prependTo: function(a) {
                        return this._placeMultiple(a,
                            "first")
                    },
                    after: function(a) {
                        return this.addContent(a, "after")
                    },
                    insertAfter: function(a) {
                        return this._placeMultiple(a, "after")
                    },
                    before: function(a) {
                        return this.addContent(a, "before")
                    },
                    insertBefore: function(a) {
                        return this._placeMultiple(a, "before")
                    },
                    remove: a.prototype.orphan,
                    wrap: function(a) {
                        if (this[0]) {
                            a = q(a, this[0]);
                            for (var c = 0, d; d = this[c]; c++) {
                                var e = this._cloneNode(a);
                                d.parentNode && d.parentNode.replaceChild(e, d);
                                m(e).appendChild(d)
                            }
                        }
                        return this
                    },
                    wrapAll: function(a) {
                        if (this[0]) {
                            a = q(a, this[0]);
                            this[0].parentNode.replaceChild(a,
                                this[0]);
                            a = m(a);
                            for (var c = 0, d; d = this[c]; c++) a.appendChild(d)
                        }
                        return this
                    },
                    wrapInner: function(a) {
                        if (this[0]) {
                            a = q(a, this[0]);
                            for (var c = 0; c < this.length; c++) {
                                var d = this._cloneNode(a);
                                this._wrap(e._toArray(this[c].childNodes), null, this._NodeListCtor).wrapAll(d)
                            }
                        }
                        return this
                    },
                    replaceWith: function(a) {
                        a = this._normalize(a, this[0]);
                        for (var c = 0, d; d = this[c]; c++) this._place(a, d, "before", 0 < c), d.parentNode.removeChild(d);
                        return this
                    },
                    replaceAll: function(a) {
                        a = p(a);
                        for (var c = this._normalize(this, this[0]), d = 0, e; e =
                            a[d]; d++) this._place(c, e, "before", 0 < d), e.parentNode.removeChild(e);
                        return this
                    },
                    clone: function() {
                        for (var a = [], c = 0; c < this.length; c++) a.push(this._cloneNode(this[c]));
                        return this._wrap(a, this, this._NodeListCtor)
                    }
                });
                a.prototype.html || (a.prototype.html = a.prototype.innerHTML);
                return a
            })
        },
        "dijit/form/Select": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/dom-class dojo/dom-geometry dojo/i18n dojo/keys dojo/_base/lang dojo/on dojo/sniff ./_FormSelectWidget ../_HasDropDown ../DropDownMenu ../MenuItem ../MenuSeparator ../Tooltip ../_KeyNavMixin ../registry dojo/text!./templates/Select.html dojo/i18n!./nls/validate".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w) {
                    function z(b) {
                        return function(c) {
                            this._isLoaded ? this.inherited(b, arguments) : this.loadDropDown(a.hitch(this, b, c))
                        }
                    }
                    var A = e("dijit.form._SelectMenu", r, {
                        autoFocus: !0,
                        buildRendering: function() {
                            this.inherited(arguments);
                            this.domNode.setAttribute("role", "listbox")
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.own(k(this.domNode, "selectstart", function(b) {
                                b.preventDefault();
                                b.stopPropagation()
                            }))
                        },
                        focus: function() {
                            var b = !1,
                                c = this.parentWidget.value;
                            a.isArray(c) && (c = c[c.length - 1]);
                            c && p.forEach(this.parentWidget._getChildren(), function(a) {
                                a.option && c === a.option.value && (b = !0, this.focusChild(a, !1))
                            }, this);
                            b || this.inherited(arguments)
                        }
                    });
                    d = e("dijit.form.Select" + (c("dojo-bidi") ? "_NoBidi" : ""), [s, n, b], {
                        baseClass: "dijitSelect dijitValidationTextBox",
                        templateString: w,
                        _buttonInputDisabled: c("ie") ? "disabled" : "",
                        required: !1,
                        state: "",
                        message: "",
                        tooltipPosition: [],
                        emptyLabel: "\x26#160;",
                        _isLoaded: !1,
                        _childrenLoaded: !1,
                        labelType: "html",
                        _fillContent: function() {
                            this.inherited(arguments);
                            if (this.options.length && !this.value && this.srcNodeRef) {
                                var b = this.srcNodeRef.selectedIndex || 0;
                                this._set("value", this.options[0 <= b ? b : 0].value)
                            }
                            this.dropDown = new A({
                                id: this.id + "_menu",
                                parentWidget: this
                            });
                            h.add(this.dropDown.domNode, this.baseClass.replace(/\s+|$/g, "Menu "))
                        },
                        _getMenuItemForOption: function(b) {
                            if (!b.value && !b.label) return new g({
                                ownerDocument: this.ownerDocument
                            });
                            var c = a.hitch(this, "_setValueAttr", b);
                            b = new l({
                                option: b,
                                label: ("text" === this.labelType ? (b.label || "").toString().replace(/&/g,
                                    "\x26amp;").replace(/</g, "\x26lt;") : b.label) || this.emptyLabel,
                                onClick: c,
                                ownerDocument: this.ownerDocument,
                                dir: this.dir,
                                textDir: this.textDir,
                                disabled: b.disabled || !1
                            });
                            b.focusNode.setAttribute("role", "option");
                            return b
                        },
                        _addOptionItem: function(b) {
                            this.dropDown && this.dropDown.addChild(this._getMenuItemForOption(b))
                        },
                        _getChildren: function() {
                            return !this.dropDown ? [] : this.dropDown.getChildren()
                        },
                        focus: function() {
                            if (!this.disabled && this.focusNode.focus) try {
                                this.focusNode.focus()
                            } catch (b) {}
                        },
                        focusChild: function(b) {
                            b &&
                                this.set("value", b.option)
                        },
                        _getFirst: function() {
                            var b = this._getChildren();
                            return b.length ? b[0] : null
                        },
                        _getLast: function() {
                            var b = this._getChildren();
                            return b.length ? b[b.length - 1] : null
                        },
                        childSelector: function(b) {
                            return (b = v.byNode(b)) && b.getParent() == this.dropDown
                        },
                        onKeyboardSearch: function(b, a, c, g) {
                            b && this.focusChild(b)
                        },
                        _loadChildren: function(b) {
                            if (!0 === b)
                                if (this.dropDown && (delete this.dropDown.focusedChild, this.focusedChild = null), this.options.length) this.inherited(arguments);
                                else {
                                    p.forEach(this._getChildren(),
                                        function(b) {
                                            b.destroyRecursive()
                                        });
                                    var a = new l({
                                        ownerDocument: this.ownerDocument,
                                        label: this.emptyLabel
                                    });
                                    this.dropDown.addChild(a)
                                }
                            else this._updateSelection();
                            this._isLoaded = !1;
                            this._childrenLoaded = !0;
                            this._loadingStore || this._setValueAttr(this.value, !1)
                        },
                        _refreshState: function() {
                            this._started && this.validate(this.focused)
                        },
                        startup: function() {
                            this.inherited(arguments);
                            this._refreshState()
                        },
                        _setValueAttr: function(b) {
                            this.inherited(arguments);
                            f.set(this.valueNode, "value", this.get("value"));
                            this._refreshState()
                        },
                        _setNameAttr: "valueNode",
                        _setDisabledAttr: function(b) {
                            this.inherited(arguments);
                            this._refreshState()
                        },
                        _setRequiredAttr: function(b) {
                            this._set("required", b);
                            this.focusNode.setAttribute("aria-required", b);
                            this._refreshState()
                        },
                        _setOptionsAttr: function(b) {
                            this._isLoaded = !1;
                            this._set("options", b)
                        },
                        _setDisplay: function(b) {
                            b = ("text" === this.labelType ? (b || "").replace(/&/g, "\x26amp;").replace(/</g, "\x26lt;") : b) || this.emptyLabel;
                            this.containerNode.innerHTML = '\x3cspan role\x3d"option" aria-selected\x3d"true" class\x3d"dijitReset dijitInline ' +
                                this.baseClass.replace(/\s+|$/g, "Label ") + '"\x3e' + b + "\x3c/span\x3e"
                        },
                        validate: function(b) {
                            b = this.disabled || this.isValid(b);
                            this._set("state", b ? "" : this._hasBeenBlurred ? "Error" : "Incomplete");
                            this.focusNode.setAttribute("aria-invalid", b ? "false" : "true");
                            var a = b ? "" : this._missingMsg;
                            a && this.focused && this._hasBeenBlurred ? t.show(a, this.domNode, this.tooltipPosition, !this.isLeftToRight()) : t.hide(this.domNode);
                            this._set("message", a);
                            return b
                        },
                        isValid: function() {
                            return !this.required || 0 === this.value || !/^\s*$/.test(this.value ||
                                "")
                        },
                        reset: function() {
                            this.inherited(arguments);
                            t.hide(this.domNode);
                            this._refreshState()
                        },
                        postMixInProperties: function() {
                            this.inherited(arguments);
                            this._missingMsg = m.getLocalization("dijit.form", "validate", this.lang).missingMessage
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.own(k(this.domNode, "selectstart", function(b) {
                                b.preventDefault();
                                b.stopPropagation()
                            }));
                            this.domNode.setAttribute("aria-expanded", "false");
                            var b = this._keyNavCodes;
                            delete b[q.LEFT_ARROW];
                            delete b[q.RIGHT_ARROW]
                        },
                        _setStyleAttr: function(b) {
                            this.inherited(arguments);
                            h.toggle(this.domNode, this.baseClass.replace(/\s+|$/g, "FixedWidth "), !!this.domNode.style.width)
                        },
                        isLoaded: function() {
                            return this._isLoaded
                        },
                        loadDropDown: function(b) {
                            this._loadChildren(!0);
                            this._isLoaded = !0;
                            b()
                        },
                        destroy: function(b) {
                            this.dropDown && !this.dropDown._destroyed && (this.dropDown.destroyRecursive(b), delete this.dropDown);
                            t.hide(this.domNode);
                            this.inherited(arguments)
                        },
                        _onFocus: function() {
                            this.validate(!0)
                        },
                        _onBlur: function() {
                            t.hide(this.domNode);
                            this.inherited(arguments);
                            this.validate(!1)
                        }
                    });
                    c("dojo-bidi") && (d = e("dijit.form.Select", d, {
                        _setDisplay: function(b) {
                            this.inherited(arguments);
                            this.applyTextDir(this.containerNode)
                        }
                    }));
                    d._Menu = A;
                    d.prototype._onContainerKeydown = z("_onContainerKeydown");
                    d.prototype._onContainerKeypress = z("_onContainerKeypress");
                    return d
                })
        },
        "dijit/form/_FormSelectWidget": function() {
            define("dojo/_base/array dojo/_base/Deferred dojo/aspect dojo/data/util/sorter dojo/_base/declare dojo/dom dojo/dom-class dojo/_base/kernel dojo/_base/lang dojo/query dojo/when dojo/store/util/QueryResults ./_FormValueWidget".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r) {
                    return d("dijit.form._FormSelectWidget", r, {
                        multiple: !1,
                        options: null,
                        store: null,
                        _setStoreAttr: function(a) {
                            this._created && this._deprecatedSetStore(a)
                        },
                        query: null,
                        _setQueryAttr: function(a) {
                            this._created && this._deprecatedSetStore(this.store, this.selectedValue, {
                                query: a
                            })
                        },
                        queryOptions: null,
                        _setQueryOptionsAttr: function(a) {
                            this._created && this._deprecatedSetStore(this.store, this.selectedValue, {
                                queryOptions: a
                            })
                        },
                        labelAttr: "",
                        onFetch: null,
                        sortByLabel: !0,
                        loadChildrenOnOpen: !1,
                        onLoadDeferred: null,
                        getOptions: function(a) {
                            var c = this.options || [];
                            if (null == a) return c;
                            if (k.isArrayLike(a)) return p.map(a, "return this.getOptions(item);", this);
                            k.isString(a) && (a = {
                                value: a
                            });
                            k.isObject(a) && (p.some(c, function(c, b) {
                                for (var g in a)
                                    if (!(g in c) || c[g] != a[g]) return !1;
                                a = b;
                                return !0
                            }) || (a = -1));
                            return 0 <= a && a < c.length ? c[a] : null
                        },
                        addOption: function(a) {
                            p.forEach(k.isArrayLike(a) ? a : [a], function(a) {
                                a && k.isObject(a) && this.options.push(a)
                            }, this);
                            this._loadChildren()
                        },
                        removeOption: function(a) {
                            a = this.getOptions(k.isArrayLike(a) ?
                                a : [a]);
                            p.forEach(a, function(a) {
                                a && (this.options = p.filter(this.options, function(c) {
                                    return c.value !== a.value || c.label !== a.label
                                }), this._removeOptionItem(a))
                            }, this);
                            this._loadChildren()
                        },
                        updateOption: function(a) {
                            p.forEach(k.isArrayLike(a) ? a : [a], function(a) {
                                var c = this.getOptions({
                                        value: a.value
                                    }),
                                    b;
                                if (c)
                                    for (b in a) c[b] = a[b]
                            }, this);
                            this._loadChildren()
                        },
                        setStore: function(c, g, k) {
                            a.deprecated(this.declaredClass + "::setStore(store, selectedValue, fetchArgs) is deprecated. Use set('query', fetchArgs.query), set('queryOptions', fetchArgs.queryOptions), set('store', store), or set('value', selectedValue) instead.",
                                "", "2.0");
                            this._deprecatedSetStore(c, g, k)
                        },
                        _deprecatedSetStore: function(a, c, d) {
                            var b = this.store;
                            d = d || {};
                            if (b !== a) {
                                for (var r; r = this._notifyConnections.pop();) r.remove();
                                a.get || (k.mixin(a, {
                                    _oldAPI: !0,
                                    get: function(b) {
                                        var a = new e;
                                        this.fetchItemByIdentity({
                                            identity: b,
                                            onItem: function(b) {
                                                a.resolve(b)
                                            },
                                            onError: function(b) {
                                                a.reject(b)
                                            }
                                        });
                                        return a.promise
                                    },
                                    query: function(b, a) {
                                        var c = new e(function() {
                                            g.abort && g.abort()
                                        });
                                        c.total = new e;
                                        var g = this.fetch(k.mixin({
                                            query: b,
                                            onBegin: function(b) {
                                                c.total.resolve(b)
                                            },
                                            onComplete: function(b) {
                                                c.resolve(b)
                                            },
                                            onError: function(b) {
                                                c.reject(b)
                                            }
                                        }, a));
                                        return new n(c)
                                    }
                                }), a.getFeatures()["dojo.data.api.Notification"] && (this._notifyConnections = [f.after(a, "onNew", k.hitch(this, "_onNewItem"), !0), f.after(a, "onDelete", k.hitch(this, "_onDeleteItem"), !0), f.after(a, "onSet", k.hitch(this, "_onSetItem"), !0)]));
                                this._set("store", a)
                            }
                            this.options && this.options.length && this.removeOption(this.options);
                            this._queryRes && this._queryRes.close && this._queryRes.close();
                            this._observeHandle && this._observeHandle.remove &&
                                (this._observeHandle.remove(), this._observeHandle = null);
                            d.query && this._set("query", d.query);
                            d.queryOptions && this._set("queryOptions", d.queryOptions);
                            a && a.query && (this._loadingStore = !0, this.onLoadDeferred = new e, this._queryRes = a.query(this.query, this.queryOptions), s(this._queryRes, k.hitch(this, function(b) {
                                if (this.sortByLabel && !d.sort && b.length)
                                    if (a.getValue) b.sort(h.createSortFunction([{
                                        attribute: a.getLabelAttributes(b[0])[0]
                                    }], a));
                                    else {
                                        var e = this.labelAttr;
                                        b.sort(function(b, a) {
                                            return b[e] > a[e] ? 1 : a[e] >
                                                b[e] ? -1 : 0
                                        })
                                    }
                                d.onFetch && (b = d.onFetch.call(this, b, d));
                                p.forEach(b, function(b) {
                                    this._addOptionForItem(b)
                                }, this);
                                this._queryRes.observe && (this._observeHandle = this._queryRes.observe(k.hitch(this, function(b, a, c) {
                                    a == c ? this._onSetItem(b) : (-1 != a && this._onDeleteItem(b), -1 != c && this._onNewItem(b))
                                }), !0));
                                this._loadingStore = !1;
                                this.set("value", "_pendingValue" in this ? this._pendingValue : c);
                                delete this._pendingValue;
                                this.loadChildrenOnOpen ? this._pseudoLoadChildren(b) : this._loadChildren();
                                this.onLoadDeferred.resolve(!0);
                                this.onSetStore()
                            }), k.hitch(this, function(b) {
                                console.error("dijit.form.Select: " + b.toString());
                                this.onLoadDeferred.reject(b)
                            })));
                            return b
                        },
                        _setValueAttr: function(a, c) {
                            this._onChangeActive || (c = null);
                            if (this._loadingStore) this._pendingValue = a;
                            else if (null != a) {
                                a = k.isArrayLike(a) ? p.map(a, function(b) {
                                    return k.isObject(b) ? b : {
                                        value: b
                                    }
                                }) : k.isObject(a) ? [a] : [{
                                    value: a
                                }];
                                a = p.filter(this.getOptions(a), function(b) {
                                    return b && b.value
                                });
                                var d = this.getOptions() || [];
                                if (!this.multiple && (!a[0] || !a[0].value) && d.length) a[0] =
                                    d[0];
                                p.forEach(d, function(b) {
                                    b.selected = p.some(a, function(a) {
                                        return a.value === b.value
                                    })
                                });
                                d = p.map(a, function(b) {
                                    return b.value
                                });
                                if (!("undefined" == typeof d || "undefined" == typeof d[0])) {
                                    var b = p.map(a, function(b) {
                                        return b.label
                                    });
                                    this._setDisplay(this.multiple ? b : b[0]);
                                    this.inherited(arguments, [this.multiple ? d : d[0], c]);
                                    this._updateSelection()
                                }
                            }
                        },
                        _getDisplayedValueAttr: function() {
                            var a = p.map([].concat(this.get("selectedOptions")), function(a) {
                                return a && "label" in a ? a.label : a ? a.value : null
                            }, this);
                            return this.multiple ?
                                a : a[0]
                        },
                        _setDisplayedValueAttr: function(a) {
                            this.set("value", this.getOptions("string" == typeof a ? {
                                label: a
                            } : a))
                        },
                        _loadChildren: function() {
                            this._loadingStore || (p.forEach(this._getChildren(), function(a) {
                                a.destroyRecursive()
                            }), p.forEach(this.options, this._addOptionItem, this), this._updateSelection())
                        },
                        _updateSelection: function() {
                            this.focusedChild = null;
                            this._set("value", this._getValueFromOpts());
                            var a = [].concat(this.value);
                            if (a && a[0]) {
                                var c = this;
                                p.forEach(this._getChildren(), function(d) {
                                    var b = p.some(a, function(b) {
                                        return d.option &&
                                            b === d.option.value
                                    });
                                    b && !c.multiple && (c.focusedChild = d);
                                    q.toggle(d.domNode, this.baseClass.replace(/\s+|$/g, "SelectedOption "), b);
                                    d.domNode.setAttribute("aria-selected", b ? "true" : "false")
                                }, this)
                            }
                        },
                        _getValueFromOpts: function() {
                            var a = this.getOptions() || [];
                            if (!this.multiple && a.length) {
                                var c = p.filter(a, function(a) {
                                    return a.selected
                                })[0];
                                if (c && c.value) return c.value;
                                a[0].selected = !0;
                                return a[0].value
                            }
                            return this.multiple ? p.map(p.filter(a, function(a) {
                                return a.selected
                            }), function(a) {
                                return a.value
                            }) || [] : ""
                        },
                        _onNewItem: function(a, c) {
                            (!c || !c.parent) && this._addOptionForItem(a)
                        },
                        _onDeleteItem: function(a) {
                            this.removeOption({
                                value: this.store.getIdentity(a)
                            })
                        },
                        _onSetItem: function(a) {
                            this.updateOption(this._getOptionObjForItem(a))
                        },
                        _getOptionObjForItem: function(a) {
                            var c = this.store,
                                d = this.labelAttr && this.labelAttr in a ? a[this.labelAttr] : c.getLabel(a);
                            return {
                                value: d ? c.getIdentity(a) : null,
                                label: d,
                                item: a
                            }
                        },
                        _addOptionForItem: function(a) {
                            var c = this.store;
                            c.isItemLoaded && !c.isItemLoaded(a) ? c.loadItem({
                                item: a,
                                onItem: function(a) {
                                    this._addOptionForItem(a)
                                },
                                scope: this
                            }) : (a = this._getOptionObjForItem(a), this.addOption(a))
                        },
                        constructor: function(a) {
                            this._oValue = (a || {}).value || null;
                            this._notifyConnections = []
                        },
                        buildRendering: function() {
                            this.inherited(arguments);
                            m.setSelectable(this.focusNode, !1)
                        },
                        _fillContent: function() {
                            this.options || (this.options = this.srcNodeRef ? c("\x3e *", this.srcNodeRef).map(function(c) {
                                return "separator" === c.getAttribute("type") ? {
                                    value: "",
                                    label: "",
                                    selected: !1,
                                    disabled: !1
                                } : {
                                    value: c.getAttribute("data-" + a._scopeName + "-value") || c.getAttribute("value"),
                                    label: String(c.innerHTML),
                                    selected: c.getAttribute("selected") || !1,
                                    disabled: c.getAttribute("disabled") || !1
                                }
                            }, this) : []);
                            this.value ? this.multiple && "string" == typeof this.value && this._set("value", this.value.split(",")) : this._set("value", this._getValueFromOpts())
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            f.after(this, "onChange", k.hitch(this, "_updateSelection"));
                            var a = this.store;
                            if (a && (a.getIdentity || a.getFeatures()["dojo.data.api.Identity"])) this.store = null, this._deprecatedSetStore(a, this._oValue, {
                                query: this.query,
                                queryOptions: this.queryOptions
                            });
                            this._storeInitialized = !0
                        },
                        startup: function() {
                            this._loadChildren();
                            this.inherited(arguments)
                        },
                        destroy: function() {
                            for (var a; a = this._notifyConnections.pop();) a.remove();
                            this._queryRes && this._queryRes.close && this._queryRes.close();
                            this._observeHandle && this._observeHandle.remove && (this._observeHandle.remove(), this._observeHandle = null);
                            this.inherited(arguments)
                        },
                        _addOptionItem: function() {},
                        _removeOptionItem: function() {},
                        _setDisplay: function() {},
                        _getChildren: function() {
                            return []
                        },
                        _getSelectedOptionsAttr: function() {
                            return this.getOptions({
                                selected: !0
                            })
                        },
                        _pseudoLoadChildren: function() {},
                        onSetStore: function() {}
                    })
                })
        },
        "dojo/data/util/sorter": function() {
            define(["../../_base/lang"], function(p) {
                var e = {};
                p.setObject("dojo.data.util.sorter", e);
                e.basicComparator = function(e, h) {
                    var d = -1;
                    null === e && (e = void 0);
                    null === h && (h = void 0);
                    if (e == h) d = 0;
                    else if (e > h || null == e) d = 1;
                    return d
                };
                e.createSortFunction = function(f, h) {
                    function d(a, c, g, d) {
                        return function(b, k) {
                            var e = d.getValue(b, a),
                                n = d.getValue(k,
                                    a);
                            return c * g(e, n)
                        }
                    }
                    for (var m = [], q, a = h.comparatorMap, k = e.basicComparator, c = 0; c < f.length; c++) {
                        q = f[c];
                        var s = q.attribute;
                        if (s) {
                            q = q.descending ? -1 : 1;
                            var n = k;
                            a && ("string" !== typeof s && "toString" in s && (s = s.toString()), n = a[s] || k);
                            m.push(d(s, q, n, h))
                        }
                    }
                    return function(a, c) {
                        for (var g = 0; g < m.length;) {
                            var d = m[g++](a, c);
                            if (0 !== d) return d
                        }
                        return 0
                    }
                };
                return e
            })
        },
        "dojo/store/util/QueryResults": function() {
            define(["../../_base/array", "../../_base/lang", "../../when"], function(p, e, f) {
                var h = function(d) {
                    function m(a) {
                        d[a] =
                            function() {
                                var k = arguments,
                                    c = f(d, function(c) {
                                        Array.prototype.unshift.call(k, c);
                                        return h(p[a].apply(p, k))
                                    });
                                if ("forEach" !== a || q) return c
                            }
                    }
                    if (!d) return d;
                    var q = !!d.then;
                    q && (d = e.delegate(d));
                    m("forEach");
                    m("filter");
                    m("map");
                    null == d.total && (d.total = f(d, function(a) {
                        return a.length
                    }));
                    return d
                };
                e.setObject("dojo.store.util.QueryResults", h);
                return h
            })
        },
        "dijit/DropDownMenu": function() {
            define(["dojo/_base/declare", "dojo/keys", "dojo/text!./templates/Menu.html", "./_MenuBase"], function(p, e, f, h) {
                return p("dijit.DropDownMenu",
                    h, {
                        templateString: f,
                        baseClass: "dijitMenu",
                        _onUpArrow: function() {
                            this.focusPrev()
                        },
                        _onDownArrow: function() {
                            this.focusNext()
                        },
                        _onRightArrow: function(d) {
                            this._moveToPopup(d);
                            d.stopPropagation();
                            d.preventDefault()
                        },
                        _onLeftArrow: function(d) {
                            if (this.parentMenu)
                                if (this.parentMenu._isMenuBar) this.parentMenu.focusPrev();
                                else this.onCancel(!1);
                            else d.stopPropagation(), d.preventDefault()
                        }
                    })
            })
        },
        "dijit/_MenuBase": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-class dojo/_base/lang dojo/mouse dojo/on dojo/window ./a11yclick ./registry ./_Widget ./_CssStateMixin ./_KeyNavContainer ./_TemplatedMixin".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g) {
                    return e("dijit._MenuBase", [n, g, l, r], {
                        selected: null,
                        _setSelectedAttr: function(a) {
                            this.selected != a && (this.selected && (this.selected._setSelected(!1), this._onChildDeselect(this.selected)), a && a._setSelected(!0), this._set("selected", a))
                        },
                        activated: !1,
                        _setActivatedAttr: function(a) {
                            d.toggle(this.domNode, "dijitMenuActive", a);
                            d.toggle(this.domNode, "dijitMenuPassive", !a);
                            this._set("activated", a)
                        },
                        parentMenu: null,
                        popupDelay: 500,
                        passivePopupDelay: Infinity,
                        autoFocus: !1,
                        childSelector: function(a) {
                            var b = s.byNode(a);
                            return a.parentNode == this.containerNode && b && b.focus
                        },
                        postCreate: function() {
                            var g = this,
                                b = "string" == typeof this.childSelector ? this.childSelector : m.hitch(this, "childSelector");
                            this.own(a(this.containerNode, a.selector(b, q.enter), function() {
                                    g.onItemHover(s.byNode(this))
                                }), a(this.containerNode, a.selector(b, q.leave), function() {
                                    g.onItemUnhover(s.byNode(this))
                                }), a(this.containerNode, a.selector(b, c), function(b) {
                                    g.onItemClick(s.byNode(this), b);
                                    b.stopPropagation()
                                }),
                                a(this.containerNode, a.selector(b, "focusin"), function() {
                                    g._onItemFocus(s.byNode(this))
                                }));
                            this.inherited(arguments)
                        },
                        onKeyboardSearch: function(a, b, c, g) {
                            this.inherited(arguments);
                            if (a && (-1 == g || a.popup && 1 == g)) this.onItemClick(a, b)
                        },
                        _keyboardSearchCompare: function(a, b) {
                            return a.shortcutKey ? b == a.shortcutKey.toLowerCase() ? -1 : 0 : this.inherited(arguments) ? 1 : 0
                        },
                        onExecute: function() {},
                        onCancel: function() {},
                        _moveToPopup: function(a) {
                            if (this.focusedChild && this.focusedChild.popup && !this.focusedChild.disabled) this.onItemClick(this.focusedChild,
                                a);
                            else(a = this._getTopMenu()) && a._isMenuBar && a.focusNext()
                        },
                        _onPopupHover: function() {
                            this.set("selected", this.currentPopupItem);
                            this._stopPendingCloseTimer()
                        },
                        onItemHover: function(a) {
                            this.activated ? (this.set("selected", a), a.popup && (!a.disabled && !this.hover_timer) && (this.hover_timer = this.defer(function() {
                                this._openItemPopup(a)
                            }, this.popupDelay))) : Infinity > this.passivePopupDelay && (this.passive_hover_timer && this.passive_hover_timer.remove(), this.passive_hover_timer = this.defer(function() {
                                this.onItemClick(a, {
                                    type: "click"
                                })
                            }, this.passivePopupDelay));
                            this._hoveredChild = a;
                            a._set("hovering", !0)
                        },
                        _onChildDeselect: function(a) {
                            this._stopPopupTimer();
                            this.currentPopupItem == a && (this._stopPendingCloseTimer(), this._pendingClose_timer = this.defer(function() {
                                this.currentPopupItem = this._pendingClose_timer = null;
                                a._closePopup()
                            }, this.popupDelay))
                        },
                        onItemUnhover: function(a) {
                            this._hoveredChild == a && (this._hoveredChild = null);
                            this.passive_hover_timer && (this.passive_hover_timer.remove(), this.passive_hover_timer = null);
                            a._set("hovering", !1)
                        },
                        _stopPopupTimer: function() {
                            this.hover_timer && (this.hover_timer = this.hover_timer.remove())
                        },
                        _stopPendingCloseTimer: function() {
                            this._pendingClose_timer && (this._pendingClose_timer = this._pendingClose_timer.remove())
                        },
                        _getTopMenu: function() {
                            for (var a = this; a.parentMenu; a = a.parentMenu);
                            return a
                        },
                        onItemClick: function(a, b) {
                            this.passive_hover_timer && this.passive_hover_timer.remove();
                            this.focusChild(a);
                            if (a.disabled) return !1;
                            if (a.popup) {
                                this.set("selected", a);
                                this.set("activated", !0);
                                var c = /^key/.test(b._origType ||
                                    b.type) || 0 == b.clientX && 0 == b.clientY;
                                this._openItemPopup(a, c)
                            } else this.onExecute(), a._onClick ? a._onClick(b) : a.onClick(b)
                        },
                        _openItemPopup: function(c, b) {
                            if (c != this.currentPopupItem) {
                                this.currentPopupItem && (this._stopPendingCloseTimer(), this.currentPopupItem._closePopup());
                                this._stopPopupTimer();
                                var g = c.popup;
                                g.parentMenu = this;
                                this.own(this._mouseoverHandle = a.once(g.domNode, "mouseover", m.hitch(this, "_onPopupHover")));
                                var d = this;
                                c._openPopup({
                                    parent: this,
                                    orient: this._orient || ["after", "before"],
                                    onCancel: function() {
                                        b &&
                                            d.focusChild(c);
                                        d._cleanUp()
                                    },
                                    onExecute: m.hitch(this, "_cleanUp", !0),
                                    onClose: function() {
                                        d._mouseoverHandle && (d._mouseoverHandle.remove(), delete d._mouseoverHandle)
                                    }
                                }, b);
                                this.currentPopupItem = c
                            }
                        },
                        onOpen: function() {
                            this.isShowingNow = !0;
                            this.set("activated", !0)
                        },
                        onClose: function() {
                            this.set("activated", !1);
                            this.set("selected", null);
                            this.isShowingNow = !1;
                            this.parentMenu = null
                        },
                        _closeChild: function() {
                            this._stopPopupTimer();
                            this.currentPopupItem && (this.focused && (h.set(this.selected.focusNode, "tabIndex", this.tabIndex),
                                this.selected.focusNode.focus()), this.currentPopupItem._closePopup(), this.currentPopupItem = null)
                        },
                        _onItemFocus: function(a) {
                            if (this._hoveredChild && this._hoveredChild != a) this.onItemUnhover(this._hoveredChild);
                            this.set("selected", a)
                        },
                        _onBlur: function() {
                            this._cleanUp(!0);
                            this.inherited(arguments)
                        },
                        _cleanUp: function(a) {
                            this._closeChild();
                            "undefined" == typeof this.isShowingNow && this.set("activated", !1);
                            a && this.set("selected", null)
                        }
                    })
                })
        },
        "dijit/_KeyNavContainer": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/_base/kernel dojo/keys dojo/_base/lang ./registry ./_Container ./_FocusMixin ./_KeyNavMixin".split(" "),
                function(p, e, f, h, d, m, q, a, k, c) {
                    return e("dijit._KeyNavContainer", [k, c, a], {
                        connectKeyNavHandlers: function(a, c) {
                            var k = this._keyNavCodes = {},
                                l = m.hitch(this, "focusPrev"),
                                g = m.hitch(this, "focusNext");
                            p.forEach(a, function(a) {
                                k[a] = l
                            });
                            p.forEach(c, function(a) {
                                k[a] = g
                            });
                            k[d.HOME] = m.hitch(this, "focusFirstChild");
                            k[d.END] = m.hitch(this, "focusLastChild")
                        },
                        startupKeyNavChildren: function() {
                            h.deprecated("startupKeyNavChildren() call no longer needed", "", "2.0")
                        },
                        startup: function() {
                            this.inherited(arguments);
                            p.forEach(this.getChildren(),
                                m.hitch(this, "_startupChild"))
                        },
                        addChild: function(a, c) {
                            this.inherited(arguments);
                            this._startupChild(a)
                        },
                        _startupChild: function(a) {
                            a.set("tabIndex", "-1")
                        },
                        _getFirst: function() {
                            var a = this.getChildren();
                            return a.length ? a[0] : null
                        },
                        _getLast: function() {
                            var a = this.getChildren();
                            return a.length ? a[a.length - 1] : null
                        },
                        focusNext: function() {
                            this.focusChild(this._getNextFocusableChild(this.focusedChild, 1))
                        },
                        focusPrev: function() {
                            this.focusChild(this._getNextFocusableChild(this.focusedChild, -1), !0)
                        },
                        childSelector: function(a) {
                            return (a =
                                q.byNode(a)) && a.getParent() == this
                        }
                    })
                })
        },
        "dijit/_KeyNavMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/keys dojo/_base/lang dojo/on dijit/registry dijit/_FocusMixin".split(" "), function(p, e, f, h, d, m, q, a) {
                return e("dijit._KeyNavMixin", a, {
                    tabIndex: "0",
                    childSelector: null,
                    postCreate: function() {
                        this.inherited(arguments);
                        f.set(this.domNode, "tabIndex", this.tabIndex);
                        if (!this._keyNavCodes) {
                            var a = this._keyNavCodes = {};
                            a[h.HOME] = d.hitch(this, "focusFirstChild");
                            a[h.END] = d.hitch(this,
                                "focusLastChild");
                            a[this.isLeftToRight() ? h.LEFT_ARROW : h.RIGHT_ARROW] = d.hitch(this, "_onLeftArrow");
                            a[this.isLeftToRight() ? h.RIGHT_ARROW : h.LEFT_ARROW] = d.hitch(this, "_onRightArrow");
                            a[h.UP_ARROW] = d.hitch(this, "_onUpArrow");
                            a[h.DOWN_ARROW] = d.hitch(this, "_onDownArrow")
                        }
                        var c = this,
                            a = "string" == typeof this.childSelector ? this.childSelector : d.hitch(this, "childSelector");
                        this.own(m(this.domNode, "keypress", d.hitch(this, "_onContainerKeypress")), m(this.domNode, "keydown", d.hitch(this, "_onContainerKeydown")), m(this.domNode,
                            "focus", d.hitch(this, "_onContainerFocus")), m(this.containerNode, m.selector(a, "focusin"), function(a) {
                            c._onChildFocus(q.getEnclosingWidget(this), a)
                        }))
                    },
                    _onLeftArrow: function() {},
                    _onRightArrow: function() {},
                    _onUpArrow: function() {},
                    _onDownArrow: function() {},
                    focus: function() {
                        this.focusFirstChild()
                    },
                    _getFirstFocusableChild: function() {
                        return this._getNextFocusableChild(null, 1)
                    },
                    _getLastFocusableChild: function() {
                        return this._getNextFocusableChild(null, -1)
                    },
                    focusFirstChild: function() {
                        this.focusChild(this._getFirstFocusableChild())
                    },
                    focusLastChild: function() {
                        this.focusChild(this._getLastFocusableChild())
                    },
                    focusChild: function(a, c) {
                        a && (this.focusedChild && a !== this.focusedChild && this._onChildBlur(this.focusedChild), a.set("tabIndex", this.tabIndex), a.focus(c ? "end" : "start"))
                    },
                    _onContainerFocus: function(a) {
                        a.target !== this.domNode || this.focusedChild || this.focus()
                    },
                    _onFocus: function() {
                        f.set(this.domNode, "tabIndex", "-1");
                        this.inherited(arguments)
                    },
                    _onBlur: function(a) {
                        f.set(this.domNode, "tabIndex", this.tabIndex);
                        this.focusedChild && (this.focusedChild.set("tabIndex",
                            "-1"), this.lastFocusedChild = this.focusedChild, this._set("focusedChild", null));
                        this.inherited(arguments)
                    },
                    _onChildFocus: function(a) {
                        a && a != this.focusedChild && (this.focusedChild && !this.focusedChild._destroyed && this.focusedChild.set("tabIndex", "-1"), a.set("tabIndex", this.tabIndex), this.lastFocused = a, this._set("focusedChild", a))
                    },
                    _searchString: "",
                    multiCharSearchDuration: 1E3,
                    onKeyboardSearch: function(a, c, d, e) {
                        a && this.focusChild(a)
                    },
                    _keyboardSearchCompare: function(a, c) {
                        var d = a.domNode,
                            d = (a.label || (d.focusNode ?
                                d.focusNode.label : "") || d.innerText || d.textContent || "").replace(/^\s+/, "").substr(0, c.length).toLowerCase();
                        return c.length && d == c ? -1 : 0
                    },
                    _isFormElement: function(a) {
                        return "INPUT" === a.tagName || "TEXTAREA" === a.tagName || "SELECT" === a.tagName || "BUTTON" === a.tagName
                    },
                    _onContainerKeydown: function(a) {
                        if (!this._isFormElement(document.activeElement)) {
                            var c = this._keyNavCodes[a.keyCode];
                            c ? (c(a, this.focusedChild), a.stopPropagation(), a.preventDefault(), this._searchString = "") : a.keyCode == h.SPACE && (this._searchTimer &&
                                !a.ctrlKey && !a.altKey && !a.metaKey) && (a.stopImmediatePropagation(), a.preventDefault(), this._keyboardSearch(a, " "))
                        }
                    },
                    _onContainerKeypress: function(a) {
                        if (!this._isFormElement(document.activeElement) && !(a.charCode <= h.SPACE || a.ctrlKey || a.altKey || a.metaKey)) a.preventDefault(), a.stopPropagation(), this._keyboardSearch(a, String.fromCharCode(a.charCode).toLowerCase())
                    },
                    _keyboardSearch: function(a, c) {
                        var e = null,
                            n, r = 0;
                        d.hitch(this, function() {
                            this._searchTimer && this._searchTimer.remove();
                            this._searchString += c;
                            var a = /^(.)\1*$/.test(this._searchString) ? 1 : this._searchString.length;
                            n = this._searchString.substr(0, a);
                            this._searchTimer = this.defer(function() {
                                this._searchTimer = null;
                                this._searchString = ""
                            }, this.multiCharSearchDuration);
                            var g = this.focusedChild || null;
                            if (1 == a || !g)
                                if (g = this._getNextFocusableChild(g, 1), !g) return;
                            a = g;
                            do {
                                var d = this._keyboardSearchCompare(g, n);
                                d && 0 == r++ && (e = g);
                                if (-1 == d) {
                                    r = -1;
                                    break
                                }
                                g = this._getNextFocusableChild(g, 1)
                            } while (g && g != a)
                        })();
                        this.onKeyboardSearch(e, a, n, r)
                    },
                    _onChildBlur: function() {},
                    _getNextFocusableChild: function(a, c) {
                        var d = a;
                        do {
                            if (a) a = this._getNext(a, c);
                            else if (a = this[0 < c ? "_getFirst" : "_getLast"](), !a) break;
                            if (null != a && a != d && a.isFocusable()) return a
                        } while (a != d);
                        return null
                    },
                    _getFirst: function() {
                        return null
                    },
                    _getLast: function() {
                        return null
                    },
                    _getNext: function(a, c) {
                        if (a)
                            for (a = a.domNode; a;)
                                if ((a = a[0 > c ? "previousSibling" : "nextSibling"]) && "getAttribute" in a) {
                                    var d = q.byNode(a);
                                    if (d) return d
                                }
                        return null
                    }
                })
            })
        },
        "dijit/MenuItem": function() {
            define("dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-class dojo/_base/kernel dojo/sniff dojo/_base/lang ./_Widget ./_TemplatedMixin ./_Contained ./_CssStateMixin dojo/text!./templates/MenuItem.html".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n) {
                    q = p("dijit.MenuItem" + (m("dojo-bidi") ? "_NoBidi" : ""), [a, k, c, s], {
                        templateString: n,
                        baseClass: "dijitMenuItem",
                        label: "",
                        _setLabelAttr: function(a) {
                            this._set("label", a);
                            var c = "",
                                g;
                            g = a.search(/{\S}/);
                            if (0 <= g) {
                                var c = a.charAt(g + 1),
                                    d = a.substr(0, g);
                                a = a.substr(g + 3);
                                g = d + c + a;
                                a = d + '\x3cspan class\x3d"dijitMenuItemShortcutKey"\x3e' + c + "\x3c/span\x3e" + a
                            } else g = a;
                            this.domNode.setAttribute("aria-label", g + " " + this.accelKey);
                            this.containerNode.innerHTML = a;
                            this._set("shortcutKey", c)
                        },
                        iconClass: "dijitNoIcon",
                        _setIconClassAttr: {
                            node: "iconNode",
                            type: "class"
                        },
                        accelKey: "",
                        disabled: !1,
                        _fillContent: function(a) {
                            a && !("label" in this.params) && this._set("label", a.innerHTML)
                        },
                        buildRendering: function() {
                            this.inherited(arguments);
                            f.set(this.containerNode, "id", this.id + "_text");
                            this.accelKeyNode && f.set(this.accelKeyNode, "id", this.id + "_accel");
                            e.setSelectable(this.domNode, !1)
                        },
                        onClick: function() {},
                        focus: function() {
                            try {
                                8 == m("ie") && this.containerNode.focus(), this.focusNode.focus()
                            } catch (a) {}
                        },
                        _setSelected: function(a) {
                            h.toggle(this.domNode,
                                "dijitMenuItemSelected", a)
                        },
                        setLabel: function(a) {
                            d.deprecated("dijit.MenuItem.setLabel() is deprecated.  Use set('label', ...) instead.", "", "2.0");
                            this.set("label", a)
                        },
                        setDisabled: function(a) {
                            d.deprecated("dijit.Menu.setDisabled() is deprecated.  Use set('disabled', bool) instead.", "", "2.0");
                            this.set("disabled", a)
                        },
                        _setDisabledAttr: function(a) {
                            this.focusNode.setAttribute("aria-disabled", a ? "true" : "false");
                            this._set("disabled", a)
                        },
                        _setAccelKeyAttr: function(a) {
                            this.accelKeyNode && (this.accelKeyNode.style.display =
                                a ? "" : "none", this.accelKeyNode.innerHTML = a, f.set(this.containerNode, "colSpan", a ? "1" : "2"));
                            this._set("accelKey", a)
                        }
                    });
                    m("dojo-bidi") && (q = p("dijit.MenuItem", q, {
                        _setLabelAttr: function(a) {
                            this.inherited(arguments);
                            "auto" === this.textDir && this.applyTextDir(this.textDirNode)
                        }
                    }));
                    return q
                })
        },
        "dijit/_Contained": function() {
            define(["dojo/_base/declare", "./registry"], function(p, e) {
                return p("dijit._Contained", null, {
                    _getSibling: function(e) {
                        var h = this.getParent();
                        return h && h._getSiblingOfChild && h._getSiblingOfChild(this,
                            "previous" == e ? -1 : 1) || null
                    },
                    getPreviousSibling: function() {
                        return this._getSibling("previous")
                    },
                    getNextSibling: function() {
                        return this._getSibling("next")
                    },
                    getIndexInParent: function() {
                        var e = this.getParent();
                        return !e || !e.getIndexOfChild ? -1 : e.getIndexOfChild(this)
                    }
                })
            })
        },
        "dijit/MenuSeparator": function() {
            define("dojo/_base/declare dojo/dom ./_WidgetBase ./_TemplatedMixin ./_Contained dojo/text!./templates/MenuSeparator.html".split(" "), function(p, e, f, h, d, m) {
                return p("dijit.MenuSeparator", [f, h, d], {
                    templateString: m,
                    buildRendering: function() {
                        this.inherited(arguments);
                        e.setSelectable(this.domNode, !1)
                    },
                    isFocusable: function() {
                        return !1
                    }
                })
            })
        },
        "jimu/statisticsUtils": function() {
            define("dojo/_base/array dojo/when esri/tasks/StatisticDefinition esri/tasks/QueryTask esri/tasks/query esri/lang jimu/utils jimu/LayerInfos/LayerInfos exports".split(" "), function(p, e, f, h, d, m, q, a, k) {
                function c(a) {
                    var c;
                    c = new d;
                    c.outFields = [a.fieldName];
                    c.outStatistics = [];
                    c.geometry = a.geometry;
                    var l = n(a);
                    p.forEach(l, function(g) {
                        var d = new f;
                        d.statisticType =
                            g;
                        d.displayFeildName = a.fieldName;
                        d.onStatisticField = a.fieldName;
                        d.outStatisticFieldName = b[g];
                        c.outStatistics.push(d)
                    });
                    c.where = a.filterExpression ? a.filterExpression : a.layer.getDefinitionExpression() ? a.layer.getDefinitionExpression() : "1\x3d1";
                    a.geometry && (c.geometry = a.geometry);
                    return (new h(a.layer.url)).execute(c).then(function(b) {
                        return b && b.features && 0 < b.features.length ? (b = b.features[0].attributes, g(a, b), b) : []
                    })
                }

                function s(b) {
                    var a = {
                            countField: 0,
                            sumField: 0
                        },
                        c = n(b),
                        d = 0,
                        l = 0;
                    b.featureSet.features.forEach(function(g) {
                        var e =
                            g.attributes[b.fieldName];
                        null === e || "undefined" === typeof e || c.forEach(function(b) {
                            switch (b) {
                                case "count":
                                    a.countField++;
                                    break;
                                case "sum":
                                    a.sumField += e;
                                    break;
                                case "min":
                                    a.minField = "undefined" === typeof a.minField ? e : Math.min(a.minField, e);
                                    break;
                                case "max":
                                    a.maxField = "undefined" === typeof a.maxField ? e : Math.max(a.maxField, e);
                                    break;
                                case "avg":
                                    d++, l += e
                            }
                        })
                    });
                    if (0 === d) return e({
                        countField: 0
                    });
                    a.avgField = 0 === d ? "" : l / d;
                    var k = b.featureSet.features.filter(function(a) {
                        a = a.attributes[b.fieldName];
                        return null === a ||
                            "undefined" === typeof a ? !1 : !0
                    }).map(function(a) {
                        return a.attributes[b.fieldName]
                    });
                    a.stddevField = r(k);
                    g(b, a);
                    return e(a)
                }

                function n(b) {
                    return b.statisticTypes && 0 < b.statisticTypes.length ? t.filter(function(a) {
                        return -1 < b.statisticTypes.indexOf(a)
                    }) : t
                }

                function r(b) {
                    var a = b.length;
                    if (1 >= a) return 0;
                    var c = 0;
                    b.forEach(function(b) {
                        c += b
                    });
                    var g = c / a,
                        d = 0;
                    b.forEach(function(b) {
                        d += Math.pow(b - g, 2)
                    });
                    return Math.sqrt(1 / (a - 1) * d)
                }

                function l(b) {
                    var c = a.getInstanceSync();
                    return b.layer ? c.getLayerInfoById(b.layer.id).loadInfoTemplate().then(function(b) {
                        var a = {};
                        b.info && b.info.fieldInfos && b.info.fieldInfos.forEach(function(b) {
                            a[b.fieldName] = b
                        });
                        return a
                    }) : e({})
                }

                function g(b, a) {
                    if (b.fieldInfos[b.fieldName])
                        for (var c in a) "countField" !== c && m.isDefined(a[c]) && (a[c] = null === a[c] || "undefined" === typeof a[c] ? "" : q.localizeNumberByFieldInfo(a[c], b.fieldInfos[b.fieldName]))
                }
                var t = "count sum min max avg stddev".split(" "),
                    b = {
                        count: "countField",
                        sum: "sumField",
                        min: "minField",
                        max: "maxField",
                        avg: "avgField",
                        stddev: "stddevField"
                    };
                k.getStatisticsResult = function(b) {
                    return l(b).then(function(a) {
                        b.fieldInfos =
                            a;
                        if (b.featureSet) return s(b);
                        if (b.layer) {
                            if (b.layer.url) return c(b);
                            b.featureSet = q.toFeatureSet(b.layer.graphics);
                            return s(b)
                        }
                    })
                };
                k.isStatFromServer = function(b) {
                    return b.layer && b.layer.url
                };
                k.getStddevVal = r
            })
        },
        "jimu/featureActions/CreateLayer": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/html dojo/json dojo/on esri/layers/FeatureLayer esri/renderers/jsonUtils esri/symbols/jsonUtils ../BaseFeatureAction jimu/dijit/Popup jimu/dijit/Search jimu/LayerInfos/LayerInfos jimu/utils".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r) {
                    return p(k, {
                        name: "CreateLayer",
                        iconClass: "icon-create-layer",
                        isFeatureSupported: function(a) {
                            return 1 < a.features.length
                        },
                        onExecute: function(c, g) {
                            var d, b;
                            d = {
                                layerDefinition: {
                                    geometryType: g.geometryType,
                                    fields: e.clone(g.fields),
                                    objectIdField: g.objectIdField
                                },
                                featureSet: c.toJson()
                            };
                            d = new m(d);
                            (b = g._json ? h.parse(g._json) : null) && b.drawingInfo && b.drawingInfo.renderer ? (b = b.drawingInfo.renderer, b = q.fromJson(b)) : b = q.fromJson(g.renderer.toJson());
                            d.setRenderer(b);
                            (b = g.getSelectionSymbol()) &&
                            d.setSelectionSymbol(a.fromJson(b.toJson()));
                            this._popupAddLayer(d)
                        },
                        _popupAddLayer: function(a) {
                            var g, k = f.create("div", {
                                    style: "padding: 0 10px 0 10px;"
                                }),
                                b = (new s({
                                    placeholder: window.jimuNls.layerInfosMenu.labelLayer
                                })).placeAt(k);
                            f.setStyle(b.searchBtn, "display", "none");
                            var n = new c({
                                content: k,
                                titleLabel: window.jimuNls.featureActions.CreateLayer,
                                width: 525,
                                height: 180,
                                buttons: [{
                                    label: window.jimuNls.common.ok,
                                    onClick: e.hitch(this, function() {
                                        a.name = r.stripHTML(b.getValue());
                                        this._addLayerToMap(a);
                                        n.close();
                                        g && g.remove && g.remove()
                                    })
                                }, {
                                    label: window.jimuNls.common.cancel,
                                    classNames: ["jimu-btn-vacation"],
                                    onClick: e.hitch(this, function() {
                                        n.close();
                                        g && g.remove && g.remove()
                                    })
                                }]
                            });
                            b.inputSearch.focus();
                            n.disableButton(0);
                            g = d(b.inputSearch, "keyup", function() {
                                b.getValue() ? n.enableButton(0) : n.disableButton(0)
                            })
                        },
                        _addLayerToMap: function(a) {
                            var c = n.getInstanceSync(),
                                k = d(c, "layerInfosChanged", e.hitch(this, function(b) {
                                    a.id === b.id && (b.enablePopup(), k.remove())
                                }));
                            this.map.addLayer(a)
                        }
                    })
                })
        },
        "jimu/dijit/Search": function() {
            define(["dojo/_base/declare",
                "dojo/_base/html", "dojo/string", "dijit/_WidgetBase", "dijit/_TemplatedMixin"
            ], function(p, e, f, h, d) {
                return p([h, d], {
                    baseClass: "jimu-search",
                    declaredClass: "jimu.dijit.Search",
                    templateString: '\x3cdiv\x3e\x3cspan class\x3d"jimu-input-wrapper" style\x3d"left:0;right:0;"\x3e\x3cinput class\x3d"jimu-input" style\x3d"background:#fafafc;" data-dojo-attach-point\x3d"inputSearch" data-dojo-attach-event\x3d"onKeydown: _onKeyDown, onKeyUp: _onKeyUp"/\x3e\x3c/span\x3e\x3cdiv class\x3d"search-btn jimu-icon jimu-icon-search" data-dojo-attach-point\x3d"searchBtn" data-dojo-attach-event\x3d"onClick: _onBtnClick"\x3e\x3c/div\x3e\x3c/div\x3e',
                    placeholder: "",
                    onSearch: null,
                    searchWhenInput: !1,
                    postCreate: function() {
                        this.inherited(arguments);
                        this.placeholder && e.setAttr(this.inputSearch, "placeholder", this.placeholder)
                    },
                    getValue: function() {
                        return f.trim(this.inputSearch.value)
                    },
                    doSearch: function() {
                        if (this.onSearch) this.onSearch(this.getValue())
                    },
                    _onKeyDown: function(d) {
                        13 === (void 0 !== d.keyCode ? d.keyCode : d.which) && this.doSearch();
                        d.stopPropagation()
                    },
                    _onKeyUp: function() {
                        this.searchWhenInput && this.doSearch()
                    },
                    _onBtnClick: function() {
                        this.doSearch()
                    }
                })
            })
        },
        "jimu/dijit/PopupMenu": function() {
            define("dojo/_base/declare dojo/_base/html dojo/_base/lang dojo/_base/array dojo/on dojo/dom-geometry dijit/_WidgetBase dijit/_TemplatedMixin ./PopupMenuItem".split(" "), function(p, e, f, h, d, m, q, a, k) {
                var c = null,
                    s = p([q, a], {
                        baseClass: "popup-menu",
                        templateString: '\x3cdiv\x3e\x3cdiv data-dojo-attach-point\x3d"menuNode" class\x3d"menu-content"\x3e\x3cdiv class\x3d"menu-title" data-dojo-attach-point\x3d"titleNode"\x3e\x3cdiv class\x3d"label jimu-float-leading" data-dojo-attach-point\x3d"labelNode"\x3e\x3c/div\x3e\x3cdiv class\x3d"feature-action icon-close close-btn jimu-float-trailing" data-dojo-attach-point\x3d"closeBtn"\x3e\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d"menu-items" data-dojo-attach-point\x3d"menuContent"\x3e\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e',
                        postCreate: function() {
                            this.inherited(arguments);
                            this.hide();
                            this.menuItems = [];
                            this.own(d(this.domNode, "click", f.hitch(this, function(a) {
                                a = a.target || a.srcElement;
                                a === this.menuNode || e.isDescendant(a, this.menuNode) || this.hide()
                            })));
                            this.own(d(this.closeBtn, "click", f.hitch(this, this.hide)))
                        },
                        setActions: function(a) {
                            this.clearActions();
                            h.forEach(a, f.hitch(this, this._addMenuItem))
                        },
                        clearActions: function() {
                            this.menuItems = [];
                            e.empty(this.menuContent)
                        },
                        _addMenuItem: function(a) {
                            a = new k({
                                action: a
                            });
                            e.place(a.domNode,
                                this.menuContent);
                            a.startup();
                            this.menuItems.push(a);
                            this.own(d(a, "click", f.hitch(this, this.hide)))
                        },
                        hide: function() {
                            e.setStyle(this.domNode, "display", "none")
                        },
                        show: function(a, c) {
                            if (0 === this.menuItems.length) e.setStyle(this.domNode, "display", "none");
                            else {
                                "string" === typeof c && "" !== c ? (this.labelNode.innerHTML = c, e.setStyle(this.titleNode, "display", "")) : (this.labelNode.innerHTML = "", e.setStyle(this.titleNode, "display", "none"));
                                var d, g = a.y + a.h,
                                    k;
                                d = window.isRTL ? a.x : a.x + a.w;
                                e.setStyle(this.domNode, "display",
                                    "");
                                e.setStyle(this.menuNode, {
                                    left: "-1000px",
                                    top: "0px",
                                    display: "block"
                                });
                                k = m.getMarginSize(this.menuNode);
                                e.setStyle(this.menuNode, {
                                    left: (window.isRTL ? d + k.w > window.innerWidth ? window.innerWidth - k.w : 0 > d ? 0 : d : 0 > d - k.w ? 0 : d > window.innerWidth ? window.innerWidth - k.w : d - k.w) + "px",
                                    top: (k.h > window.innerHeight ? 0 : g + k.h > window.innerHeight ? window.innerHeight - k.h : g + k.h + 5 < window.innerHeight ? g + 5 : g) + "px"
                                })
                            }
                        }
                    });
                s.getInstance = function() {
                    null === c && (c = new s, e.place(c.domNode, document.body), c.startup());
                    c.setActions([]);
                    return c
                };
                return s
            })
        },
        "jimu/dijit/PopupMenuItem": function() {
            define("dojo/_base/declare dojo/_base/html dojo/_base/lang dojo/_base/event dojo/on dojo/mouse dojo/Evented dijit/_WidgetBase dijit/_TemplatedMixin".split(" "), function(p, e, f, h, d, m, q, a, k) {
                return p([a, k, q], {
                    baseClass: "popup-menu-item",
                    templateString: '\x3cdiv\x3e\x3cdiv class\x3d"icon jimu-float-leading"\x3e\x3cdiv class\x3d"feature-action" data-dojo-attach-point\x3d"iconNode"\x3e\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d"label" data-dojo-attach-point\x3d"labelNode"\x3e\x3c/div\x3e\x3c/div\x3e',
                    action: null,
                    postCreate: function() {
                        this.inherited(arguments);
                        this.action && (this.labelNode.innerHTML = this.action.label, this.action.iconClass ? e.addClass(this.iconNode, this.action.iconClass) : e.setStyle(this.iconNode, "background-image", "url(" + this.action.getIcon("default") + ")"), this.own(d(this.domNode, m.enter, f.hitch(this, this._useHoverIcon))), this.own(d(this.domNode, m.leave, f.hitch(this, this._useNormalIcon))));
                        this.own(d(this.domNode, "click", f.hitch(this, this._clickHandler)))
                    },
                    _useNormalIcon: function() {
                        this.action.iconClass ?
                            e.removeClass(this.iconNode, "highlight") : e.setStyle(this.iconNode, "background-image", "url(" + this.action.getIcon("default") + ")")
                    },
                    _useHoverIcon: function() {
                        this.action.iconClass ? e.addClass(this.iconNode, "highlight") : e.setStyle(this.iconNode, "background-image", "url(" + this.action.getIcon("hover") + ")")
                    },
                    _clickHandler: function(a) {
                        h.stop(a);
                        if (this.action) {
                            var d;
                            this.action.data.features && 0 < this.action.data.features.length && (d = this.action.data.features[0].getLayer());
                            this.action.onExecute(this.action.data,
                                d)
                        }
                        this.emit("click")
                    }
                })
            })
        },
        "jimu/FilterManager": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/topic", "esri/lang", "./LayerInfos/LayerInfos"], function(p, e, f, h, d) {
                var m = null,
                    q = p(null, {
                        _filters: null,
                        layerInfos: null,
                        constructor: function() {
                            this._filters = {};
                            window.isBuilder ? (f.subscribe("app/mapLoaded", e.hitch(this, this._onMapLoaded)), f.subscribe("app/mapChanged", e.hitch(this, this._onMapChanged))) : (f.subscribe("mapLoaded", e.hitch(this, this._onMapLoaded)), f.subscribe("mapChanged", e.hitch(this,
                                this._onMapChanged)));
                            f.subscribe("widgetDestroyed", e.hitch(this, this._onWidgetDestroyed))
                        },
                        getWidgetFilter: function(a, d) {
                            return e.getObject(a + ".filterExprs." + d, !1, this._filters)
                        },
                        applyWidgetFilter: function(a, d, c, e, n) {
                            this._setFilterExp(a, d, c, e, n);
                            d = this.layerInfos.getLayerInfoById(a);
                            a = this._getFilterExp(a);
                            null !== a && d.setFilter(a)
                        },
                        _onMapLoaded: function() {
                            this.layerInfos = d.getInstanceSync();
                            this._traversalFilter()
                        },
                        _onMapChanged: function() {
                            this.layerInfos = d.getInstanceSync();
                            this._traversalFilter()
                        },
                        _onWidgetDestroyed: function(a) {
                            for (var d in this._filters)
                                if (this._filters[d]) {
                                    var c = this._filters[d];
                                    if (c) {
                                        var e = c.filterExprs,
                                            c = c.mapFilterControls;
                                        e && delete e[a];
                                        c && delete c[a]
                                    }
                                }
                        },
                        _traversalFilter: function() {
                            this.layerInfos.traversal(e.hitch(this, function(a) {
                                this._filters[a.id] || (this._filters[a.id] = {
                                    definitionExpression: a.getFilter(),
                                    filterExprs: {},
                                    mapFilterControls: {}
                                })
                            }))
                        },
                        _getPriorityOfMapFilter: function(a) {
                            a = e.getObject(a + ".mapFilterControls", !1, this._filters);
                            var d = 0,
                                c;
                            for (c in a) {
                                var f =
                                    a[c];
                                f.priority > d && (d = f.priority)
                            }
                            return d
                        },
                        _getMapFilterControl: function(a) {
                            a = e.getObject(a + ".mapFilterControls", !1, this._filters);
                            var d = null,
                                c;
                            for (c in a) {
                                var f = a[c];
                                0 < f.priority && (d = f)
                            }
                            return d
                        },
                        _setFilterExp: function(a, d, c, f, n) {
                            var r = a + ".filterExprs." + d,
                                l = a + ".mapFilterControls." + d;
                            c ? (e.setObject(r, c, this._filters), h.isDefined(f) && (a = this._getPriorityOfMapFilter(a), e.setObject(l, {
                                enable: f,
                                useAND: n,
                                priority: a + 1
                            }, this._filters))) : (e.getObject(r, !1, this._filters) && delete this._filters[a].filterExprs[d],
                                e.getObject(l, !1, this._filters) && delete this._filters[a].mapFilterControls[d])
                        },
                        _getFilterExp: function(a) {
                            if (!this._filters[a]) return null;
                            var d = [],
                                c = this._filters[a].definitionExpression,
                                e = this._filters[a].filterExprs;
                            a = this._getMapFilterControl(a);
                            for (var n in e) {
                                var r = e[n];
                                r && d.push("(" + r + ")")
                            }
                            d = d.join(" AND ");
                            return c && a && a.enable || c && null === a ? d ? a && !1 === a.useAND ? "(" + c + ") OR " + d : "(" + c + ") AND " + d : c : d
                        }
                    });
                q.getInstance = function() {
                    if (null === m) m = new q, window._filterManager = m;
                    else return m
                };
                return q
            })
        },
        "jimu/OnScreenWidgetIcon": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/on dijit/_WidgetBase ./utils".split(" "), function(p, e, f, h, d, m, q) {
                return p(m, {
                    "class": "jimu-widget-onscreen-icon",
                    postCreate: function() {
                        this.inherited(arguments);
                        this.iconNode = h.create("img", {
                            src: this.widgetConfig.icon
                        }, this.domNode);
                        h.setAttr(this.domNode, "title", this.widgetConfig.label);
                        h.setAttr(this.domNode, "data-widget-name", this.widgetConfig.name);
                        this.own(d(this.domNode, "click",
                            e.hitch(this, function() {
                                this.onClick()
                            })));
                        this.position = e.clone(this.widgetConfig.position);
                        "map" === this.widgetConfig.position.relativeTo && this.own(d(this.map, "resize", e.hitch(this, function() {
                            var a = e.clone(this.position);
                            delete a.width;
                            delete a.height;
                            this.panel && this.panel.setPosition(a)
                        })));
                        this.state = "closed"
                    },
                    startup: function() {
                        this.inherited(arguments)
                    },
                    onClick: function() {
                        "closed" === this.state ? this.switchToOpen() : this.switchToClose()
                    },
                    moveTo: function(a) {
                        var d = {
                                left: "auto",
                                right: "auto",
                                bottom: "auto",
                                top: "auto",
                                width: "auto",
                                height: "auto"
                            },
                            d = e.mixin(d, q.getPositionStyle(a));
                        delete d.width;
                        delete d.height;
                        h.setStyle(this.domNode, d);
                        this.position = e.clone(a);
                        this.widgetConfig && this.widgetConfig.panel && (this.widgetConfig.panel.position = e.clone(a), this.widgetConfig.position = e.clone(a));
                        this.panel && this.panel.setPosition(e.clone(a));
                        this.widget && this.widget.setPosition(this.getOffPanelWidgetPosition(this.widget))
                    },
                    destroy: function() {
                        this.panel ? this.panelManager.destroyPanel(this.panel) : this.widget &&
                            this.widgetManager.destroyWidget(this.widget);
                        this.inherited(arguments)
                    },
                    switchToOpen: function() {
                        this.state = "opened";
                        this.panelManager.closeAllPanelsInGroup(this.widgetConfig.gid);
                        f.forEach(this.widgetManager.getOnScreenOffPanelWidgets(), function(a) {
                            a.closeable && this.widgetManager.closeWidget(a)
                        }, this);
                        h.addClass(this.domNode, "jimu-state-selected");
                        this._showLoading();
                        !1 === this.widgetConfig.inPanel ? this.widgetManager.loadWidget(this.widgetConfig).then(e.hitch(this, function(a) {
                            this.widget = a;
                            a.setPosition(this.getOffPanelWidgetPosition(a));
                            this.widgetManager.openWidget(a);
                            this.own(d(a, "close", e.hitch(this, function() {
                                this.switchToClose()
                            })));
                            this._hideLoading()
                        })) : this.panelManager.showPanel(e.clone(this.widgetConfig)).then(e.hitch(this, function(a) {
                            this.panel = a;
                            this.own(d(a, "close", e.hitch(this, function() {
                                this.switchToClose()
                            })));
                            this._hideLoading()
                        }))
                    },
                    switchToClose: function() {
                        this.state = "closed";
                        h.removeClass(this.domNode, "jimu-state-selected");
                        !1 === this.widgetConfig.inPanel ? this.widgetManager.closeWidget(this.widget) : this.panelManager.closePanel(this.panel)
                    },
                    getOffPanelWidgetPosition: function(a) {
                        var d = {
                                relativeTo: a.position.relativeTo
                            },
                            c = h.getMarginBox(this.domNode);
                        a = this.widgetManager.getWidgetMarginBox(a);
                        var e = h.getMarginBox("map" === d.relativeTo ? this.map.id : jimuConfig.layoutId),
                            n = c.t + c.h + 1;
                        n + a.h > e.h ? d.bottom = e.h - c.t + 1 : d.top = n;
                        window.isRTL ? d.right = 0 > c.l + c.w - a.w ? 0 : c.l + c.w - a.w : c.l + a.w > e.w ? d.right = 0 : d.left = c.l;
                        return d
                    },
                    _showLoading: function() {
                        h.setAttr(this.iconNode, "src", require.toUrl("jimu") + "/images/loading_circle.gif")
                    },
                    _hideLoading: function() {
                        h.setAttr(this.iconNode,
                            "src", this.widgetConfig.icon)
                    }
                })
            })
        },
        "jimu/WidgetPlaceholder": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/_base/html", "dijit/_WidgetBase", "./utils"], function(p, e, f, h, d) {
                return p(h, {
                    "class": "jimu-widget-placeholder",
                    postCreate: function() {
                        this.inherited(arguments);
                        this.indexNode = f.create("div", {
                            "class": "inner",
                            innerHTML: this.index
                        }, this.domNode);
                        f.setAttr(this.domNode, "title", window.jimuNls.widgetPlaceholderTooltip)
                    },
                    moveTo: function(m) {
                        var q = {
                                left: "auto",
                                right: "auto",
                                bottom: "auto",
                                top: "auto",
                                width: "auto",
                                height: "auto"
                            },
                            q = e.mixin(q, d.getPositionStyle(m));
                        delete q.width;
                        delete q.height;
                        f.setStyle(this.domNode, q)
                    },
                    setIndex: function(d) {
                        this.index = d;
                        this.indexNode.innerHTML = d
                    }
                })
            })
        },
        "jimu/DataManager": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/topic"], function(p, e, f) {
                var h = null,
                    d;
                d = p(null, {
                    constructor: function(d) {
                        f.subscribe("publishData", e.hitch(this, this.onDataPublished));
                        f.subscribe("fetchData", e.hitch(this, this.onFetchData));
                        f.subscribe("clearAllData", e.hitch(this,
                            this.onClearAllData));
                        f.subscribe("removeData", e.hitch(this, this.onRemoveData));
                        f.subscribe("clearDataHistory", e.hitch(this, this.onClearDataHistory));
                        this.widgetManager = d
                    },
                    _dataStore: {},
                    onDataPublished: function(d, e, a, k) {
                        "undefined" === typeof k && (k = !1);
                        this._dataStore[e] ? (this._dataStore[e].current = a, k && (this._dataStore[e].history ? this._dataStore[e].history.push(a) : this._dataStore[e].history = [a])) : (this._dataStore[e] = {
                            current: a
                        }, k && (this._dataStore[e].history = [a]))
                    },
                    onFetchData: function(d) {
                        var e;
                        if (d) "framework" ===
                            d ? this._dataStore[d] ? f.publish("dataFetched", "framework", "framework", this._dataStore[d].current, this._dataStore[d].history) : f.publish("noData", "framework", "framework") : (e = this.widgetManager.getWidgetById(d)) ? this._dataStore[d] ? f.publish("dataFetched", e.name, d, this._dataStore[d].current, this._dataStore[d].history) : f.publish("noData", e.name, d) : f.publish("noData", void 0, d);
                        else {
                            for (var a in this._dataStore)(e = this.widgetManager.getWidgetById(a)) && f.publish("dataFetched", e.name, a, this._dataStore[a].current,
                                this._dataStore[a].history);
                            e || f.publish("noData", void 0, void 0)
                        }
                    },
                    onClearAllData: function() {
                        this._dataStore = {};
                        f.publish("allDataCleared")
                    },
                    onRemoveData: function(d) {
                        delete this._dataStore[d];
                        f.publish("dataRemoved", d)
                    },
                    onClearDataHistory: function(d) {
                        this._dataStore[d] && (this._dataStore[d].history = []);
                        f.publish("dataHistoryCleared", d)
                    }
                });
                d.getInstance = function(e) {
                    null === h && (h = new d(e));
                    return h
                };
                return d
            })
        },
        "jimu/SelectionManager": function() {
            define("dojo/_base/declare dojo/_base/Deferred dojo/_base/lang dojo/_base/array dojo/topic esri/layers/FeatureLayer esri/layers/GraphicsLayer esri/geometry/geometryEngine esri/graphic esri/Color esri/symbols/SimpleMarkerSymbol esri/symbols/SimpleLineSymbol esri/symbols/SimpleFillSymbol".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r) {
                    var l = null,
                        g = p(null, {
                            constructor: function() {
                                window.isBuilder ? (d.subscribe("app/mapLoaded", f.hitch(this, this._onMapLoaded)), d.subscribe("app/mapChanged", f.hitch(this, this._onMapChanged))) : (d.subscribe("mapLoaded", f.hitch(this, this._onMapLoaded)), d.subscribe("mapChanged", f.hitch(this, this._onMapChanged)))
                            },
                            _displayLayers: {},
                            setSelectionSymbol: function(a) {
                                var b = a.geometryType,
                                    g = new c("#00FFFF"),
                                    d = new s(s.STYLE_CIRCLE, 16, null, g),
                                    e = new n(n.STYLE_SOLID, g, 2),
                                    g = new r(r.STYLE_NULL,
                                        e, g);
                                "esriGeometryPoint" === b ? a.setSelectionSymbol(d) : "esriGeometryPolyline" === b ? a.setSelectionSymbol(e) : "esriGeometryPolygon" === b && a.setSelectionSymbol(g)
                            },
                            updateSelectionByFeatures: function(a, b, c) {
                                a.getSelectionSymbol() || this.setSelectionSymbol(a);
                                var g = new e;
                                a._selectHandler({
                                    features: b
                                }, c, null, null, g);
                                this._isLayerNeedDisplayLayer(a) && (this._displayLayers[a.id] || (this._displayLayers[a.id] = this._createDisplayLayer(a)), this._updateDisplayLayer(a));
                                return g
                            },
                            getDisplayLayer: function(a) {
                                return this._displayLayers[a]
                            },
                            setSelection: function(a, b) {
                                return this.updateSelectionByFeatures(a, b, m.SELECTION_NEW)
                            },
                            addFeaturesToSelection: function(a, b) {
                                return this.updateSelectionByFeatures(a, b, m.SELECTION_ADD)
                            },
                            removeFeaturesFromSelection: function(a, b) {
                                return this.updateSelectionByFeatures(a, b, m.SELECTION_SUBTRACT)
                            },
                            clearSelection: function(a) {
                                this.clearDisplayLayer(a);
                                return this.updateSelectionByFeatures(a, [], m.SELECTION_NEW)
                            },
                            clearDisplayLayer: function(a) {
                                (a = this._displayLayers[a.id]) && a.clear()
                            },
                            getClientFeaturesByGeometry: function(c,
                                b, g) {
                                return h.filter(c.graphics, f.hitch(this, function(c) {
                                    return g ? a.contains(b, c.geometry) : a.intersects(b, c.geometry)
                                }))
                            },
                            getUnionGeometryBySelectedFeatures: function(c) {
                                var b = null;
                                c = c.getSelectedFeatures();
                                0 < c.length && (b = h.map(c, f.hitch(this, function(b) {
                                    return b.geometry
                                })), b = a.union(b));
                                return b
                            },
                            _createDisplayLayer: function(a) {
                                var b = new q;
                                b.id = "displayLayer_of_" + a.id;
                                this.map.addLayer(b);
                                return b
                            },
                            _updateDisplayLayer: function(a) {
                                var b = a.getSelectedFeatures(),
                                    c = this._displayLayers[a.id];
                                this.clearDisplayLayer(a);
                                var g = a.getSelectionSymbol();
                                h.forEach(b, f.hitch(this, function(b) {
                                    b.setSymbol(null);
                                    b = new k(b.toJson());
                                    b.setSymbol(g);
                                    c.add(b)
                                }))
                            },
                            _isLayerNeedDisplayLayer: function(a) {
                                return !a.getMap()
                            },
                            _onMapLoaded: function(a) {
                                this.map = a
                            },
                            _onMapChanged: function(a) {
                                this.map = a
                            }
                        });
                    g.getInstance = function() {
                        l || (l = new g, window._selectionManager = l);
                        return l
                    };
                    return g
                })
        },
        "jimu/BaseWidget": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/topic dijit/_WidgetBase dijit/_TemplatedMixin jimu/utils ./PanelManager".split(" "),
                function(p, e, f, h, d, m, q, a, k) {
                    return p([m, q], {
                        type: "widget",
                        id: void 0,
                        label: void 0,
                        icon: void 0,
                        uri: void 0,
                        position: {},
                        config: void 0,
                        openAtStart: !1,
                        map: null,
                        appConfig: null,
                        folderUrl: null,
                        state: "closed",
                        windowState: "normal",
                        started: !1,
                        name: "",
                        baseClass: null,
                        templateString: "\x3cdiv\x3e\x3c/div\x3e",
                        moveTopOnActive: !0,
                        constructor: function() {
                            this.listenWidgetNames = [];
                            this.listenWidgetIds = [];
                            this.own(d.subscribe("publishData", e.hitch(this, this._onReceiveData)));
                            this.own(d.subscribe("dataFetched", e.hitch(this,
                                this._onReceiveData)));
                            this.own(d.subscribe("noData", e.hitch(this, this._onNoData)))
                        },
                        startup: function() {
                            this.inherited(arguments);
                            this.started = !0
                        },
                        onOpen: function() {},
                        onClose: function() {},
                        onNormalize: function() {},
                        onMinimize: function() {},
                        onMaximize: function() {},
                        onActive: function() {},
                        onDeActive: function() {},
                        onSignIn: function(a) {},
                        onSignOut: function() {},
                        onPositionChange: function(a) {
                            this.setPosition(a)
                        },
                        setPosition: function(c, d) {
                            this.position = c;
                            var e = a.getPositionStyle(this.position);
                            e.position = "absolute";
                            d || (d = "map" === c.relativeTo ? this.map.id : window.jimuConfig.layoutId);
                            h.place(this.domNode, d);
                            h.setStyle(this.domNode, e);
                            this.started && this.resize()
                        },
                        getPosition: function() {
                            return this.position
                        },
                        getMarginBox: function() {
                            return h.getMarginBox(this.domNode)
                        },
                        setMap: function(a) {
                            this.map = a
                        },
                        setState: function(a) {
                            this.state = a
                        },
                        setWindowState: function(a) {
                            this.windowState = a
                        },
                        resize: function() {},
                        onConfigChanged: function(a) {},
                        onAppConfigChanged: function(a, d, e) {},
                        onAction: function(a, d) {},
                        getPanel: function() {
                            if (!1 ===
                                this.inPanel) return null;
                            if ("widgetOnScreen" === this.gid || "widgetPool" === this.gid) return k.getInstance().getPanelById(this.id + "_panel");
                            var a = k.getInstance().getPanelById(this.gid + "_panel");
                            return a ? a : k.getInstance().getPanelById(this.id + "_panel")
                        },
                        publishData: function(a, e) {
                            "undefined" === typeof e && (e = !1);
                            d.publish("publishData", this.name, this.id, a, e)
                        },
                        fetchData: function(a) {
                            a ? d.publish("fetchData", a) : 0 !== this.listenWidgetIds.length ? f.forEach(this.listenWidgetIds, function(a) {
                                    d.publish("fetchData", a)
                                },
                                this) : d.publish("fetchData")
                        },
                        fetchDataByName: function(a) {
                            a = this.widgetManager.getWidgetsByName(a);
                            f.forEach(a, function(a) {
                                this.fetchData(a.id)
                            }, this)
                        },
                        openWidgetById: function(a) {
                            return this.widgetManager.triggerWidgetOpen(a)
                        },
                        _onReceiveData: function(a, d, e, k) {
                            if (d !== this.id && !(0 !== this.listenWidgetIds.length && 0 > this.listenWidgetIds.indexOf(d))) this.onReceiveData(a, d, e, k)
                        },
                        onReceiveData: function(a, d, e, k) {},
                        _onNoData: function(a, d) {
                            if (!(0 !== this.listenWidgetIds.length && 0 > this.listenWidgetIds.indexOf(d))) this.onNoData(a,
                                d)
                        },
                        onNoData: function(a, d) {}
                    })
                })
        },
        "jimu/BaseWidgetFrame": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/_base/html", "dijit/_WidgetBase"], function(p, e, f, h) {
                return p([h], {
                    widget: null,
                    baseClass: "jimu-widget-frame jimu-container",
                    postCreate: function() {
                        this.inherited(arguments);
                        this.containerNode || (this.containerNode = this.domNode);
                        this.widget && this.setWidget(this.widget)
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this.widget && this.widget.startup()
                    },
                    resize: function() {
                        this.widget && ("closed" !==
                            this.widget.state && e.isFunction(this.widget.resize)) && this.widget.resize()
                    },
                    setLoading: function(d) {
                        this.loading = d;
                        this.loading.placeAt(this.containerNode)
                    },
                    getWidget: function() {
                        return this.widget
                    },
                    setWidget: function(d) {
                        this.widget = d;
                        this.loading && this.loading.destroy();
                        f.place(d.domNode, this.containerNode);
                        this.resize()
                    },
                    destroy: function() {
                        if (this.widget && this.widget.domNode) try {
                            this.widget.destroy()
                        } catch (d) {
                            console.error("destroy widget error. widget: [" + this.widget.uri + "], " + d.stack)
                        }
                        this.loading &&
                            this.loading.domNode && this.loading.destroy()
                    }
                })
            })
        },
        "jimu/BaseWidgetPanel": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dijit/_WidgetBase dijit/_Container ./dijit/LoadingIndicator ./BaseWidgetFrame ./utils".split(" "), function(p, e, f, h, d, m, q, a, k) {
                return p([d, m], {
                    baseClass: "jimu-panel jimu-container",
                    started: !1,
                    state: "closed",
                    windowState: "normal",
                    moveTopOnActive: !0,
                    openAnimation: null,
                    closeAnimation: null,
                    animationDuration: 0,
                    startup: function() {
                        this.inherited(arguments);
                        this.loadAllWidgetsInOrder();
                        this.started = !0
                    },
                    loadAllWidgetsInOrder: function() {
                        var a = this.getAllWidgetConfigs(),
                            a = Array.isArray(this.config.widgets) ? this.config.widgets : [this.config];
                        f.forEach(a, function(a) {
                            var c, d;
                            !1 !== a.visible && (d = new q, c = this.createFrame(a), this.addChild(c), c.setLoading(d), this.widgetManager.loadWidget(a).then(e.hitch(this, function(a) {
                                c.setWidget(a);
                                a.startup()
                            })))
                        }, this)
                    },
                    getAllWidgetConfigs: function() {
                        var a = [];
                        return a = Array.isArray(this.config.widgets) ? this.config.widgets : [this.config]
                    },
                    getWidgetById: function(a) {
                        for (var d = this.getChildren(), e = 0; e < d.length; e++)
                            if (d[e].getWidget() && d[e].getWidget().id === a) return d[e].getWidget()
                    },
                    createFrame: function(c) {
                        return new a
                    },
                    setPosition: function(a, d) {
                        this.position = a;
                        var e = k.getPositionStyle(this.position);
                        e.position = "absolute";
                        d || (d = "map" === a.relativeTo ? this.map.id : window.jimuConfig.layoutId);
                        this.started ? this.resize() : this.openAnimation && (e.display = "none");
                        h.place(this.domNode, d);
                        h.setStyle(this.domNode, e)
                    },
                    getPosition: function() {
                        return this.position
                    },
                    setState: function(a) {
                        this.state = a
                    },
                    setWindowState: function(a) {
                        this.windowState = a
                    },
                    resize: function() {
                        this.getChildren().forEach(function(a) {
                            a.resize()
                        })
                    },
                    onPositionChange: function(a) {
                        this.setPosition(a)
                    },
                    onOpen: function() {
                        f.forEach(this.getChildren(), function(a) {
                            a.getWidget() && this.widgetManager.openWidget(a.getWidget())
                        }, this)
                    },
                    onClose: function() {
                        f.forEach(this.getChildren(), function(a) {
                            a.getWidget() && this.widgetManager.closeWidget(a.getWidget())
                        }, this)
                    },
                    onMaximize: function() {
                        f.forEach(this.getChildren(),
                            function(a) {
                                a.getWidget() && this.widgetManager.maximizeWidget(a.getWidget())
                            }, this)
                    },
                    onMinimize: function() {
                        f.forEach(this.getChildren(), function(a) {
                            a.getWidget() && this.widgetManager.minimizeWidget(a.getWidget())
                        }, this)
                    },
                    onNormalize: function() {
                        f.forEach(this.getChildren(), function(a) {
                            a.getWidget() && this.widgetManager.normalizeWidget(a.getWidget())
                        }, this)
                    },
                    onActive: function() {},
                    onDeActive: function() {},
                    updateConfig: function(a) {
                        this._updateConfig(a)
                    },
                    reloadWidget: function(a) {
                        this.isWidgetInPanel(a) && (this._updateConfig(a),
                            this.getChildren().forEach(function(d) {
                                d.getWidget() && d.getWidget().id === a.id && (d.getWidget().destroy(), d.setLoading(new q), this.widgetManager.loadWidget(a).then(e.hitch(this, function(a) {
                                    d.setWidget(a);
                                    a.startup();
                                    "closed" === this.state && this.widgetManager.closeWidget(a)
                                })))
                            }, this))
                    },
                    isWidgetInPanel: function(a) {
                        return f.some(this.getAllWidgetConfigs(), function(d) {
                            if (a.id === d.id) return !0
                        }) ? !0 : !1
                    },
                    _updateConfig: function(a) {
                        if (Array.isArray(this.config.widgets)) {
                            for (var d = -1, e = 0; e < this.config.widgets.length; e++) this.config.widgets[e].id ===
                                a.id && (d = e);
                            0 < d && (this.config.widgets[d] = a)
                        } else this.config = a
                    },
                    destroy: function() {
                        this.getChildren().forEach(function(a) {
                            try {
                                a.domNode && a.destroy()
                            } catch (d) {
                                console.error("destroy widget frame error." + d.stack)
                            }
                        });
                        this.inherited(arguments)
                    }
                })
            })
        },
        "jimu/BaseWidgetSetting": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/on", "dijit/_WidgetBase", "dijit/_TemplatedMixin"], function(p, e, f, h, d) {
                return p([h, d], {
                    templateString: "\x3cdiv\x3e\x3c/div\x3e",
                    postCreate: function() {
                        this.own(f(window,
                            "resize", e.hitch(this, this._onWindowResize)))
                    },
                    getConfig: function() {},
                    resize: function() {},
                    _onWindowResize: function() {
                        this.resize()
                    }
                })
            })
        },
        "jimu/symbolUtils": function() {
            define("require dojo/_base/lang dojo/_base/html dojox/gfx esri/symbols/jsonUtils esri/symbols/PictureMarkerSymbol".split(" "), function(p, e, f, h, d, m) {
                return {
                    cloneSymbol: function(e) {
                        if (!e) return null;
                        var a = null;
                        try {
                            var k = e.toJson(),
                                a = d.fromJson(k)
                        } catch (c) {
                            console.error(c)
                        }
                        return a
                    },
                    getDefaultMarkerSymbol: function() {
                        return d.fromJson({
                            style: "esriSMSCircle",
                            color: [0, 0, 128, 128],
                            name: "Circle",
                            outline: {
                                color: [0, 0, 128, 255],
                                width: 1
                            },
                            type: "esriSMS",
                            size: 18
                        })
                    },
                    getDefaultLineSymbol: function() {
                        return d.fromJson({
                            tags: ["solid"],
                            title: "Blue Thin",
                            style: "esriSLSSolid",
                            color: [79, 129, 189, 255],
                            width: 3,
                            name: "Blue 1",
                            type: "esriSLS"
                        })
                    },
                    getDefaultFillSymbol: function() {
                        return d.fromJson({
                            tags: ["opaque"],
                            title: "Blue",
                            style: "esriSFSSolid",
                            color: [79, 129, 189, 255],
                            name: "Blue 6",
                            type: "esriSFS",
                            outline: {
                                style: "esriSLSSolid",
                                color: [54, 93, 141, 255],
                                width: 1.5,
                                type: "esriSLS"
                            }
                        })
                    },
                    getHightlightMarkerSymbol: function() {
                        return d.fromJson({
                            color: [255,
                                255, 255, 128
                            ],
                            size: 18,
                            angle: 0,
                            xoffset: 0,
                            yoffset: 0,
                            type: "esriSMS",
                            style: "esriSMSCircle",
                            outline: {
                                color: [0, 255, 255, 255],
                                width: 1.5,
                                type: "esriSLS",
                                style: "esriSLSSolid"
                            }
                        })
                    },
                    getHightlightLineSymbol: function() {
                        return d.fromJson({
                            color: [0, 255, 255, 255],
                            width: 1.5,
                            type: "esriSLS",
                            style: "esriSLSSolid"
                        })
                    },
                    getHightlightFillSymbol: function() {
                        return d.fromJson({
                            color: [255, 255, 255, 128],
                            outline: {
                                color: [0, 255, 255, 255],
                                width: 1.5,
                                type: "esriSLS",
                                style: "esriSLSSolid"
                            },
                            type: "esriSFS",
                            style: "esriSFSSolid"
                        })
                    },
                    getGreyPinMarkerSymbol: function() {
                        var d =
                            p.toUrl("jimu/css/images/grey_pin.png"),
                            d = new m(d, 16, 16);
                        d.setOffset(0, 8);
                        return d
                    },
                    createSymbolNode: function(m, a) {
                        var k = 32,
                            c = 32,
                            s = f.create("div", {}, document.body);
                        f.setStyle(s, "display", "inline-block");
                        if (a) k = a.width, c = a.height;
                        else if (k = 80, c = 30, this.isSimpleMarkerSymbol(m)) c = k = Math.min(m.size + 12, 125);
                        else if (this.isPictureMarkerSymbol(m)) {
                            if (!m.url || "http://" === m.url || -1 === m.url.indexOf("http://") && -1 === m.url.indexOf("https://") && -1 === m.url.indexOf("data:")) return;
                            c = k = Math.min(Math.max(m.width,
                                m.height), 125)
                        } else if (this.isSimpleLineSymbol(m) || this.isCartographicLineSymbol(m)) k = 190, c = 20;
                        var n = h.createSurface(s, k, c);
                        if ("vml" === h.renderer) {
                            var r = n.getEventSource();
                            f.setStyle(r, "position", "relative");
                            f.setStyle(r.parentNode, "position", "relative")
                        }
                        var r = null,
                            r = a ? d.getShapeDescriptors(m) : this.isSimpleLineSymbol(m) || this.isCartographicLineSymbol(m) ? this._getLineShapeDesc(m) : d.getShapeDescriptors(m),
                            l;
                        try {
                            l = n.createShape(r.defaultShape), r.fill && l.setFill(r.fill), r.stroke && l.setStroke(r.stroke)
                        } catch (g) {
                            n.clear();
                            n.destroy();
                            return
                        }
                        var n = n.getDimensions(),
                            n = {
                                dx: n.width / 2,
                                dy: n.height / 2
                            },
                            t = l.getBoundingBox(),
                            r = t.width,
                            t = t.height;
                        if (r > k || t > c) k = ((k < c ? k : c) - 5) / (r > t ? r : t), e.mixin(n, {
                            xx: k,
                            yy: k
                        });
                        l.applyTransform(n);
                        return s
                    },
                    _getLineShapeDesc: function(d) {
                        var a = null;
                        if (this.isSimpleLineSymbol(d) || this.isCartographicLineSymbol(d)) a = {
                            defaultShape: {
                                type: "path",
                                path: "M -90,0 L 90,0 E"
                            },
                            fill: null,
                            stroke: d.getStroke()
                        };
                        return a
                    },
                    isSimpleMarkerSymbol: function(d) {
                        return d && "esri.symbol.SimpleMarkerSymbol" === d.declaredClass
                    },
                    isPictureMarkerSymbol: function(d) {
                        return d && "esri.symbol.PictureMarkerSymbol" === d.declaredClass
                    },
                    isSimpleLineSymbol: function(d) {
                        return d && "esri.symbol.SimpleLineSymbol" === d.declaredClass
                    },
                    isCartographicLineSymbol: function(d) {
                        return d && "esri.symbol.CartographicLineSymbol" === d.declaredClass
                    },
                    isSimpleFillSymbol: function(d) {
                        return d && "esri.symbol.SimpleFillSymbol" === d.declaredClass
                    },
                    isPictureFillSymbol: function(d) {
                        return d && "esri.symbol.PictureFillSymbol" === d.declaredClass
                    },
                    isTextSymbol: function(d) {
                        return d &&
                            "esri.symbol.TextSymbol" === d.declaredClass
                    }
                }
            })
        },
        "jimu/filterUtils": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/date/locale esri/lang dojo/data/ItemFileWriteStore jimu/utils".split(" "), function(p, e, f, h, d, m, q) {
                return p([], {
                    _stringFieldType: "esriFieldTypeString",
                    _dateFieldType: "esriFieldTypeDate",
                    _numberFieldTypes: ["esriFieldTypeOID", "esriFieldTypeSmallInteger", "esriFieldTypeInteger", "esriFieldTypeSingle", "esriFieldTypeDouble"],
                    _supportFieldTypes: [],
                    dayInMS: 86399E3,
                    fieldsStore: null,
                    isHosted: !1,
                    constructor: function() {
                        String.prototype.startsWith = function(a) {
                            return 0 === this.indexOf(a)
                        };
                        String.prototype.endsWith = function(a) {
                            return this.substring(this.length - a.length) === a
                        };
                        String.prototype.count = function(a) {
                            return this.split(a).length - 1
                        };
                        String.prototype.trim || (String.prototype.trim = e.trim);
                        this._supportFieldTypes = [];
                        this._supportFieldTypes.push(this._stringFieldType);
                        this._supportFieldTypes.push(this._dateFieldType);
                        this._supportFieldTypes = this._supportFieldTypes.concat(this._numberFieldTypes)
                    },
                    OPERATORS: {
                        stringOperatorIs: "stringOperatorIs",
                        stringOperatorIsNot: "stringOperatorIsNot",
                        stringOperatorStartsWith: "stringOperatorStartsWith",
                        stringOperatorEndsWith: "stringOperatorEndsWith",
                        stringOperatorContains: "stringOperatorContains",
                        stringOperatorDoesNotContain: "stringOperatorDoesNotContain",
                        stringOperatorIsBlank: "stringOperatorIsBlank",
                        stringOperatorIsNotBlank: "stringOperatorIsNotBlank",
                        numberOperatorIs: "numberOperatorIs",
                        numberOperatorIsNot: "numberOperatorIsNot",
                        numberOperatorIsAtLeast: "numberOperatorIsAtLeast",
                        numberOperatorIsLessThan: "numberOperatorIsLessThan",
                        numberOperatorIsAtMost: "numberOperatorIsAtMost",
                        numberOperatorIsGreaterThan: "numberOperatorIsGreaterThan",
                        numberOperatorIsBetween: "numberOperatorIsBetween",
                        numberOperatorIsNotBetween: "numberOperatorIsNotBetween",
                        numberOperatorIsBlank: "numberOperatorIsBlank",
                        numberOperatorIsNotBlank: "numberOperatorIsNotBlank",
                        dateOperatorIsOn: "dateOperatorIsOn",
                        dateOperatorIsNotOn: "dateOperatorIsNotOn",
                        dateOperatorIsBefore: "dateOperatorIsBefore",
                        dateOperatorIsAfter: "dateOperatorIsAfter",
                        dateOperatorIsBetween: "dateOperatorIsBetween",
                        dateOperatorIsNotBetween: "dateOperatorIsNotBetween",
                        dateOperatorIsBlank: "dateOperatorIsBlank",
                        dateOperatorIsNotBlank: "dateOperatorIsNotBlank",
                        dateOperatorDays: "dateOperatorDays",
                        dateOperatorWeeks: "dateOperatorWeeks",
                        dateOperatorMonths: "dateOperatorMonths",
                        dateOperatorInTheLast: "dateOperatorInTheLast",
                        dateOperatorNotInTheLast: "dateOperatorNotInTheLast"
                    },
                    prepare: function(a, d) {
                        this.isHosted = q.isHostedService(a);
                        this.setFieldsStoreByFieldInfos(d)
                    },
                    isPartsObjHasError: function(a) {
                        var d = !1;
                        a && (d = a.parts && 0 <= a.parts.length ? f.every(a.parts, e.hitch(this, function(a) {
                            return a.parts ? 0 < a.parts.length ? f.every(a.parts, e.hitch(this, function(a) {
                                return !a.error
                            })) : !1 : !a.error
                        })) : !1);
                        return !d
                    },
                    isAskForValues: function(a) {
                        var d = !1;
                        return d = f.some(a.parts, e.hitch(this, function(a) {
                            return a.parts ? f.some(a.parts, e.hitch(this, function(a) {
                                return !!a.interactiveObj
                            })) : !!a.interactiveObj
                        }))
                    },
                    setFieldsStoreByFieldInfos: function(a) {
                        a = f.filter(a, e.hitch(this, function(a) {
                            return 0 <= this._supportFieldTypes.indexOf(a.type)
                        }));
                        a = f.map(a, function(a, c) {
                            var d;
                            switch (a.type) {
                                case "esriFieldTypeString":
                                    d = "string";
                                    break;
                                case "esriFieldTypeDate":
                                    d = "date";
                                    break;
                                default:
                                    d = "number"
                            }
                            return {
                                id: c,
                                label: a.name,
                                shortType: d,
                                alias: a.alias,
                                editable: a.editable,
                                name: a.name,
                                nullable: a.nullable,
                                type: a.type
                            }
                        }, this);
                        this.fieldsStore = new m({
                            data: {
                                identifier: "id",
                                label: "label",
                                items: a
                            }
                        });
                        return a.length
                    },
                    _validatePartsObj: function(a) {
                        return a && "object" === typeof a
                    },
                    _isObject: function(a) {
                        return a && "object" === typeof a
                    },
                    _isString: function(a) {
                        return a &&
                            "string" === typeof a
                    },
                    containsNonLatinCharacter: function(a) {
                        for (var d = 0; d < a.length; d++)
                            if (255 < a.charCodeAt(d)) return !0;
                        return !1
                    },
                    getExprByFilterObj: function(a) {
                        if (!f.every(a.parts, function(a) {
                                return !!a
                            })) return null;
                        if (!this.isPartsObjReadyToBuild(a)) return a.expr = "", a.expr;
                        var e = "";
                        if (0 === a.parts.length) e = "1\x3d1";
                        else if (1 === a.parts.length) e = this.builtFilterString(a.parts[0]);
                        else
                            for (var c = "", m = 0; m < a.parts.length; m++) {
                                var n = this.builtFilterString(a.parts[m]);
                                if (!d.isDefined(n)) return null;
                                e += c +
                                    "(" + n + ")";
                                c = c || " " + a.logicalOperator + " "
                            }
                        return a.expr = e
                    },
                    isPartsObjReadyToBuild: function(a) {
                        return f.every(a.parts, e.hitch(this, function(a) {
                            return a.parts ? f.every(a.parts, e.hitch(this, function(a) {
                                return this._isPartReadyToBuild(a)
                            })) : this._isPartReadyToBuild(a)
                        }))
                    },
                    _isPartReadyToBuild: function(a) {
                        var d = a.fieldObj.shortType,
                            c = a.operator,
                            e = a.valueObj;
                        a = e.type || "value";
                        var n = e.value,
                            r = e.value1,
                            e = e.value2;
                        if ("value" === a) {
                            if ("string" === d) return c === this.OPERATORS.stringOperatorIsBlank || c === this.OPERATORS.stringOperatorIsNotBlank ?
                                !0 : q.isNotEmptyString(n);
                            if ("number" === d) return c === this.OPERATORS.numberOperatorIsBlank || c === this.OPERATORS.numberOperatorIsNotBlank ? !0 : c === this.OPERATORS.numberOperatorIsBetween || c === this.OPERATORS.numberOperatorIsNotBetween ? q.isValidNumber(r) && q.isValidNumber(e) : q.isValidNumber(n);
                            if ("date" === d) return c === this.OPERATORS.dateOperatorIsBlank || c === this.OPERATORS.dateOperatorIsNotBlank ? !0 : c === this.OPERATORS.dateOperatorIsBetween || c === this.OPERATORS.dateOperatorIsNotBetween ? q.isNotEmptyString(r) && q.isNotEmptyString(e) :
                                q.isNotEmptyString(n)
                        } else {
                            if ("field" === a) return q.isNotEmptyString(n);
                            if ("unique" === a) {
                                if ("string" === d) return q.isNotEmptyString(n);
                                if ("number" === d) return q.isValidNumber(n)
                            }
                        }
                        return !1
                    },
                    builtFilterString: function(a) {
                        var e = "";
                        if (a.parts)
                            for (var c = "", f = 0; f < a.parts.length; f++) {
                                var n = a.parts[f],
                                    r = this.builtSingleFilterString(n);
                                n.expr = r.whereClause;
                                if (!d.isDefined(r.whereClause)) return null;
                                e += c + r.whereClause;
                                c = " " + a.logicalOperator + " "
                            } else e = this.builtSingleFilterString(a).whereClause;
                        return a.expr =
                            e
                    },
                    _preBuiltSingleFilterString: function(a) {
                        if ("string" === a.fieldObj.shortType && "\x3cNull\x3e" === a.valueObj.value) {
                            if (a.operator === this.OPERATORS.stringOperatorIs) return {
                                whereClause: a.fieldObj.name + " IS NULL"
                            };
                            if (a.operator === this.OPERATORS.stringOperatorIsNot) return {
                                whereClause: a.fieldObj.name + " IS NOT NULL"
                            }
                        }
                        if ("number" === a.fieldObj.shortType && "\x3cNull\x3e" === a.valueObj.value) {
                            if (a.operator === this.OPERATORS.numberOperatorIs) return {
                                whereClause: a.fieldObj.name + " IS NULL"
                            };
                            if (a.operator === this.OPERATORS.numberOperatorIsNot) return {
                                whereClause: a.fieldObj.name +
                                    " IS NOT NULL"
                            }
                        }
                        return null
                    },
                    builtSingleFilterString: function(a, e) {
                        this.isHosted && (a.caseSensitive = !1);
                        if (d.isDefined(a.valueObj.isValid) && !a.valueObj.isValid) return {
                            whereClause: null
                        };
                        var c = this._preBuiltSingleFilterString(a);
                        if (c) return c;
                        var c = a.valueObj.value,
                            f = a.valueObj.value1,
                            n = a.valueObj.value2,
                            r = !1;
                        a.interactiveObj && d.isDefined(e) && (r = !0, d.isDefined(a.valueObj.value) && (c = "{" + e + "}"), d.isDefined(a.valueObj.value1) && (f = "{" + e + "}"), d.isDefined(a.valueObj.value2) && (n = "{" + (e + 1) + "}"));
                        var l = "";
                        if ("string" ===
                            a.fieldObj.shortType) switch (f = "", r && this.isHosted ? f = "N" : c && "field" !== a.valueObj.type && this.isHosted && this.containsNonLatinCharacter(c) && (f = "N"), a.operator) {
                            case this.OPERATORS.stringOperatorIs:
                                l = "field" === a.valueObj.type ? a.fieldObj.name + " \x3d " + c : a.fieldObj.name + " \x3d " + f + "'" + c.replace(/\'/g, "''") + "'";
                                break;
                            case this.OPERATORS.stringOperatorIsNot:
                                l = "field" === a.valueObj.type ? a.fieldObj.name + " \x3c\x3e " + c : a.fieldObj.name + " \x3c\x3e " + f + "'" + c.replace(/\'/g, "''") + "'";
                                break;
                            case this.OPERATORS.stringOperatorStartsWith:
                                l =
                                    a.caseSensitive ? a.fieldObj.name + " LIKE " + f + "'" + c.replace(/\'/g, "''") + "%'" : "UPPER(" + a.fieldObj.name + ") LIKE UPPER(" + f + "'" + c.replace(/\'/g, "''") + "%')";
                                break;
                            case this.OPERATORS.stringOperatorEndsWith:
                                l = a.caseSensitive ? a.fieldObj.name + " LIKE " + f + "'%" + c.replace(/\'/g, "''") + "'" : "UPPER(" + a.fieldObj.name + ") LIKE UPPER(" + f + "'%" + c.replace(/\'/g, "''") + "')";
                                break;
                            case this.OPERATORS.stringOperatorContains:
                                l = a.caseSensitive ? a.fieldObj.name + " LIKE " + f + "'%" + c.replace(/\'/g, "''") + "%'" : "UPPER(" + a.fieldObj.name + ") LIKE UPPER(" +
                                    f + "'%" + c.replace(/\'/g, "''") + "%')";
                                break;
                            case this.OPERATORS.stringOperatorDoesNotContain:
                                l = a.caseSensitive ? a.fieldObj.name + " NOT LIKE " + f + "'%" + c.replace(/\'/g, "''") + "%'" : "UPPER(" + a.fieldObj.name + ") NOT LIKE UPPER(" + f + "'%" + c.replace(/\'/g, "''") + "%')";
                                break;
                            case this.OPERATORS.stringOperatorIsBlank:
                                l = a.fieldObj.name + " IS NULL";
                                break;
                            case this.OPERATORS.stringOperatorIsNotBlank:
                                l = a.fieldObj.name + " IS NOT NULL"
                        } else if ("number" === a.fieldObj.shortType) switch (a.operator) {
                            case this.OPERATORS.numberOperatorIs:
                                l =
                                    a.fieldObj.name + " \x3d " + c;
                                break;
                            case this.OPERATORS.numberOperatorIsNot:
                                l = a.fieldObj.name + " \x3c\x3e " + c;
                                break;
                            case this.OPERATORS.numberOperatorIsAtLeast:
                                l = a.fieldObj.name + " \x3e\x3d " + c;
                                break;
                            case this.OPERATORS.numberOperatorIsLessThan:
                                l = a.fieldObj.name + " \x3c " + c;
                                break;
                            case this.OPERATORS.numberOperatorIsAtMost:
                                l = a.fieldObj.name + " \x3c\x3d " + c;
                                break;
                            case this.OPERATORS.numberOperatorIsGreaterThan:
                                l = a.fieldObj.name + " \x3e " + c;
                                break;
                            case this.OPERATORS.numberOperatorIsBetween:
                                l = a.fieldObj.name +
                                    " BETWEEN " + f + " AND " + n;
                                break;
                            case this.OPERATORS.numberOperatorIsNotBetween:
                                l = a.fieldObj.name + " NOT BETWEEN " + f + " AND " + n;
                                break;
                            case this.OPERATORS.numberOperatorIsBlank:
                                l = a.fieldObj.name + " IS NULL";
                                break;
                            case this.OPERATORS.numberOperatorIsNotBlank:
                                l = a.fieldObj.name + " IS NOT NULL"
                        } else switch (d.isDefined(c) && ("field" !== a.valueObj.type && "string" === typeof c) && (c = new Date(c)), "field" !== a.valueObj.type && (c && (c = new Date(c)), f && (f = new Date(f)), n && (n = new Date(n))), a.operator) {
                            case this.OPERATORS.dateOperatorIsOn:
                                l =
                                    "field" === a.valueObj.type ? a.fieldObj.name + " \x3d " + c : r ? a.fieldObj.name + " BETWEEN " + (this.isHosted ? "" : "timestamp ") + "'{" + e + "}' AND " + (this.isHosted ? "" : "timestamp ") + "'{" + (e + 1) + "}'" : a.fieldObj.name + " BETWEEN " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(c) + "' AND " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(this.addDay(c)) + "'";
                                break;
                            case this.OPERATORS.dateOperatorIsNotOn:
                                l = "field" === a.valueObj.type ? a.fieldObj.name + " \x3c\x3e " + c : r ? a.fieldObj.name + " NOT BETWEEN " + (this.isHosted ? "" :
                                    "timestamp ") + "'{" + e + "}' AND " + (this.isHosted ? "" : "timestamp ") + "'{" + (e + 1) + "}'" : a.fieldObj.name + " NOT BETWEEN " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(c) + "' AND " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(this.addDay(c)) + "'";
                                break;
                            case this.OPERATORS.dateOperatorIsBefore:
                                l = "field" === a.valueObj.type ? a.fieldObj.name + " \x3c " + c : a.fieldObj.name + " \x3c " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(c) + "'";
                                break;
                            case this.OPERATORS.dateOperatorIsAfter:
                                l = "field" === a.valueObj.type ?
                                    a.fieldObj.name + " \x3e " + c : a.fieldObj.name + " \x3e " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(this.addDay(c)) + "'";
                                break;
                            case this.OPERATORS.dateOperatorIsBetween:
                                l = r ? a.fieldObj.name + " BETWEEN '" + f + "' AND '" + n + "'" : a.fieldObj.name + " BETWEEN " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(f) + "' AND " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(this.addDay(n)) + "'";
                                break;
                            case this.OPERATORS.dateOperatorIsNotBetween:
                                l = r ? a.fieldObj.name + " NOT BETWEEN '" + f + "' AND '" + n + "'" : a.fieldObj.name +
                                    " NOT BETWEEN " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(f) + "' AND " + (this.isHosted ? "" : "timestamp ") + "'" + this.formatDate(this.addDay(n)) + "'";
                                break;
                            case this.OPERATORS.dateOperatorIsBlank:
                                l = a.fieldObj.name + " IS NULL";
                                break;
                            case this.OPERATORS.dateOperatorIsNotBlank:
                                l = a.fieldObj.name + " IS NOT NULL"
                        }
                        return {
                            whereClause: l
                        }
                    },
                    formatDate: function(a) {
                        var d = h.format(a, {
                            datePattern: "yyyy-MM-dd",
                            selector: "date"
                        });
                        a = h.format(a, {
                            selector: "time",
                            timePattern: "HH:mm:ss"
                        });
                        return d + " " + a
                    },
                    addDay: function(a) {
                        return new Date(a.getTime() +
                            this.dayInMS)
                    },
                    getFilterObjByExpr: function(a) {
                        if (a && this.fieldsStore) {
                            var d = this.replaceStrings(a);
                            a = d.defExpr;
                            var c = this.findParts(a, "AND");
                            1 === c.parts.length && (c = this.findParts(a, "OR"), 1 === c.parts.length && (c.logicalOperator = "AND"));
                            f.forEach(c.parts, function(a) {
                                a.expr = a.expr.trim();
                                if (a.expr.startsWith("(") && -1 < a.expr.search(/\)$/)) {
                                    var c = a.expr.substring(1, a.expr.length - 1),
                                        d = c.indexOf("("),
                                        e = c.indexOf(")");
                                    if (-1 === d && -1 === e || d < e) a.expr = c
                                }
                                c = this.findParts(a.expr, "AND");
                                1 === c.parts.length && (c = this.findParts(a.expr,
                                    "OR"));
                                1 < c.parts.length && (a.parts = c.parts, a.logicalOperator = c.logicalOperator)
                            }, this);
                            this.parseExpr(c);
                            this.reReplaceStrings(d, c, e.hitch(this, function() {
                                c && c.parts && f.forEach(c.parts, e.hitch(this, function(a) {
                                    a && (a.parts ? f.forEach(a.parts, e.hitch(this, function(a) {
                                        this._handleParsedValuesForSinglePart(a);
                                        this._addDefalutValueTypeForSinglePart(a)
                                    })) : (this._handleParsedValuesForSinglePart(a), this._addDefalutValueTypeForSinglePart(a)))
                                }))
                            }));
                            this.isPartsObjHasError(c) && (c = null);
                            return c
                        }
                    },
                    _handleParsedValuesForSinglePart: function(a) {
                        a &&
                            (a.fieldObj && "number" === a.fieldObj.shortType && a.valueObj) && (a.valueObj.hasOwnProperty("value") && (a.valueObj.value = parseFloat(a.valueObj.value)), a.valueObj.hasOwnProperty("value1") && (a.valueObj.value1 = parseFloat(a.valueObj.value1)), a.valueObj.hasOwnProperty("value2") && (a.valueObj.value2 = parseFloat(a.valueObj.value2)))
                    },
                    _addDefalutValueTypeForSinglePart: function(a) {
                        a && a.valueObj && !a.valueObj.type && (a.valueObj.type = "value")
                    },
                    replaceStrings: function(a) {
                        for (var d = a, c = function(a, b, d) {
                                var g = -1,
                                    g = a.indexOf("'",
                                        d + 1);
                                return g === d + 1 ? (g = a.indexOf("'", g + 1), c(a, b, g)) : d
                            }, e = [], n = a.indexOf("'"); - 1 < n;) {
                            var r = n,
                                n = a.indexOf("'", n + 1),
                                l = 0,
                                n = c(a, r, n);
                            "%" === a[r + 1] && r++;
                            "%" === a[n - 1] && (n -= 1, l++);
                            var g = a.substring(r + 1, n);
                            "N" === a[r - 1] && (a = a.substring(0, r - 1) + a.substring(r), r -= 1, n -= 1);
                            !this.isDateString(g) && -1 === g.indexOf("{") ? (e.push(g), a = a.substring(0, r + 1) + "#" + (e.length - 1) + "#" + a.substring(n), n = a.indexOf("'", a.lastIndexOf("#") + 2 + l)) : n = a.indexOf("'", n + 1 + l)
                        }
                        return {
                            origDefExpr: d,
                            defExpr: a,
                            savedStrings: e
                        }
                    },
                    reReplaceStrings: function(a,
                        k, c) {
                        var m = a.savedStrings;
                        if (m.length) {
                            if (m.length) {
                                var n = function(a, c) {
                                        if (void 0 === a.valueObj || null === a.valueObj || (void 0 === a.valueObj.value || null === a.valueObj.value) || "string" !== a.fieldObj.shortType) return !1;
                                        var e = a.valueObj.value.indexOf("#"),
                                            b = a.valueObj.value.lastIndexOf("#");
                                        return d.isDefined(a.valueObj.value) && -1 < e ? (a.valueObj.value = c[parseInt(a.valueObj.value.substring(e + 1, b), 10)].replace(/\'\'/g, "'"), this.builtSingleFilterString(a), !0) : !1
                                    },
                                    n = e.hitch(this, n),
                                    r = !1;
                                f.forEach(k.parts, function(a) {
                                    if (a.parts) {
                                        var c = !1;
                                        f.forEach(a.parts, function(a) {
                                            c = n(a, m) || c
                                        });
                                        c && (r = c, a.expr = this.builtFilterString(a))
                                    } else(r = n(a, m) || r) && this.builtFilterString(a)
                                }, this);
                                c && "function" === typeof c && c();
                                r && (k.expr = null, this.getExprByFilterObj(k))
                            }
                        } else c && "function" === typeof c && c()
                    },
                    isDateString: function(a) {
                        return 19 === a.length && "-" === a.charAt(4) && "-" === a.charAt(7) && " " === a.charAt(10) && ":" === a.charAt(13) && ":" === a.charAt(16) ? !0 : !1
                    },
                    findParts: function(a, d) {
                        for (var c = a.toLowerCase(), e = " " + d.toLowerCase() + " ", n = [], r = 0, l = c.indexOf(e); 0 <
                            l;) {
                            var g = a.substring(r, l),
                                f = g.toLowerCase(),
                                b = g.count("("),
                                m = g.count(")"),
                                h = g.count("'");
                            b !== m || 1 === h % 2 ? l = c.indexOf(e, l + 1) : -1 < f.indexOf(" between ") && -1 === f.indexOf(" and ") ? l = c.indexOf(e, l + 1) : (n.push({
                                expr: g
                            }), r = l + e.length, l = c.indexOf(e, r))
                        }
                        n.push({
                            expr: a.substring(r)
                        });
                        for (c = n.length - 1; 0 <= c; c--) !this.hasOperator(n[c].expr) && 0 < c && (n[c - 1].expr += " " + d + " " + n[c].expr, n.splice(c, 1));
                        return {
                            expr: a,
                            parts: n,
                            logicalOperator: d
                        }
                    },
                    hasOperator: function(a) {
                        a = a.toLowerCase();
                        return -1 < a.indexOf("{") && -1 < a.indexOf("}") ||
                            -1 < a.indexOf(" \x3d ") || -1 < a.indexOf(" \x3c ") || -1 < a.indexOf(" \x3e ") || -1 < a.indexOf(" \x3c\x3e ") || -1 < a.indexOf(" \x3c\x3d ") || -1 < a.indexOf(" \x3e\x3d ") || -1 < a.indexOf(" like ") || -1 < a.indexOf(" between ") || -1 < a.indexOf(" date") || -1 < a.indexOf(" is null") || -1 < a.indexOf(" is not null") ? !0 : !1
                    },
                    parseExpr: function(a) {
                        f.forEach(a.parts, function(a) {
                            a.parts ? this.parseExpr(a) : this.parseSingleExpr(a)
                        }, this)
                    },
                    _preParseSingleExpr: function(a) {
                        var d = null;
                        try {
                            if (d = e.clone(a), d.expr = d.expr.trim(), /^UPPER\((.*)\)(\s+|\s+NOT\s+)LIKE\s+UPPER\(N?'(.*)'\)$/i.test(d.expr)) {
                                var c =
                                    a = "",
                                    f = d.expr.match(/^UPPER\((.*)\)\s+/i);
                                if (f && 2 <= f.length) a = f[1];
                                else return null;
                                var n = d.expr.match(/UPPER\(N?'(.*)'\)$/i);
                                if (n && 2 <= n.length) c = "'" + n[1] + "'";
                                else return null;
                                d.expr = d.expr.replace(/^UPPER\((.*)\)\s+/i, a + " ");
                                d.expr = d.expr.replace(/UPPER\(N?'(.*)'\)$/i, c);
                                d.caseSensitive = !1
                            } else /^(.+)(\s+|\s+NOT\s+)LIKE\s+N?'(.*)'$/i.test(d.expr) && (d.caseSensitive = !0)
                        } catch (r) {
                            return console.log(r), null
                        }
                        d && this.isHosted && (d.caseSensitive = !1);
                        return d
                    },
                    parseSingleExpr: function(a) {
                        var k = this._preParseSingleExpr(a);
                        k && (a = e.mixin(a, k));
                        var k = a.expr.trim(),
                            c = k.indexOf(" "),
                            f = k.substring(0, c);
                        a.fieldObj = {
                            name: f
                        };
                        a.valueObj = {};
                        this.getFieldItemByName({
                            name: f
                        }, function(c) {
                            a.fieldObj.shortType = c.shortType[0];
                            a.fieldObj.label = c.label[0]
                        }, function() {
                            a.error = {
                                msg: "unknown field name (" + f + ")",
                                code: 1
                            }
                        });
                        k = k.substring(c + 1).trim();
                        c = k.toLowerCase();
                        c.startsWith("\x3d ") ? (k = "date" === a.fieldObj.shortType && !this.isHosted ? k.substring(12).trim() : k.substring(2).trim(), this.storeValue(k, a), a.operator = "date" === a.fieldObj.shortType ?
                                this.OPERATORS.dateOperatorIsOn : "string" === a.fieldObj.shortType ? this.OPERATORS.stringOperatorIs : this.OPERATORS.numberOperatorIs) : c.startsWith("\x3c ") ? (k = "date" === a.fieldObj.shortType && !this.isHosted ? k.substring(12).trim() : k.substring(2).trim(), this.storeValue(k, a), "date" === a.fieldObj.shortType ? a.operator = this.OPERATORS.dateOperatorIsBefore : "number" === a.fieldObj.shortType ? a.operator = this.OPERATORS.numberOperatorIsLessThan : a.error = {
                                msg: "operator (" + c + ") not supported for string",
                                code: 3
                            }) : c.startsWith("\x3e ") ?
                            (k = "date" === a.fieldObj.shortType && !this.isHosted ? k.substring(12).trim() : k.substring(2).trim(), this.storeValue(k, a), "date" === a.fieldObj.shortType ? a.operator = this.OPERATORS.dateOperatorIsAfter : "number" === a.fieldObj.shortType ? a.operator = this.OPERATORS.numberOperatorIsGreaterThan : a.error = {
                                msg: "operator (" + c + ") not supported for string",
                                code: 3
                            }) : c.startsWith("\x3c\x3e ") ? (k = "date" === a.fieldObj.shortType && !this.isHosted ? k.substring(13).trim() : k.substring(3).trim(), this.storeValue(k, a), a.operator = "date" ===
                                a.fieldObj.shortType ? this.OPERATORS.dateOperatorIsNotOn : "string" === a.fieldObj.shortType ? this.OPERATORS.stringOperatorIsNot : this.OPERATORS.numberOperatorIsNot) : c.startsWith("\x3c\x3d ") ? (this.storeValue(k.substring(3).trim(), a), a.operator = this.OPERATORS.numberOperatorIsAtMost) : c.startsWith("\x3e\x3d ") ? (this.storeValue(k.substring(3).trim(), a), a.operator = this.OPERATORS.numberOperatorIsAtLeast) : c.startsWith("like ") ? (k = k.substring(5).trim(), k.startsWith("N'") && (k = k.substring(1, k.length)), k.startsWith("'%") &&
                                k.endsWith("%'") ? (this.storeValue(k.substring(2, k.length - 2), a), a.operator = this.OPERATORS.stringOperatorContains) : k.startsWith("'%") && k.endsWith("'") ? (this.storeValue(k.substring(2, k.length - 1), a), a.operator = this.OPERATORS.stringOperatorEndsWith) : k.startsWith("'") && k.endsWith("%'") ? (this.storeValue(k.substring(1, k.length - 2), a), a.operator = this.OPERATORS.stringOperatorStartsWith) : a.error = {
                                    msg: "value (" + c + ") not supported for LIKE",
                                    code: 3
                                }) : c.startsWith("not like ") ? (k = k.substring(9).trim(), k.startsWith("N'") &&
                                (k = k.substring(1, k.length)), k.startsWith("'%") && k.endsWith("%'") ? (this.storeValue(k.substring(2, k.length - 2), a), a.operator = this.OPERATORS.stringOperatorDoesNotContain) : a.error = {
                                    msg: "value (" + c + ") not supported for NOT LIKE",
                                    code: 3
                                }) : c.startsWith("between ") ? (k = "date" === a.fieldObj.shortType && !this.isHosted ? k.substring(18).trim() : k.substring(8).trim(), c = k.toLowerCase().indexOf(" and "), -1 < c ? (this.storeValue1(k.substring(0, c).trim(), a), "date" === a.fieldObj.shortType && !this.isHosted ? this.storeValue2(k.substring(c +
                                    15).trim(), a) : this.storeValue2(k.substring(c + 5).trim(), a)) : a.error = {
                                    msg: "missing AND operator for BETWEEN",
                                    code: 3
                                }, "date" === a.fieldObj.shortType ? "string" === typeof a.valueObj.value1 ? a.operator = this.OPERATORS.dateOperatorIsBetween : 1E3 > Math.abs(this.subtractDay(a.valueObj.value2).getTime() - a.valueObj.value1.getTime()) ? (a.valueObj.value = a.valueObj.value1, delete a.valueObj.value1, delete a.valueObj.value2, a.operator = this.OPERATORS.dateOperatorIsOn) : a.operator = this.OPERATORS.dateOperatorIsBetween : "number" ===
                                a.fieldObj.shortType || "oid" === a.fieldObj.shortType ? a.operator = this.OPERATORS.numberOperatorIsBetween : a.error = {
                                    msg: "string field not supported for BETWEEN",
                                    code: 3
                                }) : c.startsWith("not between ") ? (k = "date" === a.fieldObj.shortType && !this.isHosted ? k.substring(22).trim() : k.substring(12).trim(), c = k.toLowerCase().indexOf(" and "), -1 < c ? (this.storeValue1(k.substring(0, c).trim(), a), "date" === a.fieldObj.shortType && !this.isHosted ? this.storeValue2(k.substring(c + 15).trim(), a) : this.storeValue2(k.substring(c + 5).trim(),
                                    a)) : a.error = {
                                    msg: "missing AND operator for NOT BETWEEN",
                                    code: 3
                                }, "date" === a.fieldObj.shortType ? "string" === typeof a.valueObj.value1 ? a.operator = this.OPERATORS.dateOperatorIsNotBetween : 1E3 > Math.abs(this.subtractDay(a.valueObj.value2).getTime() - a.valueObj.value1.getTime()) ? (a.valueObj.value = a.valueObj.value1, delete a.valueObj.value1, delete a.valueObj.value2, a.operator = this.OPERATORS.dateOperatorIsNotOn) : a.operator = this.OPERATORS.dateOperatorIsNotBetween : "number" === a.fieldObj.shortType || "oid" === a.fieldObj.shortType ?
                                a.operator = this.OPERATORS.numberOperatorIsNotBetween : a.error = {
                                    msg: "string field not supported for NOT BETWEEN",
                                    code: 3
                                }) : "is null" === c ? (a.valueObj.value = null, a.operator = "date" === a.fieldObj.shortType ? this.OPERATORS.dateOperatorIsBlank : "string" === a.fieldObj.shortType ? this.OPERATORS.stringOperatorIsBlank : this.OPERATORS.numberOperatorIsBlank) : "is not null" === c ? (a.valueObj.value = null, a.operator = "date" === a.fieldObj.shortType ? this.OPERATORS.dateOperatorIsNotBlank : "string" === a.fieldObj.shortType ? this.OPERATORS.stringOperatorIsNotBlank :
                                this.OPERATORS.numberOperatorIsNotBlank) : a.error = {
                                msg: "unknown operator (" + c + ")",
                                code: 2
                            };
                        if (d.isDefined(a.valueObj.value) && "string" === typeof a.valueObj.value && a.valueObj.value.startsWith("{") && a.valueObj.value.endsWith("}") || d.isDefined(a.valueObj.value1) && "string" === typeof a.valueObj.value1 && a.valueObj.value1.startsWith("{") && a.valueObj.value1.endsWith("}")) a.isInteractive = !0
                    },
                    getFieldItemByName: function(a, d, c) {
                        this.fieldsStore.fetch({
                            query: a,
                            onComplete: e.hitch(this, function(a) {
                                a && a.length ? d(a[0]) :
                                    c()
                            })
                        })
                    },
                    subtractDay: function(a) {
                        return new Date(a.getTime() - this.dayInMS)
                    },
                    storeValue: function(a, d) {
                        if (a.startsWith("{") && a.endsWith("}")) d.valueObj.value = a;
                        else if (a.startsWith("'{") && a.endsWith("}'")) d.valueObj.value = a.substring(1, a.length - 1);
                        else if ("date" === d.fieldObj.shortType)
                            if (a.startsWith("'") && a.endsWith("'")) {
                                var c = a.substring(1, a.length - 1);
                                d.valueObj.value = this.parseDate(c)
                            } else d.valueObj.value = a, d.valueObj.type = "field";
                        else "string" === d.fieldObj.shortType ? (a.startsWith("#") || a.startsWith("%#")) &&
                            (a.endsWith("#") || a.endsWith("#%")) ? d.valueObj.value = a : a.startsWith("'") && a.endsWith("'") ? d.valueObj.value = a.substring(1, a.length - 1).replace(/\'\'/g, "'") : (d.valueObj.value = a, d.valueObj.type = "field", this.getFieldItemByName({
                                name: a
                            }, function(a) {
                                d.valueObj.label = a.label[0]
                            }, function() {
                                d.error = {
                                    msg: "unknown field name (" + a + ")",
                                    code: 1
                                }
                            })) : (d.valueObj.value = a, isNaN(a) && (d.valueObj.type = "field", this.getFieldItemByName({
                                name: a
                            }, function(a) {
                                d.valueObj.label = a.label[0]
                            }, function() {
                                d.error = {
                                    msg: "unknown field name (" +
                                        a + ")",
                                    code: 1
                                }
                            })))
                    },
                    storeValue1: function(a, d) {
                        if (a.startsWith("{") && a.endsWith("}")) d.valueObj.value1 = a;
                        else if (a.startsWith("'{") && a.endsWith("}'")) d.valueObj.value1 = a.substring(1, a.length - 1);
                        else if ("date" === d.fieldObj.shortType)
                            if (a.startsWith("'") && a.endsWith("'")) {
                                var c = a.substring(1, a.length - 1);
                                d.valueObj.value1 = this.parseDate(c)
                            } else d.valueObj.value1 = a, d.valueObj.type = "field";
                        else d.valueObj.value1 = a, isNaN(a) && (d.valueObj.type = "field")
                    },
                    storeValue2: function(a, d) {
                        if (a.startsWith("{") && a.endsWith("}")) d.valueObj.value2 =
                            a;
                        else if (a.startsWith("'{") && a.endsWith("}'")) d.valueObj.value2 = a.substring(1, a.length - 1);
                        else if ("date" === d.fieldObj.shortType)
                            if (a.startsWith("'") && a.endsWith("'")) {
                                var c = a.substring(1, a.length - 1);
                                d.valueObj.value2 = this.parseDate(c)
                            } else d.valueObj.value2 = a, d.valueObj.type = "field";
                        else d.valueObj.value2 = a, isNaN(a) && (d.valueObj.type = "field")
                    },
                    parseDate: function(a) {
                        var d = h.parse(a, {
                            datePattern: "yyyy-MM-dd",
                            timePattern: "HH:mm:ss"
                        });
                        d || (d = h.parse(a.replace(" ", ", "), {
                                datePattern: "yyyy-MM-dd",
                                timePattern: "HH:mm:ss"
                            })) ||
                            (d = h.parse(a.replace(" ", " - "), {
                                datePattern: "yyyy-MM-dd",
                                timePattern: "HH:mm:ss"
                            }));
                        return d
                    }
                })
            })
        },
        "dojo/data/ItemFileWriteStore": function() {
            define("../_base/lang ../_base/declare ../_base/array ../_base/json ../_base/kernel ./ItemFileReadStore ../date/stamp".split(" "), function(p, e, f, h, d, m, q) {
                return e("dojo.data.ItemFileWriteStore", m, {
                    constructor: function(a) {
                        this._features["dojo.data.api.Write"] = !0;
                        this._features["dojo.data.api.Notification"] = !0;
                        this._pending = {
                            _newItems: {},
                            _modifiedItems: {},
                            _deletedItems: {}
                        };
                        this._datatypeMap.Date.serialize || (this._datatypeMap.Date.serialize = function(a) {
                            return q.toISOString(a, {
                                zulu: !0
                            })
                        });
                        a && !1 === a.referenceIntegrity && (this.referenceIntegrity = !1);
                        this._saveInProgress = !1
                    },
                    referenceIntegrity: !0,
                    _assert: function(a) {
                        if (!a) throw Error("assertion failed in ItemFileWriteStore");
                    },
                    _getIdentifierAttribute: function() {
                        return this.getFeatures()["dojo.data.api.Identity"]
                    },
                    newItem: function(a, d) {
                        this._assert(!this._saveInProgress);
                        this._loadFinished || this._forceLoad();
                        if ("object" !=
                            typeof a && "undefined" != typeof a) throw Error("newItem() was passed something other than an object");
                        var c = null,
                            e = this._getIdentifierAttribute();
                        if (e === Number) c = this._arrayOfAllItems.length;
                        else {
                            c = a[e];
                            if ("undefined" === typeof c) throw Error("newItem() was not passed an identity for the new item");
                            if (p.isArray(c)) throw Error("newItem() was not passed an single-valued identity");
                        }
                        this._itemsByIdentity && this._assert("undefined" === typeof this._itemsByIdentity[c]);
                        this._assert("undefined" === typeof this._pending._newItems[c]);
                        this._assert("undefined" === typeof this._pending._deletedItems[c]);
                        var n = {};
                        n[this._storeRefPropName] = this;
                        n[this._itemNumPropName] = this._arrayOfAllItems.length;
                        this._itemsByIdentity && (this._itemsByIdentity[c] = n, n[e] = [c]);
                        this._arrayOfAllItems.push(n);
                        e = null;
                        if (d && d.parent && d.attribute) {
                            var e = {
                                    item: d.parent,
                                    attribute: d.attribute,
                                    oldValue: void 0
                                },
                                r = this.getValues(d.parent, d.attribute);
                            if (r && 0 < r.length) {
                                var l = r.slice(0, r.length);
                                e.oldValue = 1 === r.length ? r[0] : r.slice(0, r.length);
                                l.push(n);
                                this._setValueOrValues(d.parent,
                                    d.attribute, l, !1);
                                e.newValue = this.getValues(d.parent, d.attribute)
                            } else this._setValueOrValues(d.parent, d.attribute, n, !1), e.newValue = n
                        } else n[this._rootItemPropName] = !0, this._arrayOfTopLevelItems.push(n);
                        this._pending._newItems[c] = n;
                        for (var g in a) {
                            if (g === this._storeRefPropName || g === this._itemNumPropName) throw Error("encountered bug in ItemFileWriteStore.newItem");
                            c = a[g];
                            p.isArray(c) || (c = [c]);
                            n[g] = c;
                            if (this.referenceIntegrity)
                                for (r = 0; r < c.length; r++) l = c[r], this.isItem(l) && this._addReferenceToMap(l,
                                    n, g)
                        }
                        this.onNew(n, e);
                        return n
                    },
                    _removeArrayElement: function(a, d) {
                        var c = f.indexOf(a, d);
                        return -1 != c ? (a.splice(c, 1), !0) : !1
                    },
                    deleteItem: function(a) {
                        this._assert(!this._saveInProgress);
                        this._assertIsItem(a);
                        var d = a[this._itemNumPropName],
                            c = this.getIdentity(a);
                        if (this.referenceIntegrity) {
                            var e = this.getAttributes(a);
                            a[this._reverseRefMap] && (a["backup_" + this._reverseRefMap] = p.clone(a[this._reverseRefMap]));
                            f.forEach(e, function(b) {
                                f.forEach(this.getValues(a, b), function(c) {
                                    this.isItem(c) && (a["backupRefs_" +
                                        this._reverseRefMap] || (a["backupRefs_" + this._reverseRefMap] = []), a["backupRefs_" + this._reverseRefMap].push({
                                        id: this.getIdentity(c),
                                        attr: b
                                    }), this._removeReferenceFromMap(c, a, b))
                                }, this)
                            }, this);
                            if (e = a[this._reverseRefMap])
                                for (var n in e) {
                                    var r = null;
                                    if (r = this._itemsByIdentity ? this._itemsByIdentity[n] : this._arrayOfAllItems[n])
                                        for (var l in e[n]) {
                                            var g = this.getValues(r, l) || [],
                                                m = f.filter(g, function(b) {
                                                    return !(this.isItem(b) && this.getIdentity(b) == c)
                                                }, this);
                                            this._removeReferenceFromMap(a, r, l);
                                            m.length < g.length &&
                                                this._setValueOrValues(r, l, m, !0)
                                        }
                                }
                        }
                        this._arrayOfAllItems[d] = null;
                        a[this._storeRefPropName] = null;
                        this._itemsByIdentity && delete this._itemsByIdentity[c];
                        this._pending._deletedItems[c] = a;
                        a[this._rootItemPropName] && this._removeArrayElement(this._arrayOfTopLevelItems, a);
                        this.onDelete(a);
                        return !0
                    },
                    setValue: function(a, d, c) {
                        return this._setValueOrValues(a, d, c, !0)
                    },
                    setValues: function(a, d, c) {
                        return this._setValueOrValues(a, d, c, !0)
                    },
                    unsetAttribute: function(a, d) {
                        return this._setValueOrValues(a, d, [], !0)
                    },
                    _setValueOrValues: function(a,
                        d, c, e) {
                        this._assert(!this._saveInProgress);
                        this._assertIsItem(a);
                        this._assert(p.isString(d));
                        this._assert("undefined" !== typeof c);
                        var n = this._getIdentifierAttribute();
                        if (d == n) throw Error("ItemFileWriteStore does not have support for changing the value of an item's identifier.");
                        var n = this._getValueOrValues(a, d),
                            r = this.getIdentity(a);
                        if (!this._pending._modifiedItems[r]) {
                            var l = {},
                                g;
                            for (g in a) l[g] = g === this._storeRefPropName || g === this._itemNumPropName || g === this._rootItemPropName ? a[g] : g === this._reverseRefMap ?
                                p.clone(a[g]) : a[g].slice(0, a[g].length);
                            this._pending._modifiedItems[r] = l
                        }
                        r = !1;
                        if (p.isArray(c) && 0 === c.length) {
                            if (r = delete a[d], c = void 0, this.referenceIntegrity && n) {
                                g = n;
                                p.isArray(g) || (g = [g]);
                                for (var m = 0; m < g.length; m++) l = g[m], this.isItem(l) && this._removeReferenceFromMap(l, a, d)
                            }
                        } else {
                            r = p.isArray(c) ? c.slice(0, c.length) : [c];
                            if (this.referenceIntegrity)
                                if (n) {
                                    g = n;
                                    p.isArray(g) || (g = [g]);
                                    var b = {};
                                    f.forEach(g, function(a) {
                                        this.isItem(a) && (a = this.getIdentity(a), b[a.toString()] = !0)
                                    }, this);
                                    f.forEach(r, function(c) {
                                        if (this.isItem(c)) {
                                            var g =
                                                this.getIdentity(c);
                                            b[g.toString()] ? delete b[g.toString()] : this._addReferenceToMap(c, a, d)
                                        }
                                    }, this);
                                    for (m in b) this._removeReferenceFromMap(this._itemsByIdentity ? this._itemsByIdentity[m] : this._arrayOfAllItems[m], a, d)
                                } else
                                    for (m = 0; m < r.length; m++) l = r[m], this.isItem(l) && this._addReferenceToMap(l, a, d);
                            a[d] = r;
                            r = !0
                        }
                        if (e) this.onSet(a, d, n, c);
                        return r
                    },
                    _addReferenceToMap: function(a, d, c) {
                        d = this.getIdentity(d);
                        var e = a[this._reverseRefMap];
                        e || (e = a[this._reverseRefMap] = {});
                        (a = e[d]) || (a = e[d] = {});
                        a[c] = !0
                    },
                    _removeReferenceFromMap: function(a,
                        d, c) {
                        d = this.getIdentity(d);
                        var e = a[this._reverseRefMap],
                            n;
                        if (e) {
                            for (n in e) n == d && (delete e[n][c], this._isEmpty(e[n]) && delete e[n]);
                            this._isEmpty(e) && delete a[this._reverseRefMap]
                        }
                    },
                    _dumpReferenceMap: function() {
                        var a;
                        for (a = 0; a < this._arrayOfAllItems.length; a++) {
                            var d = this._arrayOfAllItems[a];
                            d && d[this._reverseRefMap] && console.log("Item: [" + this.getIdentity(d) + "] is referenced by: " + h.toJson(d[this._reverseRefMap]))
                        }
                    },
                    _getValueOrValues: function(a, d) {
                        var c = void 0;
                        this.hasAttribute(a, d) && (c = this.getValues(a,
                            d), c = 1 == c.length ? c[0] : c);
                        return c
                    },
                    _flatten: function(a) {
                        if (this.isItem(a)) return {
                            _reference: this.getIdentity(a)
                        };
                        if ("object" === typeof a)
                            for (var d in this._datatypeMap) {
                                var c = this._datatypeMap[d];
                                if (p.isObject(c) && !p.isFunction(c)) {
                                    if (a instanceof c.type) {
                                        if (!c.serialize) throw Error("ItemFileWriteStore:  No serializer defined for type mapping: [" + d + "]");
                                        return {
                                            _type: d,
                                            _value: c.serialize(a)
                                        }
                                    }
                                } else if (a instanceof c) return {
                                    _type: d,
                                    _value: a.toString()
                                }
                            }
                        return a
                    },
                    _getNewFileContentString: function() {
                        var a = {},
                            d = this._getIdentifierAttribute();
                        d !== Number && (a.identifier = d);
                        this._labelAttr && (a.label = this._labelAttr);
                        a.items = [];
                        for (d = 0; d < this._arrayOfAllItems.length; ++d) {
                            var c = this._arrayOfAllItems[d];
                            if (null !== c) {
                                var e = {},
                                    n;
                                for (n in c)
                                    if (n !== this._storeRefPropName && n !== this._itemNumPropName && n !== this._reverseRefMap && n !== this._rootItemPropName) {
                                        var r = this.getValues(c, n);
                                        if (1 == r.length) e[n] = this._flatten(r[0]);
                                        else
                                            for (var l = [], g = 0; g < r.length; ++g) l.push(this._flatten(r[g])), e[n] = l
                                    }
                                a.items.push(e)
                            }
                        }
                        return h.toJson(a, !0)
                    },
                    _isEmpty: function(a) {
                        var d = !0;
                        if (p.isObject(a))
                            for (var c in a) {
                                d = !1;
                                break
                            } else p.isArray(a) && 0 < a.length && (d = !1);
                        return d
                    },
                    save: function(a) {
                        this._assert(!this._saveInProgress);
                        this._saveInProgress = !0;
                        var e = this,
                            c = function() {
                                e._pending = {
                                    _newItems: {},
                                    _modifiedItems: {},
                                    _deletedItems: {}
                                };
                                e._saveInProgress = !1;
                                a && a.onComplete && a.onComplete.call(a.scope || d.global)
                            },
                            f = function(c) {
                                e._saveInProgress = !1;
                                a && a.onError && a.onError.call(a.scope || d.global, c)
                            };
                        if (this._saveEverything) {
                            var n = this._getNewFileContentString();
                            this._saveEverything(c, f, n)
                        }
                        this._saveCustom && this._saveCustom(c, f);
                        !this._saveEverything && !this._saveCustom && c()
                    },
                    revert: function() {
                        this._assert(!this._saveInProgress);
                        for (var a in this._pending._modifiedItems) {
                            var d = this._pending._modifiedItems[a],
                                c = null,
                                c = this._itemsByIdentity ? this._itemsByIdentity[a] : this._arrayOfAllItems[a];
                            d[this._storeRefPropName] = this;
                            for (var e in c) delete c[e];
                            p.mixin(c, d)
                        }
                        var n;
                        for (a in this._pending._deletedItems) n = this._pending._deletedItems[a], n[this._storeRefPropName] =
                            this, d = n[this._itemNumPropName], n["backup_" + this._reverseRefMap] && (n[this._reverseRefMap] = n["backup_" + this._reverseRefMap], delete n["backup_" + this._reverseRefMap]), this._arrayOfAllItems[d] = n, this._itemsByIdentity && (this._itemsByIdentity[a] = n), n[this._rootItemPropName] && this._arrayOfTopLevelItems.push(n);
                        for (a in this._pending._deletedItems) n = this._pending._deletedItems[a], n["backupRefs_" + this._reverseRefMap] && (f.forEach(n["backupRefs_" + this._reverseRefMap], function(a) {
                            this._addReferenceToMap(this._itemsByIdentity ?
                                this._itemsByIdentity[a.id] : this._arrayOfAllItems[a.id], n, a.attr)
                        }, this), delete n["backupRefs_" + this._reverseRefMap]);
                        for (a in this._pending._newItems) d = this._pending._newItems[a], d[this._storeRefPropName] = null, this._arrayOfAllItems[d[this._itemNumPropName]] = null, d[this._rootItemPropName] && this._removeArrayElement(this._arrayOfTopLevelItems, d), this._itemsByIdentity && delete this._itemsByIdentity[a];
                        this._pending = {
                            _newItems: {},
                            _modifiedItems: {},
                            _deletedItems: {}
                        };
                        return !0
                    },
                    isDirty: function(a) {
                        return a ?
                            (a = this.getIdentity(a), (new Boolean(this._pending._newItems[a] || this._pending._modifiedItems[a] || this._pending._deletedItems[a])).valueOf()) : !this._isEmpty(this._pending._newItems) || !this._isEmpty(this._pending._modifiedItems) || !this._isEmpty(this._pending._deletedItems)
                    },
                    onSet: function(a, d, c, e) {},
                    onNew: function(a, d) {},
                    onDelete: function(a) {},
                    close: function(a) {
                        if (this.clearOnClose) {
                            if (this.isDirty()) throw Error("dojo.data.ItemFileWriteStore: There are unsaved changes present in the store.  Please save or revert the changes before invoking close.");
                            this.inherited(arguments)
                        }
                    }
                })
            })
        },
        "dojo/data/ItemFileReadStore": function() {
            define("../_base/kernel ../_base/lang ../_base/declare ../_base/array ../_base/xhr ../Evented ./util/filter ./util/simpleFetch ../date/stamp".split(" "), function(p, e, f, h, d, m, q, a, k) {
                f = f("dojo.data.ItemFileReadStore", [m], {
                    constructor: function(a) {
                        this._arrayOfAllItems = [];
                        this._arrayOfTopLevelItems = [];
                        this._loadFinished = !1;
                        this.url = this._ccUrl = this._jsonFileUrl = a.url;
                        this._jsonData = a.data;
                        this.data = null;
                        this._datatypeMap = a.typeMap || {};
                        this._datatypeMap.Date || (this._datatypeMap.Date = {
                            type: Date,
                            deserialize: function(a) {
                                return k.fromISOString(a)
                            }
                        });
                        this._features = {
                            "dojo.data.api.Read": !0,
                            "dojo.data.api.Identity": !0
                        };
                        this._itemsByIdentity = null;
                        this._storeRefPropName = "_S";
                        this._itemNumPropName = "_0";
                        this._rootItemPropName = "_RI";
                        this._reverseRefMap = "_RRM";
                        this._loadInProgress = !1;
                        this._queuedFetches = [];
                        void 0 !== a.urlPreventCache && (this.urlPreventCache = a.urlPreventCache ? !0 : !1);
                        void 0 !== a.hierarchical && (this.hierarchical = a.hierarchical ?
                            !0 : !1);
                        a.clearOnClose && (this.clearOnClose = !0);
                        "failOk" in a && (this.failOk = a.failOk ? !0 : !1)
                    },
                    url: "",
                    _ccUrl: "",
                    data: null,
                    typeMap: null,
                    clearOnClose: !1,
                    urlPreventCache: !1,
                    failOk: !1,
                    hierarchical: !0,
                    _assertIsItem: function(a) {
                        if (!this.isItem(a)) throw Error(this.declaredClass + ": Invalid item argument.");
                    },
                    _assertIsAttribute: function(a) {
                        if ("string" !== typeof a) throw Error(this.declaredClass + ": Invalid attribute argument.");
                    },
                    getValue: function(a, d, e) {
                        a = this.getValues(a, d);
                        return 0 < a.length ? a[0] : e
                    },
                    getValues: function(a,
                        d) {
                        this._assertIsItem(a);
                        this._assertIsAttribute(d);
                        return (a[d] || []).slice(0)
                    },
                    getAttributes: function(a) {
                        this._assertIsItem(a);
                        var d = [],
                            e;
                        for (e in a) e !== this._storeRefPropName && (e !== this._itemNumPropName && e !== this._rootItemPropName && e !== this._reverseRefMap) && d.push(e);
                        return d
                    },
                    hasAttribute: function(a, d) {
                        this._assertIsItem(a);
                        this._assertIsAttribute(d);
                        return d in a
                    },
                    containsValue: function(a, d, e) {
                        var k = void 0;
                        "string" === typeof e && (k = q.patternToRegExp(e, !1));
                        return this._containsValue(a, d, e, k)
                    },
                    _containsValue: function(a,
                        d, n, k) {
                        return h.some(this.getValues(a, d), function(a) {
                            if (null !== a && !e.isObject(a) && k) {
                                if (a.toString().match(k)) return !0
                            } else if (n === a) return !0
                        })
                    },
                    isItem: function(a) {
                        return a && a[this._storeRefPropName] === this && this._arrayOfAllItems[a[this._itemNumPropName]] === a ? !0 : !1
                    },
                    isItemLoaded: function(a) {
                        return this.isItem(a)
                    },
                    loadItem: function(a) {
                        this._assertIsItem(a.item)
                    },
                    getFeatures: function() {
                        return this._features
                    },
                    getLabel: function(a) {
                        if (this._labelAttr && this.isItem(a)) return this.getValue(a, this._labelAttr)
                    },
                    getLabelAttributes: function(a) {
                        return this._labelAttr ? [this._labelAttr] : null
                    },
                    filter: function(a, d, e) {
                        var k = [],
                            l, g;
                        if (a.query) {
                            var f;
                            l = a.queryOptions ? a.queryOptions.ignoreCase : !1;
                            var b = {};
                            for (g in a.query) f = a.query[g], "string" === typeof f ? b[g] = q.patternToRegExp(f, l) : f instanceof RegExp && (b[g] = f);
                            for (l = 0; l < d.length; ++l) {
                                var m = !0,
                                    h = d[l];
                                if (null === h) m = !1;
                                else
                                    for (g in a.query) f = a.query[g], this._containsValue(h, g, f, b[g]) || (m = !1);
                                m && k.push(h)
                            }
                        } else
                            for (l = 0; l < d.length; ++l) g = d[l], null !== g && k.push(g);
                        e(k, a)
                    },
                    _fetchItems: function(a, k, n) {
                        var r = this;
                        if (this._loadFinished) this.filter(a, this._getItemsArray(a.queryOptions), k);
                        else if (this._jsonFileUrl !== this._ccUrl ? (p.deprecated(this.declaredClass + ": ", "To change the url, set the url property of the store, not _jsonFileUrl.  _jsonFileUrl support will be removed in 2.0"), this.url = this._ccUrl = this._jsonFileUrl) : this.url !== this._ccUrl && (this._ccUrl = this._jsonFileUrl = this.url), null != this.data && (this._jsonData = this.data, this.data = null), this._jsonFileUrl)
                            if (this._loadInProgress) this._queuedFetches.push({
                                args: a,
                                filter: e.hitch(r, "filter"),
                                findCallback: e.hitch(r, k)
                            });
                            else {
                                this._loadInProgress = !0;
                                var l = d.get({
                                    url: r._jsonFileUrl,
                                    handleAs: "json-comment-optional",
                                    preventCache: this.urlPreventCache,
                                    failOk: this.failOk
                                });
                                l.addCallback(function(b) {
                                    try {
                                        r._getItemsFromLoadedData(b), r._loadFinished = !0, r._loadInProgress = !1, r.filter(a, r._getItemsArray(a.queryOptions), k), r._handleQueuedFetches()
                                    } catch (d) {
                                        r._loadFinished = !0, r._loadInProgress = !1, n(d, a)
                                    }
                                });
                                l.addErrback(function(b) {
                                    r._loadInProgress = !1;
                                    n(b, a)
                                });
                                var g = null;
                                a.abort &&
                                    (g = a.abort);
                                a.abort = function() {
                                    l && -1 === l.fired && l.cancel();
                                    g && g.call(a)
                                }
                            }
                        else if (this._jsonData) try {
                            this._loadFinished = !0, this._getItemsFromLoadedData(this._jsonData), this._jsonData = null, r.filter(a, this._getItemsArray(a.queryOptions), k)
                        } catch (f) {
                            n(f, a)
                        } else n(Error(this.declaredClass + ": No JSON source data was provided as either URL or a nested Javascript object."), a)
                    },
                    _handleQueuedFetches: function() {
                        if (0 < this._queuedFetches.length) {
                            for (var a = 0; a < this._queuedFetches.length; a++) {
                                var d = this._queuedFetches[a],
                                    e = d.args,
                                    k = d.filter,
                                    d = d.findCallback;
                                k ? k(e, this._getItemsArray(e.queryOptions), d) : this.fetchItemByIdentity(e)
                            }
                            this._queuedFetches = []
                        }
                    },
                    _getItemsArray: function(a) {
                        return a && a.deep ? this._arrayOfAllItems : this._arrayOfTopLevelItems
                    },
                    close: function(a) {
                        this.clearOnClose && (this._loadFinished && !this._loadInProgress) && (("" == this._jsonFileUrl || null == this._jsonFileUrl) && ("" == this.url || null == this.url) && null == this.data && console.debug(this.declaredClass + ": WARNING!  Data reload  information has not been provided.  Please set 'url' or 'data' to the appropriate value before the next fetch"),
                            this._arrayOfAllItems = [], this._arrayOfTopLevelItems = [], this._loadFinished = !1, this._itemsByIdentity = null, this._loadInProgress = !1, this._queuedFetches = [])
                    },
                    _getItemsFromLoadedData: function(a) {
                        function d(a) {
                            return null !== a && "object" === typeof a && (!e.isArray(a) || k) && !e.isFunction(a) && (a.constructor == Object || e.isArray(a)) && "undefined" === typeof a._reference && "undefined" === typeof a._type && "undefined" === typeof a._value && l.hierarchical
                        }

                        function n(a) {
                            l._arrayOfAllItems.push(a);
                            for (var b in a) {
                                var c = a[b];
                                if (c)
                                    if (e.isArray(c))
                                        for (var g =
                                                0; g < c.length; ++g) {
                                            var k = c[g];
                                            d(k) && n(k)
                                        } else d(c) && n(c)
                            }
                        }
                        var k = !1,
                            l = this;
                        this._labelAttr = a.label;
                        var g, f;
                        this._arrayOfAllItems = [];
                        this._arrayOfTopLevelItems = a.items;
                        for (g = 0; g < this._arrayOfTopLevelItems.length; ++g) f = this._arrayOfTopLevelItems[g], e.isArray(f) && (k = !0), n(f), f[this._rootItemPropName] = !0;
                        var b = {},
                            m;
                        for (g = 0; g < this._arrayOfAllItems.length; ++g)
                            for (m in f = this._arrayOfAllItems[g], f) {
                                if (m !== this._rootItemPropName) {
                                    var h = f[m];
                                    null !== h ? e.isArray(h) || (f[m] = [h]) : f[m] = [null]
                                }
                                b[m] = m
                            }
                        for (; b[this._storeRefPropName];) this._storeRefPropName +=
                            "_";
                        for (; b[this._itemNumPropName];) this._itemNumPropName += "_";
                        for (; b[this._reverseRefMap];) this._reverseRefMap += "_";
                        if (b = a.identifier) {
                            this._itemsByIdentity = {};
                            this._features["dojo.data.api.Identity"] = b;
                            for (g = 0; g < this._arrayOfAllItems.length; ++g)
                                if (f = this._arrayOfAllItems[g], a = f[b], a = a[0], Object.hasOwnProperty.call(this._itemsByIdentity, a)) {
                                    if (this._jsonFileUrl) throw Error(this.declaredClass + ":  The json data as specified by: [" + this._jsonFileUrl + "] is malformed.  Items within the list have identifier: [" +
                                        b + "].  Value collided: [" + a + "]");
                                    if (this._jsonData) throw Error(this.declaredClass + ":  The json data provided by the creation arguments is malformed.  Items within the list have identifier: [" + b + "].  Value collided: [" + a + "]");
                                } else this._itemsByIdentity[a] = f
                        } else this._features["dojo.data.api.Identity"] = Number;
                        for (g = 0; g < this._arrayOfAllItems.length; ++g) f = this._arrayOfAllItems[g], f[this._storeRefPropName] = this, f[this._itemNumPropName] = g;
                        for (g = 0; g < this._arrayOfAllItems.length; ++g)
                            for (m in f = this._arrayOfAllItems[g],
                                f) {
                                a = f[m];
                                for (b = 0; b < a.length; ++b)
                                    if (h = a[b], null !== h && "object" == typeof h) {
                                        if ("_type" in h && "_value" in h) {
                                            var q = h._type,
                                                p = this._datatypeMap[q];
                                            if (p)
                                                if (e.isFunction(p)) a[b] = new p(h._value);
                                                else if (e.isFunction(p.deserialize)) a[b] = p.deserialize(h._value);
                                            else throw Error("dojo.data.ItemFileReadStore: Value provided in typeMap was neither a constructor, nor a an object with a deserialize function");
                                            else throw Error("dojo.data.ItemFileReadStore: in the typeMap constructor arg, no object class was specified for the datatype '" +
                                                q + "'");
                                        }
                                        if (h._reference) {
                                            h = h._reference;
                                            if (e.isObject(h))
                                                for (q = 0; q < this._arrayOfAllItems.length; ++q) {
                                                    var p = this._arrayOfAllItems[q],
                                                        x = !0,
                                                        C;
                                                    for (C in h) p[C] != h[C] && (x = !1);
                                                    x && (a[b] = p)
                                                } else a[b] = this._getItemByIdentity(h);
                                            this.referenceIntegrity && (h = a[b], this.isItem(h) && this._addReferenceToMap(h, f, m))
                                        } else this.isItem(h) && this.referenceIntegrity && this._addReferenceToMap(h, f, m)
                                    }
                            }
                    },
                    _addReferenceToMap: function(a, d, e) {},
                    getIdentity: function(a) {
                        var d = this._features["dojo.data.api.Identity"];
                        return d === Number ?
                            a[this._itemNumPropName] : (a = a[d]) ? a[0] : null
                    },
                    fetchItemByIdentity: function(a) {
                        var e, k;
                        if (this._loadFinished) e = this._getItemByIdentity(a.identity), a.onItem && (k = a.scope ? a.scope : p.global, a.onItem.call(k, e));
                        else {
                            var f = this;
                            this._jsonFileUrl !== this._ccUrl ? (p.deprecated(this.declaredClass + ": ", "To change the url, set the url property of the store, not _jsonFileUrl.  _jsonFileUrl support will be removed in 2.0"), this.url = this._ccUrl = this._jsonFileUrl) : this.url !== this._ccUrl && (this._ccUrl = this._jsonFileUrl =
                                this.url);
                            null != this.data && null == this._jsonData && (this._jsonData = this.data, this.data = null);
                            this._jsonFileUrl ? this._loadInProgress ? this._queuedFetches.push({
                                args: a
                            }) : (this._loadInProgress = !0, k = d.get({
                                url: f._jsonFileUrl,
                                handleAs: "json-comment-optional",
                                preventCache: this.urlPreventCache,
                                failOk: this.failOk
                            }), k.addCallback(function(d) {
                                var g = a.scope ? a.scope : p.global;
                                try {
                                    f._getItemsFromLoadedData(d), f._loadFinished = !0, f._loadInProgress = !1, e = f._getItemByIdentity(a.identity), a.onItem && a.onItem.call(g, e), f._handleQueuedFetches()
                                } catch (k) {
                                    f._loadInProgress = !1, a.onError && a.onError.call(g, k)
                                }
                            }), k.addErrback(function(d) {
                                f._loadInProgress = !1;
                                a.onError && a.onError.call(a.scope ? a.scope : p.global, d)
                            })) : this._jsonData && (f._getItemsFromLoadedData(f._jsonData), f._jsonData = null, f._loadFinished = !0, e = f._getItemByIdentity(a.identity), a.onItem && (k = a.scope ? a.scope : p.global, a.onItem.call(k, e)))
                        }
                    },
                    _getItemByIdentity: function(a) {
                        var d = null;
                        this._itemsByIdentity ? Object.hasOwnProperty.call(this._itemsByIdentity, a) && (d = this._itemsByIdentity[a]) : Object.hasOwnProperty.call(this._arrayOfAllItems,
                            a) && (d = this._arrayOfAllItems[a]);
                        void 0 === d && (d = null);
                        return d
                    },
                    getIdentityAttributes: function(a) {
                        a = this._features["dojo.data.api.Identity"];
                        return a === Number ? null : [a]
                    },
                    _forceLoad: function() {
                        var a = this;
                        this._jsonFileUrl !== this._ccUrl ? (p.deprecated(this.declaredClass + ": ", "To change the url, set the url property of the store, not _jsonFileUrl.  _jsonFileUrl support will be removed in 2.0"), this.url = this._ccUrl = this._jsonFileUrl) : this.url !== this._ccUrl && (this._ccUrl = this._jsonFileUrl = this.url);
                        null !=
                            this.data && (this._jsonData = this.data, this.data = null);
                        if (this._jsonFileUrl) {
                            var e = d.get({
                                url: this._jsonFileUrl,
                                handleAs: "json-comment-optional",
                                preventCache: this.urlPreventCache,
                                failOk: this.failOk,
                                sync: !0
                            });
                            e.addCallback(function(d) {
                                try {
                                    if (!0 !== a._loadInProgress && !a._loadFinished) a._getItemsFromLoadedData(d), a._loadFinished = !0;
                                    else if (a._loadInProgress) throw Error(this.declaredClass + ":  Unable to perform a synchronous load, an async load is in progress.");
                                } catch (e) {
                                    throw console.log(e), e;
                                }
                            });
                            e.addErrback(function(a) {
                                throw a;
                            })
                        } else this._jsonData && (a._getItemsFromLoadedData(a._jsonData), a._jsonData = null, a._loadFinished = !0)
                    }
                });
                e.extend(f, a);
                return f
            })
        },
        "dojo/data/util/filter": function() {
            define(["../../_base/lang"], function(p) {
                var e = {};
                p.setObject("dojo.data.util.filter", e);
                e.patternToRegExp = function(e, h) {
                    for (var d = "^", m = null, q = 0; q < e.length; q++) switch (m = e.charAt(q), m) {
                        case "\\":
                            d += m;
                            q++;
                            d += e.charAt(q);
                            break;
                        case "*":
                            d += ".*";
                            break;
                        case "?":
                            d += ".";
                            break;
                        case "$":
                        case "^":
                        case "/":
                        case "+":
                        case ".":
                        case "|":
                        case "(":
                        case ")":
                        case "{":
                        case "}":
                        case "[":
                        case "]":
                            d +=
                                "\\";
                        default:
                            d += m
                    }
                    d += "$";
                    return h ? RegExp(d, "mi") : RegExp(d, "m")
                };
                return e
            })
        },
        "dojo/data/util/simpleFetch": function() {
            define(["../../_base/lang", "../../_base/kernel", "./sorter"], function(p, e, f) {
                var h = {};
                p.setObject("dojo.data.util.simpleFetch", h);
                h.errorHandler = function(d, f) {
                    f.onError && f.onError.call(f.scope || e.global, d, f)
                };
                h.fetchHandler = function(d, m) {
                    var h = m.abort || null,
                        a = !1,
                        k = m.start ? m.start : 0,
                        c = m.count && Infinity !== m.count ? k + m.count : d.length;
                    m.abort = function() {
                        a = !0;
                        h && h.call(m)
                    };
                    var s = m.scope || e.global;
                    m.store || (m.store = this);
                    m.onBegin && m.onBegin.call(s, d.length, m);
                    m.sort && d.sort(f.createSortFunction(m.sort, this));
                    if (m.onItem)
                        for (var n = k; n < d.length && n < c; ++n) {
                            var r = d[n];
                            a || m.onItem.call(s, r, m)
                        }
                    m.onComplete && !a && (n = null, m.onItem || (n = d.slice(k, c)), m.onComplete.call(s, n, m))
                };
                h.fetch = function(d) {
                    d = d || {};
                    d.store || (d.store = this);
                    this._fetchItems(d, p.hitch(this, "fetchHandler"), p.hitch(this, "errorHandler"));
                    return d
                };
                return h
            })
        },
        "jimu/PoolControllerMixin": function() {
            define(["dojo/_base/declare", "dojo/_base/array",
                "jimu/PanelManager"
            ], function(p, e, f) {
                return p(null, {
                    constructor: function() {
                        this.panelManager = f.getInstance()
                    },
                    postCreate: function() {
                        this.controlledWidgets || (this.controlledWidgets = "all");
                        this.controlledGroups || (this.controlledGroups = "all")
                    },
                    getOpenedIds: function() {},
                    setOpenedIds: function(e) {},
                    getConfigById: function(e) {
                        for (var d = this.getAllConfigs(), f = 0; f < d.length; f++)
                            if (d[f].id === e) return d[f]
                    },
                    getAllConfigs: function() {
                        var f = [],
                            f = f.concat(this.getWidgetConfigs(), this.getGroupConfigs()),
                            f = e.filter(f,
                                function(d) {
                                    return d.visible
                                });
                        return f.sort(function(d, e) {
                            return d.index - e.index
                        })
                    },
                    getAllConfigsIncludeInvisible: function() {
                        var e = [],
                            e = e.concat(this.getWidgetConfigs(), this.getGroupConfigs());
                        return e.sort(function(d, e) {
                            return d.index - e.index
                        })
                    },
                    isControlled: function(f) {
                        return e.some(this.getAllConfigsIncludeInvisible(), function(d) {
                            return d.id === f
                        })
                    },
                    widgetIsControlled: function(f) {
                        return e.some(this.getAllConfigsIncludeInvisible(), function(d) {
                            return d.id === f ? !0 : e.some(d.widgets, function(d) {
                                return d.id ===
                                    f
                            })
                        })
                    },
                    getGroupConfigs: function() {
                        var f = [];
                        if (!this.appConfig.widgetPool) return f;
                        this.appConfig.widgetPool.groups && e.forEach(this.appConfig.widgetPool.groups, function(d) {
                            this.controlledGroups && (Array.isArray(this.controlledGroups) ? -1 < this.controlledGroups.indexOf(d.id) && f.push(d) : "all" === this.controlledGroups && f.push(d))
                        }, this);
                        return f
                    },
                    getWidgetConfigs: function() {
                        var f = [];
                        if (!this.appConfig.widgetPool) return f;
                        this.appConfig.widgetPool.widgets && e.forEach(this.appConfig.widgetPool.widgets, function(d) {
                            this.controlledWidgets &&
                                (Array.isArray(this.controlledWidgets) ? -1 < this.controlledWidgets.indexOf(d.id) && f.push(d) : "all" === this.controlledWidgets && f.push(d))
                        }, this);
                        return f
                    }
                })
            })
        },
        "jimu/SpatialReference/utils": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/Deferred dojo/promise/all dojo/request esri/SpatialReference ./unitUtils".split(" "), function(p, e, f, h, d, m, q, a) {
                var k = null,
                    c = null,
                    s = !1;
                p = p(null, function() {});
                var n = require.toUrl("jimu"),
                    r = m(n + "/SpatialReference/wkidDetails.json", {
                        handleAs: "json"
                    }),
                    l = m(n + "/SpatialReference/transform.json", {
                        handleAs: "json"
                    });
                p.loadResource = function() {
                    var a = new h;
                    if (k && c) return a.resolve(), a;
                    d([r, l]).then(function(d) {
                        k = d[0];
                        c = d[1];
                        s = !0;
                        a.resolve()
                    }, function(c) {
                        console.error(c);
                        s = !1;
                        a.reject(c)
                    });
                    return a
                };
                p.getAllCSUnits = function() {
                    if (s) {
                        var a = [];
                        f.forEach(k.wkids, e.hitch(this, function(c) {
                            c = this.getCSUnit(c); - 1 === f.indexOf(a, c) && a.push(c)
                        }));
                        return a
                    }
                };
                p.convertUnit = function(c, d, b) {
                    if (s) return a.convertUnit(c, d, b)
                };
                p.getUnitRate = function(c, d) {
                    if (s) return a.getUnitRate(c,
                        d)
                };
                p.isProjectUnit = function(c) {
                    if (s) return a.isProjectUnit(c)
                };
                p.isGeographicUnit = function(c) {
                    if (s) return a.isGeographicUnit(c)
                };
                p.getGeographicUnits = function() {
                    if (s) return a.getGeographicUnits()
                };
                p.getProjectUnits = function() {
                    if (s) return a.getProjectUnits()
                };
                p.getCSUnit = function(a) {
                    if (s) {
                        a = this.getCSStr(a);
                        var c = 0,
                            b = 0,
                            c = a.lastIndexOf("UNIT"),
                            b = a.indexOf(",", c);
                        return a.slice(c + 6, b - 1)
                    }
                };
                p.isSameSR = function(a, c) {
                    if (s) {
                        var b = this.indexOfWkid(a),
                            d = this.indexOfWkid(c);
                        return k.labels[b] === k.labels[d]
                    }
                };
                p.isValidWkid = function(a) {
                    if (s) return -1 < this.indexOfWkid(a)
                };
                p.getSRLabel = function(a) {
                    if (s && this.isValidWkid(a)) return a = this.indexOfWkid(a), k.labels[a]
                };
                p.indexOfWkid = function(a) {
                    if (s) return f.indexOf(k.wkids, a)
                };
                p.isWebMercator = function(a) {
                    return q.prototype._isWebMercator ? q.prototype._isWebMercator.apply({
                        wkid: parseInt(a, 10)
                    }, []) : (new q(parseInt(a, 10))).isWebMercator()
                };
                p.standardizeWkid = function(a) {
                    return this.isWebMercator(a) ? 3857 : parseInt(a, 10)
                };
                p.isValidTfWkid = function(a) {
                    if (s) return -1 < this.indexOfTfWkid(a)
                };
                p.getTransformationLabel = function(a) {
                    if (s) return this.isValidTfWkid(a) ? (a = this.indexOfTfWkid(a), c.labels[a]) : ""
                };
                p.indexOfTfWkid = function(a) {
                    if (s) return f.indexOf(c.tfWkids, a)
                };
                p.isGeographicCS = function(a) {
                    if (s) return this.isValidWkid(a) ? k.details[this.indexOfWkid(a)].startWith("GEOGCS") : !1
                };
                p.isProjectedCS = function(a) {
                    if (s) return this.isValidWkid(a) ? k.details[this.indexOfWkid(a)].startWith("PROJCS") : !1
                };
                p.getGeoCSByProj = function(a) {
                    if (s && this.isProjectedCS(a)) return a = this.getSpheroidStr(a), a = f.indexOf(k.details,
                        a), k.wkids[a]
                };
                p.getSpheroidStr = function(a) {
                    if (s) {
                        if (this.isGeographicCS(a)) return k.details[this.indexOfWkid(a)];
                        if (this.isProjectedCS(a)) {
                            a = k.details[this.indexOfWkid(a)];
                            var c = a.indexOf("GEOGCS"),
                                b = a.indexOf("PROJECTION") - 1;
                            return a.slice(c, b)
                        }
                        return null
                    }
                };
                p.getCSStr = function(a) {
                    if (s) return k.details[this.indexOfWkid(a)]
                };
                p.isSameSpheroid = function(a, c) {
                    if (s) {
                        var b = this.getSpheroidStr(a),
                            d = this.getSpheroidStr(c);
                        return b && d && b === d ? !0 : !1
                    }
                };
                return p
            })
        },
        "jimu/SpatialReference/unitUtils": function() {
            define(["dojo/_base/declare",
                "dojo/_base/array"
            ], function(p, e) {
                var f = "INCHES FOOT FOOT_US YARDS MILES NAUTICAL_MILES MILLIMETERS CENTIMETERS METER KILOMETERS DECIMETERS LINK_CLARKE FOOT_GOLD_COAST FOOT_CLARKE CHAIN_SEARS_1992_TRUNCATED YARD_INDIAN CHAIN_BENOIT_1895_B YARD_SEARS CHAIN_SEARS FOOT_SEARS YARD_INDIAN_1937 50_KILOMETERS 150_KILOMETERS".split(" "),
                    h = "DECIMAL_DEGREES DEGREE_MINUTE_SECONDS DEGREE GRAD MGRS USNG".split(" "),
                    d = {
                        INCHES: 0.0254,
                        FOOT: 0.3048,
                        FOOT_US: 0.3048006096012192,
                        YARDS: 0.9144,
                        MILES: 1609.344,
                        NAUTICAL_MILES: 1852,
                        MILLIMETERS: 0.0010,
                        CENTIMETERS: 0.01,
                        METER: 1,
                        KILOMETERS: 1E3,
                        DECIMETERS: 0.1,
                        LINK_CLARKE: 0.2011661949,
                        FOOT_GOLD_COAST: 0.3047997101815088,
                        FOOT_CLARKE: 0.304797265,
                        CHAIN_SEARS_1922_TRUNCATED: 20.116756,
                        YARD_INDIAN: 0.9143985307444408,
                        CHAIN_BENOIT_1895_B: 20.11678249437587,
                        YARD_SEARS: 0.9143984146160287,
                        CHAIN_SEARS: 20.11676512155263,
                        FOOT_SEARS: 0.3047994715386762,
                        YARD_INDIAN_1937: 0.91439523,
                        "50_KILOMETERS": 5E4,
                        "150_KILOMETERS": 15E4,
                        DEGREE: 0.0174532925199433,
                        DECIMAL_DEGREES: 0.0174532925199433,
                        MGRS: 0.0174532925199433,
                        USNG: 0.0174532925199433,
                        DEGREE_MINUTE_SECONDS: 0.0174532925199433,
                        GRAD: 0.01570796326794897
                    },
                    m = p(null, function() {});
                m.convertUnit = function(e, a, k) {
                    return d[e.toUpperCase()] / d[a.toUpperCase()] * k
                };
                m.getUnitRate = function(e, a) {
                    return d[e.toUpperCase()] / d[a.toUpperCase()]
                };
                m.isProjectUnit = function(d) {
                    return -1 < e.indexOf(f, d.toUpperCase())
                };
                m.isGeographicUnit = function(d) {
                    return -1 < e.indexOf(h, d.toUpperCase())
                };
                m.getGeographicUnits = function() {
                    return h
                };
                m.getProjectUnits = function() {
                    return f
                };
                return m
            })
        },
        "jimu/dijit-all": function() {
            define([],
                1)
        },
        "jimu/dijit/RadioBtn": function() {
            define("dojo/_base/declare dijit/_WidgetBase dojo/_base/lang dojo/_base/array dojo/on dojo/dom-class dojo/dom-construct dijit/registry".split(" "), function(p, e, f, h, d, m, q, a) {
                return p(e, {
                    baseClass: "jimu-radio",
                    declaredClass: "jimu.dijit.RadioBtn",
                    checked: !1,
                    group: null,
                    constructor: function() {},
                    postCreate: function() {
                        q.create("div", {
                            "class": "jimu-radio-inner"
                        }, this.domNode);
                        this.checked && m.add(this.domNode, "jimu-radio-checked");
                        this.own(d(this.domNode, "click", f.hitch(this,
                            function() {
                                this.checked || this.check()
                            })))
                    },
                    check: function(a) {
                        void 0 === a && (a = !0);
                        this.checked = !0;
                        m.add(this.domNode, "jimu-radio-checked");
                        a && this._changeOthersState(!1);
                        this.onStateChange()
                    },
                    uncheck: function(a) {
                        void 0 === a && (a = !0);
                        this.checked = !1;
                        m.remove(this.domNode, "jimu-radio-checked");
                        a && this._changeOthersState(!1);
                        this.onStateChange()
                    },
                    _changeOthersState: function(d) {
                        null !== this.group && h.forEach(a.toArray(), function(a) {
                            a.id !== this.id && (a["class"] === this["class"] && a.group === this.group) && (d ? a.check(!1) :
                                a.uncheck(!1))
                        }, this)
                    },
                    onStateChange: function() {}
                })
            })
        },
        "jimu/dijit/CheckBox": function() {
            define("dojo/_base/declare dijit/_WidgetBase dojo/_base/lang dojo/_base/html dojo/dom-class dojo/on dojo/Evented".split(" "), function(p, e, f, h, d, m, q) {
                return p([e, q], {
                    baseClass: "jimu-checkbox",
                    declaredClass: "jimu.dijit.CheckBox",
                    checked: !1,
                    status: !0,
                    label: "",
                    postCreate: function() {
                        this.checkNode = h.create("div", {
                            "class": "checkbox jimu-float-leading"
                        }, this.domNode);
                        this.labelNode = h.create("div", {
                            "class": "label jimu-float-leading",
                            innerHTML: this.label || ""
                        }, this.domNode);
                        this.checked && h.addClass(this.checkNode, "checked");
                        this.status || h.addClass(this.domNode, "jimu-state-disabled");
                        this.own(m(this.checkNode, "click", f.hitch(this, function() {
                            this.status && (this.checked ? this.uncheck() : this.check())
                        })));
                        this.own(m(this.labelNode, "click", f.hitch(this, function() {
                            this.checked && this.status ? this.uncheck() : this.status && this.check()
                        })));
                        this._udpateLabelClass()
                    },
                    setLabel: function(a) {
                        this.label = a;
                        this.labelNode.innerHTML = this.label;
                        this._udpateLabelClass()
                    },
                    _udpateLabelClass: function() {
                        this.labelNode && (this.labelNode.innerHTML ? h.removeClass(this.labelNode, "not-visible") : h.addClass(this.labelNode, "not-visible"))
                    },
                    setValue: function(a) {
                        this.status && (!0 === a ? this.check() : this.uncheck())
                    },
                    getValue: function() {
                        return this.checked
                    },
                    setStatus: function(a) {
                        a = !!a;
                        var e = this.status !== a;
                        (this.status = a) ? d.remove(this.domNode, "jimu-state-disabled"): d.add(this.domNode, "jimu-state-disabled");
                        e && this.emit("status-change", a)
                    },
                    getStatus: function() {
                        return this.status
                    },
                    check: function() {
                        this.status &&
                            (this.checked = !0, h.addClass(this.checkNode, "checked"), this.onStateChange())
                    },
                    uncheck: function(a) {
                        if (this.status && (this.checked = !1, h.removeClass(this.checkNode, "checked"), !a)) this.onStateChange()
                    },
                    onStateChange: function() {
                        if (this.onChange && f.isFunction(this.onChange)) this.onChange(this.checked);
                        this.emit("change", this.checked)
                    }
                })
            })
        },
        "jimu/dijit/SymbolChooser": function() {
            define("dojo/_base/declare dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dojo/text!./templates/SymbolChooser.html dojo/Evented dojo/_base/lang dojo/_base/html dojo/_base/array dojo/on dojo/sniff dojo/query dojo/request/xhr jimu/utils jimu/symbolUtils esri/symbols/jsonUtils esri/symbols/SimpleMarkerSymbol esri/symbols/SimpleLineSymbol esri/symbols/SimpleFillSymbol esri/symbols/TextSymbol esri/symbols/Font dijit/form/Select dijit/form/NumberSpinner jimu/dijit/ColorPicker jimu/dijit/_Transparency".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A) {
                    return p([e, f, h, m], {
                        templateString: d,
                        baseClass: "jimu-symbol-chooser",
                        declaredClass: "jimu.dijit.SymbolChooser",
                        nls: null,
                        _pointEventsBinded: !1,
                        _lineEventBinded: !1,
                        _fillEventBinded: !1,
                        _textEventBinded: !1,
                        _invokeSymbolChangeEvent: !0,
                        symbol: null,
                        type: null,
                        postMixInProperties: function() {
                            this.nls = window.jimuNls.symbolChooser
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.own(c(document.body, "click", q.hitch(this, this._onBodyClicked)));
                            (this._isIE8 =
                                8 === s("ie")) && a.addClass(this.domNode, "ie8");
                            this.symbol ? this.showBySymbol(this.symbol) : this.type && this.showByType(this.type)
                        },
                        reset: function() {
                            this.symbol = this.type = null;
                            this._hideAllSections()
                        },
                        showBySymbol: function(a) {
                            this.reset();
                            var b = a && a.declaredClass;
                            b && ("string" === typeof b && 0 <= b.indexOf("esri.symbol")) && (this.symbol = this._cloneSymbol(a), this.isSimpleMarkerSymbol(this.symbol) || this.isPictureMarkerSymbol(this.symbol) ? (this.type = "marker", this._initPointSection()) : this.isSimpleLineSymbol(this.symbol) ?
                                (this.type = "line", this._initLineSection()) : this._isSimpleFillSymbol(this.symbol) ? (this.type = "fill", this._initFillSection()) : this._isTextSymbol(this.symbol) && (this.type = "text", this._initTextSection()))
                        },
                        showByType: function(a) {
                            this.reset();
                            if ("marker" === a || "line" === a || "fill" === a || "text" === a) this.type = a, "marker" === this.type ? this._initPointSection() : "line" === this.type ? this._initLineSection() : "fill" === this.type ? this._initFillSection() : "text" === this.type && this._initTextSection()
                        },
                        getSymbol: function() {
                            var a =
                                null;
                            "marker" === this.type ? a = this._getPointSymbolBySetting() : "line" === this.type ? a = this._getLineSymbolBySetting() : "fill" === this.type ? a = this._getFillSymbolBySetting() : "text" === this.type && (a = this._getTextSymbolBySetting());
                            var b = null;
                            a && (b = this._cloneSymbol(a));
                            return b
                        },
                        hideColorPicker: function() {
                            for (var a = "pointColor pointOutlineColor lineColor fillColor fillOutlineColor textColor".split(" "), b = 0, c = a.length; b < c; b++) {
                                var d = a[b];
                                this[d] && this[d].hideTooltipDialog()
                            }
                        },
                        _onBodyClicked: function(a) {
                            a = a.target ||
                                a.srcElement;
                            this._tryHideDropDownOfSelectDijit(a, this.pointSymClassSelect);
                            this._tryHideDropDownOfSelectDijit(a, this.lineStylesSelect)
                        },
                        _tryHideDropDownOfSelectDijit: function(b, c) {
                            var d = c.domNode,
                                e = c.dropDown.domNode,
                                d = b === d || a.isDescendant(b, d),
                                e = b === e || a.isDescendant(b, e);
                            if (!d && !e) c.dropDown.onCancel()
                        },
                        _onChange: function(a) {
                            a = this._cloneSymbol(a);
                            this.emit("change", a)
                        },
                        _hideAllSections: function() {
                            n(".symbol-section", this.domNode).style("display", "none")
                        },
                        _showSection: function(a) {
                            this._hideAllSections();
                            n("." + a + "-symbol-section", this.domNode).style("display", "block")
                        },
                        _getAncestor: function(a, b, c) {
                            return l.getAncestorDom(a, b, c)
                        },
                        _getAbsoluteUrl: function(a) {
                            return window.location.protocol + "//" + window.location.host + require.toUrl(a)
                        },
                        _cloneSymbol: function(a) {
                            if (!a) return null;
                            var b = a;
                            try {
                                var c = a.toJson(),
                                    b = t.fromJson(c)
                            } catch (d) {
                                console.error(d)
                            }
                            return b
                        },
                        _createSymbolIconTable: function(b, c, d) {
                            var e = this.type + "-icon-table";
                            b = a.toDom('\x3ctable class\x3d"' + ("icon-table " + e + " " + (e + "-" + b)) + '"\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3c/table\x3e');
                            for (var e = n("tbody", b)[0], g = Math.ceil(c.length / 8), l = 0; l < g; l++) a.create("tr", {}, e);
                            var f = n("tr", b);
                            k.forEach(c, q.hitch(this, function(b, c) {
                                var e = q.clone(b),
                                    g = t.fromJson(b),
                                    l = a.create("td", {}, f[Math.floor(c / 8)]);
                                a.addClass(l, "symbol-td-item");
                                g = this._createSymbolNode(g);
                                a.addClass(g, "symbol-div-item");
                                var k = g.firstChild;
                                a.addClass(k, "svg-node");
                                if (this._isIE8 && "point" === d)
                                    if (window.isRTL) {
                                        if ("Cross" === b.name || "X" === b.name) a.setStyle(k, "right", "-20px"), a.setStyle(g, "marginTop", "20px")
                                    } else("Cross" ===
                                        b.name || "X" === b.name) && a.setStyle(g, "marginTop", "20px");
                                g.symbol = e;
                                a.place(g, l)
                            }));
                            return b
                        },
                        _updatePreview: function(b) {
                            var c = this._cloneSymbol(this.symbol);
                            a.empty(b);
                            (c = g.createSymbolNode(c)) || (c = a.create("div"));
                            a.place(c, b)
                        },
                        _createSymbolNode: function(b) {
                            (b = g.createSymbolNode(b, {
                                width: 36,
                                height: 36
                            })) || (b = a.create("div"));
                            a.setStyle(b, {
                                width: "36px",
                                height: "36px"
                            });
                            return b
                        },
                        _getLineShapeDesc: function(a) {
                            var b = null;
                            if (this.isSimpleLineSymbol(a) || this.isCartographicLineSymbol(a)) b = {
                                defaultShape: {
                                    type: "path",
                                    path: "M -90,0 L 90,0 E"
                                },
                                fill: null,
                                stroke: a.getStroke()
                            };
                            return b
                        },
                        _initPointSection: function() {
                            this._showSection("point");
                            this._pointEventsBinded || (this._pointEventsBinded = !0, this._bindPointEvents(), this._onPointSymClassSelectChange());
                            this.isPictureMarkerSymbol(this.symbol) ? this._showPictureMarkerSymSettings() : (this.isSimpleMarkerSymbol(this.symbol) || (this.symbol = new b({
                                style: "esriSMSCircle",
                                color: [0, 0, 128, 128],
                                name: "Circle",
                                outline: {
                                    color: [0, 0, 128, 255],
                                    width: 1
                                },
                                type: "esriSMS",
                                size: 18
                            })), this._showSimpleMarkerSymSettings());
                            this._initPointSettings(this.symbol);
                            this._getPointSymbolBySetting()
                        },
                        _bindPointEvents: function() {
                            this.own(c(this.pointIconTables, ".symbol-div-item:click", q.hitch(this, this._onPointSymIconItemClick)));
                            this.own(c(this.pointSymClassSelect, "Change", q.hitch(this, this._onPointSymClassSelectChange)));
                            this.own(c(this.pointSize, "change", q.hitch(this, this._onPointSymbolChange)));
                            this.own(c(this.pointColor, "change", q.hitch(this, this._onPointSymbolChange)));
                            this.own(c(this.pointAlpha, "change", q.hitch(this, this._onPointSymbolChange)));
                            this.own(c(this.pointOutlineColor, "change", q.hitch(this, this._onPointSymbolChange)));
                            this.own(c(this.pointOutlineWidth, "change", q.hitch(this, this._onPointSymbolChange)))
                        },
                        _onPointSymbolChange: function() {
                            this._invokeSymbolChangeEvent && (this._getPointSymbolBySetting(), this._onChange(this.symbol))
                        },
                        _initPointSettings: function(a) {
                            if (a) {
                                this._invokeSymbolChangeEvent = !1;
                                if (this.isSimpleMarkerSymbol(a)) {
                                    if (this.pointSize.set("value", a.size), this.pointColor.setColor(a.color), this.pointAlpha.setAlpha(parseFloat(a.color.a.toFixed(2))),
                                        a = a.outline) this.pointOutlineColor.setColor(a.color), this.pointOutlineWidth.set("value", parseFloat(a.width.toFixed(0)))
                                } else this.isPictureMarkerSymbol(a) && this.pointSize.set("value", a.width);
                                this._invokeSymbolChangeEvent = !0
                            }
                        },
                        isSimpleMarkerSymbol: function(a) {
                            return a && "esri.symbol.SimpleMarkerSymbol" === a.declaredClass
                        },
                        isPictureMarkerSymbol: function(a) {
                            return a && "esri.symbol.PictureMarkerSymbol" === a.declaredClass
                        },
                        _onPointSymClassSelectChange: function() {
                            this._showSelectedPointSymIconTable();
                            var a =
                                this.pointSymClassSelect.get("value");
                            this.pointSymClassSelect["def" + a] || this._requestPointSymJson(a);
                            a = this.pointSymClassSelect.getOptions(a);
                            this.pointSymClassSelect.domNode.title = a ? a.label : ""
                        },
                        _showSelectedPointSymIconTable: function() {
                            var a = this.pointSymClassSelect.get("value");
                            n(".marker-icon-table", this.pointIconTables).style("display", "none");
                            a = n(".marker-icon-table-" + a, this.pointIconTables);
                            0 < a.length && a.style("display", "table")
                        },
                        _requestPointSymJson: function(b) {
                            var c = "def" + b,
                                d = this.pointSymClassSelect[c];
                            d || (d = this._getAbsoluteUrl("jimu/dijit/SymbolsInfo/" + b + ".json"), d = r(d, {
                                handleAs: "json"
                            }), this.pointSymClassSelect[c] = d, d.then(q.hitch(this, function(c) {
                                this.domNode && (c = this._createSymbolIconTable(b, c, "point"), a.place(c, this.pointIconTables), this._showSelectedPointSymIconTable())
                            }), q.hitch(this, function(a) {
                                console.error("get point symbol failed", a)
                            })))
                        },
                        _onPointSymIconItemClick: function(b) {
                            if (b = this._getAncestor(b.target || b.srcElement, function(b) {
                                    return a.hasClass(b, "symbol-div-item")
                                }, 5))
                                if (n(".selected-symbol-div-item",
                                        b.parentNode.parentNode.parentNode).removeClass("selected-symbol-div-item"), a.addClass(b, "selected-symbol-div-item"), b = b.symbol) {
                                    this.symbol = t.fromJson(b);
                                    b = a.getStyle(this.pointColorTr, "display");
                                    this.isSimpleMarkerSymbol(this.symbol) ? this._showSimpleMarkerSymSettings() : this._showPictureMarkerSymSettings();
                                    this._onPointSymbolChange();
                                    var c = a.getStyle(this.pointColorTr, "display");
                                    b !== c && this.emit("resize")
                                }
                        },
                        _showSimpleMarkerSymSettings: function() {
                            a.setStyle(this.pointColorTr, "display", "");
                            a.setStyle(this.pointOpacityTr,
                                "display", "");
                            a.setStyle(this.pointOutlineColorTr, "display", "");
                            a.setStyle(this.pointOulineWidthTr, "display", "")
                        },
                        _showPictureMarkerSymSettings: function() {
                            a.setStyle(this.pointColorTr, "display", "none");
                            a.setStyle(this.pointOpacityTr, "display", "none");
                            a.setStyle(this.pointOutlineColorTr, "display", "none");
                            a.setStyle(this.pointOulineWidthTr, "display", "none")
                        },
                        _getPointSymbolBySetting: function() {
                            if (!this.symbol) return null;
                            var a = parseFloat(this.pointSize.get("value"));
                            if (this.isSimpleMarkerSymbol(this.symbol)) {
                                this.symbol.setSize(a);
                                var a = this.pointColor.getColor(),
                                    b = this.pointAlpha.getAlpha();
                                a.a = b;
                                this.symbol.setColor(a);
                                var a = this.pointOutlineColor.getColor(),
                                    b = parseFloat(this.pointOutlineWidth.get("value")),
                                    c = new v;
                                c.setStyle(v.STYLE_SOLID);
                                c.setColor(a);
                                c.setWidth(b);
                                this.symbol.setOutline(c)
                            } else this.isPictureMarkerSymbol(this.symbol) && (this.symbol.setWidth(a), this.symbol.setHeight(a));
                            this._updatePreview(this.pointSymPreview);
                            return this.symbol
                        },
                        _initLineSection: function() {
                            this._showSection("line");
                            this._lineEventBinded ||
                                (this._lineEventBinded = !0, this._bindLineEvents(), this._requestLineSymJson("line"));
                            this._initLineSettings(this.symbol);
                            this._getLineSymbolBySetting()
                        },
                        _bindLineEvents: function() {
                            this.own(c(this.lineIconTables, ".symbol-div-item:click", q.hitch(this, this._onLineSymIconItemClick)));
                            this.own(c(this.lineColor, "change", q.hitch(this, this._onLineSymbolChange)));
                            this.own(c(this.lineStylesSelect, "change", q.hitch(this, this._onLineSymbolChange)));
                            this.own(c(this.lineAlpha, "change", q.hitch(this, this._onLineSymbolChange)));
                            this.own(c(this.lineWidth, "change", q.hitch(this, this._onLineSymbolChange)))
                        },
                        _onLineSymbolChange: function() {
                            this._invokeSymbolChangeEvent && (this._getLineSymbolBySetting(), this._onChange(this.symbol))
                        },
                        _initLineSettings: function(a) {
                            a && (this._invokeSymbolChangeEvent = !1, this.lineColor.setColor(a.color), this.lineAlpha.setAlpha(parseFloat(a.color.a.toFixed(2))), this.lineWidth.set("value", parseFloat(a.width.toFixed(0))), this.lineStylesSelect.set("value", a.style), this._invokeSymbolChangeEvent = !0)
                        },
                        isSimpleLineSymbol: function(a) {
                            return a &&
                                "esri.symbol.SimpleLineSymbol" === a.declaredClass
                        },
                        isCartographicLineSymbol: function(a) {
                            return a && "esri.symbol.CartographicLineSymbol" === a.declaredClass
                        },
                        _requestLineSymJson: function(b) {
                            var c = this._getAbsoluteUrl("jimu/dijit/SymbolsInfo/" + b + ".json");
                            r(c, {
                                handleAs: "json"
                            }).then(q.hitch(this, function(c) {
                                this.domNode && (c = this._createSymbolIconTable(b, c, "line"), a.place(c, this.lineIconTables))
                            }), q.hitch(this, function(a) {
                                console.error("get line symbol failed", a)
                            }))
                        },
                        _onLineSymIconItemClick: function(b) {
                            if (b =
                                this._getAncestor(b.target || b.srcElement, function(b) {
                                    return a.hasClass(b, "symbol-div-item")
                                }, 5))
                                if (n(".selected-symbol-div-item", b.parentNode.parentNode.parentNode).removeClass("selected-symbol-div-item"), a.addClass(b, "selected-symbol-div-item"), b = b.symbol) b = t.fromJson(b), this._initLineSettings(b), this._onLineSymbolChange()
                        },
                        _getLineSymbolBySetting: function() {
                            this.symbol = new v;
                            var a = this.lineColor.getColor(),
                                b = this.lineStylesSelect.get("value");
                            a.a = this.lineAlpha.getAlpha();
                            var c = parseFloat(this.lineWidth.get("value"));
                            this.symbol.setStyle(b);
                            this.symbol.setColor(a);
                            this.symbol.setWidth(c);
                            this._updatePreview(this.lineSymPreview);
                            return this.symbol
                        },
                        _initFillSection: function() {
                            this._showSection("fill");
                            this._fillEventBinded || (this._fillEventBinded = !0, this._bindFillEvents(), this._requestFillSymJson("fill"));
                            this._initFillSettings(this.symbol);
                            this._getFillSymbolBySetting()
                        },
                        _bindFillEvents: function() {
                            this.own(c(this.fillIconTables, ".symbol-div-item:click", q.hitch(this, this._onFillSymIconItemClick)));
                            this.own(c(this.fillColor,
                                "change", q.hitch(this, this._onFillSymbolChange)));
                            this.own(c(this.fillAlpha, "change", q.hitch(this, this._onFillSymbolChange)));
                            this.own(c(this.fillOutlineColor, "change", q.hitch(this, this._onFillSymbolChange)));
                            this.own(c(this.fillOutlineWidth, "change", q.hitch(this, this._onFillSymbolChange)))
                        },
                        _onFillSymbolChange: function() {
                            this._invokeSymbolChangeEvent && (this._getFillSymbolBySetting(), this._onChange(this.symbol))
                        },
                        _initFillSettings: function(a) {
                            a && (this._invokeSymbolChangeEvent = !1, this.fillColor.setColor(a.color),
                                this.fillAlpha.setAlpha(parseFloat(a.color.a.toFixed(2))), a.outline && (this.fillOutlineColor.setColor(a.outline.color), this.fillOutlineWidth.set("value", parseInt(a.outline.width, 10))), this._invokeSymbolChangeEvent = !0)
                        },
                        _isSimpleFillSymbol: function(a) {
                            return a && "esri.symbol.SimpleFillSymbol" === a.declaredClass
                        },
                        _requestFillSymJson: function(b) {
                            var c = this._getAbsoluteUrl("jimu/dijit/SymbolsInfo/" + b + ".json");
                            r(c, {
                                handleAs: "json"
                            }).then(q.hitch(this, function(c) {
                                this.domNode && (c = this._createSymbolIconTable(b,
                                    c, "fill"), a.place(c, this.fillIconTables))
                            }), q.hitch(this, function(a) {
                                console.error("get fill symbol failed", a)
                            }))
                        },
                        _onFillSymIconItemClick: function(b) {
                            if (b = this._getAncestor(b.target || b.srcElement, function(b) {
                                    return a.hasClass(b, "symbol-div-item")
                                }, 5))
                                if (n(".selected-symbol-div-item", b.parentNode.parentNode.parentNode).removeClass("selected-symbol-div-item"), a.addClass(b, "selected-symbol-div-item"), b = b.symbol) b = t.fromJson(b), this._initFillSettings(b), this._onFillSymbolChange()
                        },
                        _getFillSymbolBySetting: function() {
                            this.symbol =
                                new w;
                            var a = this.fillColor.getColor();
                            a.a = this.fillAlpha.getAlpha();
                            var b = this.fillOutlineColor.getColor(),
                                c = parseInt(this.fillOutlineWidth.get("value"), 10);
                            this.symbol.setColor(a);
                            this.symbol.setStyle(w.STYLE_SOLID);
                            a = new v;
                            a.setStyle(v.STYLE_SOLID);
                            a.setColor(b);
                            a.setWidth(c);
                            this.symbol.setOutline(a);
                            this._updatePreview(this.fillSymPreview);
                            return this.symbol
                        },
                        _initTextSection: function() {
                            this._showSection("text");
                            this._textEventBinded || (this._textEventBinded = !0, this._bindTextEvents());
                            this._initTextSettings();
                            this._getTextSymbolBySetting()
                        },
                        _bindTextEvents: function() {
                            this.own(c(this.inputText, "change", q.hitch(this, this._onTextSymbolChange)));
                            this.own(c(this.textColor, "change", q.hitch(this, this._onTextSymbolChange)));
                            this.own(c(this.textFontSize, "change", q.hitch(this, this._onTextSymbolChange)))
                        },
                        _onTextSymbolChange: function() {
                            this._invokeSymbolChangeEvent && (this._getTextSymbolBySetting(), this._onChange(this.symbol))
                        },
                        _initTextSettings: function(a) {
                            a && (this._invokeSymbolChangeEvent = !1, this.inputText.value =
                                a.text, this.textColor.setColor(a.color), a = parseInt(a.font.size, 10), this.textFontSize.set("value", a), this._invokeSymbolChangeEvent = !0)
                        },
                        _isTextSymbol: function(a) {
                            return a && "esri.symbol.TextSymbol" === a.declaredClass
                        },
                        _updateTextPreview: function() {
                            var b = this.textColor.getColor().toHex(),
                                c = parseInt(this.textFontSize.get("value"), 10) + "px";
                            a.setStyle(this.textPreview, {
                                color: b,
                                fontSize: c
                            });
                            this.textPreview.innerHTML = this.inputText.value
                        },
                        _getTextSymbolBySetting: function() {
                            this.symbol = new z;
                            var a = this.inputText.value,
                                b = this.textColor.getColor(),
                                c = parseInt(this.textFontSize.get("value"), 10),
                                d = new A;
                            d.setSize(c);
                            this.symbol.setText(a);
                            this.symbol.setColor(b);
                            this.symbol.setFont(d);
                            this._updateTextPreview();
                            return this.symbol
                        }
                    })
                })
        },
        "dijit/form/NumberSpinner": function() {
            define(["dojo/_base/declare", "dojo/keys", "./_Spinner", "./NumberTextBox"], function(p, e, f, h) {
                return p("dijit.form.NumberSpinner", [f, h.Mixin], {
                    baseClass: "dijitTextBox dijitSpinner dijitNumberTextBox",
                    adjust: function(d, e) {
                        var f = this.constraints,
                            a = isNaN(d),
                            k = !isNaN(f.max),
                            c = !isNaN(f.min);
                        a && 0 != e && (d = 0 < e ? c ? f.min : k ? f.max : 0 : k ? this.constraints.max : c ? f.min : 0);
                        var h = d + e;
                        if (a || isNaN(h)) return d;
                        k && h > f.max && (h = f.max);
                        c && h < f.min && (h = f.min);
                        return h
                    },
                    _onKeyDown: function(d) {
                        if (!this.disabled && !this.readOnly && (d.keyCode == e.HOME || d.keyCode == e.END) && !d.ctrlKey && (!d.altKey && !d.metaKey) && "undefined" != typeof this.get("value")) {
                            var f = this.constraints[d.keyCode == e.HOME ? "min" : "max"];
                            "number" == typeof f && this._setValueAttr(f, !1);
                            d.stopPropagation();
                            d.preventDefault()
                        }
                    }
                })
            })
        },
        "dijit/form/_Spinner": function() {
            define("dojo/_base/declare dojo/keys dojo/_base/lang dojo/sniff dojo/mouse dojo/on ../typematic ./RangeBoundTextBox dojo/text!./templates/Spinner.html ./_TextBoxMixin".split(" "), function(p, e, f, h, d, m, q, a, k, c) {
                return p("dijit.form._Spinner", a, {
                    defaultTimeout: 500,
                    minimumTimeout: 10,
                    timeoutChangeRate: 0.9,
                    smallDelta: 1,
                    largeDelta: 10,
                    templateString: k,
                    baseClass: "dijitTextBox dijitSpinner",
                    cssStateNodes: {
                        upArrowNode: "dijitUpArrowButton",
                        downArrowNode: "dijitDownArrowButton"
                    },
                    adjust: function(a) {
                        return a
                    },
                    _arrowPressed: function(a, d, e) {
                        !this.disabled && !this.readOnly && (this._setValueAttr(this.adjust(this.get("value"), d * e), !1), c.selectInputText(this.textbox, this.textbox.value.length))
                    },
                    _arrowReleased: function() {
                        this._wheelTimer = null
                    },
                    _typematicCallback: function(a, c, d) {
                        var l = this.smallDelta;
                        c == this.textbox && (c = d.keyCode, l = c == e.PAGE_UP || c == e.PAGE_DOWN ? this.largeDelta : this.smallDelta, c = c == e.UP_ARROW || c == e.PAGE_UP ? this.upArrowNode : this.downArrowNode); - 1 == a ? this._arrowReleased(c) :
                            this._arrowPressed(c, c == this.upArrowNode ? 1 : -1, l)
                    },
                    _wheelTimer: null,
                    _mouseWheeled: function(a) {
                        if (this.focused) {
                            a.stopPropagation();
                            a.preventDefault();
                            var c = a.wheelDelta / 120;
                            Math.floor(c) != c && (c = 0 < a.wheelDelta ? 1 : -1);
                            a = a.detail ? -1 * a.detail : c;
                            if (0 !== a) {
                                var d = this[0 < a ? "upArrowNode" : "downArrowNode"];
                                this._arrowPressed(d, a, this.smallDelta);
                                this._wheelTimer && this._wheelTimer.remove();
                                this._wheelTimer = this.defer(function() {
                                    this._arrowReleased(d)
                                }, 50)
                            }
                        }
                    },
                    _setConstraintsAttr: function(a) {
                        this.inherited(arguments);
                        this.focusNode && (void 0 !== this.constraints.min ? this.focusNode.setAttribute("aria-valuemin", this.constraints.min) : this.focusNode.removeAttribute("aria-valuemin"), void 0 !== this.constraints.max ? this.focusNode.setAttribute("aria-valuemax", this.constraints.max) : this.focusNode.removeAttribute("aria-valuemax"))
                    },
                    _setValueAttr: function(a, c) {
                        this.focusNode.setAttribute("aria-valuenow", a);
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.own(m(this.domNode, d.wheel, f.hitch(this,
                            "_mouseWheeled")), q.addListener(this.upArrowNode, this.textbox, {
                            keyCode: e.UP_ARROW,
                            ctrlKey: !1,
                            altKey: !1,
                            shiftKey: !1,
                            metaKey: !1
                        }, this, "_typematicCallback", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout), q.addListener(this.downArrowNode, this.textbox, {
                            keyCode: e.DOWN_ARROW,
                            ctrlKey: !1,
                            altKey: !1,
                            shiftKey: !1,
                            metaKey: !1
                        }, this, "_typematicCallback", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout), q.addListener(this.upArrowNode, this.textbox, {
                            keyCode: e.PAGE_UP,
                            ctrlKey: !1,
                            altKey: !1,
                            shiftKey: !1,
                            metaKey: !1
                        }, this, "_typematicCallback", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout), q.addListener(this.downArrowNode, this.textbox, {
                            keyCode: e.PAGE_DOWN,
                            ctrlKey: !1,
                            altKey: !1,
                            shiftKey: !1,
                            metaKey: !1
                        }, this, "_typematicCallback", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout))
                    }
                })
            })
        },
        "dijit/form/RangeBoundTextBox": function() {
            define(["dojo/_base/declare", "dojo/i18n", "./MappedTextBox", "dojo/i18n!./nls/validate"], function(p, e, f) {
                return p("dijit.form.RangeBoundTextBox",
                    f, {
                        rangeMessage: "",
                        rangeCheck: function(e, d) {
                            return ("min" in d ? 0 <= this.compare(e, d.min) : !0) && ("max" in d ? 0 >= this.compare(e, d.max) : !0)
                        },
                        isInRange: function() {
                            return this.rangeCheck(this.get("value"), this.constraints)
                        },
                        _isDefinitelyOutOfRange: function() {
                            var e = this.get("value");
                            if (null == e) return !1;
                            var d = !1;
                            "min" in this.constraints && (d = this.constraints.min, d = 0 > this.compare(e, "number" == typeof d && 0 <= d && 0 != e ? 0 : d));
                            !d && "max" in this.constraints && (d = this.constraints.max, d = 0 < this.compare(e, "number" != typeof d || 0 <
                                d ? d : 0));
                            return d
                        },
                        _isValidSubset: function() {
                            return this.inherited(arguments) && !this._isDefinitelyOutOfRange()
                        },
                        isValid: function(e) {
                            return this.inherited(arguments) && (this._isEmpty(this.textbox.value) && !this.required || this.isInRange(e))
                        },
                        getErrorMessage: function(e) {
                            var d = this.get("value");
                            return null != d && "" !== d && ("number" != typeof d || !isNaN(d)) && !this.isInRange(e) ? this.rangeMessage : this.inherited(arguments)
                        },
                        postMixInProperties: function() {
                            this.inherited(arguments);
                            this.rangeMessage || (this.messages =
                                e.getLocalization("dijit.form", "validate", this.lang), this.rangeMessage = this.messages.rangeMessage)
                        }
                    })
            })
        },
        "dijit/form/MappedTextBox": function() {
            define(["dojo/_base/declare", "dojo/sniff", "dojo/dom-construct", "./ValidationTextBox"], function(p, e, f, h) {
                return p("dijit.form.MappedTextBox", h, {
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.nameAttrSetting = ""
                    },
                    _setNameAttr: "valueNode",
                    serialize: function(d) {
                        return d.toString ? d.toString() : ""
                    },
                    toString: function() {
                        var d = this.filter(this.get("value"));
                        return null != d ? "string" == typeof d ? d : this.serialize(d, this.constraints) : ""
                    },
                    validate: function() {
                        this.valueNode.value = this.toString();
                        return this.inherited(arguments)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.valueNode = f.place("\x3cinput type\x3d'hidden'" + (this.name && !e("msapp") ? ' name\x3d"' + this.name.replace(/"/g, "\x26quot;") + '"' : "") + "/\x3e", this.textbox, "after")
                    },
                    reset: function() {
                        this.valueNode.value = "";
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/NumberTextBox": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/i18n dojo/string dojo/number ./RangeBoundTextBox".split(" "),
                function(p, e, f, h, d, m) {
                    var q = function(a) {
                            a = a || {};
                            var c = f.getLocalization("dojo.cldr", "number", f.normalizeLocale(a.locale)),
                                d = a.pattern ? a.pattern : c[(a.type || "decimal") + "Format"];
                            a = "number" == typeof a.places ? a.places : "string" === typeof a.places && 0 < a.places.length ? a.places.replace(/.*,/, "") : -1 != d.indexOf(".") ? d.split(".")[1].replace(/[^#0]/g, "").length : 0;
                            return {
                                sep: c.decimal,
                                places: a
                            }
                        },
                        a = p("dijit.form.NumberTextBoxMixin", null, {
                            pattern: function(a) {
                                return "(" + (this.focused && this.editOptions ? this._regExpGenerator(e.delegate(a,
                                    this.editOptions)) + "|" : "") + this._regExpGenerator(a) + ")"
                            },
                            value: NaN,
                            editOptions: {
                                pattern: "#.######"
                            },
                            _formatter: d.format,
                            _regExpGenerator: d.regexp,
                            _decimalInfo: q(),
                            postMixInProperties: function() {
                                this.inherited(arguments);
                                this._set("type", "text")
                            },
                            _setConstraintsAttr: function(a) {
                                var c = "number" == typeof a.places ? a.places : 0;
                                c && c++;
                                "number" != typeof a.max && (a.max = 9 * Math.pow(10, 15 - c));
                                "number" != typeof a.min && (a.min = -9 * Math.pow(10, 15 - c));
                                this.inherited(arguments, [a]);
                                this.focusNode && (this.focusNode.value &&
                                    !isNaN(this.value)) && this.set("value", this.value);
                                this._decimalInfo = q(a)
                            },
                            _onFocus: function() {
                                if (!this.disabled && !this.readOnly) {
                                    var a = this.get("value");
                                    "number" == typeof a && !isNaN(a) && (a = this.format(a, this.constraints), void 0 !== a && (this.textbox.value = a));
                                    this.inherited(arguments)
                                }
                            },
                            format: function(a, c) {
                                var d = String(a);
                                if ("number" != typeof a) return d;
                                if (isNaN(a)) return "";
                                if (!("rangeCheck" in this && this.rangeCheck(a, c)) && !1 !== c.exponent && /\de[-+]?\d/i.test(d)) return d;
                                this.editOptions && this.focused &&
                                    (c = e.mixin({}, c, this.editOptions));
                                return this._formatter(a, c)
                            },
                            _parser: d.parse,
                            parse: function(a, c) {
                                var d = e.mixin({}, c, this.editOptions && this.focused ? this.editOptions : {});
                                if (this.focused && null != d.places) {
                                    var n = d.places,
                                        n = "number" === typeof n ? n : Number(n.split(",").pop());
                                    d.places = "0," + n
                                }
                                d = this._parser(a, d);
                                this.editOptions && (this.focused && isNaN(d)) && (d = this._parser(a, c));
                                return d
                            },
                            _getDisplayedValueAttr: function() {
                                var a = this.inherited(arguments);
                                return isNaN(a) ? this.textbox.value : a
                            },
                            filter: function(a) {
                                if (null ==
                                    a || "string" == typeof a && "" == a) return NaN;
                                "number" == typeof a && (!isNaN(a) && 0 != a) && (a = d.round(a, this._decimalInfo.places));
                                return this.inherited(arguments, [a])
                            },
                            serialize: function(a, c) {
                                return "number" != typeof a || isNaN(a) ? "" : this.inherited(arguments)
                            },
                            _setBlurValue: function() {
                                var a = e.hitch(e.delegate(this, {
                                    focused: !0
                                }), "get")("value");
                                this._setValueAttr(a, !0)
                            },
                            _setValueAttr: function(a, c, d) {
                                if (void 0 !== a && void 0 === d)
                                    if (d = String(a), "number" == typeof a)
                                        if (isNaN(a)) d = "";
                                        else {
                                            if ("rangeCheck" in this && this.rangeCheck(a,
                                                    this.constraints) || !1 === this.constraints.exponent || !/\de[-+]?\d/i.test(d)) d = void 0
                                        }
                                else a ? a = void 0 : (d = "", a = NaN);
                                this.inherited(arguments, [a, c, d])
                            },
                            _getValueAttr: function() {
                                var a = this.inherited(arguments);
                                if (isNaN(a) && "" !== this.textbox.value) {
                                    if (!1 !== this.constraints.exponent && /\de[-+]?\d/i.test(this.textbox.value) && RegExp("^" + d._realNumberRegexp(e.delegate(this.constraints)) + "$").test(this.textbox.value)) return a = Number(this.textbox.value), isNaN(a) ? void 0 : a
                                } else return a
                            },
                            isValid: function(a) {
                                if (!this.focused ||
                                    this._isEmpty(this.textbox.value)) return this.inherited(arguments);
                                var c = this.get("value");
                                return !isNaN(c) && this.rangeCheck(c, this.constraints) ? !1 !== this.constraints.exponent && /\de[-+]?\d/i.test(this.textbox.value) ? !0 : this.inherited(arguments) : !1
                            },
                            _isValidSubset: function() {
                                var a = "number" == typeof this.constraints.min,
                                    c = "number" == typeof this.constraints.max,
                                    d = this.get("value");
                                if (isNaN(d) || !a && !c) return this.inherited(arguments);
                                var e = d | 0,
                                    f = 0 > d,
                                    l = -1 != this.textbox.value.indexOf(this._decimalInfo.sep),
                                    g = (this.maxLength || 20) - this.textbox.value.length,
                                    m = l ? this.textbox.value.split(this._decimalInfo.sep)[1].replace(/[^0-9]/g, "") : "",
                                    e = l ? e + "." + m : e + "",
                                    g = h.rep("9", g),
                                    l = d;
                                f ? l = Number(e + g) : d = Number(e + g);
                                return !(a && d < this.constraints.min || c && l > this.constraints.max)
                            }
                        });
                    p = p("dijit.form.NumberTextBox", [m, a], {
                        baseClass: "dijitTextBox dijitNumberTextBox"
                    });
                    p.Mixin = a;
                    return p
                })
        },
        "jimu/dijit/ColorPicker": function() {
            define("dojo/_base/declare dijit/_WidgetBase dijit/_TemplatedMixin dojo/_base/lang dojo/_base/html dojo/on dojo/_base/Color dijit/TooltipDialog dijit/popup dojox/widget/ColorPicker jimu/utils".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s) {
                    return p([e, f], {
                        baseClass: "jimu-color-picker",
                        declaredClass: "jimu.dijit.ColorPicker",
                        templateString: "\x3cdiv\x3e\x3c/div\x3e",
                        _isTooltipDialogOpened: !1,
                        color: null,
                        showHex: !0,
                        showHsv: !0,
                        showRgb: !0,
                        ensureMode: !1,
                        showLabel: !1,
                        postMixInProperties: function() {
                            this.nls = window.jimuNls.common
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.color ? this.color instanceof q || (this.color = new q(this.color)) : this.color = new q("#ccc");
                            d.setStyle(this.domNode, "backgroundColor", this.color.toHex());
                            this.showLabel && this._changeLabel(this.color);
                            this._createTooltipDialog(this.domNode);
                            this._hideTooltipDialog()
                        },
                        destroy: function() {
                            k.close(this.tooltipDialog);
                            this.picker.destroy();
                            this.tooltipDialog.destroy();
                            this.inherited(arguments)
                        },
                        isPartOfPopup: function(a) {
                            var c = this.tooltipDialog.domNode;
                            return a === c || d.isDescendant(a, c)
                        },
                        hideTooltipDialog: function() {
                            this._hideTooltipDialog()
                        },
                        _showTooltipDialog: function() {
                            k.open({
                                parent: this.getParent(),
                                popup: this.tooltipDialog,
                                around: this.domNode
                            });
                            this._isTooltipDialogOpened = !0
                        },
                        _hideTooltipDialog: function() {
                            k.close(this.tooltipDialog);
                            this._isTooltipDialogOpened = !1
                        },
                        _createTooltipDialog: function() {
                            var e = d.create("div");
                            this.tooltipDialog = new a({
                                content: e
                            });
                            d.addClass(this.tooltipDialog.domNode, "jimu-color-picker-dialog");
                            var k = new c({
                                showHex: this.showHex,
                                showRgb: this.showRgb,
                                showHsv: this.showHsv,
                                value: this.color.toHex(),
                                onChange: h.hitch(this, function(a) {
                                    this.ensureMode || (a = new q(a), this.setColor(a))
                                })
                            });
                            k.placeAt(e);
                            k.startup();
                            if (this.ensureMode) {
                                var l = d.create("div", {
                                    "class": "jimu-btn jimu-btn-vacation jimu-float-trailing",
                                    title: this.nls.cancel,
                                    innerHTML: this.nls.cancel
                                }, e);
                                this.own(m(l, "click", h.hitch(this, function() {
                                    this._hideTooltipDialog()
                                })));
                                l = d.create("div", {
                                    "class": "jimu-btn jimu-float-trailing",
                                    title: this.nls.ok,
                                    innerHTML: this.nls.ok
                                }, e);
                                this.own(m(l, "click", h.hitch(this, function() {
                                    var a = this.picker.get("value");
                                    this.setColor(new q(a));
                                    this._hideTooltipDialog()
                                })));
                                e = d.create("div", {
                                        "class": "jimu-btn jimu-float-trailing",
                                        title: this.nls.apply,
                                        innerHTML: this.nls.apply
                                    },
                                    e);
                                this.own(m(e, "click", h.hitch(this, function() {
                                    var a = this.picker.get("value");
                                    this.setColor(new q(a))
                                })))
                            }
                            this.own(m(this.domNode, "click", h.hitch(this, function(a) {
                                a.stopPropagation();
                                a.preventDefault();
                                this._isTooltipDialogOpened ? this._hideTooltipDialog() : this._showTooltipDialog()
                            })));
                            this.own(m(document.body, "click", h.hitch(this, function(a) {
                                this.isPartOfPopup(a.target || a.srcElement) || this._hideTooltipDialog()
                            })));
                            this.picker = k
                        },
                        setColor: function(a) {
                            if (a instanceof q) {
                                var c = this.color,
                                    e = "";
                                c && (e =
                                    c.toHex());
                                c = a.toHex();
                                this.color = a;
                                d.setStyle(this.domNode, "backgroundColor", c);
                                e !== c && (this.picker.set("value", c), this.onChange(new q(c)))
                            }
                        },
                        getColor: function() {
                            return this.color
                        },
                        _changeLabel: function(a) {
                            d.empty(this.domNode);
                            d.create("span", {
                                innerHTML: a.toHex(),
                                className: "color-label",
                                style: {
                                    color: s.invertColor(a.toHex())
                                }
                            }, this.domNode)
                        },
                        onChange: function(a) {
                            this.showLabel && this._changeLabel(a)
                        }
                    })
                })
        },
        "dojox/widget/ColorPicker": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/_base/connect dojo/_base/sniff dojo/_base/window dojo/_base/event dojo/dom dojo/dom-class dojo/keys dojo/fx dojo/dnd/move dijit/registry dijit/_base/focus dijit/form/_FormWidget dijit/typematic dojox/color dojo/i18n dojo/i18n!./nls/ColorPicker dojo/i18n!dojo/cldr/nls/number dojo/text!./ColorPicker/ColorPicker.html".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A, x, C) {
                    p.experimental("dojox.widget.ColorPicker");
                    return e("dojox.widget.ColorPicker", b, {
                        showRgb: !0,
                        showHsv: !0,
                        showHex: !0,
                        webSafe: !0,
                        animatePoint: !0,
                        slideDuration: 250,
                        liveUpdate: !1,
                        PICKER_HUE_H: 150,
                        PICKER_SAT_VAL_H: 150,
                        PICKER_SAT_VAL_W: 150,
                        PICKER_HUE_SELECTOR_H: 8,
                        PICKER_SAT_SELECTOR_H: 10,
                        PICKER_SAT_SELECTOR_W: 10,
                        value: "#ffffff",
                        _underlay: require.toUrl("dojox/widget/ColorPicker/images/underlay.png"),
                        _hueUnderlay: require.toUrl("dojox/widget/ColorPicker/images/hue.png"),
                        _pickerPointer: require.toUrl("dojox/widget/ColorPicker/images/pickerPointer.png"),
                        _huePickerPointer: require.toUrl("dojox/widget/ColorPicker/images/hueHandle.png"),
                        _huePickerPointerAlly: require.toUrl("dojox/widget/ColorPicker/images/hueHandleA11y.png"),
                        templateString: C,
                        postMixInProperties: function() {
                            s.contains(a.body(), "dijit_a11y") && (this._huePickerPointer = this._huePickerPointerAlly);
                            this._uId = g.getUniqueId(this.id);
                            f.mixin(this, z.getLocalization("dojox.widget", "ColorPicker"));
                            f.mixin(this, z.getLocalization("dojo.cldr",
                                "number"));
                            this.inherited(arguments)
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            7 > q("ie") && (this.colorUnderlay.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src\x3d'" + this._underlay + "', sizingMethod\x3d'scale')", this.colorUnderlay.src = this._blankGif.toString());
                            this.showRgb || (this.rgbNode.style.visibility = "hidden");
                            this.showHsv || (this.hsvNode.style.visibility = "hidden");
                            this.showHex || (this.hexNode.style.visibility = "hidden");
                            this.webSafe || (this.safePreviewNode.style.visibility =
                                "hidden")
                        },
                        startup: function() {
                            this._started || (this._started = !0, this.set("value", this.value), this._mover = new l.boxConstrainedMoveable(this.cursorNode, {
                                box: {
                                    t: -(this.PICKER_SAT_SELECTOR_H / 2),
                                    l: -(this.PICKER_SAT_SELECTOR_W / 2),
                                    w: this.PICKER_SAT_VAL_W,
                                    h: this.PICKER_SAT_VAL_H
                                }
                            }), this._hueMover = new l.boxConstrainedMoveable(this.hueCursorNode, {
                                box: {
                                    t: -(this.PICKER_HUE_SELECTOR_H / 2),
                                    l: 0,
                                    w: 0,
                                    h: this.PICKER_HUE_H
                                }
                            }), this._subs = [], this._subs.push(m.subscribe("/dnd/move/stop", f.hitch(this, "_clearTimer"))), this._subs.push(m.subscribe("/dnd/move/start",
                                f.hitch(this, "_setTimer"))), this._keyListeners = [], this._connects.push(v.addKeyListener(this.hueCursorNode, {
                                charOrCode: n.UP_ARROW,
                                shiftKey: !1,
                                metaKey: !1,
                                ctrlKey: !1,
                                altKey: !1
                            }, this, f.hitch(this, this._updateHueCursorNode), 25, 25)), this._connects.push(v.addKeyListener(this.hueCursorNode, {
                                charOrCode: n.DOWN_ARROW,
                                shiftKey: !1,
                                metaKey: !1,
                                ctrlKey: !1,
                                altKey: !1
                            }, this, f.hitch(this, this._updateHueCursorNode), 25, 25)), this._connects.push(v.addKeyListener(this.cursorNode, {
                                charOrCode: n.UP_ARROW,
                                shiftKey: !1,
                                metaKey: !1,
                                ctrlKey: !1,
                                altKey: !1
                            }, this, f.hitch(this, this._updateCursorNode), 25, 25)), this._connects.push(v.addKeyListener(this.cursorNode, {
                                charOrCode: n.DOWN_ARROW,
                                shiftKey: !1,
                                metaKey: !1,
                                ctrlKey: !1,
                                altKey: !1
                            }, this, f.hitch(this, this._updateCursorNode), 25, 25)), this._connects.push(v.addKeyListener(this.cursorNode, {
                                charOrCode: n.LEFT_ARROW,
                                shiftKey: !1,
                                metaKey: !1,
                                ctrlKey: !1,
                                altKey: !1
                            }, this, f.hitch(this, this._updateCursorNode), 25, 25)), this._connects.push(v.addKeyListener(this.cursorNode, {
                                charOrCode: n.RIGHT_ARROW,
                                shiftKey: !1,
                                metaKey: !1,
                                ctrlKey: !1,
                                altKey: !1
                            }, this, f.hitch(this, this._updateCursorNode), 25, 25)))
                        },
                        _setValueAttr: function(a, b) {
                            this._started && this.setColor(a, b)
                        },
                        setColor: function(a, b) {
                            a = w.fromString(a);
                            this._updatePickerLocations(a);
                            this._updateColorInputs(a);
                            this._updateValue(a, b)
                        },
                        _setTimer: function(a) {
                            a.node != this.cursorNode && a.node != this.hueCursorNode || (t.focus(a.node), c.setSelectable(this.domNode, !1), this._timer = setInterval(f.hitch(this, "_updateColor"), 45))
                        },
                        _clearTimer: function(a) {
                            this._timer && (clearInterval(this._timer),
                                this._timer = null, this.onChange(this.value), c.setSelectable(this.domNode, !0))
                        },
                        _setHue: function(a) {
                            d.style(this.colorUnderlay, "backgroundColor", w.fromHsv(a, 100, 100).toHex())
                        },
                        _updateHueCursorNode: function(a, b, c) {
                            if (-1 !== a) {
                                a = d.style(this.hueCursorNode, "top");
                                b = this.PICKER_HUE_SELECTOR_H / 2;
                                a += b;
                                var e = !1;
                                c.charOrCode == n.UP_ARROW ? 0 < a && (a -= 1, e = !0) : c.charOrCode == n.DOWN_ARROW && a < this.PICKER_HUE_H && (a += 1, e = !0);
                                e && d.style(this.hueCursorNode, "top", a - b + "px")
                            } else this._updateColor(!0)
                        },
                        _updateCursorNode: function(a,
                            b, c) {
                            b = this.PICKER_SAT_SELECTOR_H / 2;
                            var e = this.PICKER_SAT_SELECTOR_W / 2;
                            if (-1 !== a) {
                                a = d.style(this.cursorNode, "top");
                                var g = d.style(this.cursorNode, "left");
                                a += b;
                                var g = g + e,
                                    l = !1;
                                c.charOrCode == n.UP_ARROW ? 0 < a && (a -= 1, l = !0) : c.charOrCode == n.DOWN_ARROW ? a < this.PICKER_SAT_VAL_H && (a += 1, l = !0) : c.charOrCode == n.LEFT_ARROW ? 0 < g && (g -= 1, l = !0) : c.charOrCode == n.RIGHT_ARROW && g < this.PICKER_SAT_VAL_W && (g += 1, l = !0);
                                l && (g -= e, d.style(this.cursorNode, "top", a - b + "px"), d.style(this.cursorNode, "left", g + "px"))
                            } else this._updateColor(!0)
                        },
                        _updateColor: function(a) {
                            var b = this.PICKER_HUE_SELECTOR_H / 2,
                                c = this.PICKER_SAT_SELECTOR_H / 2,
                                e = this.PICKER_SAT_SELECTOR_W / 2,
                                b = d.style(this.hueCursorNode, "top") + b,
                                c = d.style(this.cursorNode, "top") + c,
                                e = d.style(this.cursorNode, "left") + e,
                                b = Math.round(360 - 360 * (b / this.PICKER_HUE_H)),
                                e = w.fromHsv(b, 100 * (e / this.PICKER_SAT_VAL_W), 100 - 100 * (c / this.PICKER_SAT_VAL_H));
                            this._updateColorInputs(e);
                            this._updateValue(e, a);
                            b != this._hue && this._setHue(b)
                        },
                        _colorInputChange: function(a) {
                            var b, c = !1;
                            switch (a.target) {
                                case this.hexCode:
                                    b =
                                        w.fromString(a.target.value);
                                    c = !0;
                                    break;
                                case this.Rval:
                                case this.Gval:
                                case this.Bval:
                                    b = w.fromArray([this.Rval.value, this.Gval.value, this.Bval.value]);
                                    c = !0;
                                    break;
                                case this.Hval:
                                case this.Sval:
                                case this.Vval:
                                    b = w.fromHsv(this.Hval.value, this.Sval.value, this.Vval.value), c = !0
                            }
                            c && (this._updatePickerLocations(b), this._updateColorInputs(b), this._updateValue(b, !0))
                        },
                        _updateValue: function(a, b) {
                            var c = a.toHex();
                            this.value = this.valueNode.value = c;
                            if (b && (!this._timer || this.liveUpdate)) this.onChange(c)
                        },
                        _updatePickerLocations: function(a) {
                            var b =
                                this.PICKER_HUE_SELECTOR_H / 2,
                                c = this.PICKER_SAT_SELECTOR_H / 2,
                                e = this.PICKER_SAT_SELECTOR_W / 2;
                            a = a.toHsv();
                            b = Math.round(this.PICKER_HUE_H - a.h / 360 * this.PICKER_HUE_H) - b;
                            e = Math.round(a.s / 100 * this.PICKER_SAT_VAL_W) - e;
                            c = Math.round(this.PICKER_SAT_VAL_H - a.v / 100 * this.PICKER_SAT_VAL_H) - c;
                            this.animatePoint ? (r.slideTo({
                                node: this.hueCursorNode,
                                duration: this.slideDuration,
                                top: b,
                                left: 0
                            }).play(), r.slideTo({
                                node: this.cursorNode,
                                duration: this.slideDuration,
                                top: c,
                                left: e
                            }).play()) : (d.style(this.hueCursorNode, "top", b + "px"),
                                d.style(this.cursorNode, {
                                    left: e + "px",
                                    top: c + "px"
                                }));
                            a.h != this._hue && this._setHue(a.h)
                        },
                        _updateColorInputs: function(a) {
                            var b = a.toHex();
                            this.showRgb && (this.Rval.value = a.r, this.Gval.value = a.g, this.Bval.value = a.b);
                            this.showHsv && (a = a.toHsv(), this.Hval.value = Math.round(a.h), this.Sval.value = Math.round(a.s), this.Vval.value = Math.round(a.v));
                            this.showHex && (this.hexCode.value = b);
                            this.previewNode.style.backgroundColor = b;
                            this.webSafe && (this.safePreviewNode.style.backgroundColor = b)
                        },
                        _setHuePoint: function(a) {
                            a = a.layerY -
                                this.PICKER_HUE_SELECTOR_H / 2;
                            this.animatePoint ? r.slideTo({
                                node: this.hueCursorNode,
                                duration: this.slideDuration,
                                top: a,
                                left: 0,
                                onEnd: f.hitch(this, function() {
                                    this._updateColor(!1);
                                    t.focus(this.hueCursorNode)
                                })
                            }).play() : (d.style(this.hueCursorNode, "top", a + "px"), this._updateColor(!1))
                        },
                        _setPoint: function(a) {
                            var b = a.layerY - this.PICKER_SAT_SELECTOR_H / 2,
                                c = a.layerX - this.PICKER_SAT_SELECTOR_W / 2;
                            a && t.focus(a.target);
                            this.animatePoint ? r.slideTo({
                                node: this.cursorNode,
                                duration: this.slideDuration,
                                top: b,
                                left: c,
                                onEnd: f.hitch(this,
                                    function() {
                                        this._updateColor(!0);
                                        t.focus(this.cursorNode)
                                    })
                            }).play() : (d.style(this.cursorNode, {
                                left: c + "px",
                                top: b + "px"
                            }), this._updateColor(!1))
                        },
                        _handleKey: function(a) {},
                        focus: function() {
                            this.focused || t.focus(this.focusNode)
                        },
                        _stopDrag: function(a) {
                            k.stop(a)
                        },
                        destroy: function() {
                            this.inherited(arguments);
                            h.forEach(this._subs, function(a) {
                                m.unsubscribe(a)
                            });
                            delete this._subs
                        }
                    })
                })
        },
        "dojox/color": function() {
            define(["./color/_base"], function(p) {
                return p
            })
        },
        "dojox/color/_base": function() {
            define(["../main",
                "dojo/_base/lang", "dojo/_base/Color", "dojo/colors"
            ], function(p, e, f, h) {
                p = e.getObject("color", !0, p);
                p.Color = f;
                p.blend = f.blendColors;
                p.fromRgb = f.fromRgb;
                p.fromHex = f.fromHex;
                p.fromArray = f.fromArray;
                p.fromString = f.fromString;
                p.greyscale = h.makeGrey;
                e.mixin(p, {
                    fromCmy: function(d, m, h) {
                        e.isArray(d) ? (m = d[1], h = d[2], d = d[0]) : e.isObject(d) && (m = d.m, h = d.y, d = d.c);
                        m = 1 - m / 100;
                        h = 1 - h / 100;
                        return new f({
                            r: Math.round(255 * (1 - d / 100)),
                            g: Math.round(255 * m),
                            b: Math.round(255 * h)
                        })
                    },
                    fromCmyk: function(d, m, h, a) {
                        e.isArray(d) ? (m = d[1],
                            h = d[2], a = d[3], d = d[0]) : e.isObject(d) && (m = d.m, h = d.y, a = d.b, d = d.c);
                        m /= 100;
                        h /= 100;
                        a /= 100;
                        d = 1 - Math.min(1, d / 100 * (1 - a) + a);
                        m = 1 - Math.min(1, m * (1 - a) + a);
                        h = 1 - Math.min(1, h * (1 - a) + a);
                        return new f({
                            r: Math.round(255 * d),
                            g: Math.round(255 * m),
                            b: Math.round(255 * h)
                        })
                    },
                    fromHsl: function(d, m, h) {
                        e.isArray(d) ? (m = d[1], h = d[2], d = d[0]) : e.isObject(d) && (m = d.s, h = d.l, d = d.h);
                        m /= 100;
                        for (h /= 100; 0 > d;) d += 360;
                        for (; 360 <= d;) d -= 360;
                        var a, k;
                        120 > d ? (a = (120 - d) / 60, k = d / 60, d = 0) : 240 > d ? (a = 0, k = (240 - d) / 60, d = (d - 120) / 60) : (a = (d - 240) / 60, k = 0, d = (360 - d) / 60);
                        a = 2 *
                            m * Math.min(a, 1) + (1 - m);
                        k = 2 * m * Math.min(k, 1) + (1 - m);
                        d = 2 * m * Math.min(d, 1) + (1 - m);
                        0.5 > h ? (a *= h, k *= h, d *= h) : (a = (1 - h) * a + 2 * h - 1, k = (1 - h) * k + 2 * h - 1, d = (1 - h) * d + 2 * h - 1);
                        return new f({
                            r: Math.round(255 * a),
                            g: Math.round(255 * k),
                            b: Math.round(255 * d)
                        })
                    }
                });
                p.fromHsv = function(d, m, h) {
                    e.isArray(d) ? (m = d[1], h = d[2], d = d[0]) : e.isObject(d) && (m = d.s, h = d.v, d = d.h);
                    360 == d && (d = 0);
                    m /= 100;
                    h /= 100;
                    var a, k, c;
                    if (0 == m) k = c = a = h;
                    else {
                        var s = d / 60;
                        d = Math.floor(s);
                        var n = s - d,
                            s = h * (1 - m),
                            r = h * (1 - m * n);
                        m = h * (1 - m * (1 - n));
                        switch (d) {
                            case 0:
                                a = h;
                                k = m;
                                c = s;
                                break;
                            case 1:
                                a =
                                    r;
                                k = h;
                                c = s;
                                break;
                            case 2:
                                a = s;
                                k = h;
                                c = m;
                                break;
                            case 3:
                                a = s;
                                k = r;
                                c = h;
                                break;
                            case 4:
                                a = m;
                                k = s;
                                c = h;
                                break;
                            case 5:
                                a = h, k = s, c = r
                        }
                    }
                    return new f({
                        r: Math.round(255 * a),
                        g: Math.round(255 * k),
                        b: Math.round(255 * c)
                    })
                };
                e.extend(f, {
                    toCmy: function() {
                        var d = 1 - this.g / 255,
                            e = 1 - this.b / 255;
                        return {
                            c: Math.round(100 * (1 - this.r / 255)),
                            m: Math.round(100 * d),
                            y: Math.round(100 * e)
                        }
                    },
                    toCmyk: function() {
                        var d, e, f, a = this.r / 255;
                        d = this.g / 255;
                        e = this.b / 255;
                        f = Math.min(1 - a, 1 - d, 1 - e);
                        d = (1 - d - f) / (1 - f);
                        e = (1 - e - f) / (1 - f);
                        return {
                            c: Math.round(100 * ((1 - a - f) / (1 - f))),
                            m: Math.round(100 *
                                d),
                            y: Math.round(100 * e),
                            b: Math.round(100 * f)
                        }
                    },
                    toHsl: function() {
                        var d = this.r / 255,
                            e = this.g / 255,
                            f = this.b / 255,
                            a = Math.min(d, f, e),
                            k = Math.max(d, e, f),
                            c = k - a,
                            h = 0,
                            n = 0,
                            a = (a + k) / 2;
                        0 < a && 1 > a && (n = c / (0.5 > a ? 2 * a : 2 - 2 * a));
                        0 < c && (k == d && k != e && (h += (e - f) / c), k == e && k != f && (h += 2 + (f - d) / c), k == f && k != d && (h += 4 + (d - e) / c), h *= 60);
                        return {
                            h: h,
                            s: Math.round(100 * n),
                            l: Math.round(100 * a)
                        }
                    },
                    toHsv: function() {
                        var d = this.r / 255,
                            e = this.g / 255,
                            f = this.b / 255,
                            a = Math.min(d, f, e),
                            k = Math.max(d, e, f),
                            a = k - a,
                            c = null,
                            h = 0 == k ? 0 : a / k;
                        0 == h ? c = 0 : (c = d == k ? 60 * (e - f) / a : e == k ? 120 +
                            60 * (f - d) / a : 240 + 60 * (d - e) / a, 0 > c && (c += 360));
                        return {
                            h: c,
                            s: Math.round(100 * h),
                            v: Math.round(100 * k)
                        }
                    }
                });
                return p
            })
        },
        "dojo/colors": function() {
            define(["./_base/kernel", "./_base/lang", "./_base/Color", "./_base/array"], function(p, e, f, h) {
                var d = {};
                e.setObject("dojo.colors", d);
                var m = function(a, d, c) {
                    0 > c && ++c;
                    1 < c && --c;
                    var e = 6 * c;
                    return 1 > e ? a + (d - a) * e : 1 > 2 * c ? d : 2 > 3 * c ? a + 6 * (d - a) * (2 / 3 - c) : a
                };
                p.colorFromRgb = f.fromRgb = function(a, d) {
                    var c = a.toLowerCase().match(/^(rgba?|hsla?)\(([\s\.\-,%0-9]+)\)/);
                    if (c) {
                        var e = c[2].split(/\s*,\s*/),
                            n = e.length,
                            c = c[1];
                        if ("rgb" == c && 3 == n || "rgba" == c && 4 == n) return c = e[0], "%" == c.charAt(c.length - 1) ? (c = h.map(e, function(a) {
                            return 2.56 * parseFloat(a)
                        }), 4 == n && (c[3] = e[3]), f.fromArray(c, d)) : f.fromArray(e, d);
                        if ("hsl" == c && 3 == n || "hsla" == c && 4 == n) {
                            var c = (parseFloat(e[0]) % 360 + 360) % 360 / 360,
                                r = parseFloat(e[1]) / 100,
                                l = parseFloat(e[2]) / 100,
                                r = 0.5 >= l ? l * (r + 1) : l + r - l * r,
                                l = 2 * l - r,
                                c = [256 * m(l, r, c + 1 / 3), 256 * m(l, r, c), 256 * m(l, r, c - 1 / 3), 1];
                            4 == n && (c[3] = e[3]);
                            return f.fromArray(c, d)
                        }
                    }
                    return null
                };
                var q = function(a, d, c) {
                    a = Number(a);
                    return isNaN(a) ?
                        c : a < d ? d : a > c ? c : a
                };
                f.prototype.sanitize = function() {
                    this.r = Math.round(q(this.r, 0, 255));
                    this.g = Math.round(q(this.g, 0, 255));
                    this.b = Math.round(q(this.b, 0, 255));
                    this.a = q(this.a, 0, 1);
                    return this
                };
                d.makeGrey = f.makeGrey = function(a, d) {
                    return f.fromArray([a, a, a, d])
                };
                e.mixin(f.named, {
                    aliceblue: [240, 248, 255],
                    antiquewhite: [250, 235, 215],
                    aquamarine: [127, 255, 212],
                    azure: [240, 255, 255],
                    beige: [245, 245, 220],
                    bisque: [255, 228, 196],
                    blanchedalmond: [255, 235, 205],
                    blueviolet: [138, 43, 226],
                    brown: [165, 42, 42],
                    burlywood: [222, 184, 135],
                    cadetblue: [95, 158, 160],
                    chartreuse: [127, 255, 0],
                    chocolate: [210, 105, 30],
                    coral: [255, 127, 80],
                    cornflowerblue: [100, 149, 237],
                    cornsilk: [255, 248, 220],
                    crimson: [220, 20, 60],
                    cyan: [0, 255, 255],
                    darkblue: [0, 0, 139],
                    darkcyan: [0, 139, 139],
                    darkgoldenrod: [184, 134, 11],
                    darkgray: [169, 169, 169],
                    darkgreen: [0, 100, 0],
                    darkgrey: [169, 169, 169],
                    darkkhaki: [189, 183, 107],
                    darkmagenta: [139, 0, 139],
                    darkolivegreen: [85, 107, 47],
                    darkorange: [255, 140, 0],
                    darkorchid: [153, 50, 204],
                    darkred: [139, 0, 0],
                    darksalmon: [233, 150, 122],
                    darkseagreen: [143, 188, 143],
                    darkslateblue: [72, 61, 139],
                    darkslategray: [47, 79, 79],
                    darkslategrey: [47, 79, 79],
                    darkturquoise: [0, 206, 209],
                    darkviolet: [148, 0, 211],
                    deeppink: [255, 20, 147],
                    deepskyblue: [0, 191, 255],
                    dimgray: [105, 105, 105],
                    dimgrey: [105, 105, 105],
                    dodgerblue: [30, 144, 255],
                    firebrick: [178, 34, 34],
                    floralwhite: [255, 250, 240],
                    forestgreen: [34, 139, 34],
                    gainsboro: [220, 220, 220],
                    ghostwhite: [248, 248, 255],
                    gold: [255, 215, 0],
                    goldenrod: [218, 165, 32],
                    greenyellow: [173, 255, 47],
                    grey: [128, 128, 128],
                    honeydew: [240, 255, 240],
                    hotpink: [255, 105, 180],
                    indianred: [205,
                        92, 92
                    ],
                    indigo: [75, 0, 130],
                    ivory: [255, 255, 240],
                    khaki: [240, 230, 140],
                    lavender: [230, 230, 250],
                    lavenderblush: [255, 240, 245],
                    lawngreen: [124, 252, 0],
                    lemonchiffon: [255, 250, 205],
                    lightblue: [173, 216, 230],
                    lightcoral: [240, 128, 128],
                    lightcyan: [224, 255, 255],
                    lightgoldenrodyellow: [250, 250, 210],
                    lightgray: [211, 211, 211],
                    lightgreen: [144, 238, 144],
                    lightgrey: [211, 211, 211],
                    lightpink: [255, 182, 193],
                    lightsalmon: [255, 160, 122],
                    lightseagreen: [32, 178, 170],
                    lightskyblue: [135, 206, 250],
                    lightslategray: [119, 136, 153],
                    lightslategrey: [119, 136,
                        153
                    ],
                    lightsteelblue: [176, 196, 222],
                    lightyellow: [255, 255, 224],
                    limegreen: [50, 205, 50],
                    linen: [250, 240, 230],
                    magenta: [255, 0, 255],
                    mediumaquamarine: [102, 205, 170],
                    mediumblue: [0, 0, 205],
                    mediumorchid: [186, 85, 211],
                    mediumpurple: [147, 112, 219],
                    mediumseagreen: [60, 179, 113],
                    mediumslateblue: [123, 104, 238],
                    mediumspringgreen: [0, 250, 154],
                    mediumturquoise: [72, 209, 204],
                    mediumvioletred: [199, 21, 133],
                    midnightblue: [25, 25, 112],
                    mintcream: [245, 255, 250],
                    mistyrose: [255, 228, 225],
                    moccasin: [255, 228, 181],
                    navajowhite: [255, 222, 173],
                    oldlace: [253,
                        245, 230
                    ],
                    olivedrab: [107, 142, 35],
                    orange: [255, 165, 0],
                    orangered: [255, 69, 0],
                    orchid: [218, 112, 214],
                    palegoldenrod: [238, 232, 170],
                    palegreen: [152, 251, 152],
                    paleturquoise: [175, 238, 238],
                    palevioletred: [219, 112, 147],
                    papayawhip: [255, 239, 213],
                    peachpuff: [255, 218, 185],
                    peru: [205, 133, 63],
                    pink: [255, 192, 203],
                    plum: [221, 160, 221],
                    powderblue: [176, 224, 230],
                    rosybrown: [188, 143, 143],
                    royalblue: [65, 105, 225],
                    saddlebrown: [139, 69, 19],
                    salmon: [250, 128, 114],
                    sandybrown: [244, 164, 96],
                    seagreen: [46, 139, 87],
                    seashell: [255, 245, 238],
                    sienna: [160,
                        82, 45
                    ],
                    skyblue: [135, 206, 235],
                    slateblue: [106, 90, 205],
                    slategray: [112, 128, 144],
                    slategrey: [112, 128, 144],
                    snow: [255, 250, 250],
                    springgreen: [0, 255, 127],
                    steelblue: [70, 130, 180],
                    tan: [210, 180, 140],
                    thistle: [216, 191, 216],
                    tomato: [255, 99, 71],
                    turquoise: [64, 224, 208],
                    violet: [238, 130, 238],
                    wheat: [245, 222, 179],
                    whitesmoke: [245, 245, 245],
                    yellowgreen: [154, 205, 50]
                });
                return f
            })
        },
        "jimu/dijit/_Transparency": function() {
            define("dojo/_base/declare dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dojo/Evented dojo/text!./templates/_Transparency.html dojo/_base/lang dojo/_base/html dojo/on dijit/form/HorizontalSlider dijit/form/HorizontalRuleLabels dijit/form/HorizontalRule".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n) {
                    return p([e, f, h, d], {
                        baseClass: "jimu-transparency",
                        declaredClass: "jimu.dijit.Transparency",
                        templateString: m,
                        nls: null,
                        alpha: 1,
                        postMixInProperties: function() {
                            this.nls = window.jimuNls.transparency
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            "number" === typeof this.alpha && this.setAlpha(this.alpha)
                        },
                        setAlpha: function(a) {
                            a = Math.round(100 - 100 * a);
                            this.opacitySlider.set("value", a)
                        },
                        getAlpha: function() {
                            return Math.round(100 - this.opacitySlider.get("value")) / 100
                        },
                        _onAlphaChanged: function() {
                            var a =
                                this.getAlpha();
                            this.emit("change", a)
                        }
                    })
                })
        },
        "dijit/form/HorizontalSlider": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dnd/move dojo/_base/fx dojo/dom-geometry dojo/dom-style dojo/keys dojo/_base/lang dojo/sniff dojo/dnd/Moveable dojo/dnd/Mover dojo/query dojo/mouse dojo/on ../_base/manager ../focus ../typematic ./Button ./_FormValueWidget ../_Container dojo/text!./templates/HorizontalSlider.html".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A) {
                var x = e("dijit.form._SliderMover",
                    s, {
                        onMouseMove: function(b) {
                            var c = this.widget,
                                e = c._abspos;
                            e || (e = c._abspos = d.position(c.sliderBarContainer, !0), c._setPixelValue_ = a.hitch(c, "_setPixelValue"), c._isReversed_ = c._isReversed());
                            b = b[c._mousePixelCoord] - e[c._startingPixelCoord];
                            c._setPixelValue_(c._isReversed_ ? e[c._pixelCount] - b : b, e[c._pixelCount], !1)
                        },
                        destroy: function(a) {
                            s.prototype.destroy.apply(this, arguments);
                            var b = this.widget;
                            b._abspos = null;
                            b._setValueAttr(b.value, !0)
                        }
                    });
                f = e("dijit.form.HorizontalSlider", [w, z], {
                    templateString: A,
                    value: 0,
                    showButtons: !0,
                    minimum: 0,
                    maximum: 100,
                    discreteValues: Infinity,
                    pageIncrement: 2,
                    clickSelect: !0,
                    slideDuration: g.defaultDuration,
                    _setIdAttr: "",
                    _setNameAttr: "valueNode",
                    baseClass: "dijitSlider",
                    cssStateNodes: {
                        incrementButton: "dijitSliderIncrementButton",
                        decrementButton: "dijitSliderDecrementButton",
                        focusNode: "dijitSliderThumb"
                    },
                    _mousePixelCoord: "pageX",
                    _pixelCount: "w",
                    _startingPixelCoord: "x",
                    _handleOffsetCoord: "left",
                    _progressPixelSize: "width",
                    _onKeyUp: function(a) {
                        !this.disabled && (!this.readOnly && !a.altKey &&
                            !a.ctrlKey && !a.metaKey) && this._setValueAttr(this.value, !0)
                    },
                    _onKeyDown: function(a) {
                        if (!this.disabled && !this.readOnly && !a.altKey && !a.ctrlKey && !a.metaKey) {
                            switch (a.keyCode) {
                                case q.HOME:
                                    this._setValueAttr(this.minimum, !1);
                                    break;
                                case q.END:
                                    this._setValueAttr(this.maximum, !1);
                                    break;
                                case this._descending || this.isLeftToRight() ? q.RIGHT_ARROW:
                                    q.LEFT_ARROW:
                                        case !1 === this._descending ? q.DOWN_ARROW:
                                    q.UP_ARROW:
                                        case !1 === this._descending ? q.PAGE_DOWN:
                                    q.PAGE_UP: this.increment(a);
                                    break;
                                case this._descending || this.isLeftToRight() ?
                                q.LEFT_ARROW:
                                    q.RIGHT_ARROW:
                                        case !1 === this._descending ? q.UP_ARROW:
                                    q.DOWN_ARROW:
                                        case !1 === this._descending ? q.PAGE_UP:
                                    q.PAGE_DOWN: this.decrement(a);
                                    break;
                                default:
                                    return
                            }
                            a.stopPropagation();
                            a.preventDefault()
                        }
                    },
                    _onHandleClick: function(a) {
                        !this.disabled && !this.readOnly && (k("ie") || t.focus(this.sliderHandle), a.stopPropagation(), a.preventDefault())
                    },
                    _isReversed: function() {
                        return !this.isLeftToRight()
                    },
                    _onBarClick: function(a) {
                        if (!this.disabled && !this.readOnly && this.clickSelect) {
                            t.focus(this.sliderHandle);
                            a.stopPropagation();
                            a.preventDefault();
                            var b = d.position(this.sliderBarContainer, !0),
                                c = a[this._mousePixelCoord] - b[this._startingPixelCoord];
                            this._setPixelValue(this._isReversed() ? b[this._pixelCount] - c : c, b[this._pixelCount], !0);
                            this._movable.onMouseDown(a)
                        }
                    },
                    _setPixelValue: function(a, b, c) {
                        if (!this.disabled && !this.readOnly) {
                            var d = this.discreteValues;
                            if (1 >= d || Infinity == d) d = b;
                            d--;
                            a = Math.round(a / (b / d));
                            this._setValueAttr(Math.max(Math.min((this.maximum - this.minimum) * a / d + this.minimum, this.maximum), this.minimum), c)
                        }
                    },
                    _setValueAttr: function(a,
                        b) {
                        this._set("value", a);
                        this.valueNode.value = a;
                        this.focusNode.setAttribute("aria-valuenow", a);
                        this.inherited(arguments);
                        var c = this.maximum > this.minimum ? (a - this.minimum) / (this.maximum - this.minimum) : 0,
                            d = !1 === this._descending ? this.remainingBar : this.progressBar,
                            e = !1 === this._descending ? this.progressBar : this.remainingBar;
                        this._inProgressAnim && "stopped" != this._inProgressAnim.status && this._inProgressAnim.stop(!0);
                        if (b && 0 < this.slideDuration && d.style[this._progressPixelSize]) {
                            var g = this,
                                l = {},
                                n = parseFloat(d.style[this._progressPixelSize]),
                                k = this.slideDuration * (c - n / 100);
                            0 != k && (0 > k && (k = 0 - k), l[this._progressPixelSize] = {
                                start: n,
                                end: 100 * c,
                                units: "%"
                            }, this._inProgressAnim = h.animateProperty({
                                node: d,
                                duration: k,
                                onAnimate: function(a) {
                                    e.style[g._progressPixelSize] = 100 - parseFloat(a[g._progressPixelSize]) + "%"
                                },
                                onEnd: function() {
                                    delete g._inProgressAnim
                                },
                                properties: l
                            }), this._inProgressAnim.play())
                        } else d.style[this._progressPixelSize] = 100 * c + "%", e.style[this._progressPixelSize] = 100 * (1 - c) + "%"
                    },
                    _bumpValue: function(a, b) {
                        if (!this.disabled && !(this.readOnly ||
                                this.maximum <= this.minimum)) {
                            var c = m.getComputedStyle(this.sliderBarContainer),
                                e = d.getContentBox(this.sliderBarContainer, c),
                                c = this.discreteValues;
                            if (1 >= c || Infinity == c) c = e[this._pixelCount];
                            c--;
                            e = Math.round((this.value - this.minimum) * c / (this.maximum - this.minimum)) + a;
                            0 > e && (e = 0);
                            e > c && (e = c);
                            e = e * (this.maximum - this.minimum) / c + this.minimum;
                            this._setValueAttr(e, b)
                        }
                    },
                    _onClkBumper: function(a) {
                        !this.disabled && (!this.readOnly && this.clickSelect) && this._setValueAttr(a, !0)
                    },
                    _onClkIncBumper: function() {
                        this._onClkBumper(!1 ===
                            this._descending ? this.minimum : this.maximum)
                    },
                    _onClkDecBumper: function() {
                        this._onClkBumper(!1 === this._descending ? this.maximum : this.minimum)
                    },
                    decrement: function(a) {
                        this._bumpValue(a.keyCode == q.PAGE_DOWN ? -this.pageIncrement : -1)
                    },
                    increment: function(a) {
                        this._bumpValue(a.keyCode == q.PAGE_UP ? this.pageIncrement : 1)
                    },
                    _mouseWheeled: function(a) {
                        this.focused && (a.stopPropagation(), a.preventDefault(), this._bumpValue(0 > a.wheelDelta ? -1 : 1, !0))
                    },
                    startup: function() {
                        this._started || (p.forEach(this.getChildren(), function(a) {
                            this[a.container] !=
                                this.containerNode && this[a.container].appendChild(a.domNode)
                        }, this), this.inherited(arguments))
                    },
                    _typematicCallback: function(a, b, c) {
                        if (-1 == a) this._setValueAttr(this.value, !0);
                        else this[b == (this._descending ? this.incrementButton : this.decrementButton) ? "decrement" : "increment"](c)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.showButtons && (this.incrementButton.style.display = "", this.decrementButton.style.display = "");
                        var a = n('label[for\x3d"' + this.id + '"]');
                        a.length && (a[0].id || (a[0].id = this.id +
                            "_label"), this.focusNode.setAttribute("aria-labelledby", a[0].id));
                        this.focusNode.setAttribute("aria-valuemin", this.minimum);
                        this.focusNode.setAttribute("aria-valuemax", this.maximum)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.showButtons && this.own(b.addMouseListener(this.decrementButton, this, "_typematicCallback", 25, 500), b.addMouseListener(this.incrementButton, this, "_typematicCallback", 25, 500));
                        this.own(l(this.domNode, r.wheel, a.hitch(this, "_mouseWheeled")));
                        var d = e(x, {
                            widget: this
                        });
                        this._movable =
                            new c(this.sliderHandle, {
                                mover: d
                            });
                        this._layoutHackIE7()
                    },
                    destroy: function() {
                        this._movable.destroy();
                        this._inProgressAnim && "stopped" != this._inProgressAnim.status && this._inProgressAnim.stop(!0);
                        this.inherited(arguments)
                    }
                });
                f._Mover = x;
                return f
            })
        },
        "dijit/form/HorizontalRuleLabels": function() {
            define("dojo/_base/declare dojo/has dojo/number dojo/query dojo/_base/lang ./HorizontalRule".split(" "), function(p, e, f, h, d, m) {
                p = p("dijit.form.HorizontalRuleLabels", m, {
                    templateString: '\x3cdiv class\x3d"dijitRuleContainer dijitRuleContainerH dijitRuleLabelsContainer dijitRuleLabelsContainerH"\x3e\x3c/div\x3e',
                    labelStyle: "",
                    labels: [],
                    numericMargin: 0,
                    minimum: 0,
                    maximum: 1,
                    constraints: {
                        pattern: "#%"
                    },
                    _positionPrefix: '\x3cdiv class\x3d"dijitRuleLabelContainer dijitRuleLabelContainerH" style\x3d"left:',
                    _labelPrefix: '"\x3e\x3cdiv class\x3d"dijitRuleLabel dijitRuleLabelH"\x3e',
                    _suffix: "\x3c/div\x3e\x3c/div\x3e",
                    _calcPosition: function(d) {
                        return d
                    },
                    _genHTML: function(d, a) {
                        var e = this.labels[a];
                        return this._positionPrefix + this._calcPosition(d) + this._positionSuffix + this.labelStyle + this._genDirectionHTML(e) + this._labelPrefix +
                            e + this._suffix
                    },
                    _genDirectionHTML: function(d) {
                        return ""
                    },
                    getLabels: function() {
                        var d = this.labels;
                        !d.length && this.srcNodeRef && (d = h("\x3e li", this.srcNodeRef).map(function(a) {
                            return String(a.innerHTML)
                        }));
                        if (!d.length && 1 < this.count)
                            for (var d = [], a = this.minimum, e = (this.maximum - a) / (this.count - 1), c = 0; c < this.count; c++) d.push(c < this.numericMargin || c >= this.count - this.numericMargin ? "" : f.format(a, this.constraints)), a += e;
                        return d
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.labels = this.getLabels();
                        this.count = this.labels.length
                    }
                });
                e("dojo-bidi") && p.extend({
                    _setTextDirAttr: function(e) {
                        this.textDir != e && (this._set("textDir", e), h(".dijitRuleLabelContainer", this.domNode).forEach(d.hitch(this, function(a) {
                            a.style.direction = this.getTextDir(a.innerText || a.textContent || "")
                        })))
                    },
                    _genDirectionHTML: function(d) {
                        return this.textDir ? "direction:" + this.getTextDir(d) + ";" : ""
                    }
                });
                return p
            })
        },
        "dijit/form/HorizontalRule": function() {
            define(["dojo/_base/declare", "../_Widget", "../_TemplatedMixin"], function(p, e, f) {
                return p("dijit.form.HorizontalRule", [e, f], {
                    templateString: '\x3cdiv class\x3d"dijitRuleContainer dijitRuleContainerH"\x3e\x3c/div\x3e',
                    count: 3,
                    container: "containerNode",
                    ruleStyle: "",
                    _positionPrefix: '\x3cdiv class\x3d"dijitRuleMark dijitRuleMarkH" style\x3d"left:',
                    _positionSuffix: "%;",
                    _suffix: '"\x3e\x3c/div\x3e',
                    _genHTML: function(e) {
                        return this._positionPrefix + e + this._positionSuffix + this.ruleStyle + this._suffix
                    },
                    _isHorizontal: !0,
                    buildRendering: function() {
                        this.inherited(arguments);
                        var e;
                        if (1 == this.count) e = this._genHTML(50, 0);
                        else {
                            var d,
                                f = 100 / (this.count - 1);
                            if (!this._isHorizontal || this.isLeftToRight()) {
                                e = this._genHTML(0, 0);
                                for (d = 1; d < this.count - 1; d++) e += this._genHTML(f * d, d);
                                e += this._genHTML(100, this.count - 1)
                            } else {
                                e = this._genHTML(100, 0);
                                for (d = 1; d < this.count - 1; d++) e += this._genHTML(100 - f * d, d);
                                e += this._genHTML(0, this.count - 1)
                            }
                        }
                        this.domNode.innerHTML = e
                    }
                })
            })
        },
        "jimu/dijit/ServiceURLInput": function() {
            define("dojo/_base/declare dojo/_base/html dojo/_base/lang dojo/on dojo/Deferred dojo/aspect esri/request dijit/form/ValidationTextBox".split(" "),
                function(p, e, f, h, d, m, q, a) {
                    return p([a], {
                        _validatingNode: null,
                        _validNode: null,
                        _inValidNode: null,
                        _fetchHandle: null,
                        _fetchErrHandle: null,
                        declaredClass: "jimu.dijit.ServiceURLInput",
                        verify: !0,
                        _status: null,
                        postCreate: function() {
                            this.inherited(arguments);
                            this._validatingNode = e.create("div", {
                                "class": "jimu-service-validating"
                            }, this.domNode);
                            this._validNode = e.create("div", {
                                "class": "jimu-service-valid"
                            }, this.domNode);
                            this._inValidNode = e.create("div", {
                                    "class": "jimu-service-invalid jimu-icon jimu-icon-error"
                                },
                                this.domNode);
                            e.addClass(this.domNode, "jimu-serviceurl-input");
                            this.verify && this.own(h(this, "Change", f.hitch(this, "_onServiceUrlChange")))
                        },
                        setProcessFunction: function(a, c) {
                            this._fetchHandle && this._fetchErrHandle && this._removeProcessFunction();
                            "function" === typeof a && (this._fetchHandle = m.after(this, "onFetch", a), this.own(this._fetchHandle));
                            "function" === typeof c && (this._fetchErrHandle = m.after(this, "onFetchError", c), this.own(this._fetchErrHandle))
                        },
                        _removeProcessFunction: function() {
                            this._fetchHandle &&
                                this._fetchHandle.remove && (this._fetchHandle.remove(), this._fetchHandle = null);
                            this._fetchErrHandle && this._fetchErrHandle.remove && (this._fetchErrHandle.remove(), this._fetchErrHandle = null)
                        },
                        onFetch: function(a) {
                            return a
                        },
                        onFetchError: function(a) {},
                        getStatus: function() {
                            return this._status
                        },
                        _onServiceUrlChange: function(a) {
                            var c = new d;
                            c.then(f.hitch(this, function() {
                                this._valid()
                            }), f.hitch(this, function() {
                                this._inValid();
                                this.onFetchError()
                            }));
                            this._validating();
                            a ? q({
                                url: f.trim(a || ""),
                                handleAs: "json",
                                content: {
                                    f: "json"
                                },
                                callbackParamName: "callback"
                            }).then(f.hitch(this, function(a) {
                                this.onFetch({
                                    url: this.getValue(),
                                    data: a
                                }) ? c.resolve("success") : c.reject("error")
                            }), f.hitch(this, function(a) {
                                c.reject(a)
                            })) : c.reject("error")
                        },
                        _validating: function() {
                            this._status = "validating";
                            e.removeClass(this.domNode, "jimu-serviceurl-input-invalid");
                            e.removeClass(this.domNode, "jimu-serviceurl-input-valid");
                            e.addClass(this.domNode, "jimu-serviceurl-input-validating")
                        },
                        _valid: function() {
                            this._status = "valid";
                            e.removeClass(this.domNode, "jimu-serviceurl-input-invalid");
                            e.removeClass(this.domNode, "jimu-serviceurl-input-validating");
                            e.addClass(this.domNode, "jimu-serviceurl-input-valid")
                        },
                        _inValid: function() {
                            this._status = "invalid";
                            e.removeClass(this.domNode, "jimu-serviceurl-input-validating");
                            e.removeClass(this.domNode, "jimu-serviceurl-input-valid");
                            e.addClass(this.domNode, "jimu-serviceurl-input-invalid")
                        }
                    })
                })
        },
        "jimu/dijit/SimpleTable": function() {
            define("dojo/_base/declare dijit/_WidgetBase dijit/_TemplatedMixin dojo/Evented dojo/_base/lang dojo/_base/html dojo/_base/array dojo/on dojo/query dijit/registry jimu/utils jimu/dijit/CheckBox".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n) {
                    return p([e, f, h], {
                        baseClass: "jimu-simple-table",
                        declaredClass: "jimu.dijit.SimpleTable",
                        templateString: '\x3cdiv\x3e\x3cdiv class\x3d"head-section" data-dojo-attach-point\x3d"headDiv"\x3e\x3cdiv class\x3d"table-div" data-dojo-attach-point\x3d"headTableDiv"\x3e\x3ctable class\x3d"table" cellspacing\x3d"0" onselectstart\x3d"return false;" data-dojo-attach-point\x3d"tableInHeadSection"\x3e\x3ccolgroup data-dojo-attach-point\x3d"headColgroup"\x3e\x3c/colgroup\x3e\x3cthead class\x3d"simple-table-thead simple-table-title"  data-dojo-attach-point\x3d"thead"\x3e\x3c/thead\x3e\x3c/table\x3e\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d"body-section" data-dojo-attach-point\x3d"bodyDiv"\x3e\x3cdiv class\x3d"table-div" data-dojo-attach-point\x3d"bodyTableDiv"\x3e\x3ctable class\x3d"table" cellspacing\x3d"0" onselectstart\x3d"return false;"data-dojo-attach-point\x3d"tableInBodySection"\x3e\x3ccolgroup data-dojo-attach-point\x3d"bodyColgroup"\x3e\x3c/colgroup\x3e\x3ctbody class\x3d"simple-table-tbody" data-dojo-attach-point\x3d"tbody"\x3e\x3c/tbody\x3e\x3c/table\x3e\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e',
                        _name: null,
                        _rowIndex: 0,
                        _rowHeight: 30,
                        _headHeight: 36,
                        REPEATING_ERROR: "REPEATING_ERROR",
                        _classSimpleTableRow: "simple-table-row",
                        _classFirstSimpleTableRow: "first-simple-table-row",
                        _classLastSimpleTableRow: "last-simple-table-row",
                        _classJimuStateDisabled: "jimu-state-disabled",
                        _classRowUpDiv: "row-up-div",
                        _classRowDownDiv: "row-down-div",
                        _classVerticalScroll: "vertical-scroll",
                        autoHeight: !0,
                        selectable: !1,
                        fields: null,
                        postMixInProperties: function() {
                            this.nls = window.jimuNls.simpleTable
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this._initSelf()
                        },
                        startup: function() {
                            this.inherited(arguments);
                            this.updateUI()
                        },
                        _initSelf: function() {
                            this.own(s.bindClickAndDblclickEvents(this.tableInBodySection, d.hitch(this, function(a) {
                                if (a = s.getAncestorDom(a.target || a.srcElement, function(a) {
                                        return m.hasClass(a, "simple-table-row") && m.hasClass(a, "not-empty")
                                    }, this.tbody)) this.selectRow(a), this._onClickRow(a)
                            }), d.hitch(this, function(a) {
                                if (a = s.getAncestorDom(a.target || a.srcElement, function(a) {
                                        return m.hasClass(a, "simple-table-row") && m.hasClass(a,
                                            "not-empty")
                                    }, this.tbody)) this.selectRow(a), this._onDblClickRow(a)
                            })));
                            var c = Math.random().toString();
                            this._name = "jimu_table_" + c.slice(2, c.length);
                            if (this.fields && 0 < this.fields.length) {
                                var e = m.create("tr", {}, this.thead);
                                q.forEach(this.fields, d.hitch(this, function(c) {
                                    var f = "auto";
                                    "actions" === c.type && (c.name = "actions");
                                    c.hidden ? f = 1 : void 0 !== c.width && null !== c.width ? f = c.width : "actions" === c.type && !c.name && (c.width = this._calculateActionsWidth(c) + 20, f = c.width);
                                    m.create("col", {
                                        width: f
                                    }, this.headColgroup);
                                    m.create("col", {
                                        width: f
                                    }, this.bodyColgroup);
                                    f = m.create("th", {
                                        innerHTML: c.title,
                                        title: c.title
                                    }, e);
                                    if ("checkbox" === c.type) {
                                        f.innerHTML = "";
                                        var b = new n({
                                                label: c.title
                                            }),
                                            r = k(".checkbox", b.domNode)[0];
                                        r && (r.style.marginTop = "10px");
                                        this.own(a(b.domNode, "click", d.hitch(this, function() {
                                            b.getValue() ? this._checkAllTdCheckBoxes(c.name) : this._uncheckAllTdCheckBoxes(c.name)
                                        })));
                                        b.placeAt(f)
                                    }
                                    m.addClass(f, "simple-table-field");
                                    c.hidden && m.addClass(f, "hidden-column");
                                    c["class"] && m.addClass(f, c["class"]);
                                    m.addClass(f,
                                        c.name)
                                }))
                            } else this.fields = null
                        },
                        _getThCheckBox: function(a) {
                            var d = null;
                            a = k(".simple-table-field." + a + " .jimu-checkbox", this.thead)[0];
                            return d = c.byNode(a)
                        },
                        _getAllEnabledTdCheckBoxes: function(a) {
                            a = k(".simple-table-cell." + a + " .jimu-checkbox", this.tbody);
                            a = q.map(a, function(a) {
                                return c.byNode(a)
                            });
                            return a = q.filter(a, function(a) {
                                return a.getStatus()
                            })
                        },
                        _checkAllTdCheckBoxes: function(a) {
                            a = this._getAllEnabledTdCheckBoxes(a);
                            q.forEach(a, function(a) {
                                a.getValue() || a.setValue(!0)
                            })
                        },
                        _uncheckAllTdCheckBoxes: function(a) {
                            a =
                                this._getAllEnabledTdCheckBoxes(a);
                            q.forEach(a, function(a) {
                                a.getValue() && a.setValue(!1)
                            })
                        },
                        _delaySyncThCheckBoxStatusWithAllTdCheckBoxes: function(a) {
                            setTimeout(d.hitch(this, function() {
                                this._syncThCheckBoxStatusWithAllTdCheckBoxes(a)
                            }), 100)
                        },
                        _syncThCheckBoxStatusWithAllTdCheckBoxes: function(a) {
                            var c = this._getAllEnabledTdCheckBoxes(a),
                                c = q.filter(c, d.hitch(this, function(a) {
                                    return a.getStatus()
                                }));
                            0 !== c.length && (a = this._getThCheckBox(a), q.every(c, function(a) {
                                    return a.getValue()
                                }) ? a.getValue() || a.setValue(!0) :
                                a.getValue() && a.setValue(!1))
                        },
                        clear: function() {
                            var a = this._getNotEmptyRows(),
                                c = q.map(a, d.hitch(this, function(a) {
                                    return this.getRowData(a)
                                }));
                            m.empty(this.tbody);
                            q.forEach(a, d.hitch(this, function(a, d) {
                                this._onDeleteRow(a, c[d])
                            }));
                            this.updateUI();
                            this._rowIndex = 0;
                            this._onClearRows(a)
                        },
                        addRows: function(a) {
                            var c = [];
                            this.fields && (a && 0 < a.length) && q.forEach(a, d.hitch(this, function(a) {
                                c.push(this.addRow(a, -1, !0))
                            }));
                            this.updateUI();
                            return c
                        },
                        addRow: function(a, c, e) {
                            this._rowIndex++;
                            var n = {
                                success: !1,
                                tr: null,
                                errorCode: null,
                                errorMessage: null,
                                repeatFields: null
                            };
                            if (!this.fields || "object" !== typeof a) return n;
                            var b = q.filter(this.fields, d.hitch(this, function(a) {
                                    return "text" === a.type && !0 === a.unique
                                })),
                                b = q.filter(b, d.hitch(this, function(b) {
                                    return 0 < this.getRowDataArrayByFieldValue(b.name, a[b.name]).length
                                }));
                            if (0 < b.length) return n.errorCode = this.REPEATING_ERROR, n.errorMessage = "repeating data", n.repeatFields = b, n;
                            var f = m.create("tr", {
                                "class": "simple-table-row not-empty"
                            }, this.tbody);
                            m.setAttr(f, "rowId", "row" + this._rowIndex);
                            q.forEach(this.fields, d.hitch(this, function(b) {
                                var c = a[b.name],
                                    d = b.type,
                                    e = null;
                                "actions" === d ? this._createActionsTd(f, b) : ("text" === d ? e = this._createTextTd(f, b, c) : "radio" === d ? e = this._createRadioTd(f, b, c) : "checkbox" === d ? e = this._createCheckboxTd(f, b, c) : "empty" === d ? e = this._createEmptyTd(f, b) : "extension" === d && (e = this._createExtensionTd(f, b, c)), b.hidden && m.addClass(e, "hidden-column"))
                            }));
                            e || (this.updateUI(), e = this.getRows(), "number" === typeof c && (0 <= c && c < e.length) && m.place(f, e[c], "before"));
                            n.success = !0;
                            n.tr =
                                f;
                            n.errorMessage = null;
                            this._onAddRow(f);
                            return n
                        },
                        deleteRow: function(a) {
                            if (a) {
                                var c = this.getRowData(a);
                                m.destroy(a);
                                this.updateUI();
                                this._onDeleteRow(a, c)
                            }
                        },
                        selectRow: function(a) {
                            this.selectable && (k(".simple-table-row", this.tbody).removeClass("jimu-state-active"), m.addClass(a, "jimu-state-active"), this._onSelectRow(a))
                        },
                        updateUI: function() {
                            this._updateRowClassName();
                            this._updateHeight();
                            m.removeClass(this.domNode, this._classVerticalScroll);
                            0 < this.bodyDiv.clientHeight && this.bodyDiv.clientHeight < this.bodyDiv.scrollHeight &&
                                m.addClass(this.domNode, this._classVerticalScroll);
                            q.forEach(this.fields, d.hitch(this, function(a) {
                                "checkbox" === a.type && this._delaySyncThCheckBoxStatusWithAllTdCheckBoxes(a.name)
                            }))
                        },
                        _updateHeadTableWidth: function() {
                            if (this.domNode) {
                                var a = m.getContentBox(this.tableInBodySection).w,
                                    c = "100%";
                                "number" === typeof a && 0 < a && (c = a + "px");
                                m.setStyle(this.tableInHeadSection, "width", c)
                            }
                        },
                        _updateHeight: function() {
                            if (this.autoHeight) {
                                var a = this.getRows();
                                m.setStyle(this.domNode, "height", this._headHeight + this._rowHeight *
                                    (0 < a.length ? a.length : 1) + 1 + "px")
                            }
                        },
                        _updateRowClassName: function() {
                            var a = k("." + this._classFirstSimpleTableRow, this.tbody)[0];
                            a && (a = k("." + this._classRowUpDiv, a)[0]) && m.removeClass(a, this._classJimuStateDisabled);
                            if (a = k("." + this._classLastSimpleTableRow, this.tbody)[0])(a = k("." + this._classRowDownDiv, a)[0]) && m.removeClass(a, this._classJimuStateDisabled);
                            a = k("." + this._classSimpleTableRow, this.tbody);
                            a.removeClass("odd");
                            a.removeClass("even");
                            a.removeClass(this._classFirstSimpleTableRow);
                            a.removeClass(this._classLastSimpleTableRow);
                            q.forEach(a, d.hitch(this, function(a, c) {
                                0 === c % 2 ? m.addClass(a, "odd") : m.addClass(a, "even")
                            }));
                            if (0 < a.length) {
                                var c = a[0];
                                m.addClass(c, this._classFirstSimpleTableRow);
                                (c = k("." + this._classRowUpDiv, c)[0]) && m.addClass(c, this._classJimuStateDisabled);
                                a = a[a.length - 1];
                                m.addClass(a, this._classLastSimpleTableRow);
                                (a = k("." + this._classRowDownDiv, a)[0]) && m.addClass(a, this._classJimuStateDisabled)
                            }
                        },
                        _createTextTd: function(a, c, d) {
                            var e = null;
                            return e = c.editable ? this._createEditableTextTd(a, c, d) : this._createNormalTextTd(a,
                                c, d)
                        },
                        _createNormalTextTd: function(a, c, d) {
                            var e = m.toDom('\x3ctd class\x3d"simple-table-cell normal-text-td"\x3e\x3cdiv class\x3d"normal-text-div"\x3e\x3c/div\x3e\x3c/td\x3e');
                            m.addClass(e, c.name);
                            var b = k("div", e)[0];
                            b.innerHTML = d || "";
                            b.title = d || "";
                            c["class"] && m.addClass(e, c["class"]);
                            m.place(e, a);
                            return e
                        },
                        _createEditableTextTd: function(c, e, g) {
                            var n = m.toDom('\x3ctd class\x3d"editable-text-td ' + e.name + '"\x3e\x3cdiv class\x3d"editable-div"\x3e\x3c/div\x3e\x3cinput class\x3d"editable-input" type\x3d"text" style\x3d"display:none;" /\x3e\x3c/td\x3e');
                            m.addClass(n, "simple-table-cell");
                            m.place(n, c);
                            e["class"] && m.addClass(n, e["class"]);
                            var b = k("div", n)[0],
                                f = k("input", n)[0];
                            b.innerHTML = g || "";
                            "" !== b.innerHTML && (b.title = b.innerText || b.innerHTML);
                            f.value = b.innerHTML;
                            this.own(a(b, "dblclick", d.hitch(this, function(a) {
                                a.stopPropagation();
                                f.value = b.innerText || b.innerHTML;
                                m.setStyle(b, "display", "none");
                                m.setStyle(f, "display", "inline");
                                f.focus()
                            })));
                            this.own(a(f, "blur", d.hitch(this, function() {
                                f.value = d.trim(f.value);
                                var a = b.innerText || b.innerHTML,
                                    g = f.value;
                                "" !== g ? e.unique ? 0 < this.getRowDataArrayByFieldValue(e.name, g, c).length ? f.value = a : b.innerHTML = g : b.innerHTML = g : f.value = a;
                                m.setStyle(f, "display", "none");
                                m.setStyle(b, "display", "block")
                            })));
                            return n
                        },
                        _createRadioTd: function(a, c, d) {
                            var e = m.toDom('\x3ctd class\x3d"radio-td ' + c.name + '"\x3e\x3cinput type\x3d"radio" /\x3e\x3c/td\x3e');
                            m.addClass(e, "simple-table-cell");
                            m.place(e, a);
                            c["class"] && m.addClass(e, c["class"]);
                            a = k("input", e)[0];
                            a.name = c.radio && "row" === c.radio ? this._name + this._rowIndex : this._name + c.name;
                            a.checked = !0 === d;
                            return e
                        },
                        _createCheckboxTd: function(c, e, g) {
                            var f = m.toDom('\x3ctd class\x3d"checkbox-td ' + e.name + '"\x3e\x3c/td\x3e');
                            m.addClass(f, "simple-table-cell");
                            m.place(f, c);
                            e["class"] && m.addClass(f, e["class"]);
                            var b = new n({
                                onChange: d.hitch(this, function() {
                                    this._delaySyncThCheckBoxStatusWithAllTdCheckBoxes(e.name);
                                    "function" === typeof e.onChange && setTimeout(d.hitch(this, function() {
                                        e.onChange(c, b)
                                    }), 200)
                                })
                            });
                            this.own(a(b, "status-change", d.hitch(this, function() {
                                this._delaySyncThCheckBoxStatusWithAllTdCheckBoxes(e.name)
                            })));
                            this._setValueForCheckBox(b, g);
                            b.placeAt(f);
                            return f
                        },
                        _createActionsTd: function(c, e) {
                            var g = m.toDom('\x3ctd class\x3d"actions-td"\x3e\x3cdiv class\x3d"action-item-parent jimu-float-leading"\x3e\x3c/div\x3e\x3c/td\x3e');
                            m.addClass(g, "simple-table-cell");
                            var n = k(".action-item-parent", g)[0];
                            m.place(g, c);
                            e["class"] && m.addClass(g, e["class"]);
                            q.forEach(e.actions, d.hitch(this, function(b) {
                                "up" === b ? (b = m.create("div", {
                                        "class": "action-item jimu-float-leading row-up-div jimu-icon jimu-icon-up"
                                    }, n), b.title = this.nls.moveUp,
                                    this.own(a(b, "click", d.hitch(this, function(a) {
                                        a.stopPropagation();
                                        if (this.onBeforeRowUp(c)) {
                                            a = k(".simple-table-row", this.tbody);
                                            var b = q.indexOf(a, c);
                                            if (0 < b && (a = a[b - 1])) m.place(c, a, "before"), this.updateUI(), this.emit("row-up", c)
                                        }
                                    })))) : "down" === b ? (b = m.create("div", {
                                    "class": "action-item jimu-float-leading row-down-div jimu-icon jimu-icon-down"
                                }, n), b.title = this.nls.moveDown, this.own(a(b, "click", d.hitch(this, function(a) {
                                    a.stopPropagation();
                                    if (this.onBeforeRowDown(c)) {
                                        a = k(".simple-table-row", this.tbody);
                                        var b = q.indexOf(a, c);
                                        if (b < a.length - 1 && (a = a[b + 1])) m.place(c, a, "after"), this.updateUI(), this.emit("row-down", c)
                                    }
                                })))) : "edit" === b ? (b = m.create("div", {
                                    "class": "action-item jimu-float-leading row-edit-div jimu-icon jimu-icon-edit"
                                }, n), b.title = this.nls.edit, this.own(a(b, "click", d.hitch(this, function(a) {
                                    a.stopPropagation();
                                    this.onBeforeRowEdit(c) && this._onActionsEdit(c)
                                })))) : "delete" === b && (b = m.create("div", {
                                        "class": "action-item jimu-float-leading row-delete-div jimu-icon jimu-icon-delete"
                                    }, n), b.title = this.nls.deleteRow,
                                    this.own(a(b, "click", d.hitch(this, function(a) {
                                        a.stopPropagation();
                                        this.onBeforeRowDelete(c) && this.deleteRow(c)
                                    }))))
                            }));
                            var b = this._calculateActionsWidth(e) + "px";
                            m.setStyle(n, "width", b);
                            return g
                        },
                        _calculateActionsWidth: function(a) {
                            return 20 * q.map(a.actions, function(a) {
                                return "up" === a || "down" === a || "edit" === a || "delete" === a
                            }).length
                        },
                        _createEmptyTd: function(a, c) {
                            var d = m.create("td", {
                                "class": c.name
                            }, a);
                            m.addClass(d, "simple-table-cell");
                            m.addClass(d, "empty-text-td");
                            c["class"] && m.addClass(d, c["class"]);
                            return d
                        },
                        _createExtensionTd: function(a, c, d) {
                            a = m.create("td", {
                                "class": c.name
                            }, a);
                            m.addClass(a, "simple-table-cell");
                            m.addClass(a, "extension-td");
                            c["class"] && m.addClass(a, c["class"]);
                            c.create && "function" === typeof c.create && c.create(a);
                            c.setValue && "function" === typeof c.setValue && c.setValue(a, d);
                            return a
                        },
                        editRow: function(a, c) {
                            var e = {
                                success: !1,
                                tr: null,
                                errorCode: null,
                                errorMessage: null,
                                repeatFields: null
                            };
                            if (!this.fields || "object" !== typeof c || !m.isDescendant(a, this.tbody)) return e;
                            var n = d.mixin([], this.fields),
                                n = q.filter(n, d.hitch(this, function(a) {
                                    return "text" === a.type && !0 === a.unique
                                })),
                                n = q.filter(n, d.hitch(this, function(b) {
                                    return 0 < this.getRowDataArrayByFieldValue(b.name, c[b.name], a).length
                                }));
                            if (0 < n.length) return e.errorCode = this.REPEATING_ERROR, e.errorMessage = "repeating data", e.repeatFields = n, e;
                            var b = k(".simple-table-cell", a);
                            q.forEach(this.fields, d.hitch(this, function(a, d) {
                                if (c.hasOwnProperty(a.name)) {
                                    var e = b[d],
                                        g = c[a.name],
                                        n = a.type;
                                    "text" === n ? a.editable ? this._editEditableText(e, a, g) : this._editNormalText(e,
                                        a, g) : "radio" === n ? this._editRadio(e, a, g) : "checkbox" === n ? this._editCheckbox(e, a, g) : "extension" === n && this._editExtension(e, a, g)
                                }
                            }));
                            e.success = !0;
                            e.tr = a;
                            e.errorMessage = null;
                            this._onEditRow(a);
                            return e
                        },
                        _editNormalText: function(a, c, d) {
                            a = k("div", a)[0];
                            a.innerHTML = d || "";
                            a.title = a.innerHTML
                        },
                        _editEditableText: function(a, c, d) {
                            c = k("div", a)[0];
                            c.innerHTML = d || "";
                            k("input", a)[0].value = c.innerHTML
                        },
                        _editRadio: function(a, c, d) {
                            k("input", a)[0].checked = !0 === d
                        },
                        _editCheckbox: function(a, d, e) {
                            a = k(".jimu-checkbox", a)[0];
                            a = c.byNode(a);
                            this._setValueForCheckBox(a, e)
                        },
                        _setValueForCheckBox: function(a, c) {
                            null === c ? a.setStatus(!1) : (a.setStatus(!0), c !== a.getValue() && a.setValue(c))
                        },
                        _editExtension: function(a, c, d) {
                            c.setValue && "function" === typeof c.setValue && c.setValue(a, d)
                        },
                        _getAllRows: function() {
                            return k(".simple-table-row", this.tbody)
                        },
                        _getNotEmptyRows: function() {
                            var a = this._getAllRows();
                            return q.filter(a, d.hitch(this, function(a) {
                                return !m.hasClass(a, "empty")
                            }))
                        },
                        _getEmptyRows: function() {
                            var a = this._getAllRows();
                            return q.filter(a,
                                d.hitch(this, function(a) {
                                    return m.hasClass(a, "empty")
                                }))
                        },
                        getRows: function() {
                            return this._getNotEmptyRows()
                        },
                        getSelectedRow: function() {
                            var a = null,
                                c = k(".simple-table-row", this.tbody),
                                c = q.filter(c, d.hitch(this, function(a) {
                                    return !m.hasClass(a, "empty") && m.hasClass(a, "jimu-state-active")
                                }));
                            0 < c.length && (a = c[0]);
                            return a
                        },
                        getSelectedRowData: function() {
                            var a = null,
                                c = this.getSelectedRow();
                            c && (a = this._getRowDataByTr(c));
                            return a
                        },
                        getData: function(a) {
                            var c = this._getNotEmptyRows();
                            a && (c = q.filter(c, d.hitch(this,
                                function(c) {
                                    return c !== a
                                })));
                            return q.map(c, d.hitch(this, function(a) {
                                return this._getRowDataByTr(a)
                            }))
                        },
                        getRowData: function(a) {
                            return this._getRowDataByTr(a)
                        },
                        _getRowDataByTr: function(a) {
                            var e = null;
                            if (a) e = {};
                            else return null;
                            q.forEach(this.fields, d.hitch(this, function(d) {
                                var n = d.type;
                                if ("actions" !== n) {
                                    var b = d.name;
                                    e[b] = null;
                                    var f = k(".simple-table-cell." + b, a)[0];
                                    f && ("text" === n ? (d = k("div", f)[0], e[b] = d.innerText || d.innerHTML) : "radio" === n ? (d = k("input", f)[0], e[b] = d.checked) : "checkbox" === n ? (d = k(".jimu-checkbox",
                                        f)[0], d = c.byNode(d), d.getStatus() ? e[b] = d.getValue() : e[b] = null) : "extension" === n && d.getValue && "function" === typeof d.getValue && (e[b] = d.getValue(f, d)))
                                }
                            }));
                            return e
                        },
                        getRowDataArrayByFieldValue: function(a, c, e) {
                            var n = [];
                            if (!this.fields || !q.some(this.fields, d.hitch(this, function(b) {
                                    return b.name === a
                                }))) return [];
                            e = this.getData(e);
                            return n = q.filter(e, d.hitch(this, function(b) {
                                return b[a] == c
                            }))
                        },
                        moveToTop: function(a) {
                            a && a.parentNode === this.tbody && m.place(a, this.tbody, "first")
                        },
                        _onClickRow: function(a) {
                            this.emit("row-click",
                                a)
                        },
                        _onDblClickRow: function(a) {
                            this.emit("row-dblclick", a)
                        },
                        _onSelectRow: function(a) {
                            this.emit("row-select", a)
                        },
                        _onAddRow: function(a) {
                            this.emit("row-add", a)
                        },
                        _onEditRow: function(a) {
                            this.emit("row-edit", a)
                        },
                        _onDeleteRow: function(a, c) {
                            this.emit("row-delete", a, c)
                        },
                        _onEnterRow: function(a) {
                            this.emit("row-enter", a)
                        },
                        _onClearRows: function(a) {
                            this.emit("rows-clear", a)
                        },
                        _onActionsEdit: function(a) {
                            this.emit("actions-edit", a)
                        },
                        onBeforeRowUp: function(a) {
                            return !0
                        },
                        onBeforeRowDown: function(a) {
                            return !0
                        },
                        onBeforeRowEdit: function(a) {
                            return !0
                        },
                        onBeforeRowDelete: function(a) {
                            return !0
                        }
                    })
                })
        },
        "jimu/dijit/TabContainer": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/on dojo/Evented dijit/_WidgetBase dijit/_TemplatedMixin ./ViewStack ../utils".split(" "), function(p, e, f, h, d, m, q, a, k, c) {
                return p([q, a, m], {
                    baseClass: "jimu-tab",
                    declaredClass: "jimu.dijit.TabContainer",
                    templateString: '\x3cdiv\x3e\x3cdiv class\x3d"control" data-dojo-attach-point\x3d"controlNode"\x3e\x3c/div\x3e\x3cdiv class\x3d"jimu-container" data-dojo-attach-point\x3d"containerNode"\x3e\x3c/div\x3e\x3c/div\x3e',
                    postCreate: function() {
                        this.inherited(arguments);
                        if (0 !== this.tabs.length) {
                            this.controlNodes = [];
                            this.viewStack = new k(null, this.containerNode);
                            var a = 100 * (1 / this.tabs.length);
                            this.isNested && h.addClass(this.domNode, "nested");
                            f.forEach(this.tabs, function(c) {
                                this._createTab(c, a)
                            }, this)
                        }
                    },
                    startup: function() {
                        this.selected ? this.selectTab(this.selected) : 0 < this.tabs.length && this.selectTab(this.tabs[0].title);
                        c.setVerticalCenter(this.domNode)
                    },
                    _createTab: function(a, c) {
                        var f;
                        f = h.create("div", {
                            innerHTML: a.title,
                            "class": "tab jimu-vcenter-text",
                            style: {
                                width: this.isNested ? "auto" : c + "%"
                            },
                            label: a.title
                        }, this.controlNode);
                        this.viewStack.viewType = a.content.domNode ? "dijit" : "dom";
                        a.content.label = a.title;
                        this.viewStack.addView(a.content);
                        this.own(d(f, "click", e.hitch(this, this.onSelect, a.title)));
                        f.label = a.title;
                        this.controlNodes.push(f)
                    },
                    onSelect: function(a) {
                        this.selectTab(a)
                    },
                    selectTab: function(a) {
                        this._selectControl(a);
                        this.viewStack.switchView(a);
                        this.emit("tabChanged", a)
                    },
                    _selectControl: function(a) {
                        f.forEach(this.controlNodes,
                            function(c) {
                                h.removeClass(c, "jimu-state-selected");
                                c.label === a && h.addClass(c, "jimu-state-selected")
                            })
                    }
                })
            })
        },
        "jimu/dijit/ViewStack": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/_base/html", "dojo/_base/array", "dijit/_WidgetBase"], function(p, e, f, h, d) {
                return p(d, {
                    baseClass: "jimu-viewstack",
                    declaredClass: "jimu.dijit.ViewStack",
                    _currentView: null,
                    postCreate: function() {
                        this.inherited(arguments);
                        this.views || (this.views = []);
                        h.forEach(this.views, e.hitch(this, function(d) {
                            1 === d.nodeType ? (f.place(d,
                                this.domNode), f.addClass(d, "view"), f.setStyle(d, "display", "none")) : d.domNode && (f.place(d.domNode, this.domNode), f.addClass(d.domNode, "view"), f.setStyle(d.domNode, "display", "none"))
                        }))
                    },
                    startup: function() {
                        this.inherited(arguments);
                        0 < this.views.length && this.switchView(0)
                    },
                    getSelectedView: function() {
                        return this._currentView
                    },
                    getSelectedLabel: function() {
                        var d = "",
                            e = this.getSelectedView();
                        e && (d = e.label);
                        return d
                    },
                    getViewByLabel: function(d) {
                        for (var e = 0; e < this.views.length; e++)
                            if (d === this.views[e].label) return this.views[e];
                        return null
                    },
                    addView: function(d) {
                        this.views.push(d);
                        1 === d.nodeType ? (f.place(d, this.domNode), f.addClass(d, "view")) : d.domNode && (f.place(d.domNode, this.domNode), f.addClass(d.domNode, "view"))
                    },
                    removeView: function(d) {
                        var e = this.views.length;
                        this.views = h.filter(this.views, function(a) {
                            return d !== a
                        });
                        e !== this.views.length && (1 === d.nodeType ? f.destroy(d) : d.domNode && d.destroyRecursive())
                    },
                    switchView: function(d) {
                        var h, a;
                        h = "number" === typeof d ? this.views[d] : "string" === typeof d ? this.getViewByLabel(d) : d;
                        this.views.forEach(e.hitch(this,
                            function(d) {
                                d && (1 === d.nodeType ? a = d : d.domNode && (a = d.domNode), d === h ? (f.setStyle(a, "display", "block"), d.domNode && !d._started && (d.startup(), d._started = !0)) : f.setStyle(a, "display", "none"))
                            }));
                        this._currentView = h;
                        this.onViewSwitch(h)
                    },
                    onViewSwitch: function() {}
                })
            })
        },
        "jimu/dijit/TabContainer3": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/html dojo/on dojo/Evented dojo/query dijit/_WidgetBase dijit/_TemplatedMixin dojo/text!./templates/TabContainer3.html jimu/dijit/ViewStack".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s) {
                    return p([a, k, m], {
                        templateString: c,
                        selected: "",
                        tabs: null,
                        average: !1,
                        baseClass: "jimu-tab3",
                        declaredClass: "jimu.dijit.TabContainer3",
                        _currentIndex: -1,
                        postCreate: function() {
                            this.inherited(arguments);
                            this._initSelf();
                            this.selected ? this.selectTab(this.selected) : 0 < this.tabs.length && this.selectTab(this.tabs[0].title)
                        },
                        selectTab: function(a) {
                            var c = q("td", this.tabTr);
                            f.forEach(c, e.hitch(this, function(c, d) {
                                h.removeClass(c, "jimu-state-active");
                                c.label === a && (h.addClass(c, "jimu-state-active"),
                                    this._currentIndex = d)
                            }));
                            this.controlNode.removeChild(this.controlTable);
                            h.place(this.controlTable, this.controlNode);
                            this.viewStack.switchView(a);
                            this.emit("tabChanged", a)
                        },
                        addTab: function(a) {
                            if (!this.average) {
                                var c = q("td:last-child", this.tabTr);
                                0 < c.length && h.destroy(c[0])
                            }
                            0 < f.filter(this.tabs, function(c) {
                                return c.title === a.title
                            }).length ? console.error("tab title conflict: " + a.title) : (this.tabs.push(a), this._createTab(a), this.average || (c = h.toDom('\x3ctd nowrap class\x3d"tab-item-td" style\x3d"border-bottom:1px solid #ccc;"\x3e\x3cdiv class\x3d"tab-item-div"\x3e\x3c/div\x3e\x3c/td\x3e'),
                                h.place(c, this.tabTr)))
                        },
                        removeTab: function(a) {
                            var c = -1;
                            if (f.some(this.tabs, function(b, d) {
                                    if (b.title === a) return c = d, !0
                                })) {
                                var d = this.tabs.splice(c, 1)[0],
                                    e = q("td", this.tabTr),
                                    k;
                                f.some(e, function(b) {
                                    if (b.label === a) return k = b, !0
                                }) && h.destroy(k);
                                this.viewStack.removeView(d.content)
                            }
                        },
                        showShelter: function() {
                            h.setStyle(this.shelter, "display", "block")
                        },
                        hideShelter: function() {
                            h.setStyle(this.shelter, "display", "none")
                        },
                        getSelectedIndex: function() {
                            return this._currentIndex
                        },
                        getSelectedTitle: function() {
                            return this.viewStack.getSelectedLabel()
                        },
                        _initSelf: function() {
                            this.viewStack = new s(null, this.containerNode);
                            f.forEach(this.tabs, function(a) {
                                this._createTab(a)
                            }, this);
                            if (this.average) this.controlTable.style.tableLayout = "fixed";
                            else {
                                var a = h.toDom('\x3ctd nowrap class\x3d"tab-item-td" style\x3d"border-bottom:1px solid #ccc;"\x3e\x3cdiv class\x3d"tab-item-div"\x3e\x3c/div\x3e\x3c/td\x3e');
                                h.place(a, this.tabTr)
                            }
                        },
                        startup: function() {
                            this.inherited(arguments);
                            this._started = !0
                        },
                        _createTab: function(a) {
                            var c = h.toDom('\x3ctd nowrap class\x3d"tab-item-td"\x3e\x3cdiv class\x3d"tab-item-div"\x3e\x3c/div\x3e\x3c/td\x3e');
                            c.label = a.title || "";
                            h.place(c, this.tabTr);
                            var l = q(".tab-item-div", c)[0];
                            l.innerHTML = c.label;
                            l.label = c.label;
                            a.content.label = c.label;
                            this.viewStack.addView(a.content);
                            this.own(d(c, "click", e.hitch(this, this._onSelect, a.title)))
                        },
                        _onSelect: function(a) {
                            this.selectTab(a)
                        }
                    })
                })
        },
        "jimu/dijit/TileLayoutContainer": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/_base/html", "dijit/_WidgetBase"], function(p, e, f, h) {
                return p([h], {
                    baseClass: "jimu-tile-container",
                    declaredClass: "jimu.dijit.TileLayoutContainer",
                    constructor: function() {
                        this.items = [];
                        this.vmargin = this.hmargin = 15
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this.items.forEach(e.hitch(this, function(d) {
                            this._placeItem(d)
                        }));
                        this.resize()
                    },
                    _placeItem: function(d) {
                        d.domNode ? f.place(d.domNode, this.domNode) : f.place(d, this.domNode)
                    },
                    addItem: function(d) {
                        this.items.push(d);
                        this._placeItem(d);
                        this.resize()
                    },
                    addItems: function(d) {
                        this.items = this.items.concat(d);
                        this.items.forEach(e.hitch(this, function(d) {
                            this._placeItem(d)
                        }));
                        this.resize()
                    },
                    removeItem: function(d) {
                        var e;
                        for (e = 0; e < this.items.length; e++)
                            if (this.items[e].label === d) {
                                this.items[e].domNode ? this.items[e].destroy() : f.destroy(this.items[e]);
                                this.items.splice(e, 1);
                                this.resize();
                                break
                            }
                    },
                    empty: function() {
                        var d;
                        for (d = 0; d < this.items.length; d++) this.items[d].domNode ? this.items[d].destroy() : f.destroy(this.items[d]);
                        this.items = []
                    },
                    resize: function() {
                        var d, h, q;
                        d = f.getMarginBox(this.domNode);
                        h = this.getItemSize(d);
                        q = Math.floor((d.w + this.hmargin) / (h.width + this.hmargin));
                        this.items.forEach(e.hitch(this, function(a, d) {
                            this.setItemPosition(a,
                                d, h, q)
                        }))
                    },
                    getItemSize: function(d) {
                        var e = {},
                            f;
                        if ("fixWidth" === this.strategy) e.width = this.itemSize.width, e.height = this.itemSize.height;
                        else if ("breakWidth" === this.strategy)
                            for (f = 0; f < this.itemSize.length; f++) {
                                if (d.w <= this.itemSize[f].screenWidth) {
                                    e.width = this.itemSize[f].width;
                                    e.height = this.itemSize[f].height;
                                    break
                                }
                            } else "fixCols" === this.strategy && (e.width = (d.w - this.hmargin * (this.maxCols - 1)) / this.maxCols, e.height = "number" === typeof this.itemSize.height ? this.itemSize.height : e.width * parseFloat(this.itemSize.height.substring(0,
                                this.itemSize.height.length - 1)) / 100);
                        return e
                    },
                    setItemPosition: function(d, e, h, a) {
                        e++;
                        var k = e % a;
                        e = Math.ceil(e / a);
                        0 === k && (k = a);
                        a = {
                            position: "absolute",
                            top: (this.vmargin + h.height) * (e - 1) + "px"
                        };
                        a[window.isRTL ? "right" : "left"] = (this.hmargin + h.width) * (k - 1) + "px";
                        0 <= h.width && (a.width = h.width + "px");
                        0 <= h.height && (a.height = h.height + "px");
                        f.setStyle(d.domNode ? d.domNode : d, a)
                    }
                })
            })
        },
        "jimu/dijit/DrawBox": function() {
            define("dojo/_base/declare dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dojo/text!./templates/DrawBox.html dojo/_base/lang dojo/_base/html dojo/_base/array dojo/on dojo/query dojo/Evented esri/graphic esri/layers/GraphicsLayer esri/toolbars/draw esri/symbols/jsonUtils esri/geometry/Polygon".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t) {
                    return p([e, f, h, s], {
                        templateString: d,
                        baseClass: "jimu-draw-box",
                        declaredClass: "jimu.dijit.DrawBox",
                        nls: null,
                        drawLayer: null,
                        drawLayerId: null,
                        drawToolBar: null,
                        _isDisabled: !1,
                        _shiftKey: !1,
                        _ctrlKey: !1,
                        _metaKey: !1,
                        types: null,
                        geoTypes: null,
                        map: null,
                        pointSymbol: null,
                        polylineSymbol: null,
                        polygonSymbol: null,
                        textSymbol: null,
                        showClear: !1,
                        keepOneGraphic: !1,
                        deactivateAfterDrawing: !0,
                        postMixInProperties: function() {
                            this.nls = window.jimuNls.drawBox
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            var a = {};
                            this.drawLayerId && (a.id = this.drawLayerId);
                            this.drawLayer = new r(a);
                            this._initDefaultSymbols();
                            this._initTypes();
                            a = c(".draw-item", this.domNode);
                            this.own(a.on("click", m.hitch(this, this._onItemClick)));
                            this.own(k(this.btnClear, "click", m.hitch(this, this._onClickClear)));
                            this.own(k(document.body, "keydown", m.hitch(this, function(a) {
                                this._shiftKey = !!a.shiftKey;
                                this._ctrlKey = !!a.ctrlKey;
                                this._metaKey = !!a.metaKey
                            })));
                            this.own(k(document.body, "keyup", m.hitch(this, function(a) {
                                this._shiftKey = !!a.shiftKey;
                                this._ctrlKey = !!a.ctrlKey;
                                this._metaKey = !!a.metaKey
                            })));
                            this.map && this.setMap(this.map);
                            q.setStyle(this.btnClear, "display", !0 === this.showClear ? "block" : "none");
                            this.enable()
                        },
                        enable: function() {
                            this._isDisabled = !1;
                            q.addClass(this.domNode, "enabled");
                            q.removeClass(this.domNode, "disabled")
                        },
                        disable: function() {
                            this._isDisabled = !0;
                            q.addClass(this.domNode, "disabled");
                            q.removeClass(this.domNode, "enabled");
                            this.deactivate()
                        },
                        hideLayer: function() {
                            this.drawLayer && this.drawLayer.hide()
                        },
                        showLayer: function() {
                            this.drawLayer &&
                                this.drawLayer.show()
                        },
                        isEnabled: function() {
                            return !this._isDisabled
                        },
                        isActive: function() {
                            var a = c(".draw-item.jimu-state-active", this.domNode);
                            return a && 0 < a.length
                        },
                        disableWebMapPopup: function() {
                            this.map && this.map.setInfoWindowOnClick(!1)
                        },
                        enableWebMapPopup: function() {
                            this.map && this.map.setInfoWindowOnClick(!0)
                        },
                        destroy: function() {
                            this.deactivate();
                            this.drawLayer && this.map && this.map.removeLayer(this.drawLayer);
                            this.drawLayer = this.map = this.drawToolBar = null;
                            this.inherited(arguments)
                        },
                        setMap: function(a) {
                            a &&
                                (this.map = a, this.map.addLayer(this.drawLayer), this.drawToolBar = new l(this.map), this.drawToolBar.setMarkerSymbol(this.pointSymbol), this.drawToolBar.setLineSymbol(this.polylineSymbol), this.drawToolBar.setFillSymbol(this.polygonSymbol), this.own(k(this.drawToolBar, "draw-end", m.hitch(this, this._onDrawEnd))))
                        },
                        setPointSymbol: function(a) {
                            this.pointSymbol = a;
                            this.drawToolBar.setMarkerSymbol(this.pointSymbol)
                        },
                        setLineSymbol: function(a) {
                            this.polylineSymbol = a;
                            this.drawToolBar.setLineSymbol(a)
                        },
                        setPolygonSymbol: function(a) {
                            this.polygonSymbol =
                                a;
                            this.drawToolBar.setFillSymbol(a)
                        },
                        setTextSymbol: function(a) {
                            this.textSymbol = a
                        },
                        reset: function() {
                            this.deactivate();
                            this.clear()
                        },
                        clear: function() {
                            this.drawLayer.clear();
                            this.onClear()
                        },
                        deactivate: function() {
                            this.enableWebMapPopup();
                            c(".draw-item", this.domNode).removeClass("jimu-state-active");
                            this.drawToolBar && (this.drawToolBar.deactivate(), this.emit("draw-deactivate"))
                        },
                        activate: function(a) {
                            var d = null,
                                e = c(".draw-item", this.domNode);
                            "TEXT" === a ? (a = "POINT", d = this.textIcon) : (e = e.filter(function(c) {
                                return c.getAttribute("data-geotype") ===
                                    a
                            }), 0 < e.length && (d = e[0]));
                            d && this._activate(d)
                        },
                        onIconSelected: function(a, c, d) {
                            this.emit("icon-selected", a, c, d)
                        },
                        onDrawEnd: function(a, c, d, e, g, l) {
                            this.emit("draw-end", a, c, d, e, g, l)
                        },
                        onClear: function() {
                            this.emit("clear")
                        },
                        addGraphic: function(a) {
                            this.keepOneGraphic && this.drawLayer.clear();
                            this.drawLayer.add(a)
                        },
                        removeGraphic: function(a) {
                            this.drawLayer.remove(a)
                        },
                        getFirstGraphic: function() {
                            var a = null;
                            this.drawLayer && 0 < this.drawLayer.graphics.length && (a = this.drawLayer.graphics[0]);
                            return a
                        },
                        show: function() {
                            q.removeClass(this.domNode,
                                "hidden")
                        },
                        hide: function() {
                            q.addClass(this.domNode, "hidden")
                        },
                        getDrawItemIcons: function() {
                            return c(".draw-item", this.domNode)
                        },
                        _onClickClear: function() {
                            this._isDisabled || (this.clear(), this.emit("user-clear"))
                        },
                        _initDefaultSymbols: function() {
                            var a = {
                                    style: "esriSMSCircle",
                                    color: [0, 0, 128, 128],
                                    name: "Circle",
                                    outline: {
                                        color: [0, 0, 128, 255],
                                        width: 1
                                    },
                                    type: "esriSMS",
                                    size: 18
                                },
                                c = {
                                    style: "esriSLSSolid",
                                    color: [79, 129, 189, 255],
                                    width: 3,
                                    name: "Blue 1",
                                    type: "esriSLS"
                                },
                                d = {
                                    style: "esriSFSSolid",
                                    color: [79, 129, 189, 128],
                                    type: "esriSFS",
                                    outline: {
                                        style: "esriSLSSolid",
                                        color: [54, 93, 141, 255],
                                        width: 1.5,
                                        type: "esriSLS"
                                    }
                                };
                            this.pointSymbol || (this.pointSymbol = g.fromJson(a));
                            this.polylineSymbol || (this.polylineSymbol = g.fromJson(c));
                            this.polygonSymbol || (this.polygonSymbol = g.fromJson(d))
                        },
                        _initTypes: function() {
                            this.geoTypes && 0 < this.geoTypes.length ? this.types = null : (this.geoTypes = [], this.types && 0 < this.types.length || (this.types = ["point", "polyline", "polygon"]), 0 <= this.types.indexOf("point") && (this.geoTypes = this.geoTypes.concat(["POINT"])), 0 <= this.types.indexOf("polyline") &&
                                (this.geoTypes = this.geoTypes.concat(["LINE", "POLYLINE", "FREEHAND_POLYLINE"])), 0 <= this.types.indexOf("polygon") && (this.geoTypes = this.geoTypes.concat("TRIANGLE EXTENT CIRCLE ELLIPSE POLYGON FREEHAND_POLYGON".split(" "))), 0 <= this.types.indexOf("text") && (this.geoTypes = this.geoTypes.concat(["TEXT"])));
                            var b = c(".draw-item", this.domNode);
                            b.style("display", "none");
                            a.forEach(b, m.hitch(this, function(b) {
                                var c = b.getAttribute("data-geotype"),
                                    c = 0 <= a.indexOf(this.geoTypes, c);
                                q.setStyle(b, "display", c ? "block" : "none")
                            }))
                        },
                        _onItemClick: function(a) {
                            this._isDisabled || (a = a.target || a.srcElement, q.hasClass(a, "draw-item") && (q.hasClass(a, "jimu-state-active") ? this.deactivate() : this._activate(a)))
                        },
                        _activate: function(a) {
                            c(".draw-item", this.domNode).removeClass("jimu-state-active");
                            q.addClass(a, "jimu-state-active");
                            var d = a.getAttribute("data-geotype"),
                                e = a.getAttribute("data-commontype"),
                                g = l[d];
                            "TEXT" === d && (g = l.POINT);
                            this.disableWebMapPopup();
                            this.drawToolBar.activate(g);
                            this.emit("draw-activate", g);
                            this.onIconSelected(a, d, e)
                        },
                        _onDrawEnd: function(a) {
                            var d = c(".draw-item.jimu-state-active", this.domNode)[0],
                                e = d.getAttribute("data-geotype"),
                                d = d.getAttribute("data-commontype"),
                                g = null,
                                g = "extent" === a.geometry.type ? t.fromExtent(a.geometry) : a.geometry;
                            g.geoType = e;
                            g.commonType = d;
                            a = g.type;
                            var l = null,
                                l = "point" === a || "multipoint" === a ? q.hasClass(this.textIcon, "jimu-state-active") ? this.textSymbol : this.pointSymbol : "line" === a || "polyline" === a ? this.polylineSymbol : this.polygonSymbol,
                                g = new n(g, l, null, null);
                            this.keepOneGraphic && this.drawLayer.clear();
                            this.drawLayer.add(g);
                            this.deactivateAfterDrawing && this.deactivate();
                            this.onDrawEnd(g, e, d, this._shiftKey, this._ctrlKey, this._metaKey)
                        }
                    })
                })
        },
        "esri/toolbars/draw": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/_base/Color dojo/_base/window dojo/has dojo/sniff dojo/keys dojo/dom-construct dojo/dom-style dojo/dom-geometry ../kernel ../sniff ./_toolbar ../symbols/SimpleMarkerSymbol ../symbols/SimpleLineSymbol ../symbols/SimpleFillSymbol ../graphic ../geometry/jsonUtils ../geometry/webMercatorUtils ../geometry/Polyline ../geometry/Polygon ../geometry/Multipoint ../geometry/Rect dojo/i18n!../nls/jsapi".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A, x, C, u, E, D) {
                    var B = p(g, {
                        declaredClass: "esri.toolbars.Draw",
                        _eventMap: {
                            "draw-complete": !0,
                            "draw-end": ["geometry"]
                        },
                        constructor: function(c, g) {
                            this.markerSymbol = new t(t.STYLE_SOLID, 10, new b(b.STYLE_SOLID, new d([255, 0, 0]), 2), new d([0, 0, 0, 0.25]));
                            this.lineSymbol = new b(b.STYLE_SOLID, new d([255, 0, 0]), 2);
                            this.fillSymbol = new v(v.STYLE_SOLID, new b(b.STYLE_SOLID, new d([255, 0, 0]), 2), new d([0, 0, 0, 0.25]));
                            this._points = [];
                            this._mouse = !q("esri-touch") && !q("esri-pointer");
                            this._defaultOptions = {
                                showTooltips: !0,
                                drawTime: 75,
                                tolerance: 8,
                                tooltipOffset: 15
                            };
                            this._options = e.mixin(e.mixin({}, this._defaultOptions), g || {});
                            if (a("ios") || a("android")) this._options.showTooltips = !1;
                            this._onKeyDownHandler = e.hitch(this, this._onKeyDownHandler);
                            this._onMouseDownHandler = e.hitch(this, this._onMouseDownHandler);
                            this._onMouseUpHandler = e.hitch(this, this._onMouseUpHandler);
                            this._onClickHandler = e.hitch(this, this._onClickHandler);
                            this._onMouseMoveHandler = e.hitch(this, this._onMouseMoveHandler);
                            this._onMouseDragHandler = e.hitch(this, this._onMouseDragHandler);
                            this._onDblClickHandler = e.hitch(this, this._onDblClickHandler);
                            this._updateTooltip = e.hitch(this, this._updateTooltip);
                            this._hideTooltip = e.hitch(this, this._hideTooltip);
                            this._redrawGraphic = e.hitch(this, this._redrawGraphic)
                        },
                        _geometryType: null,
                        respectDrawingVertexOrder: !1,
                        setRespectDrawingVertexOrder: function(a) {
                            this.respectDrawingVertexOrder = a
                        },
                        setMarkerSymbol: function(a) {
                            this.markerSymbol = a
                        },
                        setLineSymbol: function(a) {
                            this.lineSymbol = a
                        },
                        setFillSymbol: function(a) {
                            this.fillSymbol = a
                        },
                        activate: function(a, b) {
                            this._geometryType && this.deactivate();
                            var c = this.map,
                                d = h.connect,
                                g = B;
                            this._options = e.mixin(e.mixin({}, this._options), b || {});
                            c.navigationManager.setImmediateClick(!1);
                            switch (a) {
                                case g.ARROW:
                                case g.LEFT_ARROW:
                                case g.RIGHT_ARROW:
                                case g.UP_ARROW:
                                case g.DOWN_ARROW:
                                case g.TRIANGLE:
                                case g.CIRCLE:
                                case g.ELLIPSE:
                                case g.RECTANGLE:
                                    this._deactivateMapTools(!0, !1, !1, !0);
                                    this._onClickHandler_connect = d(c, "onClick", this._onClickHandler);
                                    this._mouse ?
                                        (this._onMouseDownHandler_connect = d(c, "onMouseDown", this._onMouseDownHandler), this._onMouseDragHandler_connect = d(c, "onMouseDrag", this._onMouseDragHandler), this._onMouseUpHandler_connect = d(c, "onMouseUp", this._onMouseUpHandler)) : (this._onMouseDownHandler2_connect = d(c, "onMouseDragStart", this._onMouseDownHandler), this._onMouseDragHandler2_connect = d(c, "onMouseDrag", this._onMouseDragHandler), this._onMouseUpHandler2_connect = d(c, "onMouseDragEnd", this._onMouseUpHandler));
                                    q("esri-touch") && !q("esri-pointer") &&
                                        (this._onMouseDownHandler2_connect = d(c, "onSwipeStart", this._onMouseDownHandler), this._onMouseDragHandler2_connect = d(c, "onSwipeMove", this._onMouseDragHandler), this._onMouseUpHandler2_connect = d(c, "onSwipeEnd", this._onMouseUpHandler));
                                    break;
                                case g.POINT:
                                    this._onClickHandler_connect = d(c, "onClick", this._onClickHandler);
                                    break;
                                case g.LINE:
                                case g.EXTENT:
                                case g.FREEHAND_POLYLINE:
                                case g.FREEHAND_POLYGON:
                                    this._deactivateMapTools(!0, !1, !1, !0);
                                    this._mouse ? (this._onMouseDownHandler_connect = d(c, "onMouseDown", this._onMouseDownHandler),
                                        this._onMouseDragHandler_connect = d(c, "onMouseDrag", this._onMouseDragHandler), this._onMouseUpHandler_connect = d(c, "onMouseUp", this._onMouseUpHandler)) : (this._onMouseDownHandler_connect = d(c, "onMouseDragStart", this._onMouseDownHandler), this._onMouseDragHandler_connect = d(c, "onMouseDrag", this._onMouseDragHandler), this._onMouseUpHandler_connect = d(c, "onMouseDragEnd", this._onMouseUpHandler));
                                    q("esri-touch") && !q("esri-pointer") && (this._onMouseDownHandler2_connect = d(c, "onSwipeStart", this._onMouseDownHandler),
                                        this._onMouseDragHandler2_connect = d(c, "onSwipeMove", this._onMouseDragHandler), this._onMouseUpHandler2_connect = d(c, "onSwipeEnd", this._onMouseUpHandler));
                                    break;
                                case g.POLYLINE:
                                case g.POLYGON:
                                case g.MULTI_POINT:
                                    c.navigationManager.setImmediateClick(!0);
                                    this._onClickHandler_connect = d(c, "onClick", this._onClickHandler);
                                    this._onDblClickHandler_connect = d(c, "onDblClick", this._onDblClickHandler);
                                    this._dblClickZoom = c.isDoubleClickZoom;
                                    c.disableDoubleClickZoom();
                                    break;
                                default:
                                    console.error("Unsupported geometry type: " +
                                        a);
                                    return
                            }
                            this._onKeyDown_connect = d(c, "onKeyDown", this._onKeyDownHandler);
                            this._redrawConnect = d(c, "onExtentChange", this._redrawGraphic);
                            this._geometryType = a;
                            this._toggleTooltip(!0);
                            c.snappingManager && ("freehandpolyline" !== this._geometryType && "freehandpolygon" !== this._geometryType) && (c.snappingManager._startSelectionLayerQuery(), c.snappingManager._setUpSnapping());
                            this.onActivate(this._geometryType)
                        },
                        deactivate: function() {
                            var a = this.map;
                            this._clear();
                            var b = h.disconnect;
                            b(this._onMouseMoveHandler_connect);
                            b(this._onMouseDownHandler_connect);
                            b(this._onMouseDragHandler_connect);
                            b(this._onMouseUpHandler_connect);
                            b(this._onMouseDownHandler2_connect);
                            b(this._onMouseDragHandler2_connect);
                            b(this._onMouseUpHandler2_connect);
                            b(this._onClickHandler_connect);
                            b(this._onDblClickHandler_connect);
                            b(this._onKeyDown_connect);
                            b(this._redrawConnect);
                            this._onMouseDownHandler_connect = this._onMouseMoveHandler_connect = this._onMouseDragHandler_connect = this._onMouseUpHandler_connect = this._onMouseDownHandler2_connect = this._onMouseDragHandler2_connect =
                                this._onMouseUpHandler2_connect = this._onClickHandler_connect = this._onDblClickHandler_connect = this._onKeyDown_connect = this._redrawConnect = null;
                            a.snappingManager && (a.snappingManager._stopSelectionLayerQuery(), a.snappingManager._killOffSnapping());
                            switch (this._geometryType) {
                                case B.CIRCLE:
                                case B.ELLIPSE:
                                case B.TRIANGLE:
                                case B.ARROW:
                                case B.LEFT_ARROW:
                                case B.RIGHT_ARROW:
                                case B.UP_ARROW:
                                case B.DOWN_ARROW:
                                case B.RECTANGLE:
                                case B.LINE:
                                case B.EXTENT:
                                case B.FREEHAND_POLYLINE:
                                case B.FREEHAND_POLYGON:
                                    this._activateMapTools(!0, !1, !1, !0);
                                    break;
                                case B.POLYLINE:
                                case B.POLYGON:
                                case B.MULTI_POINT:
                                    this._dblClickZoom && a.enableDoubleClickZoom()
                            }
                            b = this._geometryType;
                            this._geometryType = null;
                            a.navigationManager.setImmediateClick(!1);
                            this._toggleTooltip(!1);
                            this.onDeactivate(b)
                        },
                        _clear: function() {
                            this._graphic && this.map.graphics.remove(this._graphic, !0);
                            this._tGraphic && this.map.graphics.remove(this._tGraphic, !0);
                            this._graphic = this._tGraphic = null;
                            this.map.snappingManager && this.map.snappingManager._setGraphic(null);
                            this._points = []
                        },
                        finishDrawing: function() {
                            var a, b = this._points,
                                c = this.map.spatialReference,
                                d = B,
                                b = b.slice(0, b.length);
                            switch (this._geometryType) {
                                case d.POLYLINE:
                                    if (!this._graphic || 2 > b.length) return;
                                    a = new x(c);
                                    a.addPath([].concat(b));
                                    break;
                                case d.POLYGON:
                                    if (!this._graphic || 3 > b.length) return;
                                    a = new C(c);
                                    b = [].concat(b, [b[0].offset(0, 0)]);
                                    !C.prototype.isClockwise(b) && !this.respectDrawingVertexOrder && (console.debug(this.declaredClass + " :  Polygons drawn in anti-clockwise direction will be reversed to be clockwise."), b.reverse());
                                    a.addRing(b);
                                    break;
                                case d.MULTI_POINT:
                                    a = new u(c), f.forEach(b, function(b) {
                                        a.addPoint(b)
                                    })
                            }
                            h.disconnect(this._onMouseMoveHandler_connect);
                            this._clear();
                            this._setTooltipMessage(0);
                            this._drawEnd(a)
                        },
                        _drawEnd: function(a) {
                            if (a) {
                                var b = this.map.spatialReference,
                                    c;
                                this.onDrawEnd(a);
                                b && (b.isWebMercator() ? c = A.webMercatorToGeographic(a, !0) : 4326 === b.wkid && (c = z.fromJson(a.toJson())));
                                this.onDrawComplete({
                                    geometry: a,
                                    geographicGeometry: c
                                })
                            }
                        },
                        _normalizeRect: function(a, b, c) {
                            var d = a.x;
                            a = a.y;
                            var e = b.x;
                            b = b.y;
                            var g = Math.abs(d -
                                    e),
                                l = Math.abs(a - b);
                            return {
                                x: Math.min(d, e),
                                y: Math.max(a, b),
                                width: g,
                                height: l,
                                spatialReference: c
                            }
                        },
                        _onMouseDownHandler: function(a) {
                            this._dragged = !1;
                            var b;
                            this.map.snappingManager && (b = this.map.snappingManager._snappingPoint);
                            var c = b || a.mapPoint,
                                d = B;
                            b = this.map;
                            var e = b.spatialReference;
                            this._points.push(c.offset(0, 0));
                            switch (this._geometryType) {
                                case d.LINE:
                                    this._graphic = b.graphics.add(new w(new x({
                                        paths: [
                                            [
                                                [c.x, c.y],
                                                [c.x, c.y]
                                            ]
                                        ],
                                        spatialReference: e
                                    }), this.lineSymbol), !0);
                                    b.snappingManager && b.snappingManager._setGraphic(this._graphic);
                                    break;
                                case d.FREEHAND_POLYLINE:
                                    this._oldPoint = a.screenPoint;
                                    c = new x(e);
                                    c.addPath(this._points);
                                    this._graphic = b.graphics.add(new w(c, this.lineSymbol), !0);
                                    b.snappingManager && b.snappingManager._setGraphic(this._graphic);
                                    break;
                                case d.CIRCLE:
                                case d.ELLIPSE:
                                case d.TRIANGLE:
                                case d.ARROW:
                                case d.LEFT_ARROW:
                                case d.RIGHT_ARROW:
                                case d.UP_ARROW:
                                case d.DOWN_ARROW:
                                case d.RECTANGLE:
                                case d.FREEHAND_POLYGON:
                                    this._oldPoint = a.screenPoint, c = new C(e), c.addRing(this._points), this._graphic = b.graphics.add(new w(c, this.fillSymbol), !0), b.snappingManager && b.snappingManager._setGraphic(this._graphic)
                            }
                            q("esri-touch") && a.preventDefault()
                        },
                        _onMouseMoveHandler: function(a) {
                            var b;
                            this.map.snappingManager && (b = this.map.snappingManager._snappingPoint);
                            var c = this._points[this._points.length - 1];
                            a = b || a.mapPoint;
                            b = this._tGraphic;
                            var d = b.geometry;
                            switch (this._geometryType) {
                                case B.POLYLINE:
                                case B.POLYGON:
                                    d.setPoint(0, 0, {
                                        x: c.x,
                                        y: c.y
                                    }), d.setPoint(0, 1, {
                                        x: a.x,
                                        y: a.y
                                    }), b.setGeometry(d)
                            }
                        },
                        _onMouseDragHandler: function(a) {
                            if (this._graphic || this._points.length)
                                if (q("esri-touch") &&
                                    !this._points.length) a.preventDefault();
                                else {
                                    this._dragged = !0;
                                    var b;
                                    this.map.snappingManager && (b = this.map.snappingManager._snappingPoint);
                                    var c = this._points[0],
                                        d = b || a.mapPoint,
                                        g = this.map,
                                        l = g.spatialReference;
                                    b = this._graphic;
                                    var f = B,
                                        n = g.toScreen(c),
                                        k = g.toScreen(d),
                                        h = [],
                                        h = k.x - n.x,
                                        k = k.y - n.y,
                                        m = Math.sqrt(h * h + k * k);
                                    switch (this._geometryType) {
                                        case f.CIRCLE:
                                            this._hideTooltip();
                                            b.geometry = C.createCircle({
                                                center: n,
                                                r: m,
                                                numberOfPoints: 60,
                                                map: g
                                            });
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.ELLIPSE:
                                            this._hideTooltip();
                                            b.geometry = C.createEllipse({
                                                center: n,
                                                longAxis: h,
                                                shortAxis: k,
                                                numberOfPoints: 60,
                                                map: g
                                            });
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.TRIANGLE:
                                            this._hideTooltip();
                                            h = [
                                                [0, -m],
                                                [0.8660254037844386 * m, 0.5 * m],
                                                [-0.8660254037844386 * m, 0.5 * m],
                                                [0, -m]
                                            ];
                                            b.geometry = this._toPolygon(h, n.x, n.y);
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.ARROW:
                                            this._hideTooltip();
                                            c = k / m;
                                            g = h / m;
                                            d = 0.25 * g * m;
                                            l = 0.25 * m / (k / h);
                                            m *= 0.25 * c;
                                            h = [
                                                [h, k],
                                                [h - d * (1 + 24 / l), k + 24 * g - m],
                                                [h - d * (1 + 12 / l), k + 12 * g - m],
                                                [-12 * c, 12 * g],
                                                [12 * c, -12 * g],
                                                [h - d * (1 - 12 / l), k - 12 * g - m],
                                                [h - d * (1 - 24 / l),
                                                    k - 24 * g - m
                                                ],
                                                [h, k]
                                            ];
                                            b.geometry = this._toPolygon(h, n.x, n.y);
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.LEFT_ARROW:
                                            this._hideTooltip();
                                            h = 0 >= h ? [
                                                [h, 0],
                                                [0.75 * h, k],
                                                [0.75 * h, 0.5 * k],
                                                [0, 0.5 * k],
                                                [0, -0.5 * k],
                                                [0.75 * h, -0.5 * k],
                                                [0.75 * h, -k],
                                                [h, 0]
                                            ] : [
                                                [0, 0],
                                                [0.25 * h, k],
                                                [0.25 * h, 0.5 * k],
                                                [h, 0.5 * k],
                                                [h, -0.5 * k],
                                                [0.25 * h, -0.5 * k],
                                                [0.25 * h, -k],
                                                [0, 0]
                                            ];
                                            b.geometry = this._toPolygon(h, n.x, n.y);
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.RIGHT_ARROW:
                                            this._hideTooltip();
                                            h = 0 <= h ? [
                                                [h, 0],
                                                [0.75 * h, k],
                                                [0.75 * h, 0.5 * k],
                                                [0, 0.5 * k],
                                                [0, -0.5 * k],
                                                [0.75 * h, -0.5 * k],
                                                [0.75 *
                                                    h, -k
                                                ],
                                                [h, 0]
                                            ] : [
                                                [0, 0],
                                                [0.25 * h, k],
                                                [0.25 * h, 0.5 * k],
                                                [h, 0.5 * k],
                                                [h, -0.5 * k],
                                                [0.25 * h, -0.5 * k],
                                                [0.25 * h, -k],
                                                [0, 0]
                                            ];
                                            b.geometry = this._toPolygon(h, n.x, n.y);
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.UP_ARROW:
                                            this._hideTooltip();
                                            h = 0 >= k ? [
                                                [0, k],
                                                [-h, 0.75 * k],
                                                [-0.5 * h, 0.75 * k],
                                                [-0.5 * h, 0],
                                                [0.5 * h, 0],
                                                [0.5 * h, 0.75 * k],
                                                [h, 0.75 * k],
                                                [0, k]
                                            ] : [
                                                [0, 0],
                                                [-h, 0.25 * k],
                                                [-0.5 * h, 0.25 * k],
                                                [-0.5 * h, k],
                                                [0.5 * h, k],
                                                [0.5 * h, 0.25 * k],
                                                [h, 0.25 * k],
                                                [0, 0]
                                            ];
                                            b.geometry = this._toPolygon(h, n.x, n.y);
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.DOWN_ARROW:
                                            this._hideTooltip();
                                            h = 0 <= k ? [
                                                [0, k],
                                                [-h, 0.75 * k],
                                                [-0.5 * h, 0.75 * k],
                                                [-0.5 * h, 0],
                                                [0.5 * h, 0],
                                                [0.5 * h, 0.75 * k],
                                                [h, 0.75 * k],
                                                [0, k]
                                            ] : [
                                                [0, 0],
                                                [-h, 0.25 * k],
                                                [-0.5 * h, 0.25 * k],
                                                [-0.5 * h, k],
                                                [0.5 * h, k],
                                                [0.5 * h, 0.25 * k],
                                                [h, 0.25 * k],
                                                [0, 0]
                                            ];
                                            b.geometry = this._toPolygon(h, n.x, n.y);
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.RECTANGLE:
                                            this._hideTooltip();
                                            h = [
                                                [0, 0],
                                                [h, 0],
                                                [h, k],
                                                [0, k],
                                                [0, 0]
                                            ];
                                            b.geometry = this._toPolygon(h, n.x, n.y);
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.LINE:
                                            b.setGeometry(e.mixin(b.geometry, {
                                                paths: [
                                                    [
                                                        [c.x, c.y],
                                                        [d.x, d.y]
                                                    ]
                                                ]
                                            }));
                                            break;
                                        case f.EXTENT:
                                            b && g.graphics.remove(b, !0);
                                            b = new E(this._normalizeRect(c, d, l));
                                            b._originOnly = !0;
                                            this._graphic = g.graphics.add(new w(b, this.fillSymbol), !0);
                                            g.snappingManager && g.snappingManager._setGraphic(this._graphic);
                                            break;
                                        case f.FREEHAND_POLYLINE:
                                            this._hideTooltip();
                                            if (!1 === this._canDrawFreehandPoint(a)) {
                                                q("esri-touch") && a.preventDefault();
                                                return
                                            }
                                            this._points.push(a.mapPoint.offset(0, 0));
                                            b.geometry._insertPoints([d.offset(0, 0)], 0);
                                            b.setGeometry(b.geometry);
                                            break;
                                        case f.FREEHAND_POLYGON:
                                            this._hideTooltip();
                                            if (!1 === this._canDrawFreehandPoint(a)) {
                                                q("esri-touch") &&
                                                    a.preventDefault();
                                                return
                                            }
                                            this._points.push(a.mapPoint.offset(0, 0));
                                            b.geometry._insertPoints([d.offset(0, 0)], 0);
                                            b.setGeometry(b.geometry)
                                    }
                                    q("esri-touch") && a.preventDefault()
                                }
                        },
                        _canDrawFreehandPoint: function(a) {
                            if (!this._oldPoint) return !1;
                            var b = this._oldPoint.x - a.screenPoint.x,
                                c = this._oldPoint.y - a.screenPoint.y,
                                d = this._options.tolerance;
                            if ((0 > b ? -1 * b : b) < d && (0 > c ? -1 * c : c) < d) return !1;
                            b = new Date;
                            if (b - this._startTime < this._options.drawTime) return !1;
                            this._startTime = b;
                            this._oldPoint = a.screenPoint;
                            return !0
                        },
                        _onMouseUpHandler: function(a) {
                            if (!this._dragged || !this._graphic) this._clear();
                            else {
                                0 === this._points.length && this._points.push(a.mapPoint.offset(0, 0));
                                var b;
                                this.map.snappingManager && (b = this.map.snappingManager._snappingPoint);
                                var c = this._points[0];
                                b = b || a.mapPoint;
                                var d = this.map.spatialReference,
                                    e = B,
                                    g;
                                switch (this._geometryType) {
                                    case e.CIRCLE:
                                    case e.ELLIPSE:
                                    case e.TRIANGLE:
                                    case e.ARROW:
                                    case e.LEFT_ARROW:
                                    case e.RIGHT_ARROW:
                                    case e.UP_ARROW:
                                    case e.DOWN_ARROW:
                                    case e.RECTANGLE:
                                        g = this._graphic.geometry;
                                        break;
                                    case e.LINE:
                                        g = new x({
                                            paths: [
                                                [
                                                    [c.x, c.y],
                                                    [b.x, b.y]
                                                ]
                                            ],
                                            spatialReference: d
                                        });
                                        break;
                                    case e.EXTENT:
                                        g = (new E(this._normalizeRect(c, b, d))).getExtent();
                                        break;
                                    case e.FREEHAND_POLYLINE:
                                        g = new x(d);
                                        g.addPath([].concat(this._points, [b.offset(0, 0)]));
                                        break;
                                    case e.FREEHAND_POLYGON:
                                        g = new C(d), c = [].concat(this._points, [b.offset(0, 0), this._points[0].offset(0, 0)]), !C.prototype.isClockwise(c) && !this.respectDrawingVertexOrder && (console.debug(this.declaredClass + " :  Polygons drawn in anti-clockwise direction will be reversed to be clockwise."),
                                            c.reverse()), g.addRing(c)
                                }
                                q("esri-touch") && a.preventDefault();
                                this._clear();
                                this._drawEnd(g)
                            }
                        },
                        _onClickHandler: function(a) {
                            var b;
                            this.map.snappingManager && (b = this.map.snappingManager._snappingPoint);
                            a = b || a.mapPoint;
                            b = this.map;
                            var c = b.toScreen(a),
                                d = B;
                            this._points.push(a.offset(0, 0));
                            switch (this._geometryType) {
                                case d.POINT:
                                    this._drawEnd(a.offset(0, 0));
                                    this._setTooltipMessage(0);
                                    break;
                                case d.POLYLINE:
                                    1 === this._points.length ? (c = new x(b.spatialReference), c.addPath(this._points), this._graphic = b.graphics.add(new w(c,
                                        this.lineSymbol), !0), b.snappingManager && b.snappingManager._setGraphic(this._graphic), this._onMouseMoveHandler_connect = h.connect(b, "onMouseMove", this._onMouseMoveHandler), this._tGraphic = b.graphics.add(new w(new x({
                                        paths: [
                                            [
                                                [a.x, a.y],
                                                [a.x, a.y]
                                            ]
                                        ],
                                        spatialReference: b.spatialReference
                                    }), this.lineSymbol), !0)) : (this._graphic.geometry._insertPoints([a.offset(0, 0)], 0), this._graphic.setGeometry(this._graphic.geometry).setSymbol(this.lineSymbol), b = this._tGraphic, c = b.geometry, c.setPoint(0, 0, a.offset(0, 0)), c.setPoint(0,
                                        1, a.offset(0, 0)), b.setGeometry(c));
                                    break;
                                case d.POLYGON:
                                    1 === this._points.length ? (c = new C(b.spatialReference), c.addRing(this._points), this._graphic = b.graphics.add(new w(c, this.fillSymbol), !0), b.snappingManager && b.snappingManager._setGraphic(this._graphic), this._onMouseMoveHandler_connect = h.connect(b, "onMouseMove", this._onMouseMoveHandler), this._tGraphic = b.graphics.add(new w(new x({
                                        paths: [
                                            [
                                                [a.x, a.y],
                                                [a.x, a.y]
                                            ]
                                        ],
                                        spatialReference: b.spatialReference
                                    }), this.fillSymbol), !0)) : (this._graphic.geometry._insertPoints([a.offset(0,
                                        0)], 0), this._graphic.setGeometry(this._graphic.geometry).setSymbol(this.fillSymbol), b = this._tGraphic, c = b.geometry, c.setPoint(0, 0, a.offset(0, 0)), c.setPoint(0, 1, a.offset(0, 0)), b.setGeometry(c));
                                    break;
                                case d.MULTI_POINT:
                                    a = this._points;
                                    1 === a.length ? (c = new u(b.spatialReference), c.addPoint(a[a.length - 1]), this._graphic = b.graphics.add(new w(c, this.markerSymbol), !0), b.snappingManager && b.snappingManager._setGraphic(this._graphic)) : (this._graphic.geometry.addPoint(a[a.length - 1]), this._graphic.setGeometry(this._graphic.geometry).setSymbol(this.markerSymbol));
                                    break;
                                case d.ARROW:
                                    this._addShape([
                                        [0, 0],
                                        [-24, 24],
                                        [-24, 12],
                                        [-96, 12],
                                        [-96, -12],
                                        [-24, -12],
                                        [-24, -24],
                                        [0, 0]
                                    ], c.x, c.y);
                                    break;
                                case d.LEFT_ARROW:
                                    this._addShape([
                                        [0, 0],
                                        [24, 24],
                                        [24, 12],
                                        [96, 12],
                                        [96, -12],
                                        [24, -12],
                                        [24, -24],
                                        [0, 0]
                                    ], c.x, c.y);
                                    break;
                                case d.RIGHT_ARROW:
                                    this._addShape([
                                        [0, 0],
                                        [-24, 24],
                                        [-24, 12],
                                        [-96, 12],
                                        [-96, -12],
                                        [-24, -12],
                                        [-24, -24],
                                        [0, 0]
                                    ], c.x, c.y);
                                    break;
                                case d.UP_ARROW:
                                    this._addShape([
                                        [0, 0],
                                        [-24, 24],
                                        [-12, 24],
                                        [-12, 96],
                                        [12, 96],
                                        [12, 24],
                                        [24, 24],
                                        [0, 0]
                                    ], c.x, c.y);
                                    break;
                                case d.DOWN_ARROW:
                                    this._addShape([
                                        [0,
                                            0
                                        ],
                                        [-24, -24],
                                        [-12, -24],
                                        [-12, -96],
                                        [12, -96],
                                        [12, -24],
                                        [24, -24],
                                        [0, 0]
                                    ], c.x, c.y);
                                    break;
                                case d.TRIANGLE:
                                    this._addShape([
                                        [0, -48],
                                        [41.56921938165306, 24],
                                        [-41.56921938165306, 24],
                                        [0, -48]
                                    ], c.x, c.y);
                                    break;
                                case d.RECTANGLE:
                                    this._addShape([
                                        [0, -96],
                                        [96, -96],
                                        [96, 0],
                                        [0, 0],
                                        [0, -96]
                                    ], c.x - 48, c.y + 48);
                                    break;
                                case d.CIRCLE:
                                    this._clear();
                                    this._drawEnd(C.createCircle({
                                        center: c,
                                        r: 48,
                                        numberOfPoints: 60,
                                        map: b
                                    }));
                                    break;
                                case d.ELLIPSE:
                                    this._clear(), this._drawEnd(C.createEllipse({
                                        center: c,
                                        longAxis: 48,
                                        shortAxis: 24,
                                        numberOfPoints: 60,
                                        map: b
                                    }))
                            }
                            this._setTooltipMessage(this._points.length)
                        },
                        _addShape: function(a, b, c) {
                            this._setTooltipMessage(0);
                            this._clear();
                            this._drawEnd(this._toPolygon(a, b, c))
                        },
                        _toPolygon: function(a, b, c) {
                            var d = this.map,
                                e = new C(d.spatialReference);
                            e.addRing(f.map(a, function(a) {
                                return d.toMap({
                                    x: a[0] + b,
                                    y: a[1] + c
                                })
                            }));
                            return e
                        },
                        _onDblClickHandler: function(a) {
                            var b, c = this._points,
                                d = this.map.spatialReference,
                                e = B;
                            q("esri-touch") && c.push(a.mapPoint);
                            var g = c[c.length - 1],
                                l = c[c.length - 2],
                                c = g && l && g.x === l.x && g.y === l.y ? c.slice(0,
                                    c.length - 1) : c.slice(0, c.length);
                            switch (this._geometryType) {
                                case e.POLYLINE:
                                    if (!this._graphic || 2 > c.length) {
                                        h.disconnect(this._onMouseMoveHandler_connect);
                                        this._clear();
                                        this._onClickHandler(a);
                                        return
                                    }
                                    b = new x(d);
                                    b.addPath([].concat(c));
                                    break;
                                case e.POLYGON:
                                    if (!this._graphic || 2 > c.length) {
                                        h.disconnect(this._onMouseMoveHandler_connect);
                                        this._clear();
                                        this._onClickHandler(a);
                                        return
                                    }
                                    b = new C(d);
                                    a = [].concat(c, [c[0].offset(0, 0)]);
                                    !C.prototype.isClockwise(a) && !this.respectDrawingVertexOrder && (console.debug(this.declaredClass +
                                        " :  Polygons drawn in anti-clockwise direction will be reversed to be clockwise."), a.reverse());
                                    b.addRing(a);
                                    break;
                                case e.MULTI_POINT:
                                    b = new u(d), f.forEach(c, function(a) {
                                        b.addPoint(a)
                                    })
                            }
                            h.disconnect(this._onMouseMoveHandler_connect);
                            this._clear();
                            this._setTooltipMessage(0);
                            this._drawEnd(b)
                        },
                        _onKeyDownHandler: function(a) {
                            a.keyCode === k.ESCAPE && (h.disconnect(this._onMouseMoveHandler_connect), this._clear(), this._setTooltipMessage(0))
                        },
                        _toggleTooltip: function(a) {
                            this._options.showTooltips && (a ? this._tooltip ||
                                (this._tooltip = c.create("div", {
                                    "class": "tooltip"
                                }, this.map.container), n.isBodyLtr() || s.set(this._tooltip, "direction", "rtl"), this._tooltip.style.display = "none", this._tooltip.style.position = "fixed", this._setTooltipMessage(0), this._onTooltipMouseEnterHandler_connect = h.connect(this.map, "onMouseOver", this._updateTooltip), this._onTooltipMouseLeaveHandler_connect = h.connect(this.map, "onMouseOut", this._hideTooltip), this._onTooltipMouseMoveHandler_connect = h.connect(this.map, "onMouseMove", this._updateTooltip)) :
                                this._tooltip && (h.disconnect(this._onTooltipMouseEnterHandler_connect), h.disconnect(this._onTooltipMouseLeaveHandler_connect), h.disconnect(this._onTooltipMouseMoveHandler_connect), c.destroy(this._tooltip), this._tooltip = null))
                        },
                        _hideTooltip: function() {
                            var a = this._tooltip;
                            a && (a.style.display = "none")
                        },
                        _setTooltipMessage: function(a) {
                            var b = this._tooltip;
                            if (b) {
                                var c = "";
                                switch (this._geometryType) {
                                    case B.POINT:
                                        c = D.toolbars.draw.addPoint;
                                        break;
                                    case B.ARROW:
                                    case B.LEFT_ARROW:
                                    case B.RIGHT_ARROW:
                                    case B.UP_ARROW:
                                    case B.DOWN_ARROW:
                                    case B.TRIANGLE:
                                    case B.RECTANGLE:
                                    case B.CIRCLE:
                                    case B.ELLIPSE:
                                        c =
                                            D.toolbars.draw.addShape;
                                        break;
                                    case B.LINE:
                                    case B.EXTENT:
                                    case B.FREEHAND_POLYLINE:
                                    case B.FREEHAND_POLYGON:
                                        c = D.toolbars.draw.freehand;
                                        break;
                                    case B.POLYLINE:
                                    case B.POLYGON:
                                        c = D.toolbars.draw.start;
                                        1 === a ? c = D.toolbars.draw.resume : 2 <= a && (c = D.toolbars.draw.complete);
                                        break;
                                    case B.MULTI_POINT:
                                        c = D.toolbars.draw.addMultipoint, 1 <= a && (c = D.toolbars.draw.finish)
                                }
                                b.innerHTML = c
                            }
                        },
                        _updateTooltip: function(a) {
                            var b = this._tooltip;
                            if (b) {
                                var c;
                                a.clientX || a.pageY ? (c = a.clientX, a = a.clientY) : (c = a.clientX + m.body().scrollLeft -
                                    m.body().clientLeft, a = a.clientY + m.body().scrollTop - m.body().clientTop);
                                b.style.display = "none";
                                s.set(b, {
                                    left: c + this._options.tooltipOffset + "px",
                                    top: a + "px"
                                });
                                b.style.display = ""
                            }
                        },
                        _redrawGraphic: function(a, b, c, d) {
                            if (c || this.map.wrapAround180)(a = this._graphic) && a.setGeometry(a.geometry), (a = this._tGraphic) && a.setGeometry(a.geometry)
                        },
                        onActivate: function() {},
                        onDeactivate: function() {},
                        onDrawComplete: function() {},
                        onDrawEnd: function() {}
                    });
                    e.mixin(B, {
                        POINT: "point",
                        MULTI_POINT: "multipoint",
                        LINE: "line",
                        EXTENT: "extent",
                        POLYLINE: "polyline",
                        POLYGON: "polygon",
                        FREEHAND_POLYLINE: "freehandpolyline",
                        FREEHAND_POLYGON: "freehandpolygon",
                        ARROW: "arrow",
                        LEFT_ARROW: "leftarrow",
                        RIGHT_ARROW: "rightarrow",
                        UP_ARROW: "uparrow",
                        DOWN_ARROW: "downarrow",
                        TRIANGLE: "triangle",
                        CIRCLE: "circle",
                        ELLIPSE: "ellipse",
                        RECTANGLE: "rectangle"
                    });
                    return B
                })
        },
        "esri/toolbars/_toolbar": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/has", "../kernel", "../Evented"], function(p, e, f, h, d) {
                return p([d], {
                    declaredClass: "esri.toolbars._Toolbar",
                    constructor: function(d) {
                        this.map =
                            d
                    },
                    _cursors: {
                        move: "pointer",
                        "move-v": "pointer",
                        "move-gv": "pointer",
                        box0: "nw-resize",
                        box1: "n-resize",
                        box2: "ne-resize",
                        box3: "e-resize",
                        box4: "se-resize",
                        box5: "s-resize",
                        box6: "sw-resize",
                        box7: "w-resize",
                        box8: "pointer"
                    },
                    _deactivateMapTools: function(d, e, a, f) {
                        var c = this.map;
                        d && (this._mapNavState = {
                                isDoubleClickZoom: c.isDoubleClickZoom,
                                isClickRecenter: c.isClickRecenter,
                                isPan: c.isPan,
                                isRubberBandZoom: c.isRubberBandZoom,
                                isKeyboardNavigation: c.isKeyboardNavigation,
                                isScrollWheelZoom: c.isScrollWheelZoom
                            }, c.disableDoubleClickZoom(),
                            c.disableClickRecenter(), c.disablePan(), c.disableRubberBandZoom(), c.disableKeyboardNavigation());
                        e && c.hideZoomSlider();
                        a && c.hidePanArrows();
                        f && c.graphics.disableMouseEvents()
                    },
                    _activateMapTools: function(d, e, a, f) {
                        var c = this.map,
                            h = this._mapNavState;
                        d && h && (h.isDoubleClickZoom && c.enableDoubleClickZoom(), h.isClickRecenter && c.enableClickRecenter(), h.isPan && c.enablePan(), h.isRubberBandZoom && c.enableRubberBandZoom(), h.isKeyboardNavigation && c.enableKeyboardNavigation(), h.isScrollWheelZoom && c.enableScrollWheelZoom());
                        e && c.showZoomSlider();
                        a && c.showPanArrows();
                        f && c.graphics.enableMouseEvents()
                    }
                })
            })
        },
        "jimu/dijit/URLInput": function() {
            define(["dojo/_base/declare", "dojo/_base/html", "dijit/form/ValidationTextBox", "dojox/validate/regexp"], function(p, e, f, h) {
                return p([f], {
                    required: !0,
                    invalidMessage: "Invalid url.",
                    trim: !0,
                    rest: !0,
                    allowNamed: !0,
                    allowLocal: !0,
                    declaredClass: "jimu.dijit.URLInput",
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.invalidMessage = (this.nls = window.jimuNls.urlInput) ? this.nls.invalidUrl :
                            "Invalid Url"
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        e.addClass(this.domNode, "jimu-url-input")
                    },
                    validator: function(d) {
                        if (isFinite(d)) return !1;
                        var e = "^" + h.url({
                                allowNamed: this.allowNamed,
                                allowLocal: this.allowLocal
                            }),
                            e = RegExp(e, "g").test(d);
                        return this.rest ? (d = /\/rest\/services/gi.test(d), e && d) : e
                    }
                })
            })
        },
        "dojox/validate/regexp": function() {
            define(["dojo/_base/lang", "dojo/regexp", "dojox/main"], function(p, e, f) {
                var h = p.getObject("validate.regexp", !0, f);
                return h = f.validate.regexp = {
                    ipAddress: function(d) {
                        d =
                            "object" == typeof d ? d : {};
                        "boolean" != typeof d.allowDottedDecimal && (d.allowDottedDecimal = !0);
                        "boolean" != typeof d.allowDottedHex && (d.allowDottedHex = !0);
                        "boolean" != typeof d.allowDottedOctal && (d.allowDottedOctal = !0);
                        "boolean" != typeof d.allowDecimal && (d.allowDecimal = !0);
                        "boolean" != typeof d.allowHex && (d.allowHex = !0);
                        "boolean" != typeof d.allowIPv6 && (d.allowIPv6 = !0);
                        "boolean" != typeof d.allowHybrid && (d.allowHybrid = !0);
                        var e = [];
                        d.allowDottedDecimal && e.push("((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])");
                        d.allowDottedHex && e.push("(0[xX]0*[\\da-fA-F]?[\\da-fA-F]\\.){3}0[xX]0*[\\da-fA-F]?[\\da-fA-F]");
                        d.allowDottedOctal && e.push("(0+[0-3][0-7][0-7]\\.){3}0+[0-3][0-7][0-7]");
                        d.allowDecimal && e.push("(0|[1-9]\\d{0,8}|[1-3]\\d{9}|4[01]\\d{8}|42[0-8]\\d{7}|429[0-3]\\d{6}|4294[0-8]\\d{5}|42949[0-5]\\d{4}|429496[0-6]\\d{3}|4294967[01]\\d{2}|42949672[0-8]\\d|429496729[0-5])");
                        d.allowHex && e.push("0[xX]0*[\\da-fA-F]{1,8}");
                        d.allowIPv6 && e.push("([\\da-fA-F]{1,4}\\:){7}[\\da-fA-F]{1,4}");
                        d.allowHybrid && e.push("([\\da-fA-F]{1,4}\\:){6}((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])");
                        d = "";
                        0 < e.length && (d = "(" + e.join("|") + ")");
                        return d
                    },
                    host: function(d) {
                        d = "object" == typeof d ? d : {};
                        "boolean" != typeof d.allowIP && (d.allowIP = !0);
                        "boolean" != typeof d.allowLocal && (d.allowLocal = !1);
                        "boolean" != typeof d.allowPort && (d.allowPort = !0);
                        "boolean" != typeof d.allowNamed && (d.allowNamed = !1);
                        var e = d.allowPort ? "(\\:\\d+)?" : "",
                            f = "((?:(?:[\\da-zA-Z](?:[-\\da-zA-Z]{0,61}[\\da-zA-Z])?)\\.)+(?:[a-zA-Z](?:[-\\da-zA-Z]{0,61}[\\da-zA-Z])?)\\.?)";
                        d.allowIP && (f += "|" + h.ipAddress(d));
                        d.allowLocal && (f += "|localhost");
                        d.allowNamed && (f += "|^[^-][a-zA-Z0-9_-]*");
                        return "(" + f + ")" + e
                    },
                    url: function(d) {
                        d = "object" == typeof d ? d : {};
                        "scheme" in d || (d.scheme = [!0, !1]);
                        return e.buildGroupRE(d.scheme, function(d) {
                            return d ? "(https?|ftps?)\\://" : ""
                        }) + h.host(d) + "(/(?:[^?#\\s/]+/)*(?:[^?#\\s/]+(?:\\?[^?#\\s/]*)?(?:#[A-Za-z][\\w.:-]*)?)?)?"
                    },
                    emailAddress: function(d) {
                        d = "object" == typeof d ? d : {};
                        "boolean" != typeof d.allowCruft && (d.allowCruft = !1);
                        d.allowPort = !1;
                        var e = "([!#-'*+\\-\\/-9\x3d?A-Z^-~]+[.])*[!#-'*+\\-\\/-9\x3d?A-Z^-~]+@" + h.host(d);
                        d.allowCruft && (e = "\x3c?(mailto\\:)?" + e + "\x3e?");
                        return e
                    },
                    emailAddressList: function(d) {
                        d = "object" == typeof d ? d : {};
                        "string" != typeof d.listSeparator && (d.listSeparator = "\\s;,");
                        var e = h.emailAddress(d);
                        return "(" + e + "\\s*[" + d.listSeparator + "]\\s*)*" + e + "\\s*[" + d.listSeparator + "]?\\s*"
                    },
                    numberFormat: function(d) {
                        d = "object" == typeof d ? d : {};
                        "undefined" == typeof d.format && (d.format = "###-###-####");
                        return e.buildGroupRE(d.format, function(d) {
                            return e.escapeString(d, "?").replace(/\?/g, "\\d?").replace(/#/g, "\\d")
                        })
                    },
                    ca: {
                        postalCode: function() {
                            return "([A-Z][0-9][A-Z] [0-9][A-Z][0-9])"
                        },
                        province: function() {
                            return "(AB|BC|MB|NB|NL|NS|NT|NU|ON|PE|QC|SK|YT)"
                        }
                    },
                    us: {
                        state: function(d) {
                            d = "object" == typeof d ? d : {};
                            "boolean" != typeof d.allowTerritories && (d.allowTerritories = !0);
                            "boolean" != typeof d.allowMilitary && (d.allowMilitary = !0);
                            var e = "AL|AK|AZ|AR|CA|CO|CT|DE|DC|FL|GA|HI|ID|IL|IN|IA|KS|KY|LA|ME|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|OH|OK|OR|PA|RI|SC|SD|TN|TX|UT|VT|VA|WA|WV|WI|WY";
                            d.allowTerritories && (e += "|AS|FM|GU|MH|MP|PW|PR|VI");
                            d.allowMilitary && (e += "|AA|AE|AP");
                            return "(" + e + ")"
                        }
                    }
                }
            })
        },
        "jimu/OnScreenWidgetPanel": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/html dojo/on dojo/dnd/move dijit/_TemplatedMixin jimu/BaseWidgetPanel jimu/utils dojox/layout/ResizeHandle dojo/touch".split(" "), function(p, e, f, h, d, m, q, a, k) {
                return p([q, m], {
                    baseClass: "jimu-panel jimu-on-screen-widget-panel jimu-main-background",
                    _positionInfoBox: null,
                    _originalBox: null,
                    widgetIcon: null,
                    _resizeOnOpen: !0,
                    templateString: '\x3cdiv data-dojo-attach-point\x3d"boxNode"\x3e\x3cdiv class\x3d"jimu-panel-title jimu-main-background" data-dojo-attach-point\x3d"titleNode"\x3e\x3cdiv class\x3d"title-label jimu-vcenter-text jimu-float-leading jimu-leading-padding1"data-dojo-attach-point\x3d"titleLabelNode"\x3e${label}\x3c/div\x3e\x3cdiv class\x3d"close-btn jimu-vcenter jimu-float-trailing" data-dojo-attach-point\x3d"closeNode"data-dojo-attach-event\x3d"onclick:_onCloseBtnClicked,press:_onCloseBtnClicked"\x3e\x3c/div\x3e\x3cdiv class\x3d"max-btn jimu-vcenter jimu-float-trailing" data-dojo-attach-point\x3d"maxNode"data-dojo-attach-event\x3d"onclick:_onMaxBtnClicked"\x3e\x3c/div\x3e\x3cdiv class\x3d"foldable-btn jimu-vcenter jimu-float-trailing" data-dojo-attach-point\x3d"foldableNode"data-dojo-attach-event\x3d"onclick:_onFoldableBtnClicked"\x3e\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d"jimu-panel-content" data-dojo-attach-point\x3d"containerNode"\x3e\x3c/div\x3e\x3c/div\x3e',
                    postCreate: function() {
                        this._originalBox = {
                            w: 400,
                            h: 410
                        }
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this._normalizePositionObj(this.position);
                        this._makeOriginalBox();
                        this.makePositionInfoBox();
                        this.makeMoveable(this._positionInfoBox.w, 0.25 * this._positionInfoBox.w)
                    },
                    _onMaxBtnClicked: function(a) {
                        a.stopPropagation();
                        this._getPositionInfo().isRunInMobile && ("maximized" === this.windowState ? this.panelManager.normalizePanel(this) : this.panelManager.maximizePanel(this), this._setMobilePosition())
                    },
                    _onFoldableBtnClicked: function(a) {
                        a.stopPropagation();
                        this._getPositionInfo().isRunInMobile && ("minimized" === this.windowState ? (f.removeClass(this.foldableNode, "fold-up"), f.addClass(this.foldableNode, "fold-down"), this.panelManager.normalizePanel(this)) : (f.removeClass(this.foldableNode, "fold-down"), f.addClass(this.foldableNode, "fold-up"), this.panelManager.minimizePanel(this)), this._setMobilePosition())
                    },
                    _onCloseBtnClicked: function(a) {
                        this.panelManager.closePanel(this);
                        a.stopPropagation();
                        "touchstart" === a.type && a.preventDefault()
                    },
                    _normalizePositionObj: function(a) {
                        var d =
                            this._getLayoutBox();
                        a.left = isFinite(a.left) ? a.left : d.w - a.right;
                        a.top = isFinite(a.top) ? a.top : d.h - a.bottom;
                        delete a.right;
                        delete a.bottom;
                        this.position = e.mixin(e.clone(this.position), a)
                    },
                    makePositionInfoBox: function() {
                        this._positionInfoBox = {
                            w: this.position.width || 400,
                            h: this.position.height || 410,
                            l: this.position.left || 0,
                            t: this.position.top || 0
                        }
                    },
                    _makeOriginalBox: function() {
                        this._originalBox = {
                            w: this.position.width || 400,
                            h: this.position.height || 410,
                            l: this.position.left || 0,
                            t: this.position.top || 0
                        }
                    },
                    makeResizable: function() {
                        this.disableResizable();
                        this.resizeHandle = (new k({
                            targetId: this,
                            minWidth: this._originalBox.w,
                            minHeight: this._originalBox.h,
                            activeResize: !1
                        })).placeAt(this.domNode);
                        this.resizeHandle.startup()
                    },
                    disableResizable: function() {
                        this.resizeHandle && (this.resizeHandle.destroy(), this.resizeHandle = null)
                    },
                    makeMoveable: function(a, k) {
                        this.disableMoveable();
                        var n = f.getMarginBox(jimuConfig.layoutId);
                        n.l = n.l - a + k;
                        n.w += 2 * (a - k);
                        this.moveable = new d.boxConstrainedMoveable(this.domNode, {
                            box: n,
                            handle: this.titleNode,
                            within: !0
                        });
                        this.own(h(this.moveable,
                            "Moving", e.hitch(this, this.onMoving)));
                        this.own(h(this.moveable, "MoveStop", e.hitch(this, this.onMoveStop)))
                    },
                    disableMoveable: function() {
                        this.moveable && (this.moveable.destroy(), this.moveable = null)
                    },
                    createHandleNode: function() {
                        return this.titleNode
                    },
                    onOpen: function() {
                        this._resizeOnOpen && (this.resize(), this._resizeOnOpen = !1);
                        this.inherited(arguments)
                    },
                    _switchToMobileUI: function() {
                        f.removeClass(this.titleNode, "title-normal");
                        f.addClass(this.titleNode, "title-full");
                        f.setStyle(this.foldableNode, "display",
                            "block");
                        f.setStyle(this.maxNode, "display", "block");
                        "normal" === this.windowState ? (f.removeClass(this.foldableNode, "fold-up"), f.addClass(this.foldableNode, "fold-down")) : (f.removeClass(this.foldableNode, "fold-down"), f.addClass(this.foldableNode, "fold-up"))
                    },
                    _switchToDesktopUI: function() {
                        f.removeClass(this.titleNode, "title-full");
                        f.addClass(this.titleNode, "title-normal");
                        f.setStyle(this.foldableNode, "display", "none");
                        f.setStyle(this.maxNode, "display", "none")
                    },
                    resize: function(a) {
                        var d = this._getPositionInfo(),
                            f = {
                                left: d.position.left,
                                top: d.position.top,
                                width: this._positionInfoBox.w,
                                height: this._positionInfoBox.h
                            };
                        a && (a.t = this.domNode.offsetTop, f.left = isFinite(a.l) ? a.l : f.left, f.top = isFinite(a.t) ? a.t : f.top, f.width = isFinite(a.w) ? a.w : f.width, f.height = isFinite(a.h) ? a.h : f.height, this._normalizePositionObj(e.clone(f)), this.makePositionInfoBox(), f.width = this._positionInfoBox.w, f.height = this._positionInfoBox.h);
                        d.position = f;
                        this._onResponsible(d);
                        this.inherited(arguments)
                    },
                    _onResponsible: function(a) {
                        a.isRunInMobile ?
                            (this._setMobilePosition(), this.disableMoveable(), this.disableResizable(), this._switchToMobileUI()) : (this._setDesktopPosition(a.position), this.makeResizable(), this.makeMoveable(this._positionInfoBox.w, 0.25 * this._positionInfoBox.w), this._switchToDesktopUI())
                    },
                    setPosition: function(a) {
                        this._normalizePositionObj(a);
                        this.makePositionInfoBox();
                        a = this._getPositionInfo();
                        this._onResponsible(a)
                    },
                    destroy: function() {
                        this.widgetIcon = null;
                        this.inherited(arguments)
                    },
                    _getLayoutBox: function() {
                        var a = jimuConfig.layoutId,
                            a = "map" === this.position.relativeTo ? jimuConfig.mapId : jimuConfig.layoutId;
                        return f.getMarginBox(a)
                    },
                    _getPositionInfo: function() {
                        var a = {
                                isRunInMobile: !1,
                                position: {
                                    left: 0,
                                    top: 5
                                }
                            },
                            d = this._getLayoutBox(),
                            e = this._positionInfoBox.l;
                        if (window.appInfo.isRunInMobile) return a.isRunInMobile = !0, a;
                        a.position.left = window.isRTL ? d.w - e : e;
                        var e = this._positionInfoBox.t,
                            f = d.h - e;
                        e >= f ? e >= this._positionInfoBox.h && (a.position.top = this._positionInfoBox.t - this._positionInfoBox.h - 40 - 3) : f >= this._positionInfoBox.h && (a.position.top =
                            this._positionInfoBox.t + 40 + 3);
                        !a.isRunInMobile && a.position.left + this._positionInfoBox.w > d.w && (a.position.left -= this._positionInfoBox.w);
                        return a
                    },
                    _setMobilePosition: function() {
                        window.appInfo.isRunInMobile && (this.domNode && this.domNode.parentNode !== f.byId(jimuConfig.layoutId)) && f.place(this.domNode, jimuConfig.layoutId);
                        var c = this.panelManager.getPositionOnMobile(this);
                        this.position.zIndex && (c.zIndex = this.position.zIndex);
                        var d = a.getPositionStyle(c);
                        e.mixin(d, c.borderRadiusStyle);
                        f.setStyle(this.domNode,
                            d)
                    },
                    _setDesktopPosition: function(a) {
                        !window.appInfo.isRunInMobile && (this.domNode && this.domNode.parentNode !== f.byId(jimuConfig.mapId)) && f.place(this.domNode, jimuConfig.mapId);
                        f.setStyle(this.domNode, {
                            left: a.left + "px",
                            right: "auto",
                            top: a.top + "px",
                            width: (a.width || this.position.width || this._originalBox.w) + "px",
                            height: (a.height || this.position.height || this._originalBox.h) + "px"
                        })
                    },
                    onMoving: function(a) {
                        f.setStyle(a.node, "opacity", 0.9)
                    },
                    onMoveStop: function(a) {
                        f.setStyle(a.node, "opacity", 1);
                        a = f.getMarginBox(a.node);
                        this._normalizePositionObj(e.clone({
                            left: a.l,
                            top: a.t,
                            width: a.w,
                            height: a.h
                        }));
                        this.makePositionInfoBox()
                    }
                })
            })
        },
        "dojox/layout/ResizeHandle": function() {
            define("dojo/_base/kernel dojo/_base/lang dojo/_base/connect dojo/_base/array dojo/_base/event dojo/_base/fx dojo/_base/window dojo/fx dojo/dom dojo/dom-class dojo/dom-geometry dojo/dom-style dojo/_base/declare dojo/touch dijit/_base/manager dijit/_Widget dijit/_TemplatedMixin".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b) {
                p.experimental("dojox.layout.ResizeHandle");
                var v = r("dojox.layout._ResizeHelper", t, {
                    show: function() {
                        n.set(this.domNode, "display", "")
                    },
                    hide: function() {
                        n.set(this.domNode, "display", "none")
                    },
                    resize: function(a) {
                        s.setMarginBox(this.domNode, a)
                    }
                });
                return r("dojox.layout.ResizeHandle", [t, b], {
                    targetId: "",
                    targetContainer: null,
                    resizeAxis: "xy",
                    activeResize: !1,
                    activeResizeClass: "dojoxResizeHandleClone",
                    animateSizing: !0,
                    animateMethod: "chain",
                    animateDuration: 225,
                    minHeight: 100,
                    minWidth: 100,
                    constrainMax: !1,
                    maxHeight: 0,
                    maxWidth: 0,
                    fixedAspect: !1,
                    intermediateChanges: !1,
                    startTopic: "/dojo/resize/start",
                    endTopic: "/dojo/resize/stop",
                    templateString: '\x3cdiv dojoAttachPoint\x3d"resizeHandle" class\x3d"dojoxResizeHandle"\x3e\x3cdiv\x3e\x3c/div\x3e\x3c/div\x3e',
                    postCreate: function() {
                        this.connect(this.resizeHandle, l.press, "_beginSizing");
                        this.activeResize ? this.animateSizing = !1 : (this._resizeHelper = g.byId("dojoxGlobalResizeHelper"), this._resizeHelper || (this._resizeHelper = (new v({
                            id: "dojoxGlobalResizeHelper"
                        })).placeAt(q.body()), c.add(this._resizeHelper.domNode, this.activeResizeClass)));
                        this.minSize || (this.minSize = {
                            w: this.minWidth,
                            h: this.minHeight
                        });
                        this.constrainMax && (this.maxSize = {
                            w: this.maxWidth,
                            h: this.maxHeight
                        });
                        this._resizeX = this._resizeY = !1;
                        var a = e.partial(c.add, this.resizeHandle);
                        switch (this.resizeAxis.toLowerCase()) {
                            case "xy":
                                this._resizeX = this._resizeY = !0;
                                a("dojoxResizeNW");
                                break;
                            case "x":
                                this._resizeX = !0;
                                a("dojoxResizeW");
                                break;
                            case "y":
                                this._resizeY = !0, a("dojoxResizeN")
                        }
                    },
                    _beginSizing: function(a) {
                        if (!this._isSizing && (f.publish(this.startTopic, [this]), this.targetDomNode =
                                (this.targetWidget = g.byId(this.targetId)) ? this.targetWidget.domNode : k.byId(this.targetId), this.targetContainer && (this.targetDomNode = this.targetContainer), this.targetDomNode)) {
                            if (!this.activeResize) {
                                var b = s.position(this.targetDomNode, !0);
                                this._resizeHelper.resize({
                                    l: b.x,
                                    t: b.y,
                                    w: b.w,
                                    h: b.h
                                });
                                this._resizeHelper.show();
                                this.isLeftToRight() || (this._resizeHelper.startPosition = {
                                    l: b.x,
                                    t: b.y
                                })
                            }
                            this._isSizing = !0;
                            this.startPoint = {
                                x: a.clientX,
                                y: a.clientY
                            };
                            var b = n.getComputedStyle(this.targetDomNode),
                                c = "border-model" ===
                                s.boxModel ? {
                                    w: 0,
                                    h: 0
                                } : s.getPadBorderExtents(this.targetDomNode, b),
                                e = s.getMarginExtents(this.targetDomNode, b);
                            this.startSize = {
                                w: n.get(this.targetDomNode, "width", b),
                                h: n.get(this.targetDomNode, "height", b),
                                pbw: c.w,
                                pbh: c.h,
                                mw: e.w,
                                mh: e.h
                            };
                            !this.isLeftToRight() && "absolute" == n.get(this.targetDomNode, "position") && (b = s.position(this.targetDomNode, !0), this.startPosition = {
                                l: b.x,
                                t: b.y
                            });
                            this._pconnects = [f.connect(q.doc, l.move, this, "_updateSizing"), f.connect(q.doc, l.release, this, "_endSizing")];
                            d.stop(a)
                        }
                    },
                    _updateSizing: function(a) {
                        if (this.activeResize) this._changeSizing(a);
                        else {
                            var b = this._getNewCoords(a, "border", this._resizeHelper.startPosition);
                            if (!1 === b) return;
                            this._resizeHelper.resize(b)
                        }
                        a.preventDefault()
                    },
                    _getNewCoords: function(a, b, c) {
                        try {
                            if (!a.clientX || !a.clientY) return !1
                        } catch (d) {
                            return !1
                        }
                        this._activeResizeLastEvent = a;
                        var e = (this.isLeftToRight() ? 1 : -1) * (this.startPoint.x - a.clientX),
                            g = this.startPoint.y - a.clientY;
                        a = this.startSize.w - (this._resizeX ? e : 0);
                        g = this._checkConstraints(a, this.startSize.h - (this._resizeY ? g : 0));
                        if ((c = c || this.startPosition) && this._resizeX) g.l =
                            c.l + e, g.w != a && (g.l += a - g.w), g.t = c.t;
                        switch (b) {
                            case "margin":
                                g.w += this.startSize.mw, g.h += this.startSize.mh;
                            case "border":
                                g.w += this.startSize.pbw, g.h += this.startSize.pbh
                        }
                        return g
                    },
                    _checkConstraints: function(a, b) {
                        if (this.minSize) {
                            var c = this.minSize;
                            a < c.w && (a = c.w);
                            b < c.h && (b = c.h)
                        }
                        this.constrainMax && this.maxSize && (c = this.maxSize, a > c.w && (a = c.w), b > c.h && (b = c.h));
                        if (this.fixedAspect) {
                            var c = this.startSize.w,
                                d = this.startSize.h,
                                e = c * b - d * a;
                            0 > e ? a = b * c / d : 0 < e && (b = a * d / c)
                        }
                        return {
                            w: a,
                            h: b
                        }
                    },
                    _changeSizing: function(b) {
                        var c =
                            this.targetWidget && e.isFunction(this.targetWidget.resize),
                            d = this._getNewCoords(b, c && "margin");
                        if (!1 !== d && (c ? this.targetWidget.resize(d) : this.animateSizing ? a[this.animateMethod]([m.animateProperty({
                                    node: this.targetDomNode,
                                    properties: {
                                        width: {
                                            start: this.startSize.w,
                                            end: d.w
                                        }
                                    },
                                    duration: this.animateDuration
                                }), m.animateProperty({
                                    node: this.targetDomNode,
                                    properties: {
                                        height: {
                                            start: this.startSize.h,
                                            end: d.h
                                        }
                                    },
                                    duration: this.animateDuration
                                })]).play() : n.set(this.targetDomNode, {
                                    width: d.w + "px",
                                    height: d.h + "px"
                                }),
                                this.intermediateChanges)) this.onResize(b)
                    },
                    _endSizing: function(a) {
                        h.forEach(this._pconnects, f.disconnect);
                        var b = e.partial(f.publish, this.endTopic, [this]);
                        this.activeResize ? b() : (this._resizeHelper.hide(), this._changeSizing(a), setTimeout(b, this.animateDuration + 15));
                        this._isSizing = !1;
                        this.onResize(a)
                    },
                    onResize: function(a) {}
                })
            })
        },
        "jimu/LayerInfos/LayerInfoForCollection": function() {
            define(["dojo/_base/declare", "dojo/_base/array", "esri/graphicsUtils", "./LayerInfo", "./LayerInfoFactory"], function(p, e, f,
                h, d) {
                return p(h, {
                    constructor: function() {
                        this.layerObject = {
                            declaredClass: "esri.layers.FeatureCollection",
                            type: "FeatureCollection",
                            empty: !0
                        }
                    },
                    getExtent: function() {
                        var d = [],
                            h;
                        e.forEach(this.originOperLayer.featureCollection.layers, function(a) {
                            d = d.concat(a.layerObject.graphics)
                        });
                        0 === d.length ? h = null : (h = 1 === d.length ? d[0].getLayer().fullExtent : f.graphicsExtent(d), h = this._convertGeometryToMapSpatialRef(h));
                        return h
                    },
                    _resetLayerObjectVisiblity: function(d) {
                        var f = d ? d[this.id] : null;
                        f && (e.forEach(this.newSubLayers,
                            function(a) {
                                var e = d ? d[a.id] : null;
                                e && a.layerObject.setVisibility(e.visible)
                            }, this), this._setTopLayerVisible(f.visible))
                    },
                    initVisible: function() {
                        var d = !1,
                            e;
                        for (e = 0; e < this.newSubLayers.length; e++) d = d || this.newSubLayers[e].layerObject.visible;
                        d && (this._visible = !0)
                    },
                    _setTopLayerVisible: function(d) {
                        this._visible = d ? !0 : !1;
                        e.forEach(this.newSubLayers, function(d) {
                            d.setLayerVisiblefromTopLayer()
                        }, this);
                        this._onVisibilityChanged()
                    },
                    obtainNewSubLayers: function() {
                        var f = [];
                        e.forEach(this.originOperLayer.featureCollection.layers,
                            function(e) {
                                this._getLayerIndexesInMapByLayerId(e.layerObject.id) && (e = d.getInstance().create({
                                    layerObject: e.layerObject,
                                    title: e.layerObject.label || e.layerObject.title || e.layerObject.name || e.layerObject.id || " ",
                                    id: e.id || " ",
                                    collection: {
                                        layerInfo: this
                                    },
                                    selfType: "collection",
                                    showLegend: e.showLegend,
                                    parentLayerInfo: this
                                }), f.push(e), e.init())
                            }, this);
                        f.reverse();
                        return f
                    },
                    _obtainLayerIndexesInMap: function() {
                        var d = [],
                            e, a;
                        for (a = 0; a < this.newSubLayers.length; a++)(e = this._getLayerIndexesInMapByLayerId(this.newSubLayers[a].layerObject.id)) &&
                            d.push(e);
                        return d
                    },
                    moveLeftOfIndex: function(d) {
                        var e;
                        for (e = this.newSubLayers.length - 1; 0 <= e; e--) this.map.reorderLayer(this.newSubLayers[e].layerObject, d)
                    },
                    moveRightOfIndex: function(d) {
                        var e;
                        for (e = 0; e < this.newSubLayers.length; e++) this.map.reorderLayer(this.newSubLayers[e].layerObject, d)
                    },
                    _getShowLegendOfWebmap: function() {
                        return void 0 !== this.originOperLayer.featureCollection.showLegend ? this.originOperLayer.featureCollection.showLegend : !0
                    },
                    getScaleRange: function() {
                        var d = this.getSubLayers();
                        return d[0] ?
                            d[0].getScaleRange() : {
                                minScale: 0,
                                maxScale: 0
                            }
                    }
                })
            })
        },
        "jimu/LayerInfos/LayerInfo": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/Deferred dojo/promise/all dojo/dom-construct dojo/topic dojo/aspect jimu/portalUrlUtils jimu/portalUtils esri/request esri/config esri/tasks/ProjectParameters esri/SpatialReference esri/geometry/webMercatorUtils".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g) {
                var t = p(null, {
                    originOperLayer: null,
                    layerObject: null,
                    map: null,
                    title: null,
                    id: null,
                    newSubLayers: null,
                    parentLayerInfo: null,
                    _oldIsShowInMap: null,
                    _oldFilter: null,
                    _eventHandles: null,
                    constructor: function(a, c) {
                        this.originOperLayer = a;
                        this.layerObject = a.layerObject;
                        this.map = c;
                        this.title = this.originOperLayer.title;
                        this.id = this.originOperLayer.id;
                        this.parentLayerInfo = a.parentLayerInfo ? a.parentLayerInfo : null;
                        this.nls = window.jimuNls.layerInfosMenu;
                        this._eventHandles = []
                    },
                    init: function() {
                        this.newSubLayers = this.obtainNewSubLayers();
                        this.initVisible();
                        this.originOperLayer.popupInfo && (this.popupVisible = !0);
                        this._oldIsShowInMap =
                            this.isShowInMap();
                        this._initOldFilter();
                        this._bindEvent()
                    },
                    _initOldFilter: function() {
                        this._oldFilter = null
                    },
                    isGraphicLayer: function() {
                        var a = this._obtainLayerIndexesInMap();
                        return a.length ? a[0].isGraphicLayer : !1
                    },
                    obtainLayerIndexesInMap: function() {
                        return this._obtainLayerIndexesInMap()
                    },
                    getExtent: function() {},
                    getOpacity: function() {
                        var a, c = 0;
                        for (a = 0; a < this.newSubLayers.length; a++)
                            if (this.newSubLayers[a].layerObject.opacity) c = this.newSubLayers[a].layerObject.opacity > c ? this.newSubLayers[a].layerObject.opacity :
                                c;
                            else return 1;
                        return c
                    },
                    setOpacity: function(a) {
                        e.forEach(this.newSubLayers, function(c) {
                            c.layerObject.setOpacity && c.layerObject.setOpacity(a)
                        })
                    },
                    moveLayerByIndex: function(a) {
                        this.map.reorderLayer(this.layerObject, a)
                    },
                    traversal: function(a) {
                        if (a(this)) return !0;
                        for (var c = this.getSubLayers(), d = 0; d < c.length; d++)
                            if (c[d].traversal(a)) return !0
                    },
                    findLayerInfoById: function(a) {
                        var c = null,
                            d = 0;
                        if (this.id && this.id === a) return this;
                        for (d = 0; d < this.newSubLayers.length && !(c = this.newSubLayers[d].findLayerInfoById(a)); d++);
                        return c
                    },
                    setTopLayerVisible: function(a) {
                        this._setTopLayerVisible(a)
                    },
                    _setTopLayerVisible: function(a) {},
                    setSubLayerVisible: function(a, c) {},
                    setLayerVisiblefromTopLayer: function() {},
                    _resetLayerObjectVisiblity: function() {},
                    resetLayerObjectVisibility: function(a) {
                        var c = a ? a[this.id] : null;
                        this.isRootLayer && c && this._resetLayerObjectVisiblity(a)
                    },
                    initVisible: function() {},
                    isVisible: function() {
                        return this._visible ? !0 : !1
                    },
                    _obtainLayerIndexesInMap: function() {
                        var a = [],
                            c;
                        (c = this._getLayerIndexesInMapByLayerId(this.id)) &&
                        a.push(c);
                        return a
                    },
                    _getLayerIndexesInMapByLayerId: function(a) {
                        var c;
                        for (c = 0; c < this.map.graphicsLayerIds.length; c++)
                            if (this.map.graphicsLayerIds[c] === a) return {
                                isGraphicLayer: !0,
                                index: c
                            };
                        for (c = 0; c < this.map.layerIds.length; c++)
                            if (this.map.layerIds[c] === a) return {
                                isGraphicLayer: !1,
                                index: c
                            };
                        return null
                    },
                    _convertGeometryToMapSpatialRef: function(a) {
                        var c = new h;
                        if (this.map.spatialReference.equals(a.spatialReference)) return c.resolve([a]), c;
                        if (this.map.spatialReference.isWebMercator() && a.spatialReference.equals(new l(4326))) return c.resolve([g.geographicToWebMercator(a)]),
                            c;
                        if (this.map.spatialReference.equals(new l(4326)) && a.spatialReference.isWebMercator()) return c.resolve([g.webMercatorToGeographic(a)]), c;
                        c = new r;
                        c.geometries = [a];
                        c.outSR = this.map.spatialReference;
                        return n.defaults.geometryService.project(c)
                    },
                    _isShowInMapChanged: function() {
                        var a = !1,
                            c = this.isShowInMap();
                        !1 === c && this.map.infoWindow.hide();
                        this._oldIsShowInMap !== c && (this._oldIsShowInMap = c, a = !0);
                        return a
                    },
                    _isShowInMapChanged2: function() {
                        var a = [];
                        this.traversal(function(c) {
                            c._isShowInMapChanged() && a.push(c)
                        });
                        q.publish("layerInfos/layerInfo/isShowInMapChanged", a)
                    },
                    _visibleChanged: function() {
                        q.publish("layerInfos/layerInfo/visibleChanged", [this])
                    },
                    obtainNewSubLayers: function() {
                        return []
                    },
                    createLegendsNode: function() {
                        return m.create("div", {
                            "class": "legends-div"
                        })
                    },
                    drawLegends: function(a, c) {},
                    _getLayerTypesOfSupportTable: function() {
                        return "FeatureLayer,CSVLayer,Table,ArcGISImageServiceLayer,StreamLayer,ArcGISImageServiceVectorLayer"
                    },
                    _getShowLegendOfWebmap: function() {
                        return void 0 !== this.originOperLayer.showLegend ?
                            this.originOperLayer.showLegend : !0
                    },
                    getLayerObject: function() {
                        var a = new h;
                        this.layerObject ? a.resolve(this.layerObject) : a.resolve(null);
                        return a
                    },
                    getSubLayers: function() {
                        return this.newSubLayers
                    },
                    isLeaf: function() {
                        return 0 === this.getSubLayers().length ? !0 : !1
                    },
                    isRootLayer: function() {
                        return this.parentLayerInfo ? !1 : !0
                    },
                    getRootLayerInfo: function() {
                        for (var a = this; a.parentLayerInfo;) a = a.parentLayerInfo;
                        return a
                    },
                    isShowInMap: function() {
                        for (var a = !0, c = this; c;) a = a && c.isVisible(), c = c.parentLayerInfo;
                        return a
                    },
                    getLayerType: function() {
                        var a = [null],
                            c = new h;
                        this.layerObject.declaredClass && (a = this.layerObject.declaredClass.split("."));
                        c.resolve(a[a.length - 1]);
                        return c
                    },
                    getPopupInfo: function() {
                        return this.originOperLayer.popupInfo
                    },
                    loadInfoTemplate: function() {
                        var a = new h;
                        a.resolve(null);
                        return a
                    },
                    getInfoTemplate: function() {
                        return null
                    },
                    getFilterOfWebmap: function() {
                        return this.originOperLayer.layerDefinition ? this.originOperLayer.layerDefinition.definitionExpression : null
                    },
                    getFilter: function() {
                        return null
                    },
                    setFilter: function() {},
                    getShowLegendOfWebmap: function() {
                        for (var a = this, c = !0; a;) c = c && a._getShowLegendOfWebmap(), a = a.parentLayerInfo;
                        return c
                    },
                    getUrl: function() {
                        return this.layerObject.url || this.layerObject._url
                    },
                    hasLayerTypes: function(a) {},
                    getSupportTableInfo: function() {
                        var a = new h,
                            c = {
                                isSupportedLayer: !1,
                                isSupportQuery: !1,
                                layerType: null
                            },
                            e = this.getLayerType(),
                            g = this.getLayerObject();
                        d({
                            type: e,
                            layerObject: g
                        }).then(f.hitch(this, function(d) {
                            var e = d.type;
                            d = d.layerObject;
                            c.layerType = e;
                            0 <= this._getLayerTypesOfSupportTable().indexOf(e) &&
                                (c.isSupportedLayer = !0);
                            if (d)
                                if (this.parentLayerInfo && this.parentLayerInfo.isMapNotesLayerInfo()) c.isSupportQuery = !1;
                                else {
                                    if (!d.url || d.capabilities && 0 <= d.capabilities.indexOf("Query")) c.isSupportQuery = !0
                                }
                            else c.isSupportQuery = !1;
                            a.resolve(c)
                        }), function() {
                            a.resolve(c)
                        });
                        return a
                    },
                    getRelatedTableInfoArray: function(a) {
                        a = new h;
                        a.resolve([]);
                        return a
                    },
                    removeSubLayerById: function(a) {
                        var c = [];
                        e.forEach(this.newSubLayers, function(d) {
                            d.id !== a && c.push(d)
                        });
                        this.newSubLayers = c
                    },
                    destroy: function() {
                        e.forEach(this._eventHandles,
                            function(a) {
                                a.remove()
                            });
                        this.inherited(arguments)
                    },
                    destroyLayerInfo: function() {
                        e.forEach(this.newSubLayers, function(a) {
                            a.destroyLayerInfo()
                        });
                        this.destroy()
                    },
                    isMapNotesLayerInfo: function() {
                        return this.originOperLayer.featureCollection && 0 === this.id.indexOf("mapNotes_") && "ArcGISFeatureLayer" === this.originOperLayer.layerType && !this.map.getLayer(this.id) ? !0 : !1
                    },
                    getScaleRange: function() {
                        return this.layerObject && 0 <= this.layerObject.minScale && 0 <= this.layerObject.maxScale ? {
                            minScale: this.layerObject.minScale,
                            maxScale: this.layerObject.maxScale
                        } : {
                            minScale: 0,
                            maxScale: 0
                        }
                    },
                    isCurrentScaleInTheScaleRange: function() {
                        var a = this.getScaleRange(),
                            c = this.map.getScale();
                        return 0 === a.minScale && 0 === a.maxScale ? !0 : (0 === a.minScale || a.minScale > c) && (0 === a.maxScale || c > a.maxScale) ? !0 : !1
                    },
                    isInScale: function() {
                        for (var a = !0, c = this; c && !(a = c.isCurrentScaleInTheScaleRange(), c = c.parentLayerInfo, !a););
                        return a
                    },
                    enablePopup: function() {},
                    disablePopup: function() {},
                    isPopupEnabled: function() {
                        return !1
                    },
                    getCapabilitiesOfWebMap: function() {
                        return this.originOperLayer.capabilities
                    },
                    isItemLayer: function() {
                        return this.originOperLayer.itemId || this.layerObject._itemId
                    },
                    getItemInfo: function() {
                        var a = new h,
                            c = this.getRootLayerInfo();
                        if (c.isItemLayer()) {
                            var d = new t.ItemInfo(c);
                            d.onLoad().then(f.hitch(this, function() {
                                a.resolve(d)
                            }))
                        } else a.resolve(null);
                        return a
                    },
                    isHostedLayer: function() {
                        var a = new h,
                            c = this.getUrl();
                        c ? s({
                            url: c,
                            content: {
                                f: "json"
                            },
                            handleAs: "json",
                            callbackParamName: "callback"
                        }).then(f.hitch(this, function(c) {
                            a.resolve(c && c.serviceItemId ? !0 : !1)
                        })) : a.resolve(!1);
                        return a
                    },
                    _bindEvent: function() {
                        var b;
                        this.layerObject && !this.layerObject.empty && (b = this.layerObject.on("visibility-change", f.hitch(this, this._onVisibilityChanged)), this._eventHandles.push(b), b = a.after(this.layerObject, "setDefinitionExpression", f.hitch(this, this._onFilterChanged)), this._eventHandles.push(b), b = a.after(this.layerObject, "setRenderer", f.hitch(this, this._onRendererChanged)), this._eventHandles.push(b))
                    },
                    _onVisibilityChanged: function() {
                        this.initVisible();
                        this._visibleChanged();
                        this._isShowInMapChanged2()
                    },
                    _onFilterChanged: function() {
                        var a =
                            this._oldFilter ? this._oldFilter : null,
                            c = this.layerObject.getDefinitionExpression(),
                            c = c ? c : null;
                        a !== c && (q.publish("layerInfos/layerInfo/filterChanged", [this]), this._oldFilter = c)
                    },
                    _onRendererChanged: function() {
                        q.publish("layerInfos/layerInfo/rendererChanged", [this])
                    }
                });
                t.ItemInfo = p(null, {
                    originItemInfo: null,
                    _itemInfoLoadedDef: null,
                    _layerDefinition: null,
                    constructor: function(a) {
                        this._itemInfoLoadedDef = new h;
                        if (a = a.isItemLayer()) {
                            var d = window.appConfig || window.getAppConfig(),
                                d = k.getStandardPortalUrl(d &&
                                    d.map.portalUrl || window.portalUrl);
                            c.getPortal(d).getItemById(a).then(f.hitch(this, function(a) {
                                this.originItemInfo = a;
                                this._itemInfoLoadedDef.resolve(this)
                            }), f.hitch(this, function(a) {
                                a && a.message && console.log(a.message);
                                this._itemInfoLoadedDef.resolve(this)
                            }))
                        } else this._itemInfoLoadedDef.resolve(this)
                    },
                    onLoad: function() {
                        return this._itemInfoLoadedDef
                    }
                });
                return t
            })
        },
        "jimu/LayerInfos/LayerInfoForMapService": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/Deferred dojo/json dojo/aspect dojo/topic ./LayerInfo esri/request esri/lang ./LayerInfoFactory".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s) {
                    return p(a, {
                        _legendInfo: null,
                        _sublayerIdent: null,
                        controlPopupInfo: null,
                        _jsapiLayerInfos: null,
                        _oldFilter: null,
                        constructor: function(a, c) {
                            this._initJsapiLayerInfos();
                            this.initSubLayerVisible();
                            this._initSubLayerIdent();
                            this._initControlPopup()
                        },
                        _initOldFilter: function() {
                            this._oldFilter = this.layerObject && this.layerObject.layerDefinitions ? this.layerObject.layerDefinitions : []
                        },
                        _initJsapiLayerInfos: function() {
                            var a = e.filter(this.originOperLayer.layers, function(a) {
                                return c.isDefined(a.id) &&
                                    c.isDefined(a.name) && c.isDefined(a.minScale) && c.isDefined(a.maxScale) && c.isDefined(a.parentLayerId) && c.isDefined(a.defaultVisibility)
                            });
                            this._jsapiLayerInfos = 0 < a.length ? a : this.layerObject.layerInfos
                        },
                        _initControlPopup: function() {
                            this.controlPopupInfo = {
                                enablePopup: void 0,
                                infoTemplates: f.clone(this.layerObject.infoTemplates)
                            };
                            this.layerObject._infoTemplates = f.clone(this.layerObject.infoTemplates);
                            m.after(this.layerObject, "setInfoTemplates", f.hitch(this, function() {
                                this.layerObject._infoTemplates = f.clone(this.layerObject.infoTemplates);
                                this.controlPopupInfo.infoTemplates = f.clone(this.layerObject.infoTemplates);
                                this.traversal(function(a) {
                                    a._afterSetInfoTemplates && a._afterSetInfoTemplates()
                                })
                            }))
                        },
                        _initSubLayerIdent: function() {
                            this._sublayerIdent = {
                                definitions: {},
                                empty: !0,
                                defLoad: new h
                            }
                        },
                        initSubLayerVisible: function(a) {
                            this.subLayerVisible = {};
                            for (var c = 0; c < this._jsapiLayerInfos.length; c++) this.subLayerVisible[this._jsapiLayerInfos[c].id] = 0;
                            a ? e.forEach(a, function(a) {
                                    this.subLayerVisible[a]++
                                }, this) : this.originOperLayer.visibleLayers ?
                                e.forEach(this.originOperLayer.visibleLayers, function(a) {
                                    this.subLayerVisible[a]++
                                }, this) : e.forEach(this._jsapiLayerInfos, function(a) {
                                    a.defaultVisibility && this.subLayerVisible[a.id]++
                                }, this)
                        },
                        getExtent: function() {
                            return this._convertGeometryToMapSpatialRef(this.originOperLayer.layerObject.fullExtent || this.originOperLayer.layerObject.initialExtent)
                        },
                        _resetLayerObjectVisiblity: function(a) {
                            var d = a ? a[this.id] : null;
                            if (a && (d && this.layerObject.setVisibility(d.visible), "esri.layers.ArcGISDynamicMapServiceLayer" ===
                                    this.layerObject.declaredClass)) {
                                var l = !1,
                                    g = [];
                                e.forEach(this._jsapiLayerInfos, function(b) {
                                    var d = this.id + "_" + b.id;
                                    c.isDefined(a[d]) && (l = !0, a[d].visible && g.push(b.id))
                                }, this);
                                if (l) {
                                    this.initSubLayerVisible(g);
                                    this.traversal(function(a) {
                                        a.initVisible()
                                    });
                                    var f = {};
                                    this.traversal(function(a) {
                                        0 === a.getSubLayers().length && (f[a.originOperLayer.mapService.subId] = a.isVisbleOrInvisilbe())
                                    });
                                    this.setSubLayerVisible(f)
                                }
                            }
                        },
                        initVisible: function() {
                            this._visible = this.originOperLayer.layerObject.visible
                        },
                        _setTopLayerVisible: function(a) {
                            this.originOperLayer.layerObject.setVisibility(a);
                            this._visible = a
                        },
                        setSubLayerVisible: function(a) {
                            var c = [-1, -1, -1],
                                d, g = [],
                                f = e.filter(this.originOperLayer.layerObject.visibleLayers, function(a) {
                                    return -1 !== a
                                });
                            e.forEach(f, function(a) {
                                this._isGroupLayerBySubId(a) || g.push(a)
                            }, this);
                            var f = g,
                                b;
                            for (b in a)
                                if (a.hasOwnProperty(b) && "function" !== typeof a[b]) {
                                    var k = Number(b);
                                    a[b] ? (d = e.indexOf(f, k), 0 > d && f.push(k)) : (d = e.indexOf(f, k), 0 <= d && f.splice(d, 1))
                                }
                            c = c.concat(f);
                            this.originOperLayer.layerObject.setVisibleLayers(c)
                        },
                        obtainNewSubLayers: function() {
                            var a = [],
                                c =
                                this.originOperLayer.layerObject,
                                d = null,
                                d = "esri.layers.ArcGISDynamicMapServiceLayer" === c.declaredClass ? "dynamic" : "tiled";
                            e.forEach(this._jsapiLayerInfos, function(e) {
                                var b = null,
                                    b = c.url + "/" + e.id,
                                    g = c.id + "_" + e.id;
                                e.subLayerIds && 0 < e.subLayerIds.length ? (b = {
                                    url: b,
                                    empty: !0
                                }, this._addNewSubLayer(a, b, g, e, d + "_group")) : (b = {
                                    url: b,
                                    empty: !0
                                }, this._addNewSubLayer(a, b, g, e, d))
                            }, this);
                            var g = [];
                            e.forEach(this._jsapiLayerInfos, function(c, b) {
                                var d = c.parentLayerId;
                                if (-1 !== d) {
                                    for (var e = null, g = 0; g < a.length; g++)
                                        if (a[g].mapService.subId ===
                                            d) {
                                            e = a[g];
                                            break
                                        }(d = e) && d.subLayers.push(a[b])
                                }
                            }, this);
                            e.forEach(this._jsapiLayerInfos, function(c, b) {
                                var d; - 1 === c.parentLayerId && (d = s.getInstance().create(a[b]), g.push(d), d.init())
                            }, this);
                            return g
                        },
                        _addNewSubLayer: function(a, c, d, e, f) {
                            a.push({
                                layerObject: c,
                                title: e.name || e.id || " ",
                                id: d || " ",
                                subLayers: [],
                                mapService: {
                                    layerInfo: this,
                                    subId: e.id
                                },
                                selfType: "mapservice_" + f,
                                parentLayerInfo: this
                            })
                        },
                        _handleErrorSubLayer: function(a, c, d, e, f, b) {
                            a[c] = {
                                layerObject: null,
                                title: b.name || b.id || " ",
                                id: d || " ",
                                subLayers: [],
                                mapService: {
                                    layerInfo: this,
                                    subId: e
                                }
                            }
                        },
                        getOpacity: function() {
                            return this.layerObject.opacity ? this.layerObject.opacity : 1
                        },
                        setOpacity: function(a) {
                            this.layerObject.setOpacity && this.layerObject.setOpacity(a)
                        },
                        getLegendInfo: function(a) {
                            var c = new h;
                            this._legendInfo ? c.resolve(this._legendInfo) : this._legendRequest(a).then(f.hitch(this, function(a) {
                                this._legendInfo = a.layers;
                                c.resolve(this._legendInfo)
                            }), function() {
                                c.reject()
                            });
                            return c
                        },
                        _legendRequest: function(a) {
                            return 10.01 <= this.layerObject.version ? this._legendRequestServer() :
                                this._legendRequestTools(a)
                        },
                        _legendRequestServer: function() {
                            var a = this.layerObject.url + "/legend",
                                c = {
                                    f: "json"
                                };
                            this.layerObject._params.dynamicLayers && (c.dynamicLayers = d.stringify(this._createDynamicLayers(this.layerObject)), "[{}]" === c.dynamicLayers && (c.dynamicLayers = "[]"));
                            return k({
                                url: a,
                                content: c,
                                handleAs: "json",
                                callbackParamName: "callback"
                            })
                        },
                        _legendRequestTools: function(a) {
                            return k({
                                url: a + "sharing/tools/legend?soapUrl\x3d" + this.layerObject.url,
                                content: {
                                    f: "json"
                                },
                                handleAs: "json",
                                callbackParamName: "callback"
                            })
                        },
                        _createDynamicLayers: function(a) {
                            var c = [],
                                d;
                            e.forEach(a.dynamicLayerInfos || a.layerInfos, function(e) {
                                d = {
                                    id: e.id
                                };
                                d.source = e.source && e.source.toJson();
                                var f;
                                a.layerDefinitions && a.layerDefinitions[e.id] && (f = a.layerDefinitions[e.id]);
                                f && (d.definitionExpression = f);
                                var b;
                                a.layerDrawingOptions && a.layerDrawingOptions[e.id] && (b = a.layerDrawingOptions[e.id]);
                                b && (d.drawingInfo = b.toJson());
                                d.minScale = e.minScale || 0;
                                d.maxScale = e.maxScale || 0;
                                c.push(d)
                            });
                            return c
                        },
                        _getLayerDefinition: function() {
                            var a = new h;
                            this._request(this.layerObject.url).then(f.hitch(this,
                                function(c) {
                                    a.resolve(c)
                                }), function(c) {
                                console.error(c.message || c);
                                a.resolve(null)
                            });
                            return a
                        },
                        _getSublayerDefinition: function(a) {
                            var c;
                            this._sublayerIdent.definitions[a] ? (c = new h, c.resolve(this._sublayerIdent.definitions[a])) : c = this._layerAndTableRequest(a);
                            return c
                        },
                        _layerAndTableRequest: function(a) {
                            return 10.11 <= this.layerObject.version ? this._allLayerAndTableServer(a) : this._allLayerAndTable(a)
                        },
                        _allLayerAndTableServer: function(a) {
                            var c = new h,
                                d = this.layerObject.url + "/layers";
                            this._sublayerIdent.empty ?
                                (this._sublayerIdent.empty = !1, this._request(d).then(f.hitch(this, function(d) {
                                    e.forEach(d.layers, function(a) {
                                        this._sublayerIdent.definitions[a.id] = a
                                    }, this);
                                    this._sublayerIdent.defLoad.resolve();
                                    c.resolve(this._sublayerIdent.definitions[a])
                                }), f.hitch(this, function(a) {
                                    console.error(a.message || a);
                                    this._sublayerIdent.defLoad.reject();
                                    this._sublayerIdent.defLoad = new h;
                                    this._sublayerIdent.empty = !0;
                                    c.resolve(null)
                                }))) : this._sublayerIdent.defLoad.then(f.hitch(this, function() {
                                        c.resolve(this._sublayerIdent.definitions[a])
                                    }),
                                    function(a) {
                                        console.error(a.message || a);
                                        c.resolve(null)
                                    });
                            return c
                        },
                        _allLayerAndTable: function(a) {
                            var c = new h;
                            this._request(this.layerObject.url + "/" + a).then(f.hitch(this, function(d) {
                                this._sublayerIdent.definitions[a] = d;
                                c.resolve(d)
                            }), function(a) {
                                console.error(a.message || a);
                                c.resolve(null)
                            });
                            return c
                        },
                        _request: function(a) {
                            return k({
                                url: a,
                                content: {
                                    f: "json"
                                },
                                handleAs: "json",
                                callbackParamName: "callback"
                            })
                        },
                        _getSublayerSettingOfWebmap: function(a) {
                            var c = e.filter(this.originOperLayer.layers, function(c) {
                                return c.id ===
                                    a
                            });
                            return 1 === c.length ? c[0] : null
                        },
                        _getSublayerShowLegendOfWebmap: function(a) {
                            return (a = this._getSublayerSettingOfWebmap(a)) ? void 0 !== a.showLegend ? a.showLegend : !0 : !0
                        },
                        _idIsInJsapiLayerInfos: function(a) {
                            return null === this._getJsapiLayerInfoById(a) ? !1 : !0
                        },
                        _getJsapiLayerInfoById: function(a) {
                            for (var c = null, d = 0; d < this._jsapiLayerInfos.length; d++) this._jsapiLayerInfos[d].id === a && (c = this._jsapiLayerInfos[d]);
                            return c
                        },
                        _isGroupLayerBySubId: function(a) {
                            return (a = this._getJsapiLayerInfoById(a)) && a.subLayerIds &&
                                0 < a.subLayerIds.length ? !0 : !1
                        },
                        _subLayerVisibleChanged: function() {
                            var a = [];
                            this.traversal(function(c) {
                                a.push(c)
                            });
                            q.publish("layerInfos/layerInfo/visibleChanged", a)
                        },
                        _bindEvent: function() {
                            var a;
                            this.inherited(arguments);
                            this.layerObject && !this.layerObject.empty && (a = this.layerObject.on("visible-layers-change", f.hitch(this, this._onVisibleLayersChanged)), this._eventHandles.push(a), a = m.after(this.layerObject, "setLayerDefinitions", f.hitch(this, this._onFilterChanged)), this._eventHandles.push(a))
                        },
                        _onVisibleLayersChanged: function(a) {
                            var c =
                                a.visibleLayers;
                            if (-1 === c[0] && -1 === c[1] && -1 === c[2]) this._subLayerVisibleChanged(), this._isShowInMapChanged2();
                            else {
                                a = [];
                                var d = [-1, -1, -1],
                                    c = this._converVisibleLayers(c);
                                a = c.visibleLayersForUpdateSubLayerVisible;
                                d = d.concat(c.visibleLayersForSetVisibleLayers);
                                this.initSubLayerVisible(a);
                                this.traversal(function(a) {
                                    a.initVisible()
                                });
                                this.layerObject.setVisibleLayers(d)
                            }
                        },
                        _converVisibleLayers: function(a) {
                            var c = {
                                visibleLayersForUpdateSubLayerVisible: [],
                                visibleLayersForSetVisibleLayers: []
                            };
                            e.forEach(a, function(c) {
                                var d =
                                    this.findLayerInfoById(this.id + "_" + c);
                                if (this._isGroupLayerBySubId(c)) d.traversal(function(c) {
                                    a.push(c.originOperLayer.mapService.subId)
                                });
                                else
                                    for (; d && d.originOperLayer.mapService;) a.push(d.originOperLayer.mapService.subId), d = d.parentLayerInfo
                            }, this);
                            e.forEach(a, function(a) {
                                0 > c.visibleLayersForUpdateSubLayerVisible.indexOf(a) && c.visibleLayersForUpdateSubLayerVisible.push(a)
                            }, this);
                            e.forEach(c.visibleLayersForUpdateSubLayerVisible, function(a) {
                                    this._isGroupLayerBySubId(a) || c.visibleLayersForSetVisibleLayers.push(a)
                                },
                                this);
                            return c
                        },
                        _onFilterChanged: function() {
                            for (var a, c = [], d = this.layerObject.layerDefinitions, e = d.length > this._oldFilter.length ? d.length : this._oldFilter.length, f = 0; f < e; f++)
                                if ((d[f] ? d[f] : null) !== (this._oldFilter[f] ? this._oldFilter[f] : null))(a = this.findLayerInfoById(this.id + "_" + f)) && a.isLeaf() && c.push(a);
                            0 < c.length && (q.publish("layerInfos/layerInfo/filterChanged", c), this._oldFilter = d)
                        }
                    })
                })
        },
        "jimu/LayerInfos/LayerInfoForKML": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang esri/graphicsUtils dojo/aspect ./LayerInfo ./LayerInfoForDefault ./LayerInfoFactory dojo/Deferred".split(" "),
                function(p, e, f, h, d, m, q, a, k) {
                    return p(m, {
                        constructor: function() {},
                        getExtent: function() {
                            var a = this.originOperLayer.layerObject.getLayers(),
                                d = null,
                                f;
                            e.forEach(a, function(a) {
                                f = this._convertGeometryToMapSpatialRef(a.initialExtent);
                                d = d ? d.union(f) : f
                            }, this);
                            return d
                        },
                        _resetLayerObjectVisiblity: function(a) {
                            var d = a ? a[this.id] : null;
                            d && (e.forEach(this.newSubLayers, function(d) {
                                var e = a ? a[d.id] : null;
                                e && d.layerObject.setVisibility(e.visible)
                            }, this), this._setTopLayerVisible(d.visible))
                        },
                        initVisible: function() {
                            var a = !1,
                                d;
                            for (d = 0; d < this.newSubLayers.length; d++) a = a || this.newSubLayers[d].layerObject.visible;
                            a && (this._visible = !0)
                        },
                        _setTopLayerVisible: function(a) {
                            this._visible = a ? !0 : !1;
                            e.forEach(this.newSubLayers, function(a) {
                                a.setLayerVisiblefromTopLayer()
                            }, this);
                            this._onVisibilityChanged()
                        },
                        obtainNewSubLayers: function() {
                            var c = [],
                                d = this.originOperLayer.layerObject.getLayers();
                            e.forEach(d, function(d) {
                                this._getLayerIndexesInMapByLayerId(d.id) && (d = a.getInstance().create({
                                    layerObject: d,
                                    title: d.label || d.title || d.name ||
                                        d.id || " ",
                                    id: d.id || " ",
                                    collection: {
                                        layerInfo: this
                                    },
                                    selfType: "kml",
                                    parentLayerInfo: this
                                }), c.push(d), d.init())
                            }, this);
                            return c
                        }
                    })
                })
        },
        "jimu/LayerInfos/LayerInfoForDefault": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/Deferred ./LayerInfo ./LayerInfos dojox/gfx dojo/dom-construct dojo/dom-attr dojo/aspect jimu/portalUrlUtils jimu/utils esri/symbols/jsonUtils esri/dijit/PopupTemplate esri/dijit/Legend".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g) {
                var t = p(d, {
                    _legendsNode: null,
                    controlPopupInfo: null,
                    constructor: function() {
                        this._initControlPopup()
                    },
                    _initOldFilter: function() {
                        this._oldFilter = this.layerObject && !this.layerObject.empty && this.layerObject.getDefinitionExpression ? this.layerObject.getDefinitionExpression() : null
                    },
                    _getLayerOptionsForCreateLayerObject: function() {
                        var a = {};
                        a.id = this.id;
                        var c = [],
                            d = this.getInfoTemplate();
                        d && d.info && d.info.fieldInfos ? e.forEach(d.info.fieldInfos, function(a) {
                            a.visible && c.push(a.fieldName)
                        }, this) : c = ["*"];
                        a.outFields = c;
                        return a
                    },
                    getExtent: function() {
                        var a =
                            this.originOperLayer.layerObject.fullExtent || this.originOperLayer.layerObject.initialExtent;
                        if (a) return this._convertGeometryToMapSpatialRef(a);
                        a = new h;
                        a.resolve(null);
                        return a
                    },
                    _resetLayerObjectVisiblity: function(a) {
                        a = a ? a[this.id] : null;
                        !this.originOperLayer.collection && a && (this.layerObject.setVisibility(a.visible), this._visible = this.layerObject.visible)
                    },
                    initVisible: function() {
                        var a = !1;
                        if (this.originOperLayer.collection && this._notFirstInitVisilbeFlag) {
                            var a = this.originOperLayer.collection.layerInfo,
                                c = this.layerObject.visible;
                            if (a._oldIsShowInMap !== a.isShowInMap()) return;
                            this._visible = c ? !0 : !1;
                            a._onVisibilityChanged()
                        } else this._visible = a = this.originOperLayer.layerObject.visible;
                        this._notFirstInitVisilbeFlag = !0
                    },
                    _initControlPopup: function() {
                        this.controlPopupInfo = {
                            enablePopup: this.layerObject.infoTemplate ? !0 : !1,
                            infoTemplate: this.layerObject.infoTemplate
                        };
                        this.layerObject._infoTemplate = this.layerObject.infoTemplate;
                        c.after(this.layerObject, "setInfoTemplate", f.hitch(this, function() {
                            this.layerObject._infoTemplate =
                                this.layerObject.infoTemplate;
                            this.controlPopupInfo.infoTemplate = this.layerObject.infoTemplate;
                            this.controlPopupInfo.enablePopup || (this.layerObject.infoTemplate = null)
                        }))
                    },
                    _setTopLayerVisible: function(a) {
                        this.originOperLayer.collection ? this.originOperLayer.collection.layerInfo._visible ? a ? (this.layerObject.show(), this._visible = !0) : (this.layerObject.hide(), this._visible = !1) : a ? (this.layerObject.hide(), this._visible = !0) : (this.layerObject.hide(), this._visible = !1) : (a ? this.layerObject.show() : this.layerObject.hide(),
                            this._visible = a)
                    },
                    setLayerVisiblefromTopLayer: function() {
                        this.originOperLayer.collection.layerInfo._visible ? this._visible && this.layerObject.show() : this.layerObject.hide()
                    },
                    createLegendsNode: function() {
                        var b = a.create("div", {
                            "class": "legends-div jimu-leading-margin1",
                            legendsDivId: this.id
                        }, document.body);
                        a.create("img", {
                            "class": "legends-loading-img",
                            src: require.toUrl("jimu") + "/images/loading.gif"
                        }, b);
                        return b
                    },
                    drawLegends: function(a) {
                        this._initLegendsNodeByLegendDijit(a)
                    },
                    _initLegendsNodeByLegendDijit: function(b) {
                        if (this.layerObject &&
                            !this.layerObject.empty && (!this.originOperLayer.subLayer || 0 === this.originOperLayer.subLayers.length) && this.layerObject.loaded) {
                            a.empty(b);
                            var c = new g({
                                map: this.map,
                                layerInfos: [{
                                    layer: this.layerObject
                                }],
                                arrangement: g.ALIGN_LEFT,
                                respectCurrentMapScale: !1,
                                respectVisibility: !1
                            }, a.create("div", {}, b));
                            c.startup();
                            b._legendDijit = c
                        }
                    },
                    _initLegendsNode: function(b) {
                        var c = [],
                            d = this.layerObject;
                        if (this.layerObject && !this.layerObject.empty && (!this.originOperLayer.subLayer || 0 === this.originOperLayer.subLayers.length)) a.empty(b),
                            d.renderer && (d.renderer.infos ? c = f.clone(d.renderer.infos) : c.push({
                                label: d.renderer.label,
                                symbol: d.renderer.symbol
                            }), d.renderer && (d.renderer.defaultSymbol && 0 < c.length) && c.push({
                                label: d.renderer.defaultLabel || "others",
                                symbol: d.renderer.defaultSymbol
                            }), e.forEach(c, function(c) {
                                c.legendDiv = a.create("div", {
                                    "class": "legend-div"
                                }, b);
                                c.symbolDiv = a.create("div", {
                                    "class": "legend-symbol jimu-float-leading"
                                }, c.legendDiv);
                                c.labelDiv = a.create("div", {
                                        "class": "legend-label jimu-float-leading",
                                        innerHTML: c.label || " "
                                    },
                                    c.legendDiv);
                                if ("textsymbol" === c.symbol.type) k.set(c.symbolDiv, "innerHTML", c.symbol.text);
                                else {
                                    var d = q.createSurface(c.symbolDiv, 50, 50);
                                    c = r.getShapeDescriptors(c.symbol);
                                    d.createShape(c.defaultShape).setFill(c.fill).setStroke(c.stroke).setTransform(q.matrix.translate(25, 25))
                                }
                            }, this))
                    },
                    obtainNewSubLayers: function() {
                        var a = [];
                        this.originOperLayer.subLayers && 0 !== this.originOperLayer.subLayers.length && e.forEach(this.originOperLayer.subLayers, function(c) {
                            c = new t(c, this.map);
                            a.push(c);
                            c.init()
                        }, this);
                        return a
                    },
                    getOpacity: function() {
                        return this.layerObject.opacity ? this.layerObject.opacity : 1
                    },
                    setOpacity: function(a) {
                        this.layerObject.setOpacity && this.layerObject.setOpacity(a)
                    },
                    _getDefaultPopupTemplate: function(a) {
                        var c = null;
                        if (a && a.fields) {
                            var d = {
                                title: a.name,
                                fieldInfos: [],
                                description: null,
                                showAttachments: !0,
                                mediaInfos: []
                            };
                            e.forEach(a.fields, function(c) {
                                if (c.name !== a.objectIdField && "globalid" !== c.name.toLowerCase() && "shape" !== c.name.toLowerCase()) {
                                    var e = n.getDefaultPortalFieldInfo(c);
                                    e.visible = !0;
                                    e.isEditable =
                                        c.editable;
                                    d.fieldInfos.push(e)
                                }
                            });
                            c = new l(d)
                        }
                        return c
                    },
                    enablePopup: function() {
                        return this.loadInfoTemplate().then(f.hitch(this, function() {
                            return this.controlPopupInfo.infoTemplate ? (this.controlPopupInfo.enablePopup = !0, this.layerObject.infoTemplate = this.controlPopupInfo.infoTemplate, !0) : !1
                        }))
                    },
                    disablePopup: function() {
                        this.controlPopupInfo.enablePopup = !1;
                        this.layerObject.infoTemplate = null
                    },
                    isPopupEnabled: function() {
                        return this.controlPopupInfo && this.controlPopupInfo.enablePopup ? !0 : !1
                    },
                    loadInfoTemplate: function() {
                        var a =
                            new h;
                        this.controlPopupInfo.infoTemplate || (this.controlPopupInfo.infoTemplate = this._getDefaultPopupTemplate(this.layerObject));
                        a.resolve(this.controlPopupInfo.infoTemplate);
                        return a
                    },
                    getInfoTemplate: function() {
                        return this.controlPopupInfo.infoTemplate
                    },
                    _getRelatedUrls: function(a, c) {
                        var d = [];
                        if (!a || !a.url || !a.relationships) return d;
                        var g = a.url.lastIndexOf("/"),
                            f = a.url.slice(0, g);
                        e.forEach(a.relationships, function(a) {
                            (!c || !a.role || c === a.role) && d.push(f + "/" + a.relatedTableId.toString())
                        }, this);
                        return d
                    },
                    getRelatedTableInfoArray: function(a) {
                        var c = [],
                            d = new h;
                        this.getLayerObject().then(f.hitch(this, function(g) {
                            var l = this._getRelatedUrls(g, a);
                            0 !== l.length && m.getInstanceSync().traversalAll(f.hitch(this, function(a) {
                                var b = -1;
                                if (0 === l.length) return !0;
                                e.forEach(l, function(d, e) {
                                    f.getObject("layerObject.url", !1, a) && s.removeProtocol(d.toString().replace(/\/+/g, "/").toLowerCase()) === s.removeProtocol(a.layerObject.url.toString().replace(/\/+/g, "/").toLowerCase()) && (c.push(a), b = e)
                                }, this);
                                0 <= b && l.splice(b, 1);
                                return !1
                            }));
                            d.resolve(c)
                        }), f.hitch(this, function() {
                            d.resolve(c)
                        }));
                        return d
                    },
                    getFilter: function() {
                        return this.layerObject && !this.layerObject.empty && this.layerObject.getDefinitionExpression ? this.layerObject.getDefinitionExpression() : null
                    },
                    setFilter: function(a) {
                        this.layerObject && (!this.layerObject.empty && this.layerObject.setDefinitionExpression) && this.layerObject.setDefinitionExpression(a)
                    }
                });
                return t
            })
        },
        "esri/dijit/Legend": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/_base/json dojo/_base/Color dojo/debounce dojo/has dojo/sniff dojo/DeferredList dojo/json dojo/dom dojo/dom-construct dojo/dom-style dojo/dom-class dijit/_Widget dojox/gfx dojox/gfx/matrix dojox/html/entities ../kernel ../config ../request ../lang ../numberUtils ../renderers/utils ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/ClassBreaksRenderer ../renderers/ScaleDependentRenderer ../renderers/DotDensityRenderer ../renderers/TemporalRenderer ../renderers/VectorFieldRenderer ../renderers/HeatmapRenderer ../symbols/PictureFillSymbol ../symbols/SimpleLineSymbol ../symbols/jsonUtils ./_EventedWidget dojo/i18n!../nls/jsapi".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A, x, C, u, E, D, B, G, I, K, R, N, P, J, H, O, L, M, F) {
                    var Q = e([M, b], {
                        declaredClass: "esri.dijit.Legend",
                        widgetsInTemplate: !1,
                        layers: null,
                        alignRight: !1,
                        hoverLabelShowing: !1,
                        dotDensitySwatchSize: 26,
                        dotCoverage: 75,
                        gradientHeight: 30,
                        transparencyRampColor: new q([64, 64, 64]),
                        defaultText: "Aa",
                        sizeRampLightColor: new q([255, 255, 255]),
                        sizeRampDarkColor: new q([128, 128, 128]),
                        layerConnects: [],
                        gradientWidth: 34,
                        colorRampBorder: "1px solid",
                        _specialChars: {
                            lt: "\x3c",
                            gt: "\x3e"
                        },
                        _ieTimer: 100,
                        _isRightToLeft: !1,
                        _align: null,
                        _legendAlign: null,
                        constructor: function(b, c) {
                            f.mixin(this, F.widgets.legend);
                            this._i18n = F.widgets.legend;
                            b = b || {};
                            b.map ? c ? (this.map = b.map, this.layerInfos = b.layerInfos, this._respectCurrentMapScale = !1 === b.respectCurrentMapScale ? !1 : !0, this._respectVisibility = !1 === b.respectVisibility ? !1 : !0, this.arrangement = b.arrangement === Q.ALIGN_RIGHT ? Q.ALIGN_RIGHT : Q.ALIGN_LEFT, this.arrangement === Q.ALIGN_RIGHT && (this.alignRight = !0), this.autoUpdate = !1 === b.autoUpdate ? !1 : !0, this._surfaceItems = [], this.hideLayersInLegend = {}, this.refresh = a(this.refresh, 0)) : console.error("esri.dijit.Legend: must specify a container for the legend") : console.error("esri.dijit.Legend: unable to find the 'map' property in parameters")
                        },
                        postMixInProperties: function() {
                            this.inherited(arguments);
                            var a = ["ar", "he"],
                                b, c;
                            for (b = 0; b < a.length; b += 1) c = a[b], p.locale && -1 !== p.locale.indexOf(c) && (-1 !== p.locale.indexOf("-") ? -1 !== p.locale.indexOf(c + "-") && (this._isRightToLeft = !0) : this._isRightToLeft = !0);
                            this._isRightToLeft ? (this._align =
                                this.alignRight ? "left" : "right", this._legendAlign = this.alignRight ? "esriLegendLeft" : "esriLegendRight") : (this._align = this.alignRight ? "right" : "left", this._legendAlign = this.alignRight ? "esriLegendRight" : "esriLegendLeft")
                        },
                        startup: function() {
                            this.inherited(arguments);
                            this._initialize();
                            9 > k("ie") && (this._repaintItems = f.hitch(this, this._repaintItems), setTimeout(this._repaintItems, this._ieTimer))
                        },
                        destroy: function() {
                            this._deactivate();
                            this._removeHoverHandlers();
                            this.inherited(arguments)
                        },
                        refresh: function(a) {
                            if (this.domNode) {
                                a ?
                                    (this.layerInfos = a, this.layers = [], h.forEach(this.layerInfos, function(a) {
                                        this._isSupportedLayerType(a.layer) && (a.title && (a.layer._titleForLegend = a.title), a.layer._hideDefaultSymbol = !1 === a.defaultSymbol ? !0 : !1, a.hideLayers ? (this.hideLayersInLegend[a.layer.id] = a.hideLayers, this._addSubLayersToHide(a)) : this.hideLayersInLegend[a.layer.id] = [], a.hoverLabel && (a.layer._hoverLabel = a.hoverLabel), a.hoverLabels && (a.layer._hoverLabels = a.hoverLabels), this.layers.push(a.layer))
                                    }, this)) : this.useAllMapLayers && (this.layers =
                                        this.layerInfos = null);
                                for (a = this.domNode.children.length - 1; 0 <= a; a--) l.destroy(this.domNode.children[a]);
                                this._removeHoverHandlers();
                                this.startup()
                            }
                        },
                        _legendUrl: "http://utility.arcgis.com/sharing/tools/legend",
                        _initialize: function() {
                            this.layerInfos && (this.layers = [], h.forEach(this.layerInfos, function(a) {
                                this._isSupportedLayerType(a.layer) && (a.title && (a.layer._titleForLegend = a.title), a.layer._hideDefaultSymbol = !1 === a.defaultSymbol ? !0 : !1, a.hideLayers ? (this.hideLayersInLegend[a.layer.id] = a.hideLayers,
                                    this._addSubLayersToHide(a)) : this.hideLayersInLegend[a.layer.id] = [], a.hoverLabel && (a.layer._hoverLabel = a.hoverLabel), a.hoverLabels && (a.layer._hoverLabels = a.hoverLabels), this.layers.push(a.layer))
                            }, this));
                            this.useAllMapLayers = !1;
                            if (!this.layers) {
                                this.useAllMapLayers = !0;
                                this.layers = [];
                                var a = [],
                                    b = [];
                                h.forEach(this.map.layerIds, function(c) {
                                    c = this.map.getLayer(c);
                                    var d;
                                    this._isSupportedLayerType(c) && (c.arcgisProps && c.arcgisProps.title && (c._titleForLegend = c.arcgisProps.title), this.layers.push(c));
                                    "esri.layers.KMLLayer" ==
                                    c.declaredClass && (d = c.getLayers(), h.forEach(d, function(b) {
                                        a.push(b.id)
                                    }, this));
                                    "esri.layers.GeoRSSLayer" == c.declaredClass && (d = c.getFeatureLayers(), h.forEach(d, function(a) {
                                        b.push(a.id)
                                    }, this))
                                }, this);
                                h.forEach(this.map.graphicsLayerIds, function(c) {
                                    var d = this.map.getLayer(c); - 1 == h.indexOf(a, c) && -1 == h.indexOf(b, c) && (this._isSupportedLayerType(d) && d._params && d._params.drawMode) && (d.arcgisProps && d.arcgisProps.title && (d._titleForLegend = d.arcgisProps.title), this.layers.push(d))
                                }, this)
                            }
                            this._createLegend()
                        },
                        _activate: function() {
                            this._deactivate();
                            this.autoUpdate && (this._respectCurrentMapScale && (this._ozeConnect = d.connect(this.map, "onZoomEnd", this, "_refreshLayers")), this.useAllMapLayers && (this._olaConnect = d.connect(this.map, "onLayerAdd", this, "_updateAllMapLayers"), this._olrConnect = d.connect(this.map, "onLayerRemove", this, "_updateAllMapLayers"), this._olroConnect = d.connect(this.map, "onLayersReordered", this, "_updateAllMapLayers")), h.forEach(this.layers, function(a) {
                                var b = {};
                                b.ovcConnect = d.connect(a, "onVisibilityChange",
                                    this, "_refreshLayers");
                                b.oocConnect = d.connect(a, "onOpacityChange", this, "_refreshLayers");
                                b.oscConnect = d.connect(a, "onScaleRangeChange", this, "_refreshLayers");
                                "esri.layers.ArcGISDynamicMapServiceLayer" === a.declaredClass && a.supportsDynamicLayers && (b.odcConnect = d.connect(a, "_onDynamicLayersChange", f.hitch(this, "_updateDynamicLayers", a)));
                                "esri.layers.ArcGISImageServiceLayer" === a.declaredClass && (b.oirConnect = d.connect(a, "onRenderingChange", f.partial(this._updateImageServiceLayers, this, a)));
                                "esri.layers.ArcGISImageServiceVectorLayer" ===
                                a.declaredClass && (b.oivrConnect = d.connect(a, "onRendererChange", f.hitch(this, "_refreshLayers")));
                                this.layerConnects[a.id] = b
                            }, this))
                        },
                        _deactivate: function() {
                            this._ozeConnect && d.disconnect(this._ozeConnect);
                            this._olaConnect && d.disconnect(this._olaConnect);
                            this._olroConnect && d.disconnect(this._olroConnect);
                            this._olrConnect && d.disconnect(this._olrConnect);
                            h.forEach(this.layers, function(a) {
                                a = this.layerConnects[a.id] || {};
                                a.ovcConnect && d.disconnect(a.ovcConnect);
                                a.oocConnect && d.disconnect(a.oocConnect);
                                a.oscConnect &&
                                    d.disconnect(a.oscConnect);
                                a.odcConnect && d.disconnect(a.odcConnect);
                                a.oirConnect && d.disconnect(a.oirConnect);
                                a.oivrConnect && d.disconnect(a.oivrConnect)
                            }, this);
                            this.layerConnects = []
                        },
                        _updateDynamicLayers: function(a) {
                            delete a.legendResponse;
                            this._refreshLayers()
                        },
                        _updateImageServiceLayers: function(a, b) {
                            delete b.legendResponse;
                            a._refreshLayers()
                        },
                        _refreshLayers: function() {
                            this.refresh()
                        },
                        _updateAllMapLayers: function() {
                            this.layers = [];
                            h.forEach(this.map.layerIds, function(a) {
                                a = this.map.getLayer(a);
                                this._isSupportedLayerType(a) &&
                                    this.layers.push(a)
                            }, this);
                            h.forEach(this.map.graphicsLayerIds, function(a) {
                                a = this.map.getLayer(a);
                                this._isSupportedLayerType(a) && (a._params && a._params.drawMode) && this.layers.push(a)
                            }, this);
                            this.refresh()
                        },
                        _createLegend: function() {
                            var a = !1,
                                b = !1;
                            g.set(this.domNode, "position", "relative");
                            l.create("div", {
                                id: this.id + "_msg",
                                className: "esriLegendMsg",
                                innerHTML: this.NLS_creatingLegend + "..."
                            }, this.domNode);
                            var c = [];
                            h.forEach(this.layers, function(e) {
                                if ("esri.layers.KMLLayer" == e.declaredClass || "esri.layers.GeoRSSLayer" ==
                                    e.declaredClass) {
                                    var g;
                                    e.loaded ? ("esri.layers.KMLLayer" == e.declaredClass ? g = e.getLayers() : "esri.layers.GeoRSSLayer" == e.declaredClass && (g = e.getFeatureLayers(), this.hideLayersInLegend[e.id] && (g = h.filter(g, function(a) {
                                        return -1 == h.indexOf(this.hideLayersInLegend[e.id], a.id)
                                    }, this))), h.forEach(g, function(a) {
                                        "esri.layers.FeatureLayer" == a.declaredClass && e._titleForLegend && (a._titleForLegend = e._titleForLegend + " - ", "esriGeometryPoint" == a.geometryType ? a._titleForLegend += this.NLS_points : "esriGeometryPolyline" ==
                                            a.geometryType ? a._titleForLegend += this.NLS_lines : "esriGeometryPolygon" == a.geometryType && (a._titleForLegend += this.NLS_polygons), c.push(a))
                                    }, this)) : d.connect(e, "onLoad", f.hitch(this, function() {
                                        this.refresh(this.layerInfos)
                                    }))
                                } else if ("esri.layers.WMSLayer" === e.declaredClass)
                                    if (e.loaded) {
                                        if ((!this._respectVisibility || this._respectVisibility && e.visible) && 0 < e.layerInfos.length && h.some(e.layerInfos, function(a) {
                                                return a.legendURL
                                            })) {
                                            var k = !1;
                                            h.forEach(e.layerInfos, function(b) {
                                                if (b.legendURL && -1 < h.indexOf(e.visibleLayers,
                                                        b.name)) {
                                                    k || (l.create("div", {
                                                        innerHTML: "\x3cspan class\x3d'esriLegendServiceLabel'\x3e" + (e._titleForLegend || e.name || e.id) + "\x3c/span\x3e"
                                                    }, this.domNode), k = !0);
                                                    var c;
                                                    b = b.legendURL;
                                                    if (e.customParameters || e.customLayerParameters) {
                                                        var d = f.clone(e.customParameters || {});
                                                        f.mixin(d, e.customLayerParameters || {});
                                                        for (c in d) b += (-1 === b.indexOf("?") ? "?" : "\x26") + c + "\x3d" + d[c]
                                                    }
                                                    l.create("div", {
                                                        innerHTML: "\x3cimg src\x3d'" + b + "'/\x3e"
                                                    }, this.domNode);
                                                    a = !0
                                                }
                                            }, this)
                                        }
                                    } else d.connect(e, "onLoad", f.hitch(this, function() {
                                        this.refresh(this.layerInfos)
                                    }));
                                else "esri.layers.WFSLayer" === e.declaredClass && !e.renderer ? (g = l.create("div", {
                                        id: this.id + "_" + e.id,
                                        "class": "esriLegendService"
                                    }), l.create("span", {
                                        innerHTML: this._getServiceTitle(e),
                                        "class": "esriLegendServiceLabel"
                                    }, l.create("td", {
                                        align: this._align
                                    }, l.create("tr", {}, l.create("tbody", {}, l.create("table", {
                                        width: "95%"
                                    }, g))))), l.place(g, this.id, "first"), tableNode = l.create("table", {
                                        cellpadding: 0,
                                        cellspacing: 0,
                                        width: "95%",
                                        "class": "esriLegendLayer"
                                    }, g), tableBody = l.create("tbody", {}, tableNode), "esriGeometryComplex" ===
                                    e.geometryType ? (this._buildRow_Renderer(e, e._pointSymbol, null, this.NLS_points, null, tableBody), this._buildRow_Renderer(e, e._lineSymbol, null, this.NLS_lines, null, tableBody), this._buildRow_Renderer(e, e._polygonSymbol, null, this.NLS_areas, null, tableBody)) : "esriGeometryPoint" === e.geometryType ? this._buildRow_Renderer(e, e._pointSymbol, null, "", null, tableBody) : "esriGeometryPolyline" === e.geometryType ? this._buildRow_Renderer(e, e._lineSymbol, null, "", null, tableBody) : "esriGeometryPolygon" === e.geometryType && this._buildRow_Renderer(e,
                                        e._polygonSymbol, null, "", null, tableBody), b = !0) : c.push(e)
                            }, this);
                            var e = [];
                            h.forEach(c, function(a) {
                                if (a.loaded) {
                                    if ((!this._respectVisibility || this._respectVisibility && a.visible) && (a.layerInfos || a.renderer || "esri.layers.ArcGISImageServiceLayer" == a.declaredClass)) {
                                        var b = l.create("div", {
                                            id: this.id + "_" + a.id,
                                            style: {
                                                display: "none"
                                            },
                                            "class": "esriLegendService"
                                        });
                                        l.create("span", {
                                            innerHTML: this._getServiceTitle(a),
                                            "class": "esriLegendServiceLabel"
                                        }, l.create("td", {
                                            align: this._align
                                        }, l.create("tr", {}, l.create("tbody", {}, l.create("table", {
                                            width: "95%"
                                        }, b)))));
                                        l.place(b, this.id, "first");
                                        a.legendResponse || a.renderer ? this._createLegendForLayer(a) : e.push(this._legendRequest(a))
                                    }
                                } else var c = d.connect(a, "onLoad", this, function(a) {
                                    d.disconnect(c);
                                    c = null;
                                    this.refresh()
                                })
                            }, this);
                            0 === e.length && !a && !b ? (r.byId(this.id + "_msg").innerHTML = this.NLS_noLegend, this._activate()) : (new s(e)).addCallback(f.hitch(this, function(c) {
                                !a && !b ? r.byId(this.id + "_msg").innerHTML = this.NLS_noLegend : r.byId(this.id + "_msg").innerHTML = "";
                                this._activate()
                            }))
                        },
                        _createLegendForLayer: function(a) {
                            if (a.legendResponse || a.renderer) {
                                var b = !1;
                                if (a.legendResponse) {
                                    var c = a.dynamicLayerInfos || a.layerInfos;
                                    c && c.length ? h.forEach(c, function(c, d) {
                                        if (!this.hideLayersInLegend[a.id] || -1 === h.indexOf(this.hideLayersInLegend[a.id], c.id)) {
                                            var e = this._buildLegendItems(a, c, d);
                                            b = b || e
                                        }
                                    }, this) : "esri.layers.ArcGISImageServiceLayer" == a.declaredClass && (b = this._buildLegendItems(a, {
                                        id: 0,
                                        name: null,
                                        title: a.name,
                                        subLayerIds: null,
                                        parentLayerId: -1
                                    }, 0))
                                } else a.renderer && (c = a.url ? a.url.substring(a.url.lastIndexOf("/") +
                                    1, a.url.length) : "fc_" + a.id, b = this._buildLegendItems(a, {
                                    id: c,
                                    name: null,
                                    subLayerIds: null,
                                    parentLayerId: -1
                                }, 0));
                                b && (g.set(r.byId(this.id + "_" + a.id), "display", "block"), g.set(r.byId(this.id + "_msg"), "display", "none"))
                            }
                        },
                        _legendRequest: function(a) {
                            if (a.loaded) return 10.01 <= a.version ? this._legendRequestServer(a) : this._legendRequestTools(a);
                            d.connect(a, "onLoad", f.hitch(this, "_legendRequest"))
                        },
                        _legendRequestServer: function(a) {
                            var b = a.url,
                                c = b.indexOf("?"),
                                b = -1 < c ? b.substring(0, c) + "/legend" + b.substring(c) : b + "/legend";
                            (c = a._getToken()) && (b += "?token\x3d" + c);
                            var d = f.hitch(this, "_processLegendResponse"),
                                e = {
                                    f: "json"
                                };
                            a._params.dynamicLayers && (e.dynamicLayers = n.stringify(this._createDynamicLayers(a)), "[{}]" === e.dynamicLayers && (e.dynamicLayers = "[]"));
                            a._params.bandIds && (e.bandIds = a._params.bandIds);
                            a._params.renderingRule ? e.renderingRule = a._params.renderingRule : a.rasterFunctionInfos && 0 < a.rasterFunctionInfos.length && h.forEach(a.rasterFunctionInfos, function(a) {
                                a && (a.name && "none" === a.name.toLowerCase()) && (e.renderingRule =
                                    n.stringify({
                                        rasterFunction: a.name
                                    }))
                            });
                            return C({
                                url: b,
                                content: e,
                                callbackParamName: "callback",
                                load: function(b, c) {
                                    d(a, b, c)
                                },
                                error: x.defaults.io.errorHandler
                            })
                        },
                        _legendRequestTools: function(a) {
                            var b = a.url.toLowerCase().indexOf("/rest/"),
                                b = a.url.substring(0, b) + a.url.substring(b + 5, a.url.length),
                                b = this._legendUrl + "?soapUrl\x3d" + window.escape(b);
                            if (!k("ie") || 8 < k("ie")) b += "\x26returnbytes\x3dtrue";
                            var c = f.hitch(this, "_processLegendResponse");
                            return C({
                                url: b,
                                content: {
                                    f: "json"
                                },
                                callbackParamName: "callback",
                                load: function(b, d) {
                                    c(a, b, d)
                                },
                                error: x.defaults.io.errorHandler
                            })
                        },
                        _processLegendResponse: function(a, b) {
                            b && b.layers ? (a.legendResponse = b, r.byId(this.id + "_" + a.id) && l.empty(r.byId(this.id + "_" + a.id)), l.create("span", {
                                innerHTML: this._getServiceTitle(a),
                                "class": "esriLegendServiceLabel"
                            }, l.create("td", {
                                align: this._align
                            }, l.create("tr", {}, l.create("tbody", {}, l.create("table", {
                                width: "95%"
                            }, r.byId(this.id + "_" + a.id)))))), this._createLegendForLayer(a)) : console.log("Legend could not get generated for " + a.url + ": " +
                                m.toJson(b))
                        },
                        _buildLegendItems: function(a, b, c) {
                            var d = !1,
                                e = r.byId(this.id + "_" + a.id),
                                g = b.parentLayerId;
                            if (b.subLayerIds) a = l.create("div", {
                                id: this.id + "_" + a.id + "_" + b.id + "_group",
                                style: {
                                    display: "none"
                                },
                                "class": -1 == g ? 0 < c ? "esriLegendGroupLayer" : "" : this._legendAlign
                            }, -1 == g ? e : r.byId(this.id + "_" + a.id + "_" + g + "_group")), l.create("td", {
                                innerHTML: z.encode(b.name),
                                align: this._align
                            }, l.create("tr", {}, l.create("tbody", {}, l.create("table", {
                                width: "95%",
                                "class": "esriLegendLayerLabel"
                            }, a))));
                            else {
                                if (this._respectVisibility &&
                                    a.visibleLayers)
                                    if (c = a.dynamicLayerInfos || a.layerInfos)
                                        if (a._params && a._params.layers) {
                                            if (-1 === h.indexOf(a.visibleLayers, b.id)) return d
                                        } else {
                                            if (c = this._getReallyVisibleLayers(c, a.visibleLayers), -1 === h.indexOf(c, b.id)) return d
                                        }
                                else if (-1 === h.indexOf(a.visibleLayers, b.id)) return d;
                                e = l.create("div", {
                                    id: this.id + "_" + a.id + "_" + b.id,
                                    style: {
                                        display: "none"
                                    },
                                    "class": -1 < g ? this._legendAlign : ""
                                }, -1 == g ? e : r.byId(this.id + "_" + a.id + "_" + g + "_group"));
                                l.create("td", {
                                    innerHTML: z.encode(b.name) || "",
                                    align: this._align
                                }, l.create("tr", {}, l.create("tbody", {}, l.create("table", {
                                    width: "95%",
                                    "class": "esriLegendLayerLabel"
                                }, e))));
                                a.legendResponse ? d = d || this._buildLegendItems_Tools(a, b, e) : a.renderer && (d = d || this._buildLegendItems_Renderer(a, b, e))
                            }
                            return d
                        },
                        _getReallyVisibleLayers: function(a, b) {
                            if (!a || !b || !b.length) return [];
                            var c = [],
                                d = [],
                                e;
                            for (e = 0; e < a.length; e++)
                                if (a[e].subLayerIds) {
                                    if (-1 === h.indexOf(b, a[e].id) || -1 < h.indexOf(d, a[e].id)) d = d.concat(a[e].subLayerIds)
                                } else -1 < h.indexOf(b, a[e].id) && -1 === h.indexOf(d, a[e].id) && c.push(a[e].id);
                            return c
                        },
                        _buildLegendItems_Tools: function(a, b, c) {
                            var d = b.parentLayerId,
                                e = this.map.getScale(),
                                f = !1,
                                k = function(a, b) {
                                    var c, d;
                                    for (c = 0; c < a.length; c++)
                                        if (b.dynamicLayerInfos)
                                            for (d = 0; d < b.dynamicLayerInfos[d].length; d++) {
                                                if (b.dynamicLayerInfos[d].mapLayerId == a[c].layerId) return a[c]
                                            } else if (b.id == a[c].layerId) return a[c];
                                    return {}
                                };
                            if (!this._respectCurrentMapScale || this._respectCurrentMapScale && this._isLayerInScale(a, b, e)) {
                                var n = !0;
                                if (this._respectCurrentMapScale && ("esri.layers.ArcGISDynamicMapServiceLayer" === a.declaredClass ||
                                        "esri.layers.ArcGISMapServiceLayer" === a.declaredClass)) {
                                    var m = this._getEffectiveScale(a, b);
                                    if (m.minScale && m.minScale < e || m.maxScale && m.maxScale > e) n = !1
                                }
                                if (n) {
                                    var e = k(a.legendResponse.layers, b),
                                        q = e.legendType,
                                        p = e.layerType,
                                        s = e.legend;
                                    if (s) {
                                        "esri.layers.ArcGISImageServiceLayer" !== a.declaredClass && this._sanitizeLegendResponse(a, e, b);
                                        c = l.create("table", {
                                            cellpadding: 0,
                                            cellspacing: 0,
                                            width: "95%",
                                            "class": "esriLegendLayer"
                                        }, c);
                                        var v = l.create("tbody", {}, c);
                                        (a._hoverLabel || a._hoverLabels) && this._createHoverAction(c,
                                            a, b);
                                        h.forEach(s, function(c) {
                                            if (!(10.1 <= a.version && !c.values && 1 < s.length && (a._hideDefaultSymbol || "\x3call other values\x3e" === c.label || !c.label && !("esri.layers.ArcGISImageServiceLayer" === a.declaredClass && 10.3 <= a.version || "Raster Layer" === p))))
                                                if (c.url && 0 === c.url.indexOf("http") || c.imageData && 0 < c.imageData.length) f = !0, this._buildRow_Tools(c, v, a, b.id, q)
                                        }, this)
                                    }
                                }
                            }
                            f && (g.set(r.byId(this.id + "_" + a.id + "_" + b.id), "display", "block"), -1 < d && (g.set(r.byId(this.id + "_" + a.id + "_" + d + "_group"), "display", "block"), this._findParentGroup(a.id,
                                a, d)));
                            return f
                        },
                        _sanitizeLegendResponse: function(a, b, c) {
                            var d = b.legend;
                            if (10.1 <= a.version && 1 < d.length && !b._sanitized) {
                                a = f.getObject("layerDefinition.drawingInfo.renderer", !1, c);
                                var e, g;
                                a || (a = f.getObject("drawingInfo.renderer", !1, c));
                                h.some(d, function(a) {
                                    if (a.values) return !0
                                }) && h.some(d, function(a, b) {
                                    a.values || (g = b, e = a);
                                    return !!e
                                });
                                a ? "uniqueValue" === a.type ? e && (d.splice(g, 1), d.push(e)) : "classBreaks" === a.type && (e && d.splice(g, 1), d.reverse(), e && d.push(e)) : e && (d.splice(g, 1), d.push(e));
                                b._sanitized = !0
                            }
                        },
                        _buildRow_Tools: function(a, b, c, d, e) {
                            var g = l.create("tr", {}, b),
                                f;
                            this.alignRight ? (b = l.create("td", {
                                align: this._isRightToLeft ? "left" : "right"
                            }, g), f = l.create("td", {
                                align: this._isRightToLeft ? "left" : "right",
                                width: 35
                            }, g)) : (f = l.create("td", {
                                width: 35,
                                align: "center"
                            }, g), b = l.create("td", {}, g));
                            g = a.url;
                            (!k("ie") || 9 <= k("ie") || 9 > k("ie") && "esri.layers.ArcGISImageServiceLayer" === c.declaredClass) && a.imageData && 0 < a.imageData.length ? g = "data:image/png;base64," + a.imageData : 0 !== a.url.indexOf("http") && (g = c.url + "/" + d + "/images/" +
                                a.url, (d = c._getToken()) && (g += "?token\x3d" + d));
                            d = l.create("img", {
                                src: g,
                                border: 0,
                                style: "opacity:" + c.opacity
                            }, f);
                            a = l.create("td", {
                                innerHTML: z.encode(a.label),
                                align: this._align
                            }, l.create("tr", {}, l.create("tbody", {}, l.create("table", {
                                width: "95%",
                                dir: "ltr"
                            }, b))));
                            e && ("Stretched" === e && 10.3 <= c.version && "esri.layers.ArcGISImageServiceLayer" === c.declaredClass) && (a.style.verticalAlign = "top", a.style.lineHeight = "1", d.style.marginBottom = "-1px", d.style.display = "block", b.style.verticalAlign = "top");
                            9 > k("ie") && (d.style.filter =
                                "alpha(opacity\x3d" + 100 * c.opacity + ")")
                        },
                        _getVariable: function(a, b, c) {
                            var d;
                            a && (d = (a = a.getVisualVariablesForType(b, c)) && a[0]);
                            return d
                        },
                        _getVariables: function(a, b, c) {
                            a = [this._getVariable(a, "colorInfo", !1), this._getVariable(a, "opacityInfo", !1), this._getVariable(a, "sizeInfo", !1)];
                            return b ? h.filter(a, function(a) {
                                return !(!a || !(a.field === b && a.normalizationField == c))
                            }) : a
                        },
                        _getFieldAlias: function(a, b) {
                            var c = b.infoTemplate,
                                c = c && c.getFieldInfo && c.getFieldInfo(a),
                                d = f.isFunction(a) ? null : b.getField(a),
                                e = c || d,
                                g = "";
                            e && (g = c && c.label || d && d.alias || e.name || e.fieldName);
                            return g
                        },
                        _getRampTitle: function(a, b) {
                            var c, d = a.field,
                                e = a.normalizationField,
                                g = !1,
                                l = !1,
                                k = !1,
                                n, d = f.isFunction(d) ? null : d,
                                e = f.isFunction(e) ? null : e;
                            if (a.legendOptions && a.legendOptions.title) c = a.legendOptions.title;
                            else if (a.valueExpressionTitle) c = a.valueExpressionTitle;
                            else {
                                if (b.renderer.authoringInfo && b.renderer.authoringInfo.visualVariables) {
                                    var h = b.renderer.authoringInfo.visualVariables;
                                    for (n = 0; n < h.length; n++) {
                                        var m = h[n];
                                        if ("colorInfo" === m.type &&
                                            "ratio" === m.style) {
                                            g = !0;
                                            break
                                        } else if ("colorInfo" === m.type && "percent" === m.style) {
                                            l = !0;
                                            break
                                        } else if ("colorInfo" === m.type && "percentTotal" === m.style) {
                                            k = !0;
                                            break
                                        }
                                    }
                                }(g = k && "showRatioPercentTotal" || l && "showRatioPercent" || g && "showRatio" || e && "showNormField" || d && "showField" || null) && (c = u.substitute({
                                    field: d && this._getFieldAlias(d, b),
                                    normField: e && this._getFieldAlias(e, b)
                                }, this._i18n[g]))
                            }
                            return c
                        },
                        _getRendererTitle: function(a, b) {
                            var c;
                            if (a) {
                                var d, e, g;
                                a instanceof I && (d = a.attributeField, e = a.normalizationField,
                                    g = "percent-of-total" === a.normalizationType);
                                d = f.isFunction(d) ? null : d;
                                e = f.isFunction(e) ? null : e;
                                a.legendOptions && a.legendOptions.title ? c = a.legendOptions.title : a.valueExpressionTitle ? c = a.valueExpressionTitle : (g = e && "showNormField" || (g ? "showNormPct" : null) || d && "showField" || null) && (c = u.substitute({
                                    field: d && this._getFieldAlias(d, b),
                                    normField: e && this._getFieldAlias(e, b)
                                }, this._i18n[g]))
                            }
                            return c
                        },
                        _buildLegendItems_Renderer: function(a, b, c) {
                            var d = b.parentLayerId,
                                e = this.map,
                                k = e.getScale(),
                                n, m = !1;
                            if (!this._respectCurrentMapScale ||
                                this._isLayerInScale(a, b, k)) {
                                var q, p, s = "esri.layers.ArcGISImageServiceVectorLayer" === a.declaredClass ? a.renderer.renderer : a.renderer,
                                    v, x, t, w, A;
                                if (s instanceof K && (s = (s = "zoom" === s.rangeType ? s.getRendererInfoByZoom(e.getZoom()) : s.getRendererInfoByScale(k)) && s.renderer, !s)) return !1;
                                var u = this._getVariables(s),
                                    C = h.filter(u, function(a) {
                                        return !!a
                                    }).length,
                                    k = u[0],
                                    e = u[1],
                                    u = u[2],
                                    D, E;
                                k && (v = this._getMedianColor(s, k), k.field && (t = f.isFunction(k.field) ? null : a.getField(k.field)));
                                e && e.field && (A = f.isFunction(e.field) ?
                                    null : a.getField(e.field));
                                u && u.field && (w = f.isFunction(u.field) ? null : a.getField(u.field));
                                if (s instanceof J) n = m = !0, this._showHeatRamp(a, b, s, c);
                                else if (s instanceof R) n = m = !0, this._showDotDensityLegend(a, b, s, c);
                                else if (s instanceof N) n = m = !0, p = l.create("table", {
                                    cellpadding: 0,
                                    cellspacing: 0,
                                    width: "95%",
                                    "class": "esriLegendLayer"
                                }, c), q = l.create("tbody", {}, p), (a._hoverLabel || a._hoverLabels) && this._createHoverAction(p, a, b), s.latestObservationRenderer && s.latestObservationRenderer instanceof B && this._buildRow_Renderer(a,
                                    s.latestObservationRenderer.symbol, v, z.encode(s.latestObservationRenderer.label) || this.NLS_currentObservations, null, q), s.observationRenderer && s.observationRenderer instanceof B && this._buildRow_Renderer(a, s.observationRenderer.symbol, v, z.encode(s.observationRenderer.label) || this.NLS_previousObservations, null, q);
                                else if (s instanceof G) {
                                    if (s.infos && 0 < s.infos.length) {
                                        n = m = !0;
                                        if (s.legendOptions && s.legendOptions.title || s.valueExpressionTitle) p = l.create("table", {
                                                cellpadding: 0,
                                                cellspacing: 0,
                                                width: "95%",
                                                "class": "esriLegendLayer"
                                            },
                                            c), q = l.create("tbody", {}, p), C = s.legendOptions && s.legendOptions.title ? s.legendOptions.title : s.valueExpressionTitle, this._buildRow_Renderer(a, null, v, z.encode(C), null, q);
                                        p = l.create("table", {
                                            cellpadding: 0,
                                            cellspacing: 0,
                                            width: "95%",
                                            "class": "esriLegendLayer"
                                        }, c);
                                        q = l.create("tbody", {}, p);
                                        (a._hoverLabel || a._hoverLabels) && this._createHoverAction(p, a, b);
                                        s.attributeField && u && this._addSubHeader(q, this._getFieldAlias(s.attributeField, a));
                                        var H = [];
                                        h.forEach(s.infos, function(b) {
                                            var c = null;
                                            a._editable && a.types &&
                                                (c = this._getTemplateFromTypes(a.types, b.value));
                                            var d = b.label;
                                            null == d && (d = b.value); - 1 === h.indexOf(H, d) && (H.push(d), this._buildRow_Renderer(a, b.symbol, v, z.encode(d), c, q))
                                        }, this)
                                    }
                                    E = this._displayDefaultSymbol(a, s, c)
                                } else if (s instanceof I) {
                                    if (s.infos && 0 < s.infos.length || "esri.layers.ArcGISImageServiceVectorLayer" === a.declaredClass) {
                                        n = m = !0;
                                        D = this._isUnclassedRenderer(s);
                                        !k && 1 === s.infos.length && (x = (x = s.infos[0]) && x.symbol);
                                        D || (p = l.create("table", {
                                                cellpadding: 0,
                                                cellspacing: 0,
                                                width: "95%",
                                                "class": "esriLegendLayer"
                                            },
                                            c), q = l.create("tbody", {}, p), C = this._getRendererTitle(s, a), this._buildRow_Renderer(a, null, v, z.encode(C), null, q));
                                        p = l.create("table", {
                                            cellpadding: 0,
                                            cellspacing: 0,
                                            width: "95%",
                                            "class": "esriLegendLayer"
                                        }, c);
                                        q = l.create("tbody", {}, p);
                                        (a._hoverLabel || a._hoverLabels) && this._createHoverAction(p, a, b);
                                        if (!D || !u) C = s.infos.slice(0).reverse(), h.forEach(C, function(b) {
                                            var c = b.label;
                                            null == c && !D && (c = b.minValue + " - " + b.maxValue);
                                            this._buildRow_Renderer(a, b.symbol, v, z.encode(c), null, q)
                                        }, this);
                                        if ("esri.layers.ArcGISImageServiceVectorLayer" ===
                                            a.declaredClass && (a.renderer.style === P.STYLE_SCALAR || a.renderer.style === P.STYLE_SINGLE_ARROW)) this._buildRow_Renderer(a, s.defaultSymbol, null, "", null, q), a._hideDefaultSymbol = !0
                                    }
                                    D || (E = this._displayDefaultSymbol(a, s, c))
                                } else s instanceof B && (n = m = !0, p = l.create("table", {
                                        cellpadding: 0,
                                        cellspacing: 0,
                                        width: "95%",
                                        "class": "esriLegendLayer"
                                    }, c), q = l.create("tbody", {}, p), (a._hoverLabel || a._hoverLabels) && this._createHoverAction(p, a, b), x = null, a._editable && (a.templates && 0 < a.templates.length) && (x = a.templates[0]),
                                    p = 1 < C ? null : t || A || w, this._buildRow_Renderer(a, s.symbol, v, z.encode(p ? this._getRampTitle(1 < C ? null : k || e || u, a) : s.label), x, q), x = k ? null : s.symbol, p && (t = A = w = null));
                                if (n) {
                                    if (k && (k.field || k.valueExpression)) this._showGradientRamp(a, b, s, null, c, k, t, null, u ? !0 : !1);
                                    if (u && (u.field || u.valueExpression)) n = k || s instanceof G ? !1 : !0, this._showSizeLegend(a, b, s, u, v, c, w, null, n);
                                    if (e && (e.field || e.valueExpression)) w = x && !x.url && x.color ? x.color : this.transparencyRampColor, this._showGradientRamp(a, b, s, w, c, e, A, null, !1)
                                }
                                E || (E = this._displayDefaultSymbol(a,
                                    s, c));
                                m = m || E
                            }
                            m && (g.set(r.byId(this.id + "_" + a.id + "_" + b.id), "display", "block"), -1 < d && (g.set(r.byId(this.id + "_" + a.id + "_" + d + "_group"), "display", "block"), this._findParentGroup(a.id, d)));
                            return m
                        },
                        _isUnclassedRenderer: function(a, b) {
                            var c;
                            if (a instanceof I && a.infos && 1 === a.infos.length) {
                                c = a.attributeField;
                                var d = a.normalizationField;
                                c = b ? c === b : !!this._getVariables(a, c, d).length
                            }
                            return c
                        },
                        _displayDefaultSymbol: function(a, b, c) {
                            var d;
                            !a._hideDefaultSymbol && b.defaultSymbol && (d = !0, c = l.create("table", {
                                cellpadding: 0,
                                cellspacing: 0,
                                width: "95%",
                                "class": "esriLegendLayer"
                            }, c), c = l.create("tbody", {}, c), this._buildRow_Renderer(a, b.defaultSymbol, null, z.encode(b.defaultLabel) || "others", null, c));
                            return d
                        },
                        _showGradientRamp: function(a, b, c, d, e, g, k, n, h) {
                            h = l.create("table", {
                                cellpadding: 0,
                                cellspacing: 0,
                                width: "95%",
                                "class": "esriLegendLayer" + (!h ? " esriLegendSubFragment" : "")
                            }, e);
                            e = l.create("tbody", {}, h);
                            (a._hoverLabel || a._hoverLabels || n) && this._createHoverAction(h, a, b, n);
                            (k || g.valueExpression) && this._addSubHeader(e, this._getRampTitle(g,
                                a));
                            b = g.field;
                            var m;
                            b && (m = f.isFunction(b) ? null : a.getField(b));
                            (g = this._getRampStops(c, g, d, m && "esriFieldTypeDate" === m.type)) && g.length && this._drawGradientRamp(e, g, !0, a, this._getRampBorderColor(c), !!d)
                        },
                        _getMedianColor: function(a, b) {
                            var c, d;
                            b.colors ? (c = b.minDataValue, d = b.maxDataValue) : b.stops && (c = b.stops[0].value, d = b.stops[b.stops.length - 1].value);
                            return a.getColor(c + (d - c) / 2, {
                                colorInfo: b
                            })
                        },
                        _getRampStops: function(a, b, c, d) {
                            var e, g, f, l, k = !1;
                            b.colors || b.opacityValues ? (g = b.maxDataValue - b.minDataValue, e =
                                h.map([0, 0.25, 0.5, 0.75, 1], function(a) {
                                    f = b.minDataValue + a * g;
                                    return Number(f.toFixed(6))
                                }), this._checkPrecision(0, 4, e)) : b.stops && (e = h.map(b.stops, function(a) {
                                return a.value
                            }), (k = h.some(b.stops, function(a) {
                                return !!a.label
                            })) && (l = h.map(b.stops, function(a) {
                                return a.label
                            })));
                            var n = e[0],
                                m, r;
                            g = e[e.length - 1] - n;
                            return h.map(e, function(f, h) {
                                c ? (m = new q(c.toRgba()), r = a.getOpacity(f, {
                                    opacityInfo: b
                                }), null != r && (m.a = r)) : m = a.getColor(f, {
                                    colorInfo: b
                                });
                                var s = "";
                                if (k) s = l[h];
                                else {
                                    var s = d ? D.formatDate(f, D.timelineDateFormatOptions) :
                                        E.format(f),
                                        p = "";
                                    0 === h ? p = this._specialChars.lt + " " : h === e.length - 1 && (p = this._specialChars.gt + " ");
                                    s = p + s
                                }
                                return {
                                    value: f,
                                    color: m,
                                    offset: 1 - (f - n) / g,
                                    label: s
                                }
                            }, this).reverse()
                        },
                        _checkPrecision: function(a, b, c) {
                            var d = a + (b - a) / 2,
                                e = c[a],
                                g = c[d],
                                f = c[b],
                                l = Math.floor(e),
                                k = Math.floor(g),
                                n = Math.floor(f);
                            l === e && (n === f && k !== g && l !== k && n !== k) && (c[d] = k);
                            a + 1 !== d && this._checkPrecision(a, d, c);
                            d + 1 !== b && this._checkPrecision(d, b, c)
                        },
                        _getRampBorderColor: function(a) {
                            var b;
                            if (a instanceof B) b = a.symbol;
                            else if (a instanceof G || a instanceof I) b = a.infos[0].symbol;
                            return (a = b && -1 === b.type.indexOf("linesymbol") ? b.getStroke() : null) && a.color
                        },
                        _drawGradientRamp: function(a, b, c, d, e, f) {
                            var n = l.create("tr", {}, a),
                                m, r, s, p, x, t = b.length - 1,
                                w;
                            p = 0;
                            this.alignRight ? (a = l.create("td", {
                                align: this._isRightToLeft ? "left" : "right"
                            }, n), m = l.create("td", {
                                align: this._isRightToLeft ? "left" : "right",
                                width: this.gradientWidth
                            }, n)) : (m = l.create("td", {
                                width: this.gradientWidth,
                                align: "center"
                            }, n), a = l.create("td", {}, n));
                            n = e && 0 < e.a && !(240 <= e.r && 240 <= e.g && 240 <= e.b);
                            r = l.create("div", {
                                "class": n ? "" : "esriLegendBorderLessColorRamp",
                                style: "position: relative; width:" + this.gradientWidth + "px;"
                            }, m);
                            m = l.create("div", {
                                "class": "esriLegendColorRamp" + (f ? " esriLegendTransparencyRamp" : "")
                            }, r);
                            f = g.get(m, "width");
                            n && (e = 9 > k("ie") ? e.toHex() : "rgba(" + e.toRgba().join(",") + ")", g.set(m, "border", this.colorRampBorder + " " + e));
                            c ? (e = this.gradientHeight * t, g.set(m, "height", e + "px")) : e = g.get(m, "height");
                            g.set(r, "height", e + "px");
                            n = v.createSurface(m, f, e);
                            9 > k("ie") && (p = n.getEventSource(), g.set(p, "position", "relative"),
                                g.set(p.parentNode, "position", "relative"), p = 1);
                            try {
                                c && h.forEach(b, function(a, b) {
                                    a.offset = b / t
                                }), x = n.createRect({
                                    x: -p,
                                    y: -p,
                                    width: f + p,
                                    height: e + p
                                }), x.setFill({
                                    type: "linear",
                                    x1: 0,
                                    y1: 0,
                                    x2: 0,
                                    y2: e,
                                    colors: b
                                }).setStroke(null), n.createRect({
                                    width: f,
                                    height: e
                                }).setFill(new q([255, 255, 255, 1 - d.opacity])).setStroke(null), this._surfaceItems.push(n)
                            } catch (u) {
                                n.clear(), n.destroy()
                            }
                            h.forEach(b, function(a, c) {
                                if (a.label) {
                                    w = "top:" + 100 * a.offset + "%;";
                                    var d = "";
                                    0 === c && (d += " esriLegendColorRampTickFirst");
                                    c === b.length - 1 && (d +=
                                        " esriLegendColorRampTickLast");
                                    l.create("div", {
                                        "class": "esriLegendColorRampTick" + d,
                                        innerHTML: "\x26nbsp;",
                                        style: w
                                    }, r)
                                }
                            });
                            s = l.create("div", {
                                "class": "esriLegendColorRampLabels",
                                style: {
                                    height: e + this.gradientHeight + "px"
                                }
                            }, a);
                            c ? h.forEach(b, function(a) {
                                l.create("div", {
                                    "class": "esriLegendColorRampLabel",
                                    innerHTML: z.encode(a.label) || "\x26nbsp;"
                                }, s)
                            }) : (l.create("div", {
                                "class": "esriLegendColorRampLabel",
                                innerHTML: this._i18n.high
                            }, s), l.create("div", {
                                "class": "esriLegendColorRampLabel",
                                innerHTML: this._i18n.low,
                                style: "top: " + (e + this.gradientHeight - 2 * this.gradientHeight) + "px;"
                            }, s))
                        },
                        _showHeatRamp: function(a, b, c, d, e) {
                            var g, f = c.field;
                            g = l.create("table", {
                                cellpadding: 0,
                                cellspacing: 0,
                                width: "95%",
                                "class": "esriLegendLayer"
                            }, d);
                            d = l.create("tbody", {}, g);
                            (a._hoverLabel || a._hoverLabels || e) && this._createHoverAction(g, a, b, e);
                            (f = f && a.getField(f)) && this._addSubHeader(d, this._getFieldAlias(f.name, a));
                            b = this._getHeatmapStops(c);
                            b.length && this._drawGradientRamp(d, b, !1, a)
                        },
                        _getHeatmapStops: function(a) {
                            var b = a.colorStops;
                            a =
                                a.colors;
                            var c, d, e, g;
                            if (b && b[0])
                                if (c = b.length - 1, a = b[0] && null != b[0].ratio) {
                                    if ((a = b[c]) && 1 !== a.ratio) b = b.slice(0), b.push({
                                        ratio: 1,
                                        color: a.color
                                    }), c++
                                } else d = b[0].value, e = b[c].value - d, b = h.map(b, function(a) {
                                    return {
                                        color: a.color,
                                        ratio: (a.value - d) / e
                                    }
                                });
                            else a && a[0] && (c = a.length - 1, g = 1 / (a.length - 1), b = h.map(a, function(a, b) {
                                return {
                                    color: a,
                                    ratio: b * g
                                }
                            }));
                            b = h.map(b, function(a, b) {
                                var d = "";
                                0 === b ? d = "Low" : b === c && (d = "High");
                                return {
                                    color: a.color,
                                    label: d,
                                    offset: 1 - a.ratio
                                }
                            });
                            return b.reverse()
                        },
                        _showDotDensityLegend: function(a,
                            b, c, d) {
                            var e = c.legendOptions,
                                g, k, n, m, r, q, p, s = this.dotDensitySwatchSize,
                                v = Math.round(s / 2);
                            e && (k = e.backgroundColor, n = e.outline, m = e.valueUnit, r = e.dotCoverage);
                            r = (r || this.dotCoverage) / 100;
                            p = Math.round(s * s / Math.pow(c.dotSize, 2) * r);
                            d = l.create("table", {
                                cellpadding: 0,
                                cellspacing: 0,
                                width: "95%",
                                "class": "esriLegendLayer"
                            }, d);
                            q = l.create("tbody", {}, d);
                            (a._hoverLabel || a._hoverLabels) && this._createHoverAction(d, a, b);
                            this._addSubHeader(q, u.substitute({
                                value: c.dotValue,
                                unit: m || ""
                            }, this.NLS_dotValue));
                            h.forEach(c.fields,
                                function(b) {
                                    b = f.mixin({}, b);
                                    b.numPoints = p;
                                    g = new H(c._generateImageSrc(s, s, [b], {
                                        x: 0,
                                        y: 0
                                    }, {
                                        x: s,
                                        y: s
                                    }, k), n || c.outline, s, s);
                                    b = a.getField(b.name) || b;
                                    this._buildRow_Renderer(a, g, null, z.encode(this._getFieldAlias(b.name, a)), null, q, {
                                        type: "path",
                                        path: "M " + -v + "," + -v + " L " + v + "," + -v + " L " + v + "," + v + " L " + -v + "," + v + " L " + -v + "," + -v + " E"
                                    })
                                }, this)
                        },
                        _showSizeLegend: function(a, b, c, d, e, g, k, n, h) {
                            var m = d.legendOptions,
                                m = m && m.customValues;
                            e = this._getSizeSymbol(c, e);
                            if (!(d.valueUnit && "unknown" !== d.valueUnit || !e || !m && (null ==
                                    d.minSize || null == d.maxSize) && (!d.stops || 1 >= d.stops.length))) {
                                h = l.create("table", {
                                    cellpadding: 0,
                                    cellspacing: 0,
                                    width: "95%",
                                    "class": "esriLegendLayer" + (!h ? " esriLegendSubFragment" : "")
                                }, g);
                                g = l.create("tbody", {}, h);
                                (a._hoverLabel || a._hoverLabels || n) && this._createHoverAction(h, a, b, n);
                                (k || d.valueExpression) && this._addSubHeader(g, this._getRampTitle(d, a));
                                b = d.field;
                                var r;
                                b && (r = f.isFunction(b) ? null : a.getField(b));
                                r = r && "esriFieldTypeDate" === r.type;
                                m = m || this._getDataValues(c, e, d, r);
                                for (b = h = m.length - 1; 0 <= b; b--) k =
                                    m[b], e = L.fromJson(e.toJson()), this._applySize(e, c, d, k), k = r ? D.formatDate(k, D.timelineDateFormatOptions) : E.format(k), n = "", b === h ? n = this._specialChars.gt + " " : 0 === b && (n = this._specialChars.lt + " "), n = "\x3cspan class\x3d'esriLegendSizeRampLabel'\x3e" + z.encode(n + k) + "\x3c/span\x3e", this._buildRow_Renderer(a, e, null, n, null, g)
                            }
                        },
                        _getSizeSymbol: function(a, b) {
                            var c, d;
                            if (a instanceof B) c = a.symbol;
                            else if (a instanceof P) c = a.defaultSymbol;
                            else if (a instanceof G || a instanceof I) c = a.infos[0].symbol, d = 1 < a.infos.length;
                            if (c = c && -1 !== c.type.indexOf("fillsymbol") ? null : c)
                                if (c = L.fromJson(c.toJson()), b || d) - 1 !== c.type.indexOf("linesymbol") ? c.setColor(new q(this.sizeRampDarkColor)) : (c.setColor(new q(this.sizeRampLightColor)), c.setOutline && (d = new O, d.setColor(new q(this.sizeRampDarkColor)), d.setWidth(1.5), c.setOutline(d)));
                            return c
                        },
                        _getDataValues: function(a, b, c, d, e, g) {
                            e = null == e ? 5 : e;
                            g = null == g ? 20 : g;
                            var f = a.getSizeRangeAtScale(c, this.map.getScale());
                            e = this._interpolateSizeRange(f, e);
                            var l = this._getDataRange(c),
                                k = h.map(e, function(a) {
                                    return this._getDataValueFromSize(a,
                                        l, f)
                                }, this);
                            if (!d) {
                                var n, k = E.round(k);
                                for (d = 1; d < k.length - 1; d++)
                                    if (n = this._roundDataValue(a, b, c, k[d], k[d - 1], g)) k[d] = n[0], e[d] = n[1]
                            }
                            return k
                        },
                        _getDataRange: function(a) {
                            var b = a.stops;
                            return b ? {
                                min: b[0].value,
                                max: b[b.length - 1].value
                            } : {
                                min: a.minDataValue,
                                max: a.maxDataValue
                            }
                        },
                        _interpolateSizeRange: function(a, b) {
                            var c = a.minSize,
                                d = (a.maxSize - c) / (b - 1),
                                e, g = [];
                            for (e = 0; e < b; e++) g.push(c + d * e);
                            return g
                        },
                        _getDataValueFromSize: function(a, b, c) {
                            var d = c.minSize;
                            c = c.maxSize;
                            var e = b.min;
                            b = b.max;
                            return a = a <= d ? e : a >= c ? b :
                                (a - d) / (c - d) * (b - e) + e
                        },
                        _roundDataValue: function(a, b, c, d, e, g) {
                            var f = this._getSize(b, a, c, d);
                            e = this._getSize(b, a, c, e);
                            var l, k = E.getDigits(d),
                                n = k.integer,
                                k = k.fractional,
                                h, m, r, q, s, p, v, x, t, z, w;
                            0 < d && 1 > d && (l = Math.pow(10, k), d *= l, n = E.getDigits(d).integer);
                            for (n -= 1; 0 <= n && !(h = Math.pow(10, n), k = Math.floor(d / h) * h, h *= Math.ceil(d / h), null != l && (k /= l, h /= l), m = (k + h) / 2, m = E.round([k, m, h], {
                                    indexes: [1]
                                })[1], r = this._getSize(b, a, c, k), q = this._getSize(b, a, c, h), s = this._getSize(b, a, c, m), p = E.getPctChange(f, r, e, null), v = E.getPctChange(f,
                                    q, e, null), x = E.getPctChange(f, s, e, null), t = p.prev <= g, z = v.prev <= g, t && z && (p.prev <= v.prev ? (t = !0, z = !1) : (z = !0, t = !1)), t ? w = [k, r] : z ? w = [h, q] : x.prev <= g && (w = [m, s]), w); n--);
                            return w
                        },
                        _applySize: function(a, b, c, d) {
                            var e = a.type;
                            b = this._getSize(a, b, c, d);
                            switch (e) {
                                case "simplemarkersymbol":
                                    a.setSize(b);
                                    break;
                                case "picturemarkersymbol":
                                    e = a.width;
                                    c = a.height;
                                    a.setHeight(b);
                                    a.setWidth(b * (e / c));
                                    break;
                                case "simplelinesymbol":
                                case "cartographiclinesymbol":
                                    a.setWidth(b);
                                    break;
                                case "textsymbol":
                                    a.font && a.font.setSize(b)
                            }
                        },
                        _getSize: function(a,
                            b, c, d) {
                            return b.getSize(d, {
                                sizeInfo: c,
                                scale: this.map.getScale(),
                                shape: -1 !== a.type.indexOf("markersymbol") ? a.style : null
                            })
                        },
                        _buildRow_Renderer: function(a, b, c, d, e, g, f) {
                            var k = l.create("tr", {}, g),
                                n;
                            this.alignRight ? (g = l.create("td", {
                                align: this._isRightToLeft ? "left" : "right"
                            }, k), b && (n = l.create("td", {
                                align: this._isRightToLeft ? "left" : "right",
                                width: 35
                            }, k))) : (b && (n = l.create("td", {
                                width: 35,
                                align: "center"
                            }, k)), g = l.create("td", {}, k));
                            var h = k = 30,
                                m;
                            if (b) {
                                if ("simplemarkersymbol" == b.type) k = Math.min(Math.max(k, b.size +
                                    12), 125), h = Math.min(Math.max(h, b.size + 12), 125);
                                else if ("picturemarkersymbol" == b.type) k = Math.min(Math.max(k, b.width), 125), h = Math.min(b.height || h, 125);
                                else if ("textsymbol" == b.type) {
                                    var r, q;
                                    b.text || (r = b.text, q = !0, b.setText(this.defaultText));
                                    k = Math.min(Math.max(k, b.getWidth() + 12), 125);
                                    h = Math.min(Math.max(h, b.getHeight() + 12), 125);
                                    q && b.setText(r)
                                }
                                m = l.create("div", {
                                    style: "width:" + k + "px;height:" + h + "px;"
                                }, n)
                            }
                            u.isDefined(d) && "number" === typeof d && (d = "" + d);
                            l.create("td", {
                                innerHTML: d || "",
                                align: this._align
                            }, l.create("tr", {}, l.create("tbody", {}, l.create("table", {
                                width: "95%"
                            }, g))));
                            b && (a = this._drawSymbol(m, b, c, k, h, e, a, f), this._surfaceItems.push(a))
                        },
                        _addSubHeader: function(a, b) {
                            var c = l.create("tr", {}, a),
                                c = l.create("td", {
                                    align: this._align,
                                    colspan: 2
                                }, c);
                            l.create("td", {
                                innerHTML: z.encode(b) || "",
                                align: this._align
                            }, l.create("tr", {}, l.create("tbody", {}, l.create("table", {
                                width: "95%"
                            }, c))))
                        },
                        _drawSymbol: function(a, b, c, d, e, l, n, h) {
                            b = L.fromJson(b.toJson());
                            var m = n.opacity;
                            c && b.setColor(new q(c.toRgba()));
                            if ("simplelinesymbol" ===
                                b.type || "cartographiclinesymbol" === b.type || "textsymbol" === b.type) {
                                if (!b.color) return;
                                c = b.color.toRgba();
                                c[3] *= m;
                                b.color.setColor(c)
                            } else "simplemarkersymbol" === b.type || "simplefillsymbol" === b.type ? (b.color && (c = b.color.toRgba(), c[3] *= m, b.color.setColor(c)), b.outline && b.outline.color && (c = b.outline.color.toRgba(), c[3] *= m, b.outline.color.setColor(c))) : "picturemarkersymbol" === b.type && (a.style.opacity = m, a.style.filter = "alpha(opacity\x3d(" + 100 * m + "))");
                            a = v.createSurface(a, d, e);
                            9 > k("ie") && (c = a.getEventSource(),
                                g.set(c, "position", "relative"), g.set(c.parentNode, "position", "relative"));
                            l = this._getDrawingToolShape(b, l) || L.getShapeDescriptors(b);
                            var r, m = (c = l.defaultShape) && "text" === c.type;
                            try {
                                m && !c.text && (c.text = this.defaultText), r = a.createShape(h || c).setFill(l.fill).setStroke(l.stroke), m && r.setFont(l.font)
                            } catch (s) {
                                a.clear();
                                a.destroy();
                                return
                            }
                            var p = r.getBoundingBox();
                            h = p.width;
                            l = p.height;
                            var m = -(p.x + h / 2),
                                x = -(p.y + l / 2);
                            c = a.getDimensions();
                            m = {
                                dx: m + c.width / 2,
                                dy: x + c.height / 2
                            };
                            if ("simplemarkersymbol" === b.type &&
                                "path" === b.style) d = n._getScaleMatrix(p, b.size), r.applyTransform(w.scaleAt(d.xx, d.yy, {
                                x: c.width / 2,
                                y: c.height / 2
                            }));
                            else if (h > d || l > e) n = h / d > l / e, d = ((n ? d : e) - 5) / (n ? h : l), f.mixin(m, {
                                xx: d,
                                yy: d
                            });
                            r.applyTransform(m);
                            return a
                        },
                        _getDrawingToolShape: function(a, b) {
                            var c;
                            switch (b ? b.drawingTool || null : null) {
                                case "esriFeatureEditToolArrow":
                                    c = {
                                        type: "path",
                                        path: "M 10,1 L 3,8 L 3,5 L -15,5 L -15,-2 L 3,-2 L 3,-5 L 10,1 Z"
                                    };
                                    break;
                                case "esriFeatureEditToolTriangle":
                                    c = {
                                        type: "path",
                                        path: "M -10,14 L 2,-10 L 14,14 L -10,14 Z"
                                    };
                                    break;
                                case "esriFeatureEditToolRectangle":
                                    c = {
                                        type: "path",
                                        path: "M -10,-10 L 10,-10 L 10,10 L -10,10 L -10,-10 Z"
                                    };
                                    break;
                                case "esriFeatureEditToolCircle":
                                    c = {
                                        type: "circle",
                                        cx: 0,
                                        cy: 0,
                                        r: 10
                                    };
                                    break;
                                case "esriFeatureEditToolEllipse":
                                    c = {
                                        type: "ellipse",
                                        cx: 0,
                                        cy: 0,
                                        rx: 10,
                                        ry: 5
                                    };
                                    break;
                                default:
                                    return null
                            }
                            return {
                                defaultShape: c,
                                fill: a.getFill(),
                                stroke: a.getStroke()
                            }
                        },
                        _repaintItems: function() {
                            h.forEach(this._surfaceItems, function(a) {
                                this._repaint(a)
                            }, this)
                        },
                        _repaint: function(a) {
                            if (a) {
                                a.getStroke && a.setStroke && a.setStroke(a.getStroke());
                                try {
                                    a.getFill && a.setFill && a.setFill(a.getFill())
                                } catch (b) {}
                                a.children && f.isArray(a.children) && h.forEach(a.children, this._repaint, this)
                            }
                        },
                        _createHoverAction: function(a, b, c, e) {
                            if (e = b._hoverLabel || b._hoverLabels && b._hoverLabels[c.id] || e) e = z.encode(e), b.mouseMoveHandler = b.mouseMoveHandler || {}, b.mouseMoveHandler[c.id] = d.connect(a, "onmousemove", f.hitch(this, function(a, b) {
                                this.mouseX = b.clientX;
                                this.mouseY = b.clientY;
                                this.hoverLabelShowing && (this.hoverLabelShowing = !1, g.set(r.byId(this.id + "_hoverLabel"), "display",
                                    "none"));
                                setTimeout(f.hitch(this, function(a, b, c) {
                                        if (a == this.mouseX && b == this.mouseY && !this.hoverLabelShowing)
                                            if (this.hoverLabelShowing = !0, r.byId(this.id + "_hoverLabel")) {
                                                var d = r.byId(this.id + "_hoverLabel");
                                                d.innerHTML = "\x3cspan\x3e" + c + "\x3c/span\x3e";
                                                g.set(d, "top", b + "px");
                                                g.set(d, "left", a + 15 + "px");
                                                g.set(d, "display", "")
                                            } else l.create("div", {
                                                innerHTML: "\x3cspan\x3e" + c + "\x3c/span\x3e",
                                                id: this.id + "_hoverLabel",
                                                "class": "esriLegendHoverLabel",
                                                style: {
                                                    top: b + "px",
                                                    left: a + 15 + "px"
                                                }
                                            }, document.body)
                                    }, b.clientX, b.clientY,
                                    a), 500)
                            }, e)), b.mouseOutHandler = b.mouseOutHandler || {}, b.mouseOutHandler[c.id] = d.connect(a, "onmouseout", f.hitch(this, function(a) {
                                this.mouseY = this.mouseX = -1;
                                this.hoverLabelShowing && (this.hoverLabelShowing = !1, g.set(r.byId(this.id + "_hoverLabel"), "display", "none"))
                            }))
                        },
                        _removeHoverHandlers: function() {
                            var a;
                            h.forEach(this.layers, function(b) {
                                if (b.mouseMoveHandler)
                                    for (a in b.mouseMoveHandler) d.disconnect(b.mouseMoveHandler[a]);
                                if (b.mouseOutHandler)
                                    for (a in b.mouseOutHandler) d.disconnect(b.mouseOutHandler[a])
                            })
                        },
                        _createDynamicLayers: function(a) {
                            var b = [],
                                c;
                            h.forEach(a.dynamicLayerInfos || a.layerInfos, function(d) {
                                c = {
                                    id: d.id
                                };
                                c.source = d.source && d.source.toJson();
                                var e;
                                a.layerDefinitions && a.layerDefinitions[d.id] && (e = a.layerDefinitions[d.id]);
                                e && (c.definitionExpression = e);
                                var g;
                                a.layerDrawingOptions && a.layerDrawingOptions[d.id] && (g = a.layerDrawingOptions[d.id]);
                                g && (c.drawingInfo = g.toJson());
                                c.minScale = d.minScale || 0;
                                c.maxScale = d.maxScale || 0;
                                b.push(c)
                            });
                            return b
                        },
                        _getTemplateFromTypes: function(a, b) {
                            var c;
                            for (c = 0; c <
                                a.length; c++)
                                if (a[c].id == b && a[c].templates && 0 < a[c].templates.length) return a[c].templates[0];
                            return null
                        },
                        _findParentGroup: function(a, b, c) {
                            var d, e = b.dynamicLayerInfos || b.layerInfos;
                            for (d = 0; d < e.length; d++)
                                if (c == e[d].id) {
                                    -1 < e[d].parentLayerId && (g.set(r.byId(this.id + "_" + a + "_" + e[d].parentLayerId + "_group"), "display", "block"), this._findParentGroup(a, b, e[d].parentLayerId));
                                    break
                                }
                        },
                        _addSubLayersToHide: function(a) {
                            function b(c, d) {
                                var e = a.layer.dynamicLayerInfos || a.layer.layerInfos,
                                    g, f;
                                for (g = 0; g < e.length; g++)
                                    if (e[g].id ===
                                        c && e[g].subLayerIds)
                                        for (f = 0; f < e[g].subLayerIds.length; f++) {
                                            var l = e[g].subLayerIds[f]; - 1 === h.indexOf(d, l) && (d.push(l), b(l, d))
                                        }
                            }
                            a.layer.layerInfos && h.forEach(this.hideLayersInLegend[a.layer.id], function(c) {
                                b(c, this.hideLayersInLegend[a.layer.id])
                            }, this)
                        },
                        _isLayerInScale: function(a, b, c) {
                            var d, e = !0;
                            if (a.legendResponse && a.legendResponse.layers)
                                for (d = 0; d < a.legendResponse.layers.length; d++) {
                                    var g = a.legendResponse.layers[d];
                                    if (b.id == g.layerId) {
                                        var f, l;
                                        !a.minScale && 0 !== a.minScale || !a.maxScale && 0 !== a.maxScale ?
                                            (0 == g.minScale && a.tileInfo && (f = a.tileInfo.lods[0].scale), 0 == g.maxScale && a.tileInfo && (l = a.tileInfo.lods[a.tileInfo.lods.length - 1].scale)) : (f = Math.min(a.minScale, g.minScale) || a.minScale || g.minScale, l = Math.max(a.maxScale, g.maxScale));
                                        if (0 < f && f < c || l > c) e = !1;
                                        break
                                    }
                                } else if (a.minScale || a.maxScale)
                                    if (a.minScale && a.minScale < c || a.maxScale && a.maxScale > c) e = !1;
                            return e
                        },
                        _getServiceTitle: function(a) {
                            var b = a._titleForLegend;
                            b || ((b = a.url) ? -1 < a.url.indexOf("/MapServer") ? (b = a.url.substring(0, a.url.indexOf("/MapServer")),
                                b = b.substring(b.lastIndexOf("/") + 1, b.length)) : -1 < a.url.indexOf("/ImageServer") ? (b = a.url.substring(0, a.url.indexOf("/ImageServer")), b = b.substring(b.lastIndexOf("/") + 1, b.length)) : -1 < a.url.indexOf("/FeatureServer") && (b = a.url.substring(0, a.url.indexOf("/FeatureServer")), b = b.substring(b.lastIndexOf("/") + 1, b.length)) : b = "", a.name && (b = 0 < b.length ? b + (" - " + a.name) : a.name));
                            "esri.layers.ArcGISImageServiceVectorLayer" === a.declaredClass && a.vectorFieldPixelFilter && (a = a.vectorFieldPixelFilter.outputUnit ? this["NLS_" +
                                a.vectorFieldPixelFilter.outputUnit] : this["NLS_" + a.vectorFieldPixelFilter.inputUnit], u.isDefined(a) && (b += " (" + a + ")"));
                            return z.encode(b)
                        },
                        _getEffectiveScale: function(a, b) {
                            var c = b.minScale,
                                d = b.maxScale;
                            if (u.isDefined(b.parentLayerId)) {
                                var e = a.layerInfos,
                                    g = b.parentLayerId,
                                    f;
                                for (f = e.length - 1; 0 <= f; f--)
                                    if (e[f].id == g)
                                        if (0 == c && 0 < e[f].minScale ? c = e[f].minScale : 0 < c && 0 == e[f].minScale || 0 < c && 0 < e[f].minScale && (c = Math.min(c, e[f].minScale)), d = Math.max(d || 0, e[f].maxScale || 0), -1 < e[f].parentLayerId) g = e[f].parentLayerId;
                                        else break
                            }
                            return {
                                minScale: c,
                                maxScale: d
                            }
                        },
                        _isSupportedLayerType: function(a) {
                            return a && ("esri.layers.ArcGISDynamicMapServiceLayer" === a.declaredClass || "esri.layers.ArcGISImageServiceLayer" === a.declaredClass && 10.2 <= a.version || "esri.layers.ArcGISImageServiceVectorLayer" === a.declaredClass || "esri.layers.ArcGISTiledMapServiceLayer" === a.declaredClass || "esri.layers.FeatureLayer" === a.declaredClass || "esri.layers.StreamLayer" === a.declaredClass || "esri.layers.KMLLayer" === a.declaredClass || "esri.layers.GeoRSSLayer" ===
                                a.declaredClass || "esri.layers.WMSLayer" === a.declaredClass || "esri.layers.WFSLayer" === a.declaredClass || "esri.layers.CSVLayer" === a.declaredClass) ? !0 : !1
                        }
                    });
                    f.mixin(Q, {
                        ALIGN_LEFT: 0,
                        ALIGN_RIGHT: 1
                    });
                    return Q
                })
        },
        "dojo/debounce": function() {
            define([], function() {
                return function(p, e) {
                    var f;
                    return function() {
                        f && clearTimeout(f);
                        var h = this,
                            d = arguments;
                        f = setTimeout(function() {
                            p.apply(h, d)
                        }, e)
                    }
                }
            })
        },
        "esri/numberUtils": function() {
            define(["dojo/has", "dojo/number", "dojo/i18n!dojo/cldr/nls/number", "./kernel"], function(p,
                e, f, h) {
                var d = function(d, a) {
                        return d - a
                    },
                    m = {
                        _reNumber: /^-?(\d+)(\.(\d+))?$/i,
                        getDigits: function(d) {
                            var a = String(d),
                                e = a.match(m._reNumber);
                            d = {
                                integer: 0,
                                fractional: 0
                            };
                            e && e[1] ? (d.integer = e[1].split("").length, d.fractional = e[3] ? e[3].split("").length : 0) : -1 < a.toLowerCase().indexOf("e") && (e = a.split("e"), a = e[0], e = e[1], a && e && (a = Number(a), e = Number(e), (d = 0 < e) || (e = Math.abs(e)), a = m.getDigits(a), d ? (a.integer += e, a.fractional = e > a.fractional ? 0 : a.fractional - e) : (a.fractional += e, a.integer = e > a.integer ? 1 : a.integer - e), d =
                                a));
                            return d
                        },
                        getFixedNumbers: function(d, a) {
                            var e, c;
                            e = Number(d.toFixed(a));
                            e < d ? c = e + 1 / Math.pow(10, a) : (c = e, e -= 1 / Math.pow(10, a));
                            e = Number(e.toFixed(a));
                            c = Number(c.toFixed(a));
                            return [e, c]
                        },
                        getPctChange: function(d, a, e, c) {
                            var f = {
                                    prev: null,
                                    next: null
                                },
                                n;
                            null != e && (n = d - e, e = a - e - n, f.prev = Math.floor(Math.abs(100 * e / n)));
                            null != c && (n = c - d, e = c - a - n, f.next = Math.floor(Math.abs(100 * e / n)));
                            return f
                        },
                        round: function(e, a) {
                            var f = e.slice(0),
                                c, h, n, r, l, g, p, b, v, w = !a || null == a.tolerance ? 2 : a.tolerance,
                                z = a && a.indexes,
                                A = !a || null == a.strictBounds ?
                                !1 : a.strictBounds;
                            if (z) z.sort(d);
                            else {
                                z = [];
                                for (g = 0; g < f.length; g++) z.push(g)
                            }
                            for (g = 0; g < z.length; g++)
                                if (v = z[g], c = f[v], h = 0 === v ? null : f[v - 1], n = v === f.length - 1 ? null : f[v + 1], r = m.getDigits(c), r = r.fractional) {
                                    p = 0;
                                    for (b = !1; p <= r && !b;) l = m.getFixedNumbers(c, p), l = A && 0 === g ? l[1] : l[0], b = m.hasMinimalChange(c, l, h, n, w), p++;
                                    b && (f[v] = l)
                                }
                            return f
                        },
                        hasMinimalChange: function(d, a, e, c, f) {
                            d = m.getPctChange(d, a, e, c);
                            a = null == d.prev || d.prev <= f;
                            e = null == d.next || d.next <= f;
                            return a && e || d.prev + d.next <= 2 * f
                        },
                        _reAllZeros: RegExp("\\" + f.decimal +
                            "0+$", "g"),
                        _reSomeZeros: RegExp("(\\d)0*$", "g"),
                        format: function(d, a) {
                            a = a || {
                                places: 20,
                                round: -1
                            };
                            var f = e.format(d, a);
                            f && (f = f.replace(m._reSomeZeros, "$1").replace(m._reAllZeros, ""));
                            return f
                        }
                    };
                return m
            })
        },
        "esri/renderers/utils": function() {
            define("dojo/_base/lang dojo/_base/array dojo/has dojo/date/locale ../kernel ../numberUtils ../Color dojo/i18n!../nls/jsapi dojo/i18n!dojo/cldr/nls/gregorian".split(" "), function(p, e, f, h, d, m, q, a, k) {
                function c(a) {
                    return a && e.map(a, function(a) {
                        return new q(a)
                    })
                }

                function s(a,
                    b, c) {
                    var d = "";
                    0 === b ? d = r.lt + " " : b === c && (d = r.gt + " ");
                    return d + a
                }
                var n = {},
                    r = {
                        lte: "\x3c\x3d",
                        gte: "\x3e\x3d",
                        lt: "\x3c",
                        gt: "\x3e",
                        pct: "%"
                    },
                    l = {
                        millisecond: 0,
                        second: 1,
                        minute: 2,
                        hour: 3,
                        day: 4,
                        month: 5,
                        year: 6
                    },
                    g = {
                        millisecond: {
                            dateOptions: {
                                formatLength: "long"
                            },
                            timeOptions: {
                                formatLength: "medium"
                            }
                        },
                        second: {
                            dateOptions: {
                                formatLength: "long"
                            },
                            timeOptions: {
                                formatLength: "medium"
                            }
                        },
                        minute: {
                            dateOptions: {
                                formatLength: "long"
                            },
                            timeOptions: {
                                formatLength: "short"
                            }
                        },
                        hour: {
                            dateOptions: {
                                formatLength: "long"
                            },
                            timeOptions: {
                                formatLength: "short"
                            }
                        },
                        day: {
                            selector: "date",
                            dateOptions: {
                                formatLength: "long"
                            }
                        },
                        month: {
                            selector: "date",
                            dateOptions: {
                                formatLength: "long"
                            }
                        },
                        year: {
                            selector: "date",
                            dateOptions: {
                                selector: "year"
                            }
                        }
                    },
                    t = {
                        formatLength: "short",
                        fullYear: !0
                    },
                    b = {
                        formatLength: "short"
                    };
                p.mixin(n, {
                    timelineDateFormatOptions: {
                        selector: "date",
                        dateOptions: {
                            formatLength: "short",
                            fullYear: !0
                        }
                    },
                    formatDate: function(a, c) {
                        var d, g = [];
                        null != a && !(a instanceof Date) && (a = new Date(a));
                        c = c || {};
                        c = p.mixin({}, c);
                        var f = c.selector ? c.selector.toLowerCase() : null;
                        d = !f || -1 < f.indexOf("time");
                        f = !f || -1 < f.indexOf("date");
                        d && (c.timeOptions = c.timeOptions || b, c.timeOptions && (c.timeOptions = p.mixin({}, c.timeOptions), c.timeOptions.selector = c.timeOptions.selector || "time", g.push(c.timeOptions)));
                        f && (c.dateOptions = c.dateOptions || t, c.dateOptions && (c.dateOptions = p.mixin({}, c.dateOptions), c.dateOptions.selector = c.dateOptions.selector || "date", g.push(c.dateOptions)));
                        g && g.length ? (g = e.map(g, function(b) {
                            return h.format(a, b)
                        }), d = 1 == g.length ? g[0] : k["dateTimeFormat-medium"].replace(/\'/g, "").replace(/\{(\d+)\}/g,
                            function(a, b) {
                                return g[b]
                            })) : d = h.format(a);
                        return d
                    },
                    createColorStops: function(a) {
                        var b = a.values,
                            c = a.colors,
                            d = a.labelIndexes,
                            g = a.isDate,
                            f = a.dateFormatOptions;
                        a = [];
                        return a = e.map(b, function(a, l) {
                            var k = null;
                            if (!d || -1 < e.indexOf(d, l)) {
                                var h;
                                (h = g ? n.formatDate(a, f) : m.format(a)) && (k = s(h, l, b.length - 1))
                            }
                            return {
                                value: a,
                                color: c[l],
                                label: k
                            }
                        })
                    },
                    updateColorStops: function(a) {
                        var b = a.stops,
                            c = a.changes,
                            d = a.isDate,
                            g = a.dateFormatOptions,
                            f = [],
                            l, k = e.map(b, function(a) {
                                return a.value
                            });
                        e.forEach(c, function(a) {
                            f.push(a.index);
                            k[a.index] = a.value
                        });
                        l = m.round(k, {
                            indexes: f
                        });
                        e.forEach(b, function(a, c) {
                            a.value = k[c];
                            if (null != a.label) {
                                var e, f = null;
                                (e = d ? n.formatDate(l[c], g) : m.format(l[c])) && (f = s(e, c, b.length - 1));
                                a.label = f
                            }
                        })
                    },
                    createClassBreakLabel: function(b) {
                        var c = b.minValue,
                            d = b.maxValue,
                            e = b.isFirstBreak ? "" : r.gt + " ";
                        b = "percent-of-total" === b.normalizationType ? r.pct : "";
                        c = null == c ? "" : m.format(c);
                        d = null == d ? "" : m.format(d);
                        return e + c + b + " " + a.smartMapping.minToMax + " " + d + b
                    },
                    setLabelsForClassBreaks: function(a) {
                        var b = a.classBreaks,
                            c = a.classificationMethod,
                            d = a.normalizationType,
                            g = [];
                        b && b.length && ("standard-deviation" === c ? console.log("setLabelsForClassBreaks: cannot set labels for class breaks generated using 'standard-deviation' method.") : a.round ? (g.push(b[0].minValue), e.forEach(b, function(a) {
                            g.push(a.maxValue)
                        }), g = m.round(g), e.forEach(b, function(a, b) {
                            a.label = n.createClassBreakLabel({
                                minValue: 0 === b ? g[0] : g[b],
                                maxValue: g[b + 1],
                                isFirstBreak: 0 === b,
                                normalizationType: d
                            })
                        })) : e.forEach(b, function(a, b) {
                            a.label = n.createClassBreakLabel({
                                minValue: a.minValue,
                                maxValue: a.maxValue,
                                isFirstBreak: 0 === b,
                                normalizationType: d
                            })
                        }))
                    },
                    updateClassBreak: function(a) {
                        var b = a.classBreaks,
                            c = a.normalizationType,
                            d = a.change,
                            e = d.index,
                            d = d.value,
                            g = -1,
                            f = -1,
                            l = b.length;
                        "standard-deviation" === a.classificationMethod ? console.log("updateClassBreak: cannot update labels for class breaks generated using 'standard-deviation' method.") : (0 === e ? g = e : e === l ? f = e - 1 : (f = e - 1, g = e), -1 < g && g < l && (a = b[g], a.minValue = d, a.label = n.createClassBreakLabel({
                            minValue: a.minValue,
                            maxValue: a.maxValue,
                            isFirstBreak: 0 === g,
                            normalizationType: c
                        })), -1 < f && f < l && (a = b[f], a.maxValue = d, a.label = n.createClassBreakLabel({
                            minValue: a.minValue,
                            maxValue: a.maxValue,
                            isFirstBreak: 0 === f,
                            normalizationType: c
                        })))
                    },
                    calculateDateFormatInterval: function(a) {
                        var b, c, d = a.length,
                            g, f, k, n, h, m, r = Infinity,
                            q;
                        a = e.map(a, function(a) {
                            return new Date(a)
                        });
                        for (b = 0; b < d - 1; b++) {
                            g = a[b];
                            k = [];
                            h = Infinity;
                            m = "";
                            for (c = b + 1; c < d; c++) f = a[c], f = g.getFullYear() !== f.getFullYear() && "year" || g.getMonth() !== f.getMonth() && "month" || g.getDate() !== f.getDate() && "day" || g.getHours() !== f.getHours() && "hour" ||
                                g.getMinutes() !== f.getMinutes() && "minute" || g.getSeconds() !== f.getSeconds() && "second" || "millisecond", n = l[f], n < h && (h = n, m = f), k.push(f);
                            h < r && (r = h, q = m)
                        }
                        return q
                    },
                    createUniqueValueLabel: function(a) {
                        var b = a.value,
                            c = a.fieldInfo,
                            d = a.domain;
                        a = a.dateFormatInterval;
                        var e = String(b);
                        (d = d && d.codedValues ? d.getName(b) : null) ? e = d: "number" === typeof b && (e = c && "esriFieldTypeDate" === c.type ? n.formatDate(b, a && g[a]) : m.format(b));
                        return e
                    },
                    cloneColorInfo: function(a) {
                        var b;
                        a && (b = p.mixin({}, a), b.colors = c(b.colors), b.stops = b.stops &&
                            e.map(b.stops, function(a) {
                                a = p.mixin({}, a);
                                a.color && (a.color = new q(a.color));
                                return a
                            }), b.legendOptions && (b.legendOptions = p.mixin({}, b.legendOptions)));
                        return b
                    },
                    cloneOpacityInfo: function(a) {
                        var b;
                        if (a) {
                            b = p.mixin({}, a);
                            if (a = b.opacityValues) b.opacityValues = a.slice(0);
                            if (a = b.stops) b.stops = e.map(a, function(a) {
                                return p.mixin({}, a)
                            });
                            if (a = b.legendOptions) b.legendOptions = p.mixin({}, a)
                        }
                        return b
                    },
                    cloneSizeInfo: function(a) {
                        var b;
                        if (a) {
                            b = p.mixin({}, a);
                            b.stops && (b.stops = e.map(b.stops, function(a) {
                                return p.mixin({},
                                    a)
                            }));
                            if ((a = b.minSize) && "object" === typeof a) b.minSize = n.cloneSizeInfo(a);
                            if ((a = b.maxSize) && "object" === typeof a) b.maxSize = n.cloneSizeInfo(a);
                            if (a = b.legendOptions)
                                if (b.legendOptions = p.mixin({}, a), a = a.customValues) b.legendOptions.customValues = a.slice(0)
                        }
                        return b
                    }
                });
                return n
            })
        },
        "jimu/LayerInfos/LayerInfoForGeoRSS": function() {
            define(["dojo/_base/declare", "dojo/_base/array", "esri/graphicsUtils", "./LayerInfo", "./LayerInfoFactory"], function(p, e, f, h, d) {
                return p(h, {
                    constructor: function() {},
                    getExtent: function() {
                        var d =
                            this.layerObject.items;
                        if (0 === d.length) return null;
                        d = f.graphicsExtent(d);
                        return this._convertGeometryToMapSpatialRef(d)
                    },
                    _resetLayerObjectVisiblity: function(d) {
                        var f = d ? d[this.id] : null;
                        f && (e.forEach(this.newSubLayers, function(a) {
                            var e = d ? d[a.id] : null;
                            e && a.layerObject.setVisibility(e.visible)
                        }, this), this._setTopLayerVisible(f.visible))
                    },
                    initVisible: function() {
                        var d = !1,
                            e;
                        for (e = 0; e < this.newSubLayers.length; e++) d = d || this.newSubLayers[e].layerObject.visible;
                        d && (this._visible = !0)
                    },
                    _setTopLayerVisible: function(d) {
                        this._visible =
                            d ? !0 : !1;
                        e.forEach(this.newSubLayers, function(d) {
                            d.setLayerVisiblefromTopLayer()
                        }, this);
                        this._onVisibilityChanged()
                    },
                    obtainNewSubLayers: function() {
                        var f = [],
                            h = this.layerObject.getFeatureLayers();
                        e.forEach(h, function(a) {
                            a = d.getInstance().create({
                                layerObject: a,
                                title: a.label || a.title || a.name || a.id || " ",
                                id: a.id || " ",
                                collection: {
                                    layerInfo: this
                                },
                                selfType: "geo_rss",
                                parentLayerInfo: this
                            });
                            f.push(a);
                            a.init()
                        }, this);
                        return f
                    },
                    _obtainLayerIndexesInMap: function() {
                        var d = [],
                            e, a;
                        for (a = 0; a < this.newSubLayers.length; a++)(e =
                            this._getLayerIndexesInMapByLayerId(this.newSubLayers[a].layerObject.id)) && d.push(e);
                        return d
                    },
                    moveLeftOfIndex: function(d) {
                        var e;
                        for (e = this.newSubLayers.length - 1; 0 <= e; e--) this.map.reorderLayer(this.newSubLayers[e].layerObject, d)
                    },
                    moveRightOfIndex: function(d) {
                        var e;
                        for (e = 0; e < this.newSubLayers.length; e++) this.map.reorderLayer(this.newSubLayers[e].layerObject, d)
                    }
                })
            })
        },
        "jimu/LayerInfos/LayerInfoForWMS": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/topic dojo/Deferred esri/graphicsUtils dojo/aspect ./LayerInfo ./LayerInfoForDefaultWMS ./LayerInfoFactory esri/layers/FeatureLayer esri/lang".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n) {
                    return p(a, {
                        constructor: function(a, c) {},
                        getExtent: function() {
                            return this._convertGeometryToMapSpatialRef(this.originOperLayer.layerObject.extent)
                        },
                        _resetLayerObjectVisiblity: function(a) {
                            var c = a ? a[this.id] : null;
                            if (a) {
                                c && this.layerObject.setVisibility(c.visible);
                                var d = [],
                                    f = !1;
                                e.forEach(this.layerObject.layerInfos, function(b) {
                                    var c = this.id + "_" + b.name;
                                    n.isDefined(a[c]) && (f = !0, a[c].visible && d.push(b.name))
                                }, this);
                                if (0 < d.length || f) this.layerObject.setVisibleLayers(d), this.traversal(function(a) {
                                    a.initVisible()
                                })
                            }
                        },
                        initVisible: function() {
                            this._visible = this.layerObject.visible
                        },
                        _setTopLayerVisible: function(a) {
                            this.layerObject.setVisibility(a);
                            this._visible = a
                        },
                        setSubLayerVisible: function(a) {
                            var c = [],
                                d, c = f.clone(this.originOperLayer.layerObject.visibleLayers),
                                k;
                            for (k in a)
                                if (a.hasOwnProperty(k) && "function" !== typeof a[k]) {
                                    var b = a[k],
                                        n = k.toString();
                                    d = e.indexOf(c, n);
                                    b ? 0 > d && c.push(n) : 0 <= d && c.splice(d, 1)
                                }
                            this.originOperLayer.layerObject.setVisibleLayers(c)
                        },
                        obtainNewSubLayers: function() {
                            var a = [];
                            e.forEach(this.layerObject.layerInfos,
                                function(d, e) {
                                    var f;
                                    f = c.getInstance().create({
                                        layerObject: this.layerObject,
                                        title: d.label || d.title || d.name || " ",
                                        id: this.id + "_" + (d.name || " "),
                                        wms: {
                                            layerInfo: this,
                                            subId: d.name,
                                            wmsLayerInfo: d
                                        },
                                        selfType: "wms",
                                        parentLayerInfo: this
                                    });
                                    a.push(f);
                                    f.init()
                                }, this);
                            return a
                        },
                        _bindEvent: function() {
                            this.inherited(arguments);
                            this.layerObject && !this.layerObject.empty && q.after(this.layerObject, "setVisibleLayers", f.hitch(this, this._onVisibleLayersChanged))
                        },
                        _onVisibleLayersChanged: function() {
                            var a = [];
                            this.traversal(function(c) {
                                c.initVisible();
                                a.push(c)
                            });
                            h.publish("layerInfos/layerInfo/visibleChanged", a);
                            this._isShowInMapChanged2()
                        }
                    })
                })
        },
        "jimu/LayerInfos/LayerInfoForDefaultWMS": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/html dojo/dom-construct dojo/on ./LayerInfoForDefault".split(" "), function(p, e, f, h, d, m, q) {
                return p(q, {
                    constructor: function(a, d) {
                        this.layerObject = a.layerObject
                    },
                    getExtent: function() {},
                    _resetLayerObjectVisiblity: function() {},
                    initVisible: function() {
                        var a = [],
                            a = !1,
                            a = f.clone(this.originOperLayer.layerObject.visibleLayers);
                        this._visible = a = 0 <= e.indexOf(a, this.originOperLayer.wms.subId) ? !0 : !1
                    },
                    _setTopLayerVisible: function(a) {
                        var d = this.originOperLayer.wms;
                        this._visible = a ? !0 : !1;
                        var c = {};
                        c[d.subId] = a;
                        d.layerInfo.setSubLayerVisible(c)
                    },
                    drawLegends: function(a) {
                        this._initLegendsNode(a)
                    },
                    _initLegendsNode: function(a) {
                        if (this.originOperLayer.wms.wmsLayerInfo.legendURL) {
                            var e = d.create("img", {
                                "class": "legend-div-image",
                                src: this.originOperLayer.wms.wmsLayerInfo.legendURL
                            });
                            m(e, "load", function() {
                                d.empty(a);
                                var c = d.create("div", {
                                        "class": "legend-div"
                                    },
                                    a);
                                h.place(e, c)
                            })
                        } else d.empty(a)
                    },
                    obtainNewSubLayers: function() {
                        return []
                    },
                    getOpacity: function() {},
                    setOpacity: function(a) {},
                    _bindEvent: function() {},
                    _onVisibleLayersChanged: function() {},
                    getScaleRange: function() {
                        return this.originOperLayer.wms.layerInfo.getScaleRange()
                    }
                })
            })
        },
        "jimu/LayerInfos/LayerInfoForGroup": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/Deferred esri/request ./LayerInfo ./LayerInfoFactory".split(" "), function(p, e, f, h, d, m, q) {
                return p(m, {
                    constructor: function(a,
                        d, c) {
                        this.noLegend = c
                    },
                    getExtent: function() {},
                    initVisible: function() {
                        var a = !1,
                            d = this.originOperLayer.mapService;
                        this.originOperLayer.mapService && 0 < d.layerInfo.subLayerVisible[d.subId] && (a = !0);
                        this._visible = a
                    },
                    _setTopLayerVisible: function(a) {
                        var d;
                        if (this.originOperLayer.mapService && (d = this.originOperLayer.mapService, 0 < this.originOperLayer.subLayers.length)) {
                            a ? d.layerInfo.subLayerVisible[d.subId]++ : d.layerInfo.subLayerVisible[d.subId]--;
                            this._visible = a;
                            var c = {};
                            this.traversal(function(a) {
                                0 === a.getSubLayers().length &&
                                    (c[a.originOperLayer.mapService.subId] = a.isVisbleOrInvisilbe())
                            });
                            d.layerInfo.setSubLayerVisible(c)
                        }
                    },
                    setLayerVisiblefromTopLayer: function() {},
                    _visibleChanged: function(a) {},
                    _sevVisible: function(a) {
                        this.visible = a
                    },
                    obtainNewSubLayers: function() {
                        var a = [];
                        e.forEach(this.originOperLayer.subLayers, function(d) {
                            d.parentLayerInfo = this;
                            d = q.getInstance().create(d);
                            a.push(d);
                            d.init()
                        }, this);
                        return a
                    },
                    getOpacity: function() {},
                    setOpacity: function(a) {},
                    getLayerObject: function() {
                        var a = new h;
                        this.layerObject.empty ?
                            d({
                                url: this.layerObject.url,
                                handleAs: "json",
                                callbackParamName: "callback",
                                timeout: 1E5,
                                content: {
                                    f: "json"
                                }
                            }).then(f.hitch(this, function(d) {
                                var c = this.layerObject.url;
                                this.layerObject = d;
                                this.layerObject.url = c;
                                this.layerObject.id = this.id;
                                a.resolve(this.layerObject)
                            }), function(d) {
                                a.reject(d)
                            }) : a.resolve(this.layerObject);
                        return a
                    },
                    getLayerType: function() {
                        var a = new h;
                        a.resolve("GroupLayer");
                        return a
                    },
                    _getShowLegendOfWebmap: function() {
                        return this.originOperLayer.mapService.layerInfo._getSublayerShowLegendOfWebmap(this.originOperLayer.mapService.subId)
                    },
                    getScaleRange: function() {
                        var a = this.originOperLayer.mapService;
                        return (a = a.layerInfo._getJsapiLayerInfoById(a.subId)) && 0 <= a.minScale && 0 <= a.maxScale ? {
                            minScale: a.minScale,
                            maxScale: a.maxScale
                        } : {
                            minScale: 0,
                            maxScale: 0
                        }
                    }
                })
            })
        },
        "jimu/LayerInfos/LayerInfoForDefaultDynamic": function() {
            define(["dojo/_base/declare", "./LayerInfoForDefaultService"], function(p, e) {
                return p(e, {
                    constructor: function(e, h) {},
                    initVisible: function() {
                        var e = !1,
                            h = this.originOperLayer.mapService;
                        this.originOperLayer.mapService && 0 < h.layerInfo.subLayerVisible[h.subId] &&
                            (e = !0);
                        this._visible = e
                    },
                    _setTopLayerVisible: function(e) {
                        var h;
                        this.originOperLayer.mapService && (h = this.originOperLayer.mapService, e ? h.layerInfo.subLayerVisible[h.subId]++ : h.layerInfo.subLayerVisible[h.subId]--, this._visible = e, this.visbleOrInvisilbe())
                    },
                    visbleOrInvisilbe: function() {
                        var e = this.originOperLayer.mapService,
                            h = {};
                        h[e.subId] = this.isVisbleOrInvisilbe();
                        e.layerInfo.setSubLayerVisible(h)
                    },
                    isVisbleOrInvisilbe: function() {
                        for (var e = this.originOperLayer.mapService, h = -1, d = e.subId, m = 0;;) {
                            h++;
                            m += e.layerInfo.subLayerVisible[d];
                            d = e.layerInfo._getJsapiLayerInfoById(d);
                            if (-1 === d.parentLayerId) return m > h ? !0 : !1;
                            d = d.parentLayerId
                        }
                    }
                })
            })
        },
        "jimu/LayerInfos/LayerInfoForDefaultService": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/Deferred dojo/dom-construct ./LayerInfoForDefault esri/layers/FeatureLayer esri/layers/RasterLayer esri/layers/StreamLayer esri/layers/ArcGISImageServiceLayer esri/layers/ArcGISImageServiceVectorLayer".split(" "), function(p, e, f, h, d, m, q, a, k, c, s) {
                return p(m, {
                    _legendsNode: null,
                    _layerObjectLoadingIndicator: null,
                    constructor: function() {
                        this._layerObjectLoadingIndicator = {
                            loadingFlag: !1,
                            loadedDef: new h
                        }
                    },
                    _resetLayerObjectVisiblity: function() {},
                    _loadLegends: function(a) {
                        var c = new h;
                        this.originOperLayer.mapService.layerInfo.getLegendInfo(a).then(f.hitch(this, function(a) {
                            c.resolve(a)
                        }));
                        return c
                    },
                    drawLegends: function(a, c) {
                        this._loadLegends(c).then(f.hitch(this, function(c) {
                            this._initLegendsNode(c, a)
                        }))
                    },
                    _initLegendsNode: function(a, c) {
                        var f = this.originOperLayer.mapService;
                        if (a) {
                            d.empty(c);
                            for (var g = null, k = 0; k < a.length; k++)
                                if (a[k].layerId === f.subId) {
                                    g = a[k];
                                    break
                                }
                            if (g) {
                                var b = d.create("table", {
                                    "class": "legend-table",
                                    style: "font-size: 12px"
                                }, c);
                                e.forEach(g.legend, function(a) {
                                    if ("\x3call other values\x3e" !== a.label) {
                                        var c = d.create("tr", {
                                                "class": "legend-tr",
                                                style: "border: 1px solid"
                                            }, b),
                                            e = d.create("td", {
                                                "class": "legend-symbol-td",
                                                style: ""
                                            }, c),
                                            g = null,
                                            g = a.imageData ? "data:" + a.contentType + ";base64," + a.imageData : a.url;
                                        d.create("img", {
                                            "class": "legend-symbol-image",
                                            style: "overflow:auto;margin:auto;top:0;left:0;bottom:0;right:0",
                                            src: g
                                        }, e);
                                        d.create("td", {
                                            "class": "legend-label-td",
                                            innerHTML: a.label || " ",
                                            style: "padding-left: 5px"
                                        }, c)
                                    }
                                }, this)
                            }
                        }
                    },
                    _initControlPopup: function() {
                        var a = this.originOperLayer.mapService.layerInfo.layerObject,
                            c = this.originOperLayer.mapService.subId;
                        this.controlPopupInfo = {
                            enablePopup: a.infoTemplates && a.infoTemplates[c] ? !0 : !1,
                            infoTemplates: void 0
                        }
                    },
                    _afterSetInfoTemplates: function() {
                        var a = this.originOperLayer.mapService.layerInfo.layerObject,
                            c = this.originOperLayer.mapService.subId;
                        !this.controlPopupInfo.enablePopup &&
                            a.infoTemplates && delete a.infoTemplates[c]
                    },
                    _getShowLegendOfWebmap: function() {
                        return this.originOperLayer.mapService.layerInfo._getSublayerShowLegendOfWebmap(this.originOperLayer.mapService.subId)
                    },
                    getLayerObject: function() {
                        var d = new h,
                            e, l;
                        this.getLayerType().then(f.hitch(this, function(g) {
                            this.layerObject.empty ? ("RasterLayer" === g ? this.layerObject = new a(this.layerObject.url) : "FeatureLayer" === g ? this.layerObject = new q(this.layerObject.url) : "StreamLayer" === g ? this.layerObject = new k(this.layerObject.url) :
                                "ArcGISImageServiceLayer" === g ? this.layerObject = new c(this.layerObject.url) : "ArcGISImageServiceVectorLayer" === g && (this.layerObject = new s(this.layerObject.url)), this.layerObject.empty ? d.resolve() : (this._layerObjectLoadingIndicator.loadingFlag = !0, e = this.layerObject.on("load", f.hitch(this, function() {
                                    this.layerObject.id = this.id;
                                    d.resolve(this.layerObject);
                                    this._layerObjectLoadingIndicator.loadedDef.resolve(this.layerObject);
                                    e.remove && e.remove()
                                })), l = this.layerObject.on("error", f.hitch(this, function() {
                                    d.resolve(null);
                                    this._layerObjectLoadingIndicator.loadedDef.resolve(null);
                                    l.remove && l.remove()
                                })))) : this._layerObjectLoadingIndicator.loadingFlag ? this._layerObjectLoadingIndicator.loadedDef.then(f.hitch(this, function(a) {
                                d.resolve(a)
                            })) : d.resolve(this.layerObject)
                        }), f.hitch(this, function() {
                            d.resolve(null)
                        }));
                        return d
                    },
                    getPopupInfo: function() {
                        var a = null,
                            c = this.originOperLayer.mapService.layerInfo.originOperLayer.layers;
                        if (c)
                            for (var d = 0; d < c.length; d++)
                                if (c[d].id === this.originOperLayer.mapService.subId) {
                                    a = c[d].popupInfo;
                                    break
                                }
                        return a
                    },
                    getFilterOfWebmap: function() {
                        var a = null,
                            c = this.originOperLayer.mapService.layerInfo.originOperLayer.layers;
                        if (c)
                            for (var d = 0; d < c.length; d++)
                                if (c[d].id === this.originOperLayer.mapService.subId) {
                                    a = c[d].layerDefinition ? c[d].layerDefinition.definitionExpression : null;
                                    break
                                }
                        return a
                    },
                    getFilter: function() {
                        var a = this.originOperLayer.mapService;
                        return a.layerInfo.layerObject && a.layerInfo.layerObject.layerDefinitions ? a.layerInfo.layerObject.layerDefinitions[a.subId] : null
                    },
                    setFilter: function(a) {
                        var c,
                            d = this.originOperLayer.mapService;
                        d.layerInfo.layerObject && d.layerInfo.layerObject.setLayerDefinitions && (c = d.layerInfo.layerObject.layerDefinitions ? e.map(d.layerInfo.layerObject.layerDefinitions, function(a) {
                            return a
                        }) : [], c[d.subId] = a, d.layerInfo.layerObject.setLayerDefinitions(c))
                    },
                    getLayerType: function() {
                        var a = new h,
                            c = this.originOperLayer.mapService;
                        c.layerInfo._getSublayerDefinition(c.subId).then(f.hitch(this, function(c) {
                            c ? a.resolve(c.type.replace(/\ /g, "")) : a.resolve(null)
                        }), function() {
                            a.resolve(null)
                        });
                        return a
                    },
                    getSupportTableInfo: function() {
                        var a = new h,
                            c = {
                                isSupportedLayer: !1,
                                isSupportQuery: !1,
                                layerType: null
                            };
                        this.getLayerType().then(f.hitch(this, function(d) {
                            c.layerType = d;
                            0 <= this._getLayerTypesOfSupportTable().indexOf(d) && (c.isSupportedLayer = !0);
                            d = this.originOperLayer.mapService;
                            d.layerInfo._getSublayerDefinition(d.subId).then(f.hitch(this, function(d) {
                                d && 0 <= d.capabilities.indexOf("Data") && (c.isSupportQuery = !0);
                                a.resolve(c)
                            }), function() {
                                a.resolve(c)
                            })
                        }), function() {
                            a.resolve(c)
                        });
                        return a
                    },
                    enablePopup: function() {
                        var a =
                            this.originOperLayer.mapService.layerInfo,
                            c = a.layerObject,
                            d = this.originOperLayer.mapService.subId;
                        return this.loadInfoTemplate().then(f.hitch(this, function() {
                            return a.controlPopupInfo.infoTemplates && a.controlPopupInfo.infoTemplates[d] ? (this.controlPopupInfo.enablePopup = !0, c.infoTemplates || (c.infoTemplates = {}), c.infoTemplates[d] = a.controlPopupInfo.infoTemplates[d], !0) : !1
                        }))
                    },
                    disablePopup: function() {
                        var a = this.originOperLayer.mapService.layerInfo.layerObject,
                            c = this.originOperLayer.mapService.subId;
                        this.controlPopupInfo.enablePopup = !1;
                        a.infoTemplates && delete a.infoTemplates[c]
                    },
                    loadInfoTemplate: function() {
                        var a = new h,
                            c = this.originOperLayer.mapService.layerInfo,
                            d = this.originOperLayer.mapService.subId;
                        c.controlPopupInfo.infoTemplates && c.controlPopupInfo.infoTemplates[d] && c.controlPopupInfo.infoTemplates[d].infoTemplate ? a.resolve(c.controlPopupInfo.infoTemplates[d].infoTemplate) : (c.controlPopupInfo.infoTemplates || (c.controlPopupInfo.infoTemplates = {}), this.getLayerObject().then(f.hitch(this, function(e) {
                            e =
                                this._getDefaultPopupTemplate(e);
                            c.controlPopupInfo.infoTemplates[d] = {
                                infoTemplate: e,
                                layerUrl: null
                            };
                            a.resolve(e)
                        }), f.hitch(this, function() {
                            a.resolve(null)
                        })));
                        return a
                    },
                    getInfoTemplate: function() {
                        var a = this.originOperLayer.mapService.layerInfo,
                            c = this.originOperLayer.mapService.subId;
                        return a.controlPopupInfo.infoTemplates && a.controlPopupInfo.infoTemplates[c] && a.controlPopupInfo.infoTemplates[c].infoTemplate ? a.controlPopupInfo.infoTemplates[c].infoTemplate : null
                    },
                    getScaleRange: function() {
                        var a = this.originOperLayer.mapService;
                        return (a = a.layerInfo._getJsapiLayerInfoById(a.subId)) && 0 <= a.minScale && 0 <= a.maxScale ? {
                            minScale: a.minScale,
                            maxScale: a.maxScale
                        } : {
                            minScale: 0,
                            maxScale: 0
                        }
                    },
                    _onVisibilityChanged: function() {}
                })
            })
        },
        "esri/layers/RasterLayer": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/array dojo/sniff dojo/dom-construct dojo/dom-style dojo/number ../lang ../domUtils ./BaseRasterLayer ./ImageServiceLayerMixin ../SpatialReference ../geometry/Point".split(" "), function(p, e, f, h, d, m, q, a,
                k, c, s, n, r, l) {
                return p([s, n], {
                    declaredClass: "esri.layers.RasterLayer",
                    constructor: function(a, c) {
                        this.pixelData = null;
                        (null === this.format || void 0 === this.format) && this.setImageFormat("LERC", !0)
                    }
                })
            })
        },
        "esri/layers/BaseRasterLayer": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/array dojo/sniff dojo/dom-construct dojo/dom-style ../lang ../domUtils ../geometry/Point ./layer".split(" "), function(p, e, f, h, d, m, q, a, k, c, s) {
                return p([s], {
                    declaredClass: "esri.layers.BaseRasterLayer",
                    managedSuspension: !0,
                    opacity: 1,
                    constructor: function(a, c) {
                        this.drawMode = c && void 0 !== c.drawMode ? c.drawMode : !0;
                        this.drawType = c && c.drawType ? c.drawType : "2d";
                        this.pixelData = null;
                        this._initialize(a, c)
                    },
                    setDrawMode: function(a) {
                        this.drawMode = a
                    },
                    setOpacity: function(a) {
                        this.opacity !== a && (this.opacity = a, this.onOpacityChange(a))
                    },
                    onOpacityChange: function() {},
                    refresh: function() {
                        if (!this._canDraw() || 10 > d("ie")) this.onError(Error("Unable to refresh. This layer is not supported in the current browser."));
                        else this._map &&
                            this._extentChangeHandler(this._map.extent)
                    },
                    clear: function() {
                        this._canDraw() && "2d" === this.drawType && this._context.clearRect(0, 0, this._mapWidth, this._mapHeight)
                    },
                    getContext: function() {
                        return this._context
                    },
                    onResume: function() {
                        this.inherited(arguments);
                        this._toggleTime();
                        this._displayTimer = this._displayTimer || setTimeout(e.hitch(this, function() {
                            this._extentChangeHandler(this._map.extent, null, !0)
                        }), 0)
                    },
                    onSuspend: function() {
                        this.inherited(arguments);
                        this._toggleTime();
                        clearTimeout(this._displayTimer);
                        this._displayTimer = null
                    },
                    redraw: function() {
                        this.hasDataChanged = !1;
                        this._setPixelData(this.originalPixelData)
                    },
                    getCurrentResolution: function() {
                        var a = this._map.extent;
                        return new c((a.xmax - a.xmin) / this._map.width, (a.ymax - a.ymin) / this._map.height, a.spatialReference)
                    },
                    setPixelFilter: function(a, c) {
                        this.pixelFilter = a;
                        c || this.redraw()
                    },
                    _toggleTime: function() {},
                    _setMap: function(c, d) {
                        this.inherited(arguments);
                        var e = this._canvas = m.create("canvas", {
                                id: "canvas",
                                width: c.width + "px",
                                height: c.height + "px",
                                style: "position: absolute; left: 0px; top: 0px;"
                            },
                            d);
                        a.isDefined(this.opacity) && q.set(e, "opacity", this.opacity);
                        (this._context = e.getContext(this.drawType)) || console.error("Unable to create the context. This browser might not support \x3ccanvas\x3e elements.");
                        this._mapWidth = c.width;
                        this._mapHeight = c.height;
                        this._connects = [];
                        this._connects.push(f.connect(c, "onPan", this, this._panHandler));
                        this._connects.push(f.connect(c, "onPanEnd", this, this._panEndHandler));
                        this._connects.push(f.connect(c, "onZoom", this, this._onZoomHandler));
                        this._connects.push(f.connect(c,
                            "onZoomEnd", this, this._onZoomEndHandler));
                        this._connects.push(f.connect(c, "onResize", this, this._onResizeHandler));
                        this._connects.push(f.connect(c, "onExtentChange", this, this._extentChangeHandler));
                        this._connects.push(f.connect(this, "onVisibilityChange", this, this._visibilityChangeHandler));
                        this._connects.push(f.connect(this, "onOpacityChange", this, this._opacityChangeHandler));
                        this._startRect = {
                            left: 0,
                            top: 0,
                            width: c.width,
                            height: c.height
                        };
                        this.evaluateSuspension();
                        if (this.suspended && !c.loaded) var g = f.connect(c,
                            "onLoad", this,
                            function() {
                                f.disconnect(g);
                                g = null;
                                this.evaluateSuspension()
                            });
                        return e
                    },
                    _unsetMap: function(a, c) {
                        h.forEach(this._connects, f.disconnect, this);
                        this._canvas && c.removeChild(this._canvas);
                        this._map = this._canvas = this._context = this.data = this._connects = null;
                        clearTimeout(this._displayTimer);
                        this._displayTimer = null;
                        this.inherited(arguments)
                    },
                    _canDraw: function() {
                        return !(!this._map || !this._canvas || !this._context)
                    },
                    _requestDataErrorHandler: function(a) {
                        "CancelError" !== a.name && (this.clear(), this.onError(a))
                    },
                    _drawPixelData: function() {
                        q.set(this._canvas, {
                            left: "0px",
                            top: "0px",
                            width: this._map.width + "px",
                            height: this._map.height + "px"
                        });
                        this._startRect = {
                            left: 0,
                            top: 0,
                            width: this._map.width,
                            height: this._map.height
                        };
                        if (this._canDraw && this.drawMode)
                            if (this._useBrowserDecoding()) this._fireUpdateEnd();
                            else if (this.drawMode)
                            if (!this.pixelData || !this.pixelData.pixelBlock) this.clear();
                            else {
                                var a = this.pixelData.pixelBlock,
                                    c = this._context,
                                    d = c.createImageData(a.width, a.height);
                                d.data.set(a.getAsRGBA());
                                var e = this.pixelData.extent,
                                    f = this._map.extent,
                                    b = this.getCurrentResolution(),
                                    k = 0,
                                    h = 0;
                                Math.abs(e.xmin - f.xmin) > b.x && (k = Math.round((e.xmin - f.xmin) / b.x));
                                Math.abs(f.ymax - e.ymax) > b.y && (h = Math.round((f.ymax - e.ymax) / b.y));
                                this.clear();
                                c.putImageData(d, k, h, 0, 0, a.width, a.height);
                                this._fireUpdateEnd()
                            }
                    },
                    _panHandler: function(a, c) {
                        q.set(this._canvas, {
                            left: this._startRect.left + c.x + "px",
                            top: this._startRect.top + c.y + "px"
                        })
                    },
                    _panEndHandler: function(a, c) {
                        c && (this._startRect.left += c.x, this._startRect.top += c.y)
                    },
                    _onZoomHandler: function(a, c, d) {
                        var e =
                            this._startRect;
                        a = e.width * c;
                        c *= e.height;
                        var f = e.left - (a - e.width) * (d.x - e.left) / e.width;
                        d = e.top - (c - e.height) * (d.y - e.top) / e.height;
                        q.set(this._canvas, {
                            left: f + "px",
                            top: d + "px",
                            width: a + "px",
                            height: c + "px"
                        });
                        this._endRect = {
                            left: f,
                            top: d,
                            width: a,
                            height: c
                        }
                    },
                    _onZoomEndHandler: function() {
                        this._endRect && (this._startRect = this._endRect)
                    },
                    _onResizeHandler: function(a, c, d) {
                        q.set(this._canvas, {
                            width: c + "px",
                            height: d + "px"
                        });
                        this._startRect.width = this._canvas.width = c;
                        this._startRect.height = this._canvas.height = d
                    },
                    _extentChangeHandler: function(a,
                        c, d, e) {
                        if (!this.suspended && (!c || !(0 === c.x && 0 === c.y && !d))) this._fireUpdateStart(), a = this._map, this._requestData(a.extent, a.width, a.height)
                    },
                    _visibilityChangeHandler: function(a) {
                        a ? k.show(this._canvas) : k.hide(this._canvas)
                    },
                    _opacityChangeHandler: function(a) {
                        q.set(this._canvas, "opacity", a)
                    }
                })
            })
        },
        "esri/layers/ImageServiceLayerMixin": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/_base/array dojo/_base/json dojo/_base/config dojo/_base/connect dojo/has dojo/io-query ../kernel ../config ../lang ../request ../deferredUtils ../urlUtils ../geometry/Extent ../geometry/Point ../geometry/Polygon ./MosaicRule ./RasterFunction ./DimensionalDefinition ./Raster ./PixelBlock ./pixelFilters/VectorFieldPixelFilter ./rasterFormats/ImageCanvasDecoder ./TimeInfo ./Field ../graphic ../tasks/ImageServiceIdentifyTask ../tasks/ImageServiceIdentifyParameters".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A, x, C, u, E, D, B, G, I, K) {
                    return p(null, {
                        declaredClass: "esri.layers.ImageServiceLayerMixin",
                        _rasterFieldPrefix: "Raster.",
                        _renderingRuleFieldSubPrefix: "ServicePixelValue.",
                        _eventMap: {
                            "rendering-change": !0,
                            "mosaic-rule-change": !0,
                            "spatial-reference-change": !0
                        },
                        constructor: function(a, b) {
                            this.useMapTime = b && b.hasOwnProperty("useMapTime") ? !!b.useMapTime : !0
                        },
                        _initialize: function(a, b) {
                            this._url = g.urlToObject(a);
                            this.raster = new x(a);
                            this.infoTemplate = b && b.infoTemplate;
                            var c = b && b.imageServiceParameters;
                            this.format = c && c.format;
                            this.compressionTolerance = c && c.compressionTolerance ? c.compressionTolerance : 0.01;
                            this.interpolation = c ? c.interpolation : null;
                            this.compressionQuality = c ? c.compressionQuality : null;
                            this.bandIds = c ? c.bandIds : null;
                            this.mosaicRule = c ? c.mosaicRule : null;
                            this.renderingRule = c ? c.renderingRule : null;
                            this.useMapDimensionValue = b && b.hasOwnProperty("useMapDimensionValue") ? !!b.useMapDimensionValue : !0;
                            this.activeMapDimensions = b && b.activeMapDimensions;
                            this._params =
                                e.mixin({}, this._url.query, {
                                    f: "image",
                                    interpolation: this.interpolation,
                                    format: this.format,
                                    compressionQuality: this.compressionQuality,
                                    bandIds: this.bandIds ? this.bandIds.join(",") : null
                                }, c ? c.toJson() : {});
                            this.pixelFilter = b && b.pixelFilter;
                            this.originalPixelData = this.pixelData = null;
                            this.hasDataChanged = !0;
                            this._requestDataHandler = e.hitch(this, this._requestDataHandler);
                            this._requestDataErrorHandler = e.hitch(this, this._requestDataErrorHandler);
                            this._rasterReadPromise = null;
                            this._initLayer = e.hitch(this, this._initLayer);
                            this._queryVisibleRastersHandler = e.hitch(this, this._queryVisibleRastersHandler);
                            this._visibleRasters = [];
                            this._rasterAttributeTableFields = [];
                            this._rasterAttributeTableFeatures = [];
                            this._renderingRuleAttributeTable = {};
                            this._useRenderingRuleAttributeTable = !1;
                            this._loadCallback = b && b.loadCallback;
                            (c = b && b.resourceInfo) ? this._initLayer(c): r({
                                url: this._url.path,
                                content: e.mixin({
                                    f: "json"
                                }, this._url.query),
                                callbackParamName: "callback",
                                load: this._initLayer,
                                error: this._errorHandler
                            });
                            this.registerConnectEvents()
                        },
                        disableClientCaching: !1,
                        _initLayer: function(a, b) {
                            if (!(null === a || void 0 === a)) {
                                this._findCredential();
                                (this.credential && this.credential.ssl || a && a._ssl) && this._useSSL();
                                var c = this.minScale,
                                    d = this.maxScale;
                                e.mixin(this, a);
                                this.minScale = c;
                                this.maxScale = d;
                                this.initialExtent = this.fullExtent = this.extent = new t(a.extent);
                                this.spatialReference = this.initialExtent.spatialReference;
                                this.pixelSizeX = parseFloat(this.pixelSizeX);
                                this.pixelSizeY = parseFloat(this.pixelSizeY);
                                for (var g = this.minValues, f = this.maxValues,
                                        l = this.meanValues, k = this.stdvValues, h = this.bands = [], c = 0, d = this.bandCount; c < d; c++) h[c] = {
                                    min: g[c],
                                    max: f[c],
                                    mean: l[c],
                                    stddev: k[c]
                                };
                                this.timeInfo = (c = this.timeInfo) && c.timeExtent ? new D(c) : null;
                                d = this.fields = [];
                                if (g = a.fields)
                                    for (c = 0; c < g.length; c++) d.push(new B(g[c]));
                                this.version = a.currentVersion;
                                this.version || (this.version = "fields" in a || "objectIdField" in a || "timeInfo" in a ? 10 : 9.3);
                                n.isDefined(a.minScale) && !this._hasMin && this.setMinScale(a.minScale);
                                n.isDefined(a.maxScale) && !this._hasMax && this.setMaxScale(a.maxScale);
                                c = {};
                                a.defaultMosaicMethod ? (c.method = a.defaultMosaicMethod, c.operation = a.mosaicOperator, c.sortField = a.sortField, c.sortValue = a.sortValue) : c.method = w.METHOD_NONE;
                                this.defaultMosaicRule = new w(c);
                                this.defaultMosaicRule.ascending = !0;
                                this._useRenderingRuleAttributeTable = 10 < this.version && "esriImageServiceDataTypeThematic" === this.serviceDataType && !this.hasRasterAttributeTable;
                                this._setDefaultRenderingRule(!0);
                                this._isScientificData() && (!this.mosaicRule || this.mosaicRule && !this.mosaicRule.multidimensionalDefinition) &&
                                    this._setDefaultMultidimensionalDefinition(!0);
                                10 < this.version && this.hasRasterAttributeTable && this.getRasterAttributeTable().then(e.hitch(this, function(a) {
                                    a && (a.features && 0 < a.features.length) && (this._rasterAttributeTableFeatures = e.clone(a.features));
                                    a && (a.fields && 0 < a.fields.length) && (this._rasterAttributeTableFields = e.clone(a.fields))
                                }));
                                this._isVectorData() && !n.isDefined(this.pixelFilter) && (this.vectorFieldPixelFilter = new u, this.vectorFieldPixelFilter.isDataUV = "esriImageServiceDataTypeVector-UV" ===
                                    this.serviceDataType, this.pixelFilter = this.vectorFieldPixelFilter.computeMagnitudeAndDirection, this.getKeyProperties().then(e.hitch(this, this._setFlowRepresentation)));
                                this.loaded = !0;
                                this.onLoad(this);
                                if (c = this._loadCallback) delete this._loadCallback, c(this)
                            }
                        },
                        getKeyProperties: function() {
                            var a = this._url.path + "/keyProperties",
                                b = new f(l._dfdCanceller);
                            10 < this.version ? (b._pendingDfd = r({
                                url: a,
                                content: {
                                    f: "json"
                                },
                                handleAs: "json",
                                callbackParamName: "callback"
                            }), b._pendingDfd.then(function(a) {
                                    b.callback(a)
                                },
                                function(a) {
                                    b.errback(a)
                                })) : (a = Error("Layer does not have key properties"), a.log = m.isDebug, b.errback(a));
                            return b
                        },
                        getRasterAttributeTable: function(a) {
                            var b = this._url.path + "/rasterAttributeTable",
                                c = new f(l._dfdCanceller),
                                e = {
                                    f: "json"
                                },
                                g = this.hasRasterAttributeTable;
                            a && a.renderingRule && (e.renderingRule = d.toJson(a.renderingRule.toJson()), g = !0);
                            10 < this.version && g ? (c._pendingDfd = r({
                                    url: b,
                                    content: e,
                                    handleAs: "json",
                                    callbackParamName: "callback"
                                }), c._pendingDfd.then(function(a) {
                                    c.callback(a)
                                }, function(a) {
                                    c.errback(a)
                                })) :
                                (a = Error("Layer does not support raster attribute table"), a.log = m.isDebug, c.errback(a));
                            return c
                        },
                        _getRenderingRuleAttributeTable: function(a) {
                            var b = new f(l._dfdCanceller);
                            if (!a || !a.renderingRule) return b.errback(Error("Rendering rule is not specified")), b;
                            a = a.renderingRule;
                            var c = a.functionName;
                            this._renderingRuleAttributeTable && c && this._renderingRuleAttributeTable.hasOwnProperty(c) ? b.resolve(this._renderingRuleAttributeTable[c]) : b = this.getRasterAttributeTable({
                                renderingRule: a
                            }).then(e.hitch(this,
                                function(a) {
                                    var b;
                                    a && (a.features && a.features.length && a.fields && a.fields.length) && (b = {
                                        features: e.clone(a.features),
                                        fields: e.clone(a.fields)
                                    }, c && (this._renderingRuleAttributeTable[c] = b));
                                    return b
                                }));
                            return b
                        },
                        _getRasterAttributeTableFeatures: function() {
                            var a = new f;
                            if (this._rasterAttributeTableFeatures && 0 < this._rasterAttributeTableFeatures.length) return a.resolve(this._rasterAttributeTableFeatures), a;
                            if (10 < this.version && this.hasRasterAttributeTable) return a = this.getRasterAttributeTable(), a.then(e.hitch(this,
                                function(a) {
                                    a && (a.features && 0 < a.features.length) && (this._rasterAttributeTableFeatures = e.clone(a.features))
                                })), a;
                            a.resolve(this._rasterAttributeTableFeatures);
                            return a
                        },
                        _getRenderingRuleAttributeTableFeatures: function(a) {
                            a = a && a.renderingRule;
                            return !a ? (a = new f, a.errback(Error("Rendering rule is not specified")), a) : this._getRenderingRuleAttributeTable({
                                renderingRule: a
                            }).then(function(a) {
                                return a && a.features
                            })
                        },
                        getCustomRasterFields: function(a) {
                            var b = a ? a.rasterAttributeTableFieldPrefix : this._rasterFieldPrefix;
                            a = 10.3 <= this.version ? "esriFieldTypeDouble" : "esriFieldTypeString";
                            var c = {
                                    name: this._rasterFieldPrefix + "ItemPixelValue",
                                    alias: "Item Pixel Value",
                                    domain: null,
                                    editable: !1,
                                    length: 50,
                                    type: a
                                },
                                d = {
                                    name: this._rasterFieldPrefix + "ServicePixelValue",
                                    alias: "Service Pixel Value",
                                    domain: null,
                                    editable: !1,
                                    length: 50,
                                    type: a
                                },
                                g = {
                                    name: this._rasterFieldPrefix + "ServicePixelValue.Raw",
                                    alias: "Raw Service Pixel Value",
                                    domain: null,
                                    editable: !1,
                                    length: 50,
                                    type: "esriFieldTypeDouble"
                                },
                                f = this.fields ? e.clone(this.fields) : [];
                            a = f.length;
                            f[a] = d;
                            if (10.4 <= this.version && "esri.layers.ArcGISImageServiceLayer" === this.declaredClass && (!this.rasterFunctionInfos || !this.rasterFunctionInfos.length || this._isRasterFunctionInfoAvailable("none"))) a++, f[a] = g;
                            if (this.capabilities && -1 < this.capabilities.toLowerCase().indexOf("catalog") || this.fields && 0 < this.fields.length) a++, f[a] = c;
                            if (n.isDefined(this.pixelFilter) && ("esriImageServiceDataTypeVector-UV" === this.serviceDataType || "esriImageServiceDataTypeVector-MagDir" === this.serviceDataType)) c = {
                                name: this._rasterFieldPrefix +
                                    "Magnitude",
                                alias: "Magnitude",
                                domain: null,
                                editable: !1,
                                type: "esriFieldTypeDouble"
                            }, d = {
                                name: this._rasterFieldPrefix + "Direction",
                                alias: "Direction",
                                domain: null,
                                editable: !1,
                                type: "esriFieldTypeDouble"
                            }, a++, f[a] = c, a++, f[a] = d;
                            a = this._rasterAttributeTableFields;
                            if ((c = this.renderingRule && this.renderingRule.functionName) && this._renderingRuleAttributeTable && this._renderingRuleAttributeTable.hasOwnProperty(c)) a = this._renderingRuleAttributeTable[c].fields;
                            a && 0 < a.length && (a = h.filter(a, function(a) {
                                return "esriFieldTypeOID" !==
                                    a.type && "value" !== a.name.toLowerCase()
                            }), a = h.map(a, function(a) {
                                var c = e.clone(a);
                                c.name = b + a.name;
                                return c
                            }), f = f.concat(a));
                            var l = this._rasterFieldPrefix + this._renderingRuleFieldSubPrefix;
                            10.4 <= this.version && this.rasterFunctionInfos && h.forEach(this.rasterFunctionInfos, function(a) {
                                a && (a.name && "none" !== a.name.toLowerCase()) && (a = {
                                    name: l + a.name.replace(/ /gi, "_"),
                                    alias: a.name,
                                    domain: null,
                                    editable: !1,
                                    type: "esriFieldTypeDouble"
                                }, f.push(a))
                            });
                            return f
                        },
                        _prepareGetImageParameters: function(a, b, c, g) {
                            g = n.isDefined(g) ?
                                g : this._params;
                            var f = a.spatialReference.wkid || d.toJson(a.spatialReference.toJson(!1));
                            delete g._ts;
                            e.mixin(g, {
                                bbox: a.xmin + "," + a.ymin + "," + a.xmax + "," + a.ymax,
                                imageSR: f,
                                bboxSR: f,
                                size: b + "," + c
                            }, this.disableClientCaching ? {
                                _ts: (new Date).getTime()
                            } : {});
                            delete g.compressionTolerance;
                            g.format && "LERC" === g.format.toUpperCase() && (g.compressionTolerance = this.compressionTolerance);
                            g.token = this._getToken()
                        },
                        getImageUrl: function(a, b, c, d, f) {
                            f = n.isDefined(f) ? f : this._params;
                            this._prepareGetImageParameters(a, b, c, f);
                            a =
                                e.clone(f);
                            this._cleanupRequestParams(a);
                            b = this._url.path + "/exportImage?";
                            c = g.addProxy(b + k.objectToQuery(e.mixin(a, {
                                f: "image"
                            })));
                            var l = a.token;
                            c.length > s.defaults.io.postLength || this.useMapImage ? this._jsonRequest = r({
                                url: b,
                                content: e.mixin(a, {
                                    f: "json"
                                }),
                                callbackParamName: "callback",
                                load: function(a, b) {
                                    var c = a.href;
                                    l && (c += -1 === c.indexOf("?") ? "?token\x3d" + l : "\x26token\x3d" + l);
                                    d(g.addProxy(c))
                                },
                                error: this._errorHandler
                            }) : d(c)
                        },
                        onRenderingChange: function() {},
                        onMosaicRuleChange: function() {},
                        setInterpolation: function(a,
                            b) {
                            this.interpolation = this._params.interpolation = a;
                            b || this.refresh(!0)
                        },
                        setCompressionQuality: function(a, b) {
                            this.compressionQuality = this._params.compressionQuality = a;
                            b || this.refresh(!0)
                        },
                        setCompressionTolerance: function(a, b) {
                            this.compressionTolerance = a;
                            b || this.refresh(!0)
                        },
                        setBandIds: function(a, b) {
                            var c = !1;
                            this.bandIds !== a && (c = !0);
                            this.bandIds = a;
                            this._params.bandIds = a.join(",");
                            if (c && !b) this.onRenderingChange();
                            b || this.refresh(!0)
                        },
                        setDefaultBandIds: function(a) {
                            this.bandIds = this._params.bandIds = null;
                            a || this.refresh(!0)
                        },
                        setDisableClientCaching: function(a) {
                            this.disableClientCaching = a
                        },
                        setMosaicRule: function(a, b) {
                            var c = !1;
                            this.mosaicRule !== a && (c = !0);
                            this.mosaicRule = a;
                            this._params.mosaicRule = d.toJson(a.toJson());
                            if (c && !b) this.onMosaicRuleChange();
                            b || this.refresh(!0)
                        },
                        setRenderingRule: function(a, b) {
                            var c = !1;
                            this.renderingRule !== a && (c = !0);
                            this.renderingRule = a;
                            this._params.renderingRule = a ? d.toJson(a.toJson()) : null;
                            this._useRenderingRuleAttributeTable && this._getRenderingRuleAttributeTable({
                                renderingRule: a
                            });
                            if (c && !b) this.onRenderingChange();
                            b || this.refresh(!0)
                        },
                        setImageFormat: function(a, b) {
                            this.format = this._params.format = a;
                            b || this.refresh(!0)
                        },
                        setInfoTemplate: function(a) {
                            this.infoTemplate = a
                        },
                        setDefinitionExpression: function(a, b) {
                            var c = this.mosaicRule ? this.mosaicRule.toJson() : {};
                            this.mosaicRule || (this.defaultMosaicRule ? c = this.defaultMosaicRule.toJson() : c.method = w.METHOD_NONE);
                            c.where = a;
                            c = new w(c);
                            this.setMosaicRule(c, b);
                            return this
                        },
                        getDefinitionExpression: function() {
                            return this.mosaicRule ? this.mosaicRule.where :
                                null
                        },
                        setPixelFilter: function(a) {
                            this.pixelFilter = a
                        },
                        getPixelData: function(a) {
                            return a ? (this._useBrowserDecoding() && (this.originalPixelData = {
                                pixelBlock: this._getPixelBlockFromCanvas(this._context, this._map.width, this._map.height),
                                extent: this._map.extent
                            }), this.originalPixelData) : this.pixelData
                        },
                        redraw: function() {
                            this.hasDataChanged = !1;
                            this._setPixelData(this.originalPixelData)
                        },
                        queryVisibleRasters: function(a, c, d, g) {
                            var k = this._map,
                                n = l._fixDfd(new f(l._dfdCanceller));
                            this._visibleRasters = [];
                            var m,
                                q, r = !0,
                                p = this.infoTemplate ? this.infoTemplate.info : null,
                                s = p ? e.clone(this.infoTemplate.info.fieldInfos) : null;
                            c = c || {};
                            if (p && this.infoTemplate.info.mediaInfos && this.infoTemplate.info.mediaInfos.length) {
                                var x = [];
                                h.forEach(this.infoTemplate.info.mediaInfos, function(a) {
                                    x = x.concat(a && a.value && a.value.fields || [])
                                });
                                x.length && h.forEach(s, function(a) {
                                    a && -1 < x.indexOf(a.fieldName) && (a.visible = !0)
                                })
                            }
                            if (s && 0 < s.length) {
                                r = !1;
                                for (m = 0; m < s.length; m++)
                                    if ((q = s[m]) && q.fieldName.toLowerCase() !== this._rasterFieldPrefix.toLowerCase() +
                                        "servicepixelvalue" && (q.visible || p.title && -1 < p.title.toLowerCase().indexOf(q.fieldName.toLowerCase()))) {
                                        r = !0;
                                        break
                                    }
                            }
                            var t = (q = this._removeVisualizationStretchFunction(this.renderingRule)) && q.functionName,
                                v = [];
                            if (10.4 <= this.version) {
                                var w = !1;
                                if (this.rasterFunctionInfos && s) {
                                    var u = this._rasterFieldPrefix + this._renderingRuleFieldSubPrefix;
                                    h.forEach(this.rasterFunctionInfos, function(a) {
                                        var b = u + a.name.replace(/ /gi, "_");
                                        h.some(s, function(a) {
                                            return a.visible && a.fieldName === b
                                        }) && (w = w || t && t === a.name, v.push(new z({
                                            rasterFunction: a.name
                                        })))
                                    })
                                }
                                q &&
                                    !w && v.push(q)
                            }
                            m = new K;
                            m.geometry = a.geometry;
                            m.returnGeometry = this._map.spatialReference.equals(this.spatialReference);
                            m.returnCatalogItems = r;
                            m.timeExtent = a.timeExtent;
                            m.mosaicRule = this.mosaicRule || null;
                            m.renderingRule = 10.4 > this.version && q || null;
                            m.renderingRules = v || null;
                            k && (a = new b((k.extent.xmax - k.extent.xmin) / (2 * k.width), (k.extent.ymax - k.extent.ymin) / (2 * k.height), k.extent.spatialReference), m.pixelSize = a);
                            c.requestParams = m;
                            var A = this;
                            a = new I(this.url);
                            (n._pendingDfd = a.execute(m)).addCallbacks(function(a) {
                                A._queryVisibleRastersHandler(a,
                                    c, d, g, n)
                            }, function(a) {
                                A._resolve([a], null, g, n, !0)
                            });
                            return n
                        },
                        _queryVisibleRastersHandler: function(a, b, c, g, f) {
                            function l() {
                                var a = this.getCustomRasterFields(b),
                                    d = this._getDomainFields(a),
                                    g = b ? b.returnDomainValues : !1,
                                    r = b && b.rasterAttributeTableFieldPrefix,
                                    s, x, v, z, w, u, A, B, E, R;
                                this._useRenderingRuleAttributeTable && this.renderingRule ? (a = this._getRenderingRuleAttributeTableFeatures({
                                    renderingRule: this.renderingRule
                                }), R = k) : a = this._getRasterAttributeTableFeatures();
                                a.then(e.hitch(this, function(a) {
                                    for (s = 0; s <
                                        p.length; s++) {
                                        S = p[s];
                                        S.setInfoTemplate(this.infoTemplate);
                                        S._layer = this;
                                        if (k) {
                                            E = k.replace(/ /gi, "").split(",");
                                            x = k;
                                            v = E;
                                            q && q.length >= s && (x = q[s].replace(/ /gi, ", "), v = q[s].split(" "));
                                            S.attributes[this._rasterFieldPrefix + "ItemPixelValue"] = v;
                                            S.attributes[this._rasterFieldPrefix + "ServicePixelValue"] = E;
                                            m && (S.attributes[this._rasterFieldPrefix + "ServicePixelValue.Raw"] = m.replace(/ /gi, "").split(","));
                                            if (this.pixelFilter) {
                                                var b = new C({
                                                    height: 1,
                                                    width: 1,
                                                    pixelType: "F32",
                                                    pixels: [],
                                                    statistics: []
                                                });
                                                h.forEach(v,
                                                    function(a) {
                                                        b.addData({
                                                            pixels: [a],
                                                            statistics: {
                                                                minValue: a,
                                                                maxValue: a,
                                                                noDataValue: null
                                                            }
                                                        })
                                                    });
                                                this.pixelFilter({
                                                    pixelBlock: b,
                                                    extent: new t(0, 0, 0, 0, this._map.spatialReference)
                                                });
                                                if ("esriImageServiceDataTypeVector-UV" === this.serviceDataType || "esriImageServiceDataTypeVector-MagDir" === this.serviceDataType) S.attributes[this._rasterFieldPrefix + "Magnitude"] = b.pixels[0][0], S.attributes[this._rasterFieldPrefix + "Direction"] = b.pixels[1][0]
                                            }
                                            h.forEach(D, function(a) {
                                                S.attributes[a.name] = a.value
                                            });
                                            var l = R || x;
                                            if (a && 0 <
                                                a.length && (z = h.filter(a, function(a) {
                                                    if (a && a.attributes) return a.attributes.hasOwnProperty("Value") ? a.attributes.Value == l : a.attributes.VALUE == l
                                                }), 0 < z.length && (w = e.clone(z[0]), r && w))) {
                                                B = {};
                                                for (u in w.attributes) w.attributes.hasOwnProperty(u) && (A = r + u, B[A] = w.attributes[u]);
                                                w.attributes = B;
                                                S.attributes = e.mixin(S.attributes, w.attributes)
                                            }
                                        }
                                        g && (d && 0 < d.length) && h.forEach(d, function(a) {
                                            if (a) {
                                                var b = S.attributes[a.name];
                                                n.isDefined(b) && (b = this._getDomainValue(a.domain, b), n.isDefined(b) && (S.attributes[a.name] =
                                                    b))
                                            }
                                        }, this);
                                        Z.push(S);
                                        this._visibleRasters.push(S)
                                    }
                                    this._resolve([Z, null, !0], null, c, f)
                                }))
                            }
                            var k = a.value,
                                m = a.value,
                                q, p, s = 0,
                                x = 0,
                                z = this,
                                w = this.objectIdField,
                                u, A, D = [];
                            g = b.requestParams.renderingRules;
                            var B = a.processedValues,
                                E = this.renderingRule && dojo.toJson(this._removeVisualizationStretchFunction(this.renderingRule).toJson());
                            if (g && B && g.length === B.length) {
                                var K = this._rasterFieldPrefix + this._renderingRuleFieldSubPrefix;
                                h.forEach(g, function(a, b) {
                                    if (a.functionName) {
                                        var c = {
                                            name: K + a.functionName.replace(/ /gi,
                                                "_"),
                                            value: B[b].replace(/ /gi, "").split(",")
                                        };
                                        D.push(c);
                                        E && E === dojo.toJson(a.toJson()) && (k = B[b])
                                    }
                                })
                            }
                            g = this.infoTemplate && this.infoTemplate.info && this.infoTemplate.info.layerOptions && this.infoTemplate.info.layerOptions.hasOwnProperty("showNoDataRecords") ? this.infoTemplate.info.layerOptions.showNoDataRecords : !0;
                            if (a.catalogItems) {
                                var I = 0,
                                    $, V, X = a.catalogItems.features.length;
                                A = 0;
                                p = Array(X);
                                q = Array(X);
                                u = Array(X);
                                for (s = 0; s < X; s++) - 1 < a.properties.Values[s].toLowerCase().indexOf("nodata") && A++;
                                $ = X - A;
                                for (s =
                                    0; s < X; s++) A = !0, -1 < a.properties.Values[s].toLowerCase().indexOf("nodata") ? (V = $++, g || (A = !1, p.length--, q.length--, u.length--)) : V = I++, A && (p[V] = a.catalogItems.features[s], q[V] = a.properties.Values[s], u[V] = p[V].attributes[w])
                            }
                            this._visibleRasters = [];
                            var S;
                            if ((a = -1 < k.toLowerCase().indexOf("nodata")) && !g) p = [], q = [], u = [];
                            k && (!p && !a) && (w = "ObjectId", p = [], S = new G(new t(this.fullExtent), null, {
                                ObjectId: 0
                            }), p.push(S));
                            var Z = [];
                            p ? !this._map.spatialReference.equals(this.spatialReference) && u && 0 < u.length ? r({
                                url: this._url.path +
                                    "/query",
                                content: {
                                    f: "json",
                                    objectIds: u.join(","),
                                    returnGeometry: !0,
                                    outSR: d.toJson(z._map.spatialReference.toJson()),
                                    outFields: w
                                },
                                handleAs: "json",
                                callbackParamName: "callback",
                                load: function(a) {
                                    if (0 === a.features.length) z._resolve([Z, null, null], null, c, f);
                                    else {
                                        for (s = 0; s < a.features.length; s++)
                                            for (x = 0; x < p.length; x++) p[x].attributes[w] == a.features[s].attributes[w] && (p[x].geometry = new v(a.features[s].geometry), p[x].geometry.setSpatialReference(z._map.spatialReference));
                                        l.call(z)
                                    }
                                },
                                error: function(a) {
                                    z._resolve([Z,
                                        null, null
                                    ], null, c, f)
                                }
                            }) : l.call(this) : this._resolve([Z, null, null], null, c, f)
                        },
                        getVisibleRasters: function() {
                            var a = this._visibleRasters,
                                b = [],
                                c;
                            for (c in a) a.hasOwnProperty(c) && b.push(a[c]);
                            return b
                        },
                        _getDomainFields: function(a) {
                            if (a) {
                                var b = [];
                                h.forEach(a, function(a) {
                                    if (a.domain) {
                                        var c = {};
                                        c.name = a.name;
                                        c.domain = a.domain;
                                        b.push(c)
                                    }
                                });
                                return b
                            }
                        },
                        _getDomainValue: function(a, b) {
                            if (a && a.codedValues) {
                                var c;
                                h.some(a.codedValues, function(a) {
                                    return a.code === b ? (c = a.name, !0) : !1
                                });
                                return c
                            }
                        },
                        _requestData: function(a,
                            b, c) {
                            this._rasterReadPromise && this._rasterReadPromise.cancel();
                            a = e.clone(a);
                            var d = a._normalize(!0);
                            this._prepareGetImageParameters(d, b, c);
                            b = e.clone(this._params);
                            this._cleanupRequestParams(b);
                            b.extent = a;
                            c = null;
                            this._useBrowserDecoding() && (c = new E({
                                ctx: this._context
                            }));
                            b = {
                                imageServiceParameters: b,
                                nBands: Math.min(this.bandCount, 3),
                                pixelType: this.pixelType,
                                decodeFunc: c ? e.hitch(c, "decode") : null
                            };
                            this._rasterReadPromise = this.raster.read(b, this._requestDataHandler, this._requestDataErrorHandler)
                        },
                        _requestDataHandler: function(a) {
                            if (!this._rasterReadPromise ||
                                !this._rasterReadPromise.isCanceled()) this.originalPixelData = a, this.hasDataChanged = !0, this._setPixelData(a)
                        },
                        _setPixelData: function(a) {
                            a = this._clonePixelData(a);
                            this.pixelFilter && this.pixelFilter(a);
                            this.pixelData = a;
                            if (!this._rasterReadPromise || !this._rasterReadPromise.isCanceled()) this._drawPixelData(), this._rasterReadPromise = null
                        },
                        _clonePixelData: function(a) {
                            if (null === a || void 0 === a) return a;
                            var b = {};
                            a.extent && (b.extent = e.clone(a.extent));
                            a = a.pixelBlock;
                            if (null === a || void 0 === a) return b;
                            b.pixelBlock =
                                a.clone();
                            return b
                        },
                        _getPixelBlockFromCanvas: function(a, b, c) {
                            a = a.getImageData(0, 0, b, c).data;
                            for (var d = b * c, e = 0, g = 0, f = new Uint8Array(d), l = new Uint8Array(d), k = new Uint8Array(d), h = new Uint8Array(d), n = Infinity, m = Infinity, q = Infinity, r = -Infinity, p = -Infinity, s = -Infinity, x, t, v, e = 0; e < d; e++) x = a[g++], t = a[g++], v = a[g++], n = n < x ? n : x, r = r > x ? r : x, m = m < t ? m : t, p = p > t ? p : t, q = q < v ? q : v, s = s > v ? s : v, f[e] = x, l[e] = t, k[e] = v, h[e] = a[g++] & 1;
                            return new C({
                                width: b,
                                height: c,
                                pixels: [f, l, k],
                                pixelType: "U8",
                                mask: h,
                                statistics: [{
                                        minValue: n,
                                        maxValue: r
                                    },
                                    {
                                        minValue: m,
                                        maxValue: p
                                    }, {
                                        minValue: q,
                                        maxValue: s
                                    }
                                ]
                            })
                        },
                        _useBrowserDecoding: function() {
                            return (void 0 === this.pixelFilter || null === this.pixelFilter) && ("jpeg" === this.format.toLowerCase() || "jpg" === this.format.toLowerCase() || -1 < this.format.toLowerCase().indexOf("png"))
                        },
                        getMultidimensionalInfo: function() {
                            var a = this._url.path + "/multiDimensionalInfo",
                                b = new f(l._dfdCanceller);
                            if (this._multidimensionalInfo) return b.resolve(this._multidimensionalInfo), b;
                            10.3 <= this.version && this.hasMultidimensions ? (b._pendingDfd =
                                r({
                                    url: a,
                                    content: {
                                        f: "json"
                                    },
                                    handleAs: "json",
                                    callbackParamName: "callback"
                                }), b._pendingDfd.then(e.hitch(this, function(a) {
                                    this._multidimensionalInfo = a.multidimensionalInfo;
                                    b.callback(a.multidimensionalInfo)
                                }), function(a) {
                                    b.errback(a)
                                })) : (a = Error("Layer does not support multidimensional info"), a.log = m.isDebug, b.errback(a));
                            return b
                        },
                        getDefaultMultidimensionalDefinition: function() {
                            var a, b, c, d = [],
                                g = new f(l._dfdCanceller);
                            if (this._defaultMultidimensionalDefinition) return g.resolve(this._defaultMultidimensionalDefinition),
                                g;
                            g._pendingDfd = this.getMultidimensionalInfo();
                            g._pendingDfd.then(e.hitch(this, function(e) {
                                a = e;
                                b = a.variables[0].dimensions;
                                for (c in b) b.hasOwnProperty(c) && (b[c].hasRanges && !0 == b[c].hasRanges ? d.push(new A({
                                    variableName: "",
                                    dimensionName: b[c].name,
                                    isSlice: !1,
                                    values: [b[c].values[0]]
                                })) : d.push(new A({
                                    variableName: "",
                                    dimensionName: b[c].name,
                                    isSlice: !0,
                                    values: [b[c].extent[0]]
                                })));
                                this._defaultMultidimensionalDefinition = d;
                                g.callback(d)
                            }), function(a) {
                                g.errback(a)
                            });
                            return g
                        },
                        _setDefaultMultidimensionalDefinition: function(a) {
                            var b,
                                c = {};
                            this.getDefaultMultidimensionalDefinition().then(e.hitch(this, function(d) {
                                b = d;
                                0 < b.length && (this.mosaicRule ? (c = e.clone(this.mosaicRule), c.multidimensionalDefinition = b) : this.defaultMosaicRule ? (c = e.clone(this.defaultMosaicRule), c.multidimensionalDefinition = b) : c = new w({
                                    multidimensionalDefinition: b
                                }), this.setMosaicRule(c, a))
                            }))
                        },
                        _setDefaultRenderingRule: function(a) {
                            var b = {};
                            if (!this.renderingRule && "esri.layers.ArcGISImageServiceVectorLayer" !== this.declaredClass && this.rasterFunctionInfos && this.rasterFunctionInfos.length &&
                                "none" !== this.rasterFunctionInfos[0].name.toLowerCase()) b.rasterFunction = this.rasterFunctionInfos[0].name;
                            else if (!this.renderingRule && "esri.layers.ArcGISImageServiceVectorLayer" === this.declaredClass && 10.3 < this.version) {
                                var c = "esriImageServiceDataTypeVector-UV" === this.serviceDataType ? 7 : 10;
                                b.rasterFunction = "Resample";
                                b.rasterFunctionArguments = {
                                    ResamplingType: c,
                                    InputCellSize: {
                                        x: this.pixelSizeX,
                                        y: this.pixelSizeY
                                    }
                                }
                            }
                            b.hasOwnProperty("rasterFunction") && (this.defaultRenderingRule = new z(b), this.setRenderingRule(this.defaultRenderingRule,
                                a))
                        },
                        _cleanupRequestParams: function(a) {
                            if (!a) return a;
                            if (a.time && a.mosaicRule) {
                                var b = new w(d.fromJson(a.mosaicRule));
                                if (b && b.multidimensionalDefinition && 0 < b.multidimensionalDefinition.length) {
                                    var c = h.filter(b.multidimensionalDefinition, function(a) {
                                        return "StdTime" !== a.dimensionName
                                    });
                                    b.multidimensionalDefinition = c;
                                    a.mosaicRule = d.toJson(b.toJson())
                                }
                            }
                            var b = "displayOnPan drawMode styling id opacity visible resourceInfo useMapDimensionValue extent".split(" "),
                                e;
                            for (e in b) a.hasOwnProperty(b[e]) && delete a[b[e]];
                            return a
                        },
                        _removeVisualizationStretchFunction: function(a) {
                            var b = a && a.functionName;
                            if (!b || "stretch" !== b.toLowerCase()) return a;
                            var c = a.functionArguments.Raster;
                            return c && c.functionName && h.some(this.rasterFunctionInfos, function(a) {
                                return c.functionName === a.name
                            }) ? c : a
                        },
                        _isScientificData: function() {
                            return "esriImageServiceDataTypeVector-UV" === this.serviceDataType || "esriImageServiceDataTypeVector-MagDir" === this.serviceDataType || "esriImageServiceDataTypeScientific" === this.serviceDataType
                        },
                        _isVectorData: function() {
                            return "esriImageServiceDataTypeVector-UV" ===
                                this.serviceDataType || "esriImageServiceDataTypeVector-MagDir" === this.serviceDataType
                        },
                        _isRasterFunctionInfoAvailable: function(a) {
                            return h.some(a && (this.rasterFunctionInfos || []), function(b) {
                                return b && b.name && b.name.toLowerCase() === a.toLowerCase()
                            })
                        },
                        _createPixelData: function(a) {
                            a = new C({
                                width: 2,
                                height: 2,
                                pixels: a,
                                pixelType: this.pixelType,
                                statistics: a
                            });
                            var b = this.fullExtent.getCenter(),
                                b = new t(b.x, b.y, b.x + this.pixelSizeX, b.y + this.pixelSizeY, this.spatialReference);
                            return {
                                pixelBlock: a,
                                extent: b
                            }
                        },
                        _resolve: function(a,
                            b, c, d, e) {
                            b && this[b].apply(this, a);
                            c && c.apply(null, a);
                            d && l._resDfd(d, a, e)
                        },
                        _toggleTime: function() {
                            var a = this._map;
                            this.timeInfo && this.useMapTime && a && !this.suspended ? (this._timeConnect || (this._timeConnect = q.connect(a, "onTimeExtentChange", this, this._onTimeExtentChangeHandler)), this._setTime(a.timeExtent)) : (q.disconnect(this._timeConnect), this._timeConnect = null, this._setTime(null))
                        },
                        setUseMapTime: function(a, b) {
                            this.useMapTime = a;
                            this._toggleTime();
                            !b && this._map && this.refresh(!0)
                        },
                        _setTime: function(a) {
                            this._params &&
                                (this._params.time = a ? a.toJson().join(",") : null)
                        },
                        _onTimeExtentChangeHandler: function(a) {
                            this.suspended || (this._setTime(a), this.refresh(!0))
                        },
                        handleSpatialReferenceChange: function() {
                            this.onSpatialReferenceChange()
                        }
                    })
                })
        },
        "esri/layers/MosaicRule": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/has ../kernel ../lang ../geometry/Point".split(" "), function(p, e, f, h, d, m) {
                var q = p(null, {
                    declaredClass: "esri.layers.MosaicRule",
                    method: null,
                    where: null,
                    sortField: null,
                    sortValue: null,
                    ascending: !1,
                    lockRasterIds: null,
                    viewpoint: null,
                    objectIds: null,
                    operation: null,
                    multidimensionalDefinition: [],
                    constructor: function(a) {
                        e.isObject(a) && (e.mixin(this, a), a.mosaicMethod && (this.method = a.mosaicMethod), this.method && "esri" !== this.method.toLowerCase().substring(0, 4) && (this.method = this._getMethodEnum(this.method)), a.mosaicOperation && (this.operation = a.mosaicOperation), this.operation && "MT_" !== this.operation.toUpperCase().substring(0, 3) && (this.operation = this._getOperatorEnum(this.operation)), a.fids && (this.objectIds = a.fids), a.viewpoint &&
                            (this.viewpoint = new m(a.viewpoint)), this.multidimensionalDefinition = a.multidimensionalDefinition || [])
                    },
                    toJson: function() {
                        var a = null,
                            e = this.multidimensionalDefinition ? this.multidimensionalDefinition.length : 0;
                        if (e)
                            for (var a = [], c = 0; c < e; c++) a.push("esri.layers.DimensionalDefinition" === this.multidimensionalDefinition[c].declaredClass ? this.multidimensionalDefinition[c].toJson() : this.multidimensionalDefinition[c]);
                        a = {
                            mosaicMethod: this.method,
                            where: this.where,
                            sortField: this.sortField,
                            sortValue: this.sortValue,
                            ascending: this.ascending,
                            lockRasterIds: this.lockRasterIds,
                            viewpoint: this.viewpoint ? this.viewpoint.toJson() : null,
                            fids: this.objectIds,
                            mosaicOperation: this.operation,
                            multidimensionalDefinition: a
                        };
                        return d.filter(a, function(a) {
                            if (null !== a) return !0
                        })
                    },
                    _getMethodEnum: function(a) {
                        if (a) {
                            var d = q.METHOD_NONE;
                            switch (a.toLowerCase()) {
                                case "byattribute":
                                    d = q.METHOD_ATTRIBUTE;
                                    break;
                                case "center":
                                    d = q.METHOD_CENTER;
                                    break;
                                case "lockraster":
                                    d = q.METHOD_LOCKRASTER;
                                    break;
                                case "nadir":
                                    d = q.METHOD_NADIR;
                                    break;
                                case "northwest":
                                    d =
                                        q.METHOD_NORTHWEST;
                                    break;
                                case "seamline":
                                    d = q.METHOD_SEAMLINE;
                                    break;
                                case "viewpoint":
                                    d = q.METHOD_VIEWPOINT
                            }
                            return d
                        }
                    },
                    _getOperatorEnum: function(a) {
                        if (a) switch (a.toLowerCase()) {
                            case "first":
                                return q.OPERATION_FIRST;
                            case "last":
                                return q.OPERATION_LAST;
                            case "max":
                                return q.OPERATION_MAX;
                            case "min":
                                return q.OPERATION_MIN;
                            case "blend":
                                return q.OPERATION_BLEND;
                            case "mean":
                                return q.OPERATION_MEAN;
                            case "sum":
                                return q.OPERATION_SUM
                        }
                    }
                });
                e.mixin(q, {
                    METHOD_NONE: "esriMosaicNone",
                    METHOD_CENTER: "esriMosaicCenter",
                    METHOD_NADIR: "esriMosaicNadir",
                    METHOD_VIEWPOINT: "esriMosaicViewpoint",
                    METHOD_ATTRIBUTE: "esriMosaicAttribute",
                    METHOD_LOCKRASTER: "esriMosaicLockRaster",
                    METHOD_NORTHWEST: "esriMosaicNorthwest",
                    METHOD_SEAMLINE: "esriMosaicSeamline",
                    OPERATION_FIRST: "MT_FIRST",
                    OPERATION_LAST: "MT_LAST",
                    OPERATION_MIN: "MT_MIN",
                    OPERATION_MAX: "MT_MAX",
                    OPERATION_MEAN: "MT_MEAN",
                    OPERATION_BLEND: "MT_BLEND",
                    OPERATION_SUM: "MT_SUM"
                });
                return q
            })
        },
        "esri/layers/RasterFunction": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/has",
                "../kernel", "../lang"
            ], function(p, e, f, h, d) {
                var m = p(null, {
                    declaredClass: "esri.layers.RasterFunction",
                    functionName: null,
                    arguments: null,
                    functionArguments: null,
                    variableName: null,
                    outputPixelType: null,
                    constructor: function(d) {
                        if (e.isObject(d)) {
                            var a = 0;
                            this.functionName = d.rasterFunction;
                            this.functionArguments = e.clone(d.rasterFunctionArguments || d.arguments);
                            e.mixin(this, d);
                            if (d = this.functionArguments)
                                if (d.Raster = this._toRasterFunction(d.Raster), d.Raster2 = this._toRasterFunction(d.Raster2), d.DEM = this._toRasterFunction(d.DEM),
                                    d.FillRaster = this._toRasterFunction(d.FillRaster), d.Rasters && d.Rasters.length)
                                    for (a = 0; a < d.Rasters.length; a++) d.Rasters[a] = this._toRasterFunction(d.Rasters[a])
                        }
                    },
                    _toRasterFunction: function(d) {
                        return d && (d.rasterFunction || d.functionName) ? new m(d) : d
                    },
                    _rfToJson: function(d) {
                        d && "esri.layers.RasterFunction" === d.declaredClass && (d = d.toJson());
                        return d
                    },
                    toJson: function() {
                        var f = e.clone(this.functionArguments || this.arguments);
                        if (f && (f.Raster = this._rfToJson(f.Raster), f.Raster2 = this._rfToJson(f.Raster2), f.DEM =
                                this._rfToJson(f.DEM), f.FillRaster = this._rfToJson(f.FillRaster), f.Rasters && f.Rasters.length)) {
                            var a, k = [];
                            for (a = 0; a < f.Rasters.length; a++) k.push(this._rfToJson(f.Rasters[a]));
                            f.Rasters = k
                        }
                        return d.filter({
                            rasterFunction: this.functionName,
                            rasterFunctionArguments: f,
                            variableName: this.variableName,
                            outputPixelType: this.outputPixelType ? this.outputPixelType : null
                        }, function(a) {
                            if (null !== a && void 0 !== a) return !0
                        })
                    }
                });
                return m
            })
        },
        "esri/layers/DimensionalDefinition": function() {
            define(["dojo/_base/declare", "dojo/_base/lang",
                "dojo/has", "../kernel", "../lang"
            ], function(p, e, f, h, d) {
                return p(null, {
                    declaredClass: "esri.layers.DimensionalDefinition",
                    variableName: null,
                    dimensionName: null,
                    values: [],
                    isSlice: !1,
                    constructor: function(d) {
                        e.isObject(d) && e.mixin(this, d)
                    },
                    toJson: function() {
                        return d.filter({
                            variableName: this.variableName,
                            dimensionName: this.dimensionName,
                            values: this.values,
                            isSlice: this.isSlice
                        }, function(d) {
                            return null !== d
                        })
                    }
                })
            })
        },
        "esri/layers/Raster": function() {
            define("require dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/_base/array dojo/_base/config dojo/json dojo/sniff ../kernel ../Evented ../request ../geometry/Extent ../SpatialReference ../deferredUtils ./PixelBlock ./rasterFormats/LercCodec".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t) {
                    var b, v, w, z, A, x, C = null,
                        u = null,
                        E = function(a) {
                            "U1" === a || "U2" === a || "U4" === a || "U8" === a ? (a = "U8", u = Math.pow(2, 8) - 1, C = Uint8Array) : "U16" === a ? (u = u || Math.pow(2, 16) - 1, C = Uint16Array) : "U32" === a ? (u = u || Math.pow(2, 32) - 1, C = Uint32Array) : "S8" === a ? (u = u || 0 - Math.pow(2, 7), C = Int8Array) : "S16" === a ? (u = u || 0 - Math.pow(2, 15), C = Int16Array) : "S32" === a ? (u = u || 0 - Math.pow(2, 31), C = Int32Array) : C = Float32Array;
                            return a
                        };
                    return e(c, {
                        declaredClass: "esri.layers.Raster",
                        imageServiceUrl: null,
                        validPixelTypes: "U1 U2 U4 U8 U16 U32 S8 S16 S32 F32".split(" "),
                        validFormats: "lerc jpeg jpg jpgpng png png8 png24 png32 bip bsq tiff".split(" "),
                        _eventMap: {
                            "raster-read-complete": ["pixelData", "params"]
                        },
                        constructor: function(a) {
                            this.imageServiceUrl = a;
                            this.registerConnectEvents();
                            this._loadRasterFormatModules()
                        },
                        read: function(b, c, e) {
                            var g = this,
                                k = new h(l._dfdCanceller);
                            if (10 > a("ie")) throw "This browser is not supported.";
                            if (!b.imageServiceParameters) throw "Insufficient parameters to read data";
                            var n = f.clone(b.imageServiceParameters),
                                m = b.pixelType;
                            d.some(this.validPixelTypes,
                                function(a) {
                                    return a === m
                                }) || (n.pixelType = "F32");
                            d.some(this.validFormats, function(a) {
                                return a.toLowerCase() === n.format.toLowerCase()
                            }) || (n.format = "lerc");
                            var r = b.decodeFunc,
                                p;
                            this._prepareGetImageParameters(n);
                            k._pendingDfd = s({
                                url: this.imageServiceUrl + "/exportImage",
                                handleAs: "arraybuffer",
                                content: f.mixin(n, {
                                    f: "image"
                                }),
                                load: function(a) {
                                    g.decode(a, {
                                        width: n.width,
                                        height: n.height,
                                        planes: null,
                                        pixelType: m,
                                        noDataValue: n.noData,
                                        format: n.format,
                                        decodeFunc: r
                                    }).then(function(a) {
                                        p = {
                                            pixelBlock: a,
                                            extent: n.extent
                                        };
                                        g._resolve([p, n], "onRasterReadComplete", c, k)
                                    }, function(a) {
                                        g._resolve([a], null, e, k, !0)
                                    })
                                },
                                error: function(a) {
                                    g._resolve([a], null, e, k, !0)
                                }
                            });
                            return k.promise
                        },
                        decode: function(a, b) {
                            if (void 0 === b || null === b) throw "missing decode options";
                            var c, d;
                            b.format && (c = b.format.toUpperCase());
                            "BSQ" !== c && "BIP" !== c && (c = this._getFormat(a));
                            d = b.decodeFunc;
                            if (void 0 === d || null === d) d = this._getFormatDecoderDfd(c);
                            return d(a, b)
                        },
                        onRasterReadComplete: function() {},
                        _prepareGetImageParameters: function(a) {
                            if (a.size && a.bbox) {
                                var b =
                                    a.size.split(",");
                                a.width = parseFloat(b[0]);
                                a.height = parseFloat(b[1]);
                                a.extent || (b = a.bbox.split(","), a.extent = new n(parseFloat(b[0]), parseFloat(b[1]), parseFloat(b[2]), parseFloat(b[3]), new r(a.bboxSR)))
                            } else {
                                if (!a.width || Math.floor(a.width) !== a.width || !a.height || Math.floor(a.height) !== a.height) throw "Incorrect Image Dimensions";
                                if (!a.extent || "esri.geometry.Extent" !== a.extent.declaredClass) throw "Incorrect extent";
                                var b = a.extent,
                                    c = b.spatialReference.wkid || q.toJson(b.spatialReference.toJson());
                                delete a._ts;
                                f.mixin(a, {
                                    bbox: b.xmin + "," + b.ymin + "," + b.xmax + "," + b.ymax,
                                    imageSR: c,
                                    bboxSR: c,
                                    size: a.width + "," + a.height
                                }, a.disableClientCaching ? {
                                    _ts: (new Date).getTime()
                                } : {})
                            }
                        },
                        _adjustExtent: function(a, b, c) {
                            var d = a.ymax - a.ymin,
                                e = a.xmax - a.xmin;
                            c >= b ? a.ymax = a.ymin + e * b / c : (e = d * c / b, a.xmax = a.xmin + e);
                            return a
                        },
                        _resolve: function(a, b, c, d, e) {
                            b && this[b].apply(this, a);
                            c && c.apply(null, a);
                            d && l._resDfd(d, a, e)
                        },
                        _getFormatDecoderDfd: function(a) {
                            var b = null;
                            switch (a) {
                                case "LERC":
                                    b = this._decodeLerc;
                                    break;
                                case "JPEG":
                                    b = this._decodeJpeg;
                                    break;
                                case "PNG":
                                    b = this._decodePng;
                                    break;
                                case "BSQ":
                                    b = this._decodeBsq;
                                    break;
                                case "BIP":
                                    b = this._decodeBip;
                                    break;
                                case "TIFF":
                                    b = this._decodeTiff;
                                    break;
                                default:
                                    b = function(a, b) {
                                        throw "The raster format is not supported";
                                    }
                            }
                            b = f.hitch(this, b);
                            return function(c, d) {
                                var e = new h;
                                try {
                                    var g;
                                    "LERC" === a || !0 === A ? (g = b(c, d), e.resolve(g)) : x.then(function() {
                                        g = b(c, d);
                                        e.resolve(g)
                                    })
                                } catch (f) {
                                    e.reject(f)
                                }
                                return e
                            }
                        },
                        _getFormat: function(a) {
                            a = new Uint8Array(a, 0, 10);
                            var b = "";
                            if (255 === a[0] && 216 === a[1]) b = "JPEG";
                            else if (137 === a[0] &&
                                80 === a[1] && 78 === a[2] && 71 === a[3]) b = "PNG";
                            else if (67 === a[0] && 110 === a[1] && 116 === a[2] && 90 === a[3] && 73 === a[4] && 109 === a[5] && 97 === a[6] && 103 === a[7] && 101 === a[8] && 32 === a[9]) b = "LERC";
                            else if (-1 < String.fromCharCode.apply(null, a).toLowerCase().indexOf("error")) b = "ERROR";
                            else if (73 === a[0] && 73 === a[1] && 42 === a[2] && 0 === a[3] || 77 === a[0] && 77 === a[1] && 0 === a[2] && 42 === a[3]) b = "TIFF";
                            return b
                        },
                        _validateDecodeParams: function(a) {
                            if (!a.height || Math.floor(a.height) !== a.height) throw "Height not provided.";
                            if (!a.width || Math.floor(a.width) !==
                                a.width) throw "Width not provided.";
                        },
                        _decodeJpeg: function(a, c) {
                            if (!b) throw "The jpeg decoder module is not loaded.";
                            this._validateDecodeParams(c);
                            var d = (new b).decode(a);
                            if (d.height !== c.height || d.width !== c.width) throw "The decoded image dimensions are incorrect.";
                            var e = [],
                                f, l;
                            for (f = 0; f < d.pixels.length; f++) l = d.pixels[f], e.push(this._calculateBandStatistics(l));
                            return new g({
                                width: d.width,
                                height: d.height,
                                pixels: d.pixels,
                                pixelType: "U8",
                                mask: d.mask,
                                statistics: e
                            })
                        },
                        _decodePng: function(a, b) {
                            if (!v) throw "The png decoder module is not loaded.";
                            this._validateDecodeParams(b);
                            var c = new Uint8Array(a),
                                d = new v(c),
                                c = new Uint8Array(4 * b.width * b.height);
                            d.copyToImageData(c, d.decodePixels());
                            for (var e = d = 0, f, e = new Uint8Array(b.width * b.height), d = 0; d < b.width * b.height; d++) e[d] = c[4 * d + 3];
                            for (var l = new g({
                                    width: b.width,
                                    height: b.height,
                                    pixels: [],
                                    pixelType: "U8",
                                    mask: e,
                                    statistics: []
                                }), d = 0; 3 > d; d++) {
                                f = new Uint8Array(b.width * b.height);
                                for (e = 0; e < b.width * b.height; e++) f[e] = c[4 * e + d];
                                l.addData({
                                    pixels: f,
                                    statistics: this._calculateBandStatistics(f)
                                })
                            }
                            return l
                        },
                        _decodeBsq: function(a,
                            b) {
                            if (!w) throw "The bsq decoder module is not loaded.";
                            this._validateDecodeParams(b);
                            u = b.noDataValue;
                            b.pixelType = E(b.pixelType);
                            var c = w.decodeBSQ(a, {
                                    bandCount: b.planes,
                                    width: b.width,
                                    height: b.height,
                                    pixelType: C,
                                    noDataValue: u
                                }),
                                d = [],
                                e, f = null;
                            for (e = 0; e < c.pixels.length; e++) f = c.pixels[e], d.push(this._calculateBandStatistics(f));
                            return new g({
                                width: b.width,
                                height: b.height,
                                pixels: c.pixels,
                                pixelType: b.pixelType,
                                mask: c.maskData,
                                statistics: d
                            })
                        },
                        _decodeBip: function(a, b) {
                            this._validateDecodeParams(b);
                            u = b.noDataValue;
                            b.pixelType = E(b.pixelType);
                            var c = w.decodeBIP(a, {
                                    bandCount: b.planes,
                                    width: b.width,
                                    height: b.height,
                                    pixelType: C,
                                    noDataValue: u
                                }),
                                d = [],
                                e, f = null;
                            for (e = 0; e < c.pixels.length; e++) f = c.pixels[e], d.push(this._calculateBandStatistics(f));
                            return new g({
                                width: b.width,
                                height: b.height,
                                pixels: c.pixels,
                                pixelType: b.pixelType,
                                mask: c.maskData,
                                statistics: d
                            })
                        },
                        _decodeTiff: function(a, b) {
                            this._validateDecodeParams(b);
                            u = b.noDataValue;
                            b.pixelType = E(b.pixelType);
                            var c = z.decode(a),
                                d = [],
                                e, f = null;
                            for (e = 0; e < c.pixels.length; e++) f =
                                c.pixels[e], d.push(this._calculateBandStatistics(f, c.maskData));
                            return new g({
                                width: c.width,
                                height: c.height,
                                pixels: c.pixels,
                                pixelType: c.pixelType,
                                mask: c.maskData,
                                statistics: d
                            })
                        },
                        _decodeLerc: function(a, b) {
                            this._validateDecodeParams(b);
                            u = b.noDataValue;
                            b.pixelType = E(b.pixelType);
                            for (var c = 0, d, e = 0, f, l = a.byteLength - 10; e < l;) {
                                var k = t.decode(a, {
                                        inputOffset: e,
                                        encodedMaskData: d,
                                        returnMask: 0 === c ? !0 : !1,
                                        returnEncodedMask: 0 === c ? !0 : !1,
                                        returnFileInfo: !0,
                                        pixelType: C,
                                        noDataValue: u
                                    }),
                                    e = k.fileInfo.eofOffset;
                                0 === c && (d =
                                    k.encodedMaskData, f = new g({
                                        width: b.width,
                                        height: b.height,
                                        pixels: [],
                                        pixelType: b.pixelType,
                                        mask: k.maskData,
                                        statistics: []
                                    }));
                                c++;
                                if (k.height !== b.height || k.width !== b.width) throw "The decoded image dimensions are incorrect";
                                f.addData({
                                    pixels: k.pixelData,
                                    statistics: {
                                        minValue: k.minValue,
                                        maxValue: k.maxValue,
                                        noDataValue: k.noDataValue
                                    }
                                })
                            }
                            return f
                        },
                        _calculateBandStatistics: function(a, b) {
                            var c = Infinity,
                                d = -Infinity,
                                e = a.length,
                                g, f = 0;
                            if (b)
                                for (g = 0; g < e; g++) b[g] && (f = a[g], c = f < c ? f : c, d = f > d ? f : d);
                            else
                                for (g = 0; g < e; g++) f =
                                    a[g], c = f < c ? f : c, d = f > d ? f : d;
                            return {
                                minValue: c,
                                maxValue: d
                            }
                        },
                        _loadRasterFormatModules: function() {
                            x = new h;
                            10 > a("ie") ? x.reject("unsupported browser version") : p(["./rasterFormats/JpgPlus", "./rasterFormats/Png", "./rasterFormats/Raw", "./rasterFormats/TiffDecoder", "./rasterFormats/Zlib"], function(a, c, d, e) {
                                b = a;
                                v = c;
                                w = d;
                                z = e;
                                A = !0;
                                x.resolve(!0)
                            })
                        }
                    })
                })
        },
        "esri/layers/PixelBlock": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/has", "../kernel"], function(p, e, f, h) {
                return p([], {
                    declaredClass: "esri.layers.PixelBlock",
                    planes: null,
                    width: null,
                    height: null,
                    pixelType: null,
                    pixels: [],
                    statistics: [],
                    constructor: function(d) {
                        if (d) {
                            if (!d.width || Math.floor(d.width) !== d.width) throw "PixelBlock: incorrect width";
                            if (!d.height || Math.floor(d.height) !== d.height) throw "PixelBlock: incorrect height";
                            if (!d.pixels || !d.statistics) throw "PixelBlock: pixel data or statistics not present";
                            this.width = d.width;
                            this.height = d.height;
                            this.pixels = d.pixels;
                            this.pixelType = d.pixelType || null;
                            this.statistics = d.statistics;
                            this.mask = d.mask || null
                        }
                    },
                    getPlaneCount: function() {
                        return this.pixels.length !==
                            this.statistics.length ? console.error("Inconsistent pixel data and statistics") : this.statistics.length
                    },
                    addData: function(d) {
                        if (!d.pixels || !d.statistics) throw "Pixel data or statistics are not present";
                        if (d.pixels.length !== this.width * this.height) throw "Inconsistent pixel data size";
                        this.statistics.push(d.statistics);
                        this.pixels.push(d.pixels)
                    },
                    getAsRGBA: function() {
                        var d = new ArrayBuffer(4 * this.width * this.height);
                        switch (this.pixelType) {
                            case "S8":
                            case "S16":
                            case "U16":
                            case "S32":
                            case "U32":
                            case "F32":
                            case "F64":
                                this._fillFromNon8Bit(d);
                                break;
                            default:
                                this._fillFrom8Bit(d)
                        }
                        return new Uint8ClampedArray(d)
                    },
                    getAsRGBAFloat: function() {
                        var d = new Float32Array(4 * this.width * this.height);
                        this._fillFrom32Bit(d);
                        return d
                    },
                    clone: function() {
                        var d = new this.constructor;
                        d.width = this.width;
                        d.height = this.height;
                        d.pixelType = this.pixelType;
                        this.mask && (d.mask = new Uint8Array(this.mask));
                        var f, h;
                        if (this.pixels) {
                            d.pixels = [];
                            h = this.pixels.length;
                            for (f = 0; f < h; f++) d.pixels[f] = new Float32Array(this.pixels[f])
                        }
                        if (this.statistics) {
                            d.statistics = [];
                            h = this.statistics.length;
                            for (f = 0; f < h; f++) d.statistics[f] = e.clone(this.statistics[f])
                        }
                        return d
                    },
                    _fillFrom8Bit: function(d) {
                        var e = this.pixels,
                            f = this.mask;
                        if (!d || !e || !e.length) return console.error("Unable to convert to RGBA. The input pixel block is empty.");
                        var a, k, c;
                        a = k = c = e[0];
                        3 <= e.length && (k = e[1], c = e[2]);
                        var e = new Uint32Array(d),
                            h = this.width * this.height;
                        if (a.length !== h) return console.error("Unable to convert to RGBA. The pixelblock is invalid.");
                        if (f && f.length === h)
                            for (d = 0; d < h; d++) f[d] && (e[d] = -16777216 | c[d] << 16 | k[d] << 8 | a[d]);
                        else
                            for (d = 0; d < h; d++) e[d] = -16777216 | c[d] << 16 | k[d] << 8 | a[d]
                    },
                    _fillFromNon8Bit: function(d) {
                        var e = this.pixels,
                            f = this.mask,
                            a = this.statistics;
                        if (!d || !e || !e.length) return console.error("Unable to convert to RGBA. The input pixel block is empty.");
                        var k = 1,
                            c = 0;
                        a && 0 < a.length ? (c = a[0].minValue, k = 255 / (a[0].maxValue - a[0].minValue)) : (k = 255, "S8" === this.pixelType ? (c = -128, k = 127) : "U16" === this.pixelType ? k = 65535 : "S16" === this.pixelType ? (c = -32768, k = 32767) : "U32" === this.pixelType ? k = 4294967295 : "S32" === this.pixelType ? (c = -2147483648,
                            k = 2147483647) : "F32" === this.pixelType ? (c = -3.4 * 1E39, k = 3.4 * 1E39) : "F64" === this.pixelType && (c = -Number.MAX_VALUE, k = Number.MAX_VALUE), k = 255 / (k - c));
                        d = new Uint32Array(d);
                        var a = this.width * this.height,
                            h, n, r;
                        h = e[0];
                        if (h.length !== a) return console.error("Unable to convert to RGBA. The pixelblock is invalid.");
                        if (3 <= e.length)
                            if (n = e[1], r = e[2], f && f.length === a)
                                for (e = 0; e < a; e++) f[e] && (d[e] = -16777216 | (r[e] - c) * k << 16 | (n[e] - c) * k << 8 | (h[e] - c) * k);
                            else
                                for (e = 0; e < a; e++) d[e] = -16777216 | (r[e] - c) * k << 16 | (n[e] - c) * k << 8 | (h[e] - c) * k;
                        else if (f &&
                            f.length === a)
                            for (e = 0; e < a; e++) n = (h[e] - c) * k, f[e] && (d[e] = -16777216 | n << 16 | n << 8 | n);
                        else
                            for (e = 0; e < a; e++) n = (h[e] - c) * k, d[e] = -16777216 | n << 16 | n << 8 | n
                    },
                    _fillFrom32Bit: function(d) {
                        var e = this.pixels,
                            f = this.mask;
                        if (!d || !e || !e.length) return console.error("Unable to convert to RGBA. The input pixel block is empty.");
                        var a, k, c;
                        a = k = c = e[0];
                        3 <= e.length && (k = e[1], c = e[2]);
                        var h = this.width * this.height;
                        if (a.length !== h) return console.error("Unable to convert to RGBA. The pixelblock is invalid.");
                        var n = 0;
                        if (f && f.length === h)
                            for (e =
                                0; e < h; e++) d[n++] = a[e], d[n++] = k[e], d[n++] = c[e], d[n++] = f[e];
                        else
                            for (e = 0; e < h; e++) d[n++] = a[e], d[n++] = k[e], d[n++] = c[e], d[n++] = 255
                    }
                })
            })
        },
        "esri/layers/rasterFormats/LercCodec": function() {
            define([], function() {
                var p = {
                        defaultNoDataValue: -3.4027999387901484E38,
                        decode: function(f, h) {
                            var d;
                            h = h || {};
                            var m = h.inputOffset || 0,
                                q = h.encodedMaskData || null === h.encodedMaskData,
                                a = {},
                                k = new Uint8Array(f, m, 10);
                            a.fileIdentifierString = String.fromCharCode.apply(null, k);
                            if ("CntZImage" != a.fileIdentifierString.trim()) throw "Unexpected file identifier string: " +
                                a.fileIdentifierString;
                            var m = m + 10,
                                c = new DataView(f, m, 24);
                            a.fileVersion = c.getInt32(0, !0);
                            a.imageType = c.getInt32(4, !0);
                            a.height = c.getUint32(8, !0);
                            a.width = c.getUint32(12, !0);
                            a.maxZError = c.getFloat64(16, !0);
                            m += 24;
                            if (!q)
                                if (c = new DataView(f, m, 16), a.mask = {}, a.mask.numBlocksY = c.getUint32(0, !0), a.mask.numBlocksX = c.getUint32(4, !0), a.mask.numBytes = c.getUint32(8, !0), a.mask.maxValue = c.getFloat32(12, !0), m += 16, 0 < a.mask.numBytes) {
                                    var q = new Uint8Array(Math.ceil(a.width * a.height / 8)),
                                        c = new DataView(f, m, a.mask.numBytes),
                                        k = c.getInt16(0, !0),
                                        s = 2,
                                        n = 0;
                                    do {
                                        if (0 < k)
                                            for (; k--;) q[n++] = c.getUint8(s++);
                                        else
                                            for (var r = c.getUint8(s++), k = -k; k--;) q[n++] = r;
                                        k = c.getInt16(s, !0);
                                        s += 2
                                    } while (s < a.mask.numBytes);
                                    if (-32768 !== k || n < q.length) throw "Unexpected end of mask RLE encoding";
                                    a.mask.bitset = q;
                                    m += a.mask.numBytes
                                } else 0 == (a.mask.numBytes | a.mask.numBlocksY | a.mask.maxValue) && (q = new Uint8Array(Math.ceil(a.width * a.height / 8)), a.mask.bitset = q);
                            c = new DataView(f, m, 16);
                            a.pixels = {};
                            a.pixels.numBlocksY = c.getUint32(0, !0);
                            a.pixels.numBlocksX = c.getUint32(4, !0);
                            a.pixels.numBytes = c.getUint32(8, !0);
                            a.pixels.maxValue = c.getFloat32(12, !0);
                            m += 16;
                            q = a.pixels.numBlocksX;
                            k = a.pixels.numBlocksY;
                            q += 0 < a.width % q ? 1 : 0;
                            k += 0 < a.height % k ? 1 : 0;
                            a.pixels.blocks = Array(q * k);
                            s = 1E9;
                            for (r = n = 0; r < k; r++)
                                for (var l = 0; l < q; l++) {
                                    var g = 0,
                                        c = new DataView(f, m, Math.min(10, f.byteLength - m)),
                                        t = {};
                                    a.pixels.blocks[n++] = t;
                                    var b = c.getUint8(0);
                                    g++;
                                    t.encoding = b & 63;
                                    if (3 < t.encoding) throw "Invalid block encoding (" + t.encoding + ")";
                                    if (2 === t.encoding) m++, s = Math.min(s, 0);
                                    else {
                                        if (0 !== b && 2 !== b) {
                                            b >>= 6;
                                            t.offsetType =
                                                b;
                                            if (2 === b) t.offset = c.getInt8(1), g++;
                                            else if (1 === b) t.offset = c.getInt16(1, !0), g += 2;
                                            else if (0 === b) t.offset = c.getFloat32(1, !0), g += 4;
                                            else throw "Invalid block offset type";
                                            s = Math.min(t.offset, s);
                                            if (1 === t.encoding)
                                                if (b = c.getUint8(g), g++, t.bitsPerPixel = b & 63, b >>= 6, t.numValidPixelsType = b, 2 === b) t.numValidPixels = c.getUint8(g), g++;
                                                else if (1 === b) t.numValidPixels = c.getUint16(g, !0), g += 2;
                                            else if (0 === b) t.numValidPixels = c.getUint32(g, !0), g += 4;
                                            else throw "Invalid valid pixel count type";
                                        }
                                        m += g;
                                        if (3 != t.encoding)
                                            if (0 ===
                                                t.encoding) {
                                                c = (a.pixels.numBytes - 1) / 4;
                                                if (c !== Math.floor(c)) throw "uncompressed block has invalid length";
                                                g = new ArrayBuffer(4 * c);
                                                b = new Uint8Array(g);
                                                b.set(new Uint8Array(f, m, 4 * c));
                                                g = new Float32Array(g);
                                                for (b = 0; b < g.length; b++) s = Math.min(s, g[b]);
                                                t.rawData = g;
                                                m += 4 * c
                                            } else 1 === t.encoding && (c = Math.ceil(t.numValidPixels * t.bitsPerPixel / 8), g = Math.ceil(c / 4), g = new ArrayBuffer(4 * g), b = new Uint8Array(g), b.set(new Uint8Array(f, m, c)), t.stuffedData = new Uint32Array(g), m += c)
                                    }
                                }
                            a.pixels.minValue = s;
                            a.eofOffset = m;
                            var m = null !=
                                h.noDataValue ? h.noDataValue : p.defaultNoDataValue,
                                k = h.encodedMaskData,
                                g = h.returnMask,
                                s = 0,
                                n = a.pixels.numBlocksX,
                                r = a.pixels.numBlocksY,
                                l = Math.floor(a.width / n),
                                t = Math.floor(a.height / r),
                                c = 2 * a.maxZError,
                                k = k || (a.mask ? a.mask.bitset : null),
                                v, q = new(h.pixelType || Float32Array)(a.width * a.height);
                            g && k && (v = new Uint8Array(a.width * a.height));
                            for (var g = new Float32Array(l * t), w, z, b = 0; b <= r; b++) {
                                var A = b !== r ? t : a.height % r;
                                if (0 !== A)
                                    for (var x = 0; x <= n; x++) {
                                        var C = x !== n ? l : a.width % n;
                                        if (0 !== C) {
                                            var u = b * a.width * t + x * l,
                                                E = a.width - C,
                                                D = a.pixels.blocks[s],
                                                B, G;
                                            if (2 > D.encoding) {
                                                if (0 === D.encoding) B = D.rawData;
                                                else {
                                                    B = D.stuffedData;
                                                    G = D.bitsPerPixel;
                                                    w = D.numValidPixels;
                                                    z = D.offset;
                                                    var I = c,
                                                        K = g,
                                                        R = a.pixels.maxValue,
                                                        N = (1 << G) - 1,
                                                        P = 0,
                                                        J = void 0,
                                                        H = 0,
                                                        O = void 0,
                                                        L = void 0,
                                                        M = Math.ceil((R - z) / I),
                                                        J = 4 * B.length - Math.ceil(G * w / 8);
                                                    B[B.length - 1] <<= 8 * J;
                                                    for (J = 0; J < w; J++) 0 === H && (L = B[P++], H = 32), H >= G ? (O = L >>> H - G & N, H -= G) : (H = G - H, O = (L & N) << H & N, L = B[P++], H = 32 - H, O += L >>> H), K[J] = O < M ? z + O * I : R;
                                                    B = g
                                                }
                                                G = 0
                                            } else d = 2 === D.encoding ? 0 : D.offset;
                                            var F;
                                            if (k)
                                                for (z = 0; z < A; z++) {
                                                    u & 7 && (F = k[u >> 3], F <<=
                                                        u & 7);
                                                    for (w = 0; w < C; w++) u & 7 || (F = k[u >> 3]), F & 128 ? (v && (v[u] = 1), q[u++] = 2 > D.encoding ? B[G++] : d) : (v && (v[u] = 0), q[u++] = m), F <<= 1;
                                                    u += E
                                                } else if (2 > D.encoding)
                                                    for (z = 0; z < A; z++) {
                                                        for (w = 0; w < C; w++) q[u++] = B[G++];
                                                        u += E
                                                    } else
                                                        for (z = 0; z < A; z++) {
                                                            for (w = 0; w < C; w++) q[u++] = d;
                                                            u += E
                                                        }
                                            if (1 === D.encoding && G !== D.numValidPixels) throw "Block and Mask do not match";
                                            s++
                                        }
                                    }
                            }
                            d = v;
                            v = {
                                width: a.width,
                                height: a.height,
                                pixelData: q,
                                minValue: a.pixels.minValue,
                                maxValue: a.pixels.maxValue,
                                noDataValue: m
                            };
                            d && (v.maskData = d);
                            h.returnEncodedMask && a.mask && (v.encodedMaskData =
                                a.mask.bitset ? a.mask.bitset : null);
                            if (h.returnFileInfo && (v.fileInfo = e(a), h.computeUsedBitDepths)) {
                                d = v.fileInfo;
                                F = a.pixels.numBlocksX * a.pixels.numBlocksY;
                                B = {};
                                for (G = 0; G < F; G++) m = a.pixels.blocks[G], 0 === m.encoding ? B.float32 = !0 : 1 === m.encoding ? B[m.bitsPerPixel] = !0 : B[0] = !0;
                                a = Object.keys(B);
                                d.bitDepths = a
                            }
                            return v
                        }
                    },
                    e = function(e) {
                        return {
                            fileIdentifierString: e.fileIdentifierString,
                            fileVersion: e.fileVersion,
                            imageType: e.imageType,
                            height: e.height,
                            width: e.width,
                            maxZError: e.maxZError,
                            eofOffset: e.eofOffset,
                            mask: e.mask ? {
                                numBlocksX: e.mask.numBlocksX,
                                numBlocksY: e.mask.numBlocksY,
                                numBytes: e.mask.numBytes,
                                maxValue: e.mask.maxValue
                            } : null,
                            pixels: {
                                numBlocksX: e.pixels.numBlocksX,
                                numBlocksY: e.pixels.numBlocksY,
                                numBytes: e.pixels.numBytes,
                                maxValue: e.pixels.maxValue,
                                minValue: e.pixels.minValue,
                                noDataValue: this.noDataValue
                            }
                        }
                    };
                return p
            })
        },
        "esri/layers/pixelFilters/VectorFieldPixelFilter": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/has ../../kernel ../../lang dojo/_base/array".split(" "), function(p, e, f, h, d, m) {
                return p(null, {
                    declaredClass: "esri.layers.pixelFilters.VectorFieldPixelFilter",
                    speedUnits: ["esriMetersPerSecond", "esriKilometersPerHour", "esriKnots", "esriFeetPerSecond", "esriMilesPerHour"],
                    constructor: function(d) {
                        e.mixin(this, d);
                        this.isDataUV = d && d.isDataUV ? d.isDataUV : !1;
                        this.computeMagnitudeAndDirection = e.hitch(this, this.computeMagnitudeAndDirection);
                        this.unitConversionFactor = 1;
                        this._updateUnitConvFactor()
                    },
                    setUnits: function(d, a) {
                        this.inputUnit = d;
                        this.outputUnit = a;
                        this.unitConversionFactor = 1;
                        this._updateUnitConvFactor()
                    },
                    _updateUnitConvFactor: function() {
                        var d = m.indexOf(this.speedUnits, this.inputUnit),
                            a = m.indexOf(this.speedUnits, this.outputUnit);
                        if (this.inputUnit && this.outputUnit && 0 <= d && 0 <= a) {
                            var e = [1, 0.277778, 0.514444, 0.3048, 0.44704, 0];
                            this.unitConversionFactor = e[d] / e[a]
                        }
                    },
                    computeMagnitudeAndDirection: function(e) {
                        if (!d.isDefined(e)) throw "Could not compute magnitude and direction. No pixel data is available.";
                        var a = e.pixelBlock;
                        if (!d.isDefined(a) || 2 !== a.getPlaneCount()) throw "Could not compute magnitude and direction. Pixel data does not contain two bands.";
                        var f = e.extent,
                            c = (f.xmax - f.xmin) / a.width,
                            h = (f.ymax - f.ymin) / a.height,
                            n = f.xmin + c / 2,
                            f = f.ymax - h / 2;
                        a.statistics[0].minValue = 0;
                        a.statistics[0].maxValue = 0;
                        var m = 180 / Math.PI,
                            l = [],
                            g = 0,
                            p = 0,
                            b = 0,
                            v = !d.isDefined(a.mask),
                            w, z, A, x, C, u, E, D;
                        C = E = Infinity;
                        u = D = -Infinity;
                        for (g = 0; g < a.height; g++)
                            for (p = 0; p < a.width; p++, b++)
                                if (l.push([n + c * p, f - h * g]), v || a.mask[b]) A = w = a.pixels[0][b] * this.unitConversionFactor, x = z = a.pixels[1][b], this.isDataUV && (A = Math.sqrt(w * w + z * z), x = 90 - m * Math.atan2(z, w), a.pixels[0][b] = A * this.unitConversionFactor,
                                    a.pixels[1][b] = x), A > u && (u = A), A < C && (C = A), x > D && (D = x), x < E && (E = x);
                        a.statistics[0].maxValue = u;
                        a.statistics[0].minValue = C;
                        a.statistics[1].maxValue = D;
                        a.statistics[1].minValue = E;
                        e.locations = l;
                        return e
                    }
                })
            })
        },
        "esri/layers/rasterFormats/ImageCanvasDecoder": function() {
            define(["require", "dojo/_base/declare", "dojo/Deferred", "dojo/sniff"], function(p, e, f, h) {
                var d;
                return e(null, {
                    constructor: function(d) {
                        this.ctx = d.ctx;
                        this._loadRasterFormatModule()
                    },
                    decode: function(d, e) {
                        if (!e.width || !e.height) throw "Native decoding requires the image format, width and height";
                        var a = new f,
                            k, c = new Uint8Array(d),
                            h = this._getFormat(d);
                        if ("error" === h) throw "invalid format";
                        "jpeg" === h && (k = this._getMask(c, e));
                        var n = "",
                            r, l;
                        for (r = 0; r < c.length; r += 65535) l = c.subarray(r, r + 65535 > c.length - 1 ? c.length - 1 : r + 65535), n += String.fromCharCode.apply(null, l);
                        var c = "data:image/" + h + ";base64," + window.btoa(n),
                            g = new Image,
                            p;
                        g.src = c;
                        var b = this;
                        g.onload = function() {
                            b.ctx.clearRect(0, 0, e.width, e.height);
                            b.ctx.drawImage(g, 0, 0);
                            var c = b.ctx.getImageData(0, 0, g.width, g.height);
                            p = c.data;
                            if (k)
                                for (r = 0; r < k.length; r++) p[4 *
                                    r + 3] = k[r] ? 255 : 0;
                            b.ctx.putImageData(c, 0, 0);
                            a.resolve(null)
                        };
                        g.onerror = function() {
                            a.reject("cannot load image")
                        };
                        return a
                    },
                    _getFormat: function(d) {
                        d = new Uint8Array(d, 0, 10);
                        var e = "error";
                        255 === d[0] && 216 === d[1] ? e = "jpeg" : 137 === d[0] && (80 === d[1] && 78 === d[2] && 71 === d[3]) && (e = "png");
                        return e
                    },
                    _getMask: function(e, f) {
                        var a;
                        try {
                            if (!d) throw "The zlib decoder module is not loaded.";
                            var k = 0,
                                c = 0,
                                h = Math.round(e.length / 2);
                            1 === h % 2 && (h += 1);
                            for (var n = e.length - 2, k = h; k < n && !(255 === e[k] && 217 === e[k + 1]); k++);
                            h = k += 2;
                            if (h < e.length -
                                1) {
                                var r = (new d(e.subarray(h))).getBytes();
                                a = new Uint8Array(f.width * f.height);
                                for (k = h = 0; k < r.length; k++)
                                    for (c = 7; 0 <= c; c--) a[h++] = r[k] >> c & 1
                            }
                        } catch (l) {}
                        return a
                    },
                    _loadRasterFormatModule: function() {
                        10 > h("ie") || p(["./Zlib"], function(e) {
                            d = e
                        })
                    }
                })
            })
        },
        "esri/tasks/ImageServiceIdentifyTask": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/has ../kernel ../request ../geometry/normalizeUtils ./Task ./ImageServiceIdentifyResult".split(" "), function(p, e, f, h, d, m, q, a) {
                p = p(q, {
                    declaredClass: "esri.tasks.ImageServiceIdentifyTask",
                    constructor: function(a) {
                        this._url.path += "/identify";
                        this._handler = e.hitch(this, this._handler)
                    },
                    __msigns: [{
                        n: "execute",
                        c: 3,
                        a: [{
                            i: 0,
                            p: ["geometry"]
                        }],
                        e: 2
                    }],
                    _handler: function(d, c, e, f, h) {
                        try {
                            var l = new a(d);
                            this._successHandler([l], "onComplete", e, h)
                        } catch (g) {
                            this._errorHandler(g, f, h)
                        }
                    },
                    execute: function(a, c, f, h) {
                        var m = h.assembly;
                        a = this._encode(e.mixin({}, this._url.query, {
                            f: "json"
                        }, a.toJson(m && m[0])));
                        var l = this._handler,
                            g = this._errorHandler;
                        return d({
                            url: this._url.path,
                            content: a,
                            callbackParamName: "callback",
                            load: function(a, b) {
                                l(a, b, c, f, h.dfd)
                            },
                            error: function(a) {
                                g(a, f, h.dfd)
                            }
                        })
                    },
                    onComplete: function() {}
                });
                m._createWrappers(p);
                return p
            })
        },
        "esri/tasks/ImageServiceIdentifyResult": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/has ../kernel ../geometry/jsonUtils ./FeatureSet".split(" "), function(p, e, f, h, d, m) {
                return p(null, {
                    declaredClass: "esri.tasks.ImageServiceIdentifyResult",
                    constructor: function(e) {
                        e.catalogItems && (this.catalogItems = new m(e.catalogItems));
                        e.location && (this.location = d.fromJson(e.location));
                        this.catalogItemVisibilities = e.catalogItemVisibilities;
                        this.name = e.name;
                        this.objectId = e.objectId;
                        this.value = e.value;
                        this.processedValues = e.processedValues;
                        this.properties = e.properties
                    }
                })
            })
        },
        "esri/tasks/ImageServiceIdentifyParameters": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/json dojo/_base/array dojo/has ../kernel ../lang ../geometry/jsonUtils".split(" "), function(p, e, f, h, d, m, q, a) {
                return p(null, {
                    declaredClass: "esri.tasks.ImageServiceIdentifyParameters",
                    geometry: null,
                    mosaicRule: null,
                    renderingRule: null,
                    renderingRules: null,
                    pixelSizeX: null,
                    pixelSizeY: null,
                    pixelSize: null,
                    returnGeometry: !1,
                    returnCatalogItems: !0,
                    timeExtent: null,
                    toJson: function(d) {
                        var c = d && d.geometry || this.geometry;
                        d = {
                            geometry: c,
                            returnGeometry: this.returnGeometry,
                            returnCatalogItems: this.returnCatalogItems,
                            mosaicRule: this.mosaicRule ? f.toJson(this.mosaicRule.toJson()) : null,
                            renderingRule: this.renderingRule ? f.toJson(this.renderingRule.toJson()) : null
                        };
                        c && (d.geometryType = a.getJsonType(c));
                        c = this.timeExtent;
                        d.time = c ? c.toJson().join(",") :
                            null;
                        q.isDefined(this.pixelSizeX) && q.isDefined(this.pixelSizeY) ? d.pixelSize = f.toJson({
                            x: parseFloat(this.pixelSizeX),
                            y: parseFloat(this.pixelSizeY)
                        }) : this.pixelSize && (d.pixelSize = this.pixelSize ? f.toJson(this.pixelSize.toJson()) : null);
                        this.renderingRules && (d.renderingRules = f.toJson(h.map(this.renderingRules, function(a) {
                            return a.toJson()
                        })));
                        return d
                    }
                })
            })
        },
        "esri/layers/StreamLayer": function() {
            define("dojo/_base/declare dojo/_base/connect dojo/_base/array dojo/_base/Color dojo/_base/lang dojo/has dojo/io-query dojo/on dojo/aspect ../kernel ../request ../graphic ./FeatureLayer ./StreamMode ./StreamTrackManager ../geometry/jsonUtils ../symbols/SimpleFillSymbol ../symbols/SimpleLineSymbol ../symbols/SimpleMarkerSymbol ../renderers/SimpleRenderer ./PurgeOptions".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A) {
                    return p([r], {
                        declaredClass: "esri.layers.StreamLayer",
                        _preventInit: !0,
                        constructor: function(a, b) {
                            b = b || {};
                            if (!b.mode || b.mode === r.MODE_STREAM) this._isStream = !0, this.currentMode = this.mode = r.MODE_STREAM, this._mode = new l(this);
                            this.purgeOptions = new A(this, b.purgeOptions || {});
                            this.purgeInterval = b.purgeInterval || 0;
                            this._reconnectAttempts = 0;
                            this.maxReconnectAttempts = 10;
                            this.socket = this._reconnectTimeoutId = null;
                            this._keepLatestQueried = !1;
                            this._keepLatestUrl =
                                null;
                            this._relatedQueried = !1;
                            this._joinField = this._relatedUrl = null;
                            this._refreshing = !1;
                            this._attemptReconnect = d.hitch(this, this._attemptReconnect);
                            this._purge = d.hitch(this, this._purge);
                            this._processServiceJson = d.hitch(this, this._processServiceJson);
                            if (d.isObject(a) && a.layerDefinition) this._initFeatureLayer(a, b);
                            else {
                                var c = this;
                                s({
                                    url: a,
                                    content: d.mixin({
                                        f: "json"
                                    }),
                                    callbackParamName: "callback"
                                }).then(function(a) {
                                    c._processServiceJson(a, b)
                                }, function(a) {
                                    c._errorHandler(a)
                                })
                            }
                        },
                        _processServiceJson: function(a,
                            b) {
                            var c = this;
                            a.relatedFeatures && a.relatedFeatures.featuresUrl && a.relatedFeatures.joinField ? (this._relatedUrl = a.relatedFeatures.featuresUrl, this.objectIdField = this._joinField = a.relatedFeatures.joinField, s({
                                url: this._relatedUrl,
                                content: {
                                    f: "json"
                                },
                                callbackParamName: "callback"
                            }).then(function(d) {
                                    d = d.fields || [];
                                    var e = f.map(a.fields, function(a) {
                                        return a.name.toLowerCase()
                                    });
                                    f.forEach(d, function(b) {
                                        -1 === f.indexOf(e, b.name.toLowerCase()) && a.fields.push(b)
                                    });
                                    b.resourceInfo = a;
                                    c._initFeatureLayer(c._url, b)
                                },
                                function(a) {
                                    c.onError({
                                        error: a
                                    })
                                })) : (b.resourceInfo = a, this._initFeatureLayer(this._url, b))
                        },
                        _initLayer: function(a, b) {
                            this.inherited(arguments);
                            if (a) {
                                var c;
                                if (a.layerDefinition) this.purgeOptions = new A(this, this._params.purgeOptions || {}), this.socketUrl = this._params.socketUrl || a.layerDefinition.socketUrl || void 0;
                                else {
                                    if (this._params.socketUrl) this.socketUrl = this._params.socketUrl;
                                    else {
                                        var d = this._getWebsocketConnectionInfo(a),
                                            e = d.urls;
                                        e && e.length ? (this._socketUrls = e, this.socketUrl = e[0], this.socketDirection =
                                            "broadcast" === this._params.socketDirection ? "broadcast" : "subscribe", this.socketUrl += "/" + this.socketDirection, this._websocketToken = d.token, e.length > this.maxReconnectAttempts && (this.maxReconnectAttempts = e.length)) : (this.socketUrl = void 0, d = "No web socket urls were retrieved from the Stream Service. Layer will not attempt to connect.", "https:" === location.protocol && (d += " An insecure web socket connection cannot be made from a secure web page."), this.onError(Error(d)))
                                    }
                                    if (this._params.filter) try {
                                        this._filter =
                                            c = this._makeFilter(this._params.filter)
                                    } catch (g) {
                                        this.onError(Error("Error trying to create filter object: " + g + ". Layer will not have filter applied")), this._filter = null
                                    }
                                    if (this._params.geometryDefinition || this._outFields || this._defnExpr) {
                                        c = c || {};
                                        c.geometry = this._params.geometryDefinition;
                                        c.outFields = this._outFields;
                                        c.where = this._defnExpr;
                                        try {
                                            this._filter = c = this._makeFilter(c)
                                        } catch (f) {
                                            this.onError(Error("Error trying to create filter object: " + f + ". Layer will not have filter applied")), this._filter =
                                                null
                                        }
                                    }
                                }
                                this.maximumTrackPoints = this._params.maximumTrackPoints || 0 === this._params.maximumTrackPoints ? this._params.maximumTrackPoints : 1;
                                (this._params.refreshRate || 0 === this._params.refreshRate) && this._mode && this._mode._setRefreshRate && this._mode._setRefreshRate(this._params.refreshRate);
                                this._keepLatestUrl = a.keepLatestArchive ? a.keepLatestArchive.featuresUrl : null;
                                a.relatedFeatures && (a.relatedFeatures.featuresUrl && a.relatedFeatures.joinField) && (this._relatedUrl = a.relatedFeatures.featuresUrl, this.objectIdField =
                                    this._joinField = a.relatedFeatures.joinField);
                                this.objectIdField || this._makeObjectIdField();
                                this._map && (this.socketUrl && !this._connected) && this.connect()
                            }
                        },
                        _setMap: function(a) {
                            var b = this.inherited(arguments),
                                c = this._getRenderer();
                            if (this.timeInfo && (this._trackIdField || c && (c.latestObservationRenderer || c.trackRenderer))) this._trackManager = new g(this), this._trackManager.initialize(a);
                            this.socketUrl && (!this._connected && this._map) && this.connect();
                            return b
                        },
                        _unsetMap: function(a, b) {
                            f.forEach(this._connects,
                                e.disconnect);
                            (this._connected || this._reconnecting || this.socket) && this.disconnect();
                            this._togglePurgeT();
                            this.inherited(arguments);
                            this._map = null
                        },
                        _suspend: function() {
                            this._togglePurgeT();
                            this.inherited(arguments)
                        },
                        _resume: function() {
                            this.inherited(arguments);
                            this._togglePurgeT(!0)
                        },
                        clear: function() {
                            try {
                                this._mode && this._mode._clearDrawBuffer && this._mode._clearDrawBuffer(), this._mode && this._mode._clearTimeBin && this._mode._clearTimeBin(), this._mode && this._mode._clearFeatureMap && this._mode._clearFeatureMap(),
                                    this._trackManager && this._trackManager.clearTracks()
                            } catch (a) {}
                            this.inherited(arguments)
                        },
                        redraw: function() {
                            this._mode && this._mode._flushDrawBuffer && this._mode._flushDrawBuffer();
                            this.inherited(arguments)
                        },
                        setDefinitionExpression: function(a) {
                            this.setFilter({
                                where: a
                            })
                        },
                        getDefinitionExpression: function() {
                            var a;
                            this._filter && (a = this._filter.where);
                            return a
                        },
                        destroy: function() {
                            this.disconnect();
                            this.inherited(arguments)
                        },
                        onResume: function(a) {
                            this.inherited(arguments)
                        },
                        setGeometryDefinition: function(a) {
                            this.setFilter({
                                geometry: a
                            })
                        },
                        getGeometryDefinition: function() {
                            var a;
                            this._filter && (a = this._filter.geometry);
                            return a
                        },
                        connect: function(a) {
                            var b = this,
                                c = {},
                                d = this._filter,
                                e, g, f = this.socketUrl,
                                l;
                            try {
                                if (!this._connected) {
                                    if (this._map) {
                                        var k;
                                        if (this._relatedUrl && !this._relatedQueried && this._mode._fetchArchive) return k = this.on("update-end", function(a) {
                                            b._relatedQueried = !0;
                                            k.remove();
                                            k = null;
                                            a && a.error ? console.log("Not connecting. Error fetching related features") : b.connect()
                                        }), this._mode._fetchArchive(this._relatedUrl), !1;
                                        if (this._keepLatestUrl &&
                                            !this._keepLatestQueried && this._mode._fetchArchive) return k = this.on("update-end", function(a) {
                                            b._keepLatestQueried = !0;
                                            k.remove();
                                            k = null;
                                            a && a.error ? console.log("Not connecting. Error fetching archived features") : b.connect()
                                        }), this._mode._fetchArchive(this._keepLatestUrl), !1
                                    }
                                    this._websocketToken && (c.token = this._websocketToken);
                                    this._map && (this._map.spatialReference && this.spatialReference) && this._map.spatialReference.wkid !== this.spatialReference.wkid && (c.outSR = this._map.spatialReference.wkid);
                                    if (d)
                                        for (g in d) null !==
                                            d[g] && (e = "geometry" === g ? JSON.stringify(d[g]) : d[g], c[g] = e);
                                    f += "?" + q.objectToQuery(c);
                                    return l = this._createConnection(f, a)
                                }
                            } catch (h) {
                                console.log("Error connecting to data stream: ", h), a && a(h, !1), this.onConnectionError({
                                    error: h
                                })
                            }
                        },
                        disconnect: function(a) {
                            var b = this._refreshing ? "Disconnecting as part of layer refresh cycle" : "Connection closed from client",
                                c = this._refreshing ? !0 : !1;
                            this._reconnectTimeoutId && clearTimeout(this._reconnectTimeoutId);
                            this._refreshing = this._reconnecting = this._connected = !1;
                            this.socket &&
                                this.socket.close();
                            this.onDisconnect({
                                willReconnect: c,
                                message: b
                            });
                            a && a(null, !0)
                        },
                        setFilter: function(b) {
                            var c, d;
                            if (this._collection) return this.onError("Filter can only be set when the source of the layer is a Stream Service"), !1;
                            try {
                                if (void 0 !== b.outFields) return d = Error("Outfields property cannot be changed after layer is created"), this.onFilterChange({
                                    filter: this.getFilter(),
                                    error: d
                                }), !1;
                                c = this._makeFilter(b)
                            } catch (e) {
                                return d = Error(e), this.onFilterChange({
                                    filter: this.getFilter(),
                                    error: d
                                }), !1
                            }
                            if (this.socket) b = {
                                filter: c
                            }, this.socket.send(JSON.stringify(b));
                            else a.once(this, "connect", function(a) {
                                this.setFilter(c)
                            });
                            return !0
                        },
                        getFilter: function() {
                            var a = this._filter,
                                b = {},
                                c = ["geometry", "outFields", "where"];
                            a && f.forEach(c, function(c) {
                                var d = a[c];
                                d && ("geometry" === c ? d = t.fromJson(d) : "outFields" === c && (d = d.split(",")), b[c] = d)
                            });
                            return b
                        },
                        setMaximumTrackPoints: function(a) {
                            if (!a && 0 !== a) return !1;
                            this.maximumTrackPoints = a;
                            this._mode.propertyChangeHandler(3)
                        },
                        getUniqueValues: function(a) {
                            var b, c = {},
                                d = [];
                            b = this._getField(a, !0);
                            if (!b) return d;
                            a = b.name;
                            f.forEach(this.graphics || [], function(b) {
                                b = (b.attributes || {})[a];
                                void 0 !== b && !c[b] && (c[b] = 1, d.push(b))
                            });
                            d.sort(function(a, b) {
                                return a < b ? -1 : a > b ? 1 : 0
                            });
                            return d
                        },
                        getLatestObservations: function() {
                            var a = [];
                            return a = this._trackManager ? this._trackManager.getLatestObservations() : this.graphics
                        },
                        setPurgeInterval: function(a) {
                            var b = this.purgeInterval;
                            this.purgeInterval = a;
                            this._togglePurgeT();
                            a && this._togglePurgeT(!0);
                            if (b !== a) this.onPurgeIntervalChange();
                            return this
                        },
                        _togglePurgeT: function(a) {
                            if (a &&
                                this.purgeInterval) {
                                var b = this;
                                clearTimeout(this._purgeT);
                                this._mode && this._mode._flushDrawBuffer && (this._purgeT = setTimeout(function() {
                                    !b.updating && !b.suspended && (b._mode._flushDrawBuffer(), b._togglePurgeT(!0))
                                }, 6E4 * this.purgeInterval))
                            } else this._purgeT && (clearTimeout(this._purgeT), this._refreshT = null)
                        },
                        onMessage: function() {},
                        onConnect: function() {},
                        onDisconnect: function() {},
                        onFilterChange: function() {},
                        onAttemptReconnect: function() {},
                        onConnectionError: function() {},
                        onPurgeIntervalChange: function() {},
                        _createConnection: function(a, b) {
                            var c = this,
                                d = new WebSocket(a);
                            d.onopen = function() {
                                c.socket = d;
                                c._connected = !0;
                                c._reconnecting = !1;
                                c._reconnectAttempts = 0;
                                c._bind();
                                c.onConnect();
                                b && b(null, !0)
                            };
                            d.onclose = function(a) {
                                var b, d = !0,
                                    e = c._connected,
                                    g = null;
                                if (c._connected || c._reconnecting) {
                                    if (a.code)
                                        if (b = "Connection failed: ", 1001 === a.code) b += a.reason || "Service is going away.", d = !1;
                                        else if (4400 === a.code) b += a.reason || "Invalid url parameters. Check filter properties.", d = !1;
                                    else if (4404 === a.code) b += "Service not found",
                                        d = !1;
                                    else if (4401 === a.code || 4403 === a.code) b += "Not authorized", d = !1;
                                    d && (c._reconnectAttempts += 1, c._reconnectAttempts > c.maxReconnectAttempts && (b = "Maximum reconnect attempts exceeded", d = !1, e = !0));
                                    c._connected = !1;
                                    e && (b && (g = Error(b)), c.onDisconnect({
                                        error: g,
                                        willReconnect: d
                                    }));
                                    d ? c._attemptReconnect() : c.socket = null
                                } else c.socket || (g = Error("Could not make connection to service"), c.onConnectionError({
                                    error: g
                                })), c.socket = null, c._connected = !1
                            };
                            d.onerror = function(a) {
                                console.log("Socket error")
                            };
                            return d
                        },
                        _purge: function() {
                            var a,
                                b = [],
                                c;
                            if (this.purgeOptions.displayCount && this.graphics.length > this.purgeOptions.displayCount)
                                for (a = 0; a < this.graphics.length - this.purgeOptions.displayCount; a++) c = this.graphics[a], b.push(c);
                            0 < b.length && (this._mode._removeFeatures(b), this._trackManager && this._trackManager.removeFeatures(b))
                        },
                        _bind: function() {
                            var a = this;
                            this.socket.onmessage = function(b) {
                                a._onMessage(JSON.parse(b.data))
                            }
                        },
                        _onMessage: function(a) {
                            var b = this;
                            this.onMessage(a);
                            var c = {
                                create: function(a) {
                                    b._create(a)
                                },
                                update: function(a) {
                                    b._update(a)
                                },
                                "delete": function(a) {
                                    b._delete(a)
                                }
                            };
                            if (a.type) c[a.type](a.feature);
                            else a.hasOwnProperty("filter") ? b._handleFilterMessage(a) : this._create(a)
                        },
                        _create: function(a) {
                            function b(a) {
                                if (!c._featureHasOID(a, d)) {
                                    if (!a.geometry) return !1;
                                    a.attributes = a.attributes || {};
                                    a.attributes[d] = c._nextId++
                                }
                                a = a.declaredClass ? a : new n(a);
                                c._mode.drawFeature(a)
                            }
                            var c = this,
                                d = c.objectIdField;
                            a.length ? a.forEach(function(a) {
                                a && b(a)
                            }) : a && b(a)
                        },
                        _delete: function(a) {
                            var b = this,
                                c = a[b.objectIdField] || a.attributes[b.objectIdField],
                                d = !1;
                            this.graphics.forEach(function(a) {
                                a.attributes[b.objectIdField] == c && (d = a)
                            });
                            d && this.remove(d)
                        },
                        _update: function(a) {
                            var b = this,
                                c = !1;
                            this.graphics.forEach(function(d) {
                                d.attributes[b.objectIdField] == a.attributes[b.objectIdField] && (c = d)
                            });
                            c && (a.attributes && c.setAttributes(a.attributes), a.geometry && c.setGeometry(t.fromJson(a.geometry)))
                        },
                        _makeFilter: function(a) {
                            var b, c = null;
                            a = a || {};
                            if (void 0 !== a.geometry)
                                if (c = c || {}, null === a.geometry) c.geometry = null;
                                else {
                                    b = "string" === typeof a.geometry ? t.fromJson(JSON.parse(a.geometry)) :
                                        a.geometry.declaredClass ? a.geometry : t.fromJson(a.geometry);
                                    if (!b || "point" === b.type) throw "Query object contains invalid geometry";
                                    "extent" !== b.type && (b = b.getExtent());
                                    if (!b || 0 === b.getHeight() && 0 === b.getWidth()) throw "Invalid filter geometry: Extent cannot have a height and width of 0";
                                    c.spatialRel = "esriSpatialRelIntersects";
                                    c.geometryType = "esriGeometryEnvelope";
                                    c.geometry = b.toJson()
                                }
                            void 0 !== a.where && (c = c || {}, c.where = a.where);
                            if (void 0 !== a.outFields && (c = c || {}, a = "string" === typeof a.outFields ? "*" === a.outFields ?
                                    null : a.outFields.replace(/,\s+/g, ",").split(",") : null === a.outFields ? null : a.outFields, a = this._makeOutFields(a))) {
                                if (a.errors && 0 < a.errors.length) throw "Invalid filter outFields. " + a.errors.join(",");
                                c.outFields = a.fields ? a.fields.join(",") : null
                            }
                            return c
                        },
                        _makeOutFields: function(a) {
                            var b = this,
                                c = [],
                                d = [],
                                e = {
                                    fields: null
                                };
                            if (!a || 0 === a.length) return e;
                            f.forEach(a, function(a) {
                                if ("*" === a) return e;
                                var g = b._getField(a, !0);
                                g ? c.push(g.name) : d.push("Field named " + a + " not found in schema.")
                            });
                            a = b._getOutFields();
                            f.forEach(a,
                                function(a) {
                                    b._getField(a) && -1 === f.indexOf(c, a) && c.push(a)
                                });
                            e.fields = c;
                            e.errors = d;
                            return e
                        },
                        _handleFilterMessage: function(a) {
                            a.error ? (a = Error(a.error.join(",")), this.onFilterChange({
                                filter: this.getFilter(),
                                error: a
                            })) : (a = a.filter, a.geometry && "string" === typeof a.geometry && (a.geometry = JSON.parse(a.geometry)), this._filter = a, this.onFilterChange({
                                filter: this.getFilter()
                            }))
                        },
                        _getWebsocketConnectionInfo: function(a) {
                            var b = {
                                    urls: []
                                },
                                c, d = [],
                                e = [],
                                g, l, k;
                            a.streamUrls && f.forEach(a.streamUrls, function(a) {
                                "ws" ===
                                a.transport && (c = a.urls, b.token = a.token)
                            });
                            if (!c) return b;
                            f.forEach(c, function(a) {
                                0 === a.lastIndexOf("wss", 0) ? e.push(a) : d.push(a)
                            });
                            a = "https:" === location.protocol || 0 === this.url.lastIndexOf("https:", 0) ? e : 0 === d.length ? e : d;
                            if (1 < a.length)
                                for (g = 0; g < a.length - 1; g++) l = g + Math.floor(Math.random() * (a.length - g)), k = a[l], a[l] = a[g], a[g] = k;
                            b.urls = a;
                            return b
                        },
                        _attemptReconnect: function() {
                            var a = this,
                                b;
                            this._reconnectTimeoutId = null;
                            a._connected = !1;
                            if (!a._socketUrls) return !1;
                            if (!a._collection && !a._reconnecting && a.socket &&
                                a.credential) return a._reconnecting = !0, a._getServiceConnectionMetadata(a._attemptReconnect), !1;
                            a._reconnecting = !0;
                            a.socket = null;
                            if (a._reconnectAttempts > a.maxReconnectAttempts) return a._reconnecting = !1;
                            a.socketUrl = a._socketUrls[a._reconnectAttempts > a._socketUrls.length - 1 ? a._reconnectAttempts % a._socketUrls.length : a._reconnectAttempts];
                            a.socketUrl += "/" + a.socketDirection;
                            b = a._randomIntFromInterval(0, 1E3);
                            this._reconnectTimeoutId = setTimeout(function() {
                                a.onAttemptReconnect({
                                    count: a._reconnectAttempts,
                                    url: a.socketUrl
                                });
                                a.connect()
                            }, 1E3 * a._reconnectAttempts + b)
                        },
                        _getServiceConnectionMetadata: function(a) {
                            var b = this,
                                c = b._url.path;
                            a = "function" === typeof a ? a : null;
                            s({
                                url: c,
                                content: d.mixin({
                                    f: "json"
                                }, this._url.query),
                                callbackParamName: "callback"
                            }).then(function(c) {
                                c = b._getWebsocketConnectionInfo(c);
                                b._websocketToken = c.token;
                                a && a()
                            }, function(a) {
                                b.onError(Error(a))
                            })
                        },
                        _setDefaultRenderer: function() {
                            var a = this.geometryType,
                                c = new h([5, 112, 176, 0.8]),
                                d = new h([255, 255, 255]),
                                d = new v(v.STYLE_SOLID, d, 1),
                                e;
                            if ("esriGeometryPoint" ===
                                a || "esriGeometryMultipoint" === a) e = new w(w.STYLE_CIRCLE, 10, d, c);
                            else if ("esriGeometryPolyline" === a) e = new v(v.STYLE_SOLID, c, 2);
                            else if ("esriGeometryPolygon" === a || "esriGeometryEnvelope" === a) c = new h([5, 112, 176, 0.2]), d = new h([5, 112, 176, 0.8]), d = new v(v.STYLE_SOLID, d, 1), e = new b(b.STYLE_SOLID, d, c);
                            e && this.setRenderer(new z(e))
                        },
                        _makeObjectIdField: function() {
                            var a = 1,
                                b, c, d = [];
                            if (!this.objectIdField) {
                                b = this.fields.length;
                                for (c = 0; c < b; c++) d.push(this.fields[c].name.toLowerCase());
                                for (; - 1 !== f.indexOf(d, "objectid_" +
                                        a);) a += 1;
                                this.objectIdField = "objectid_" + a;
                                this.fields.push({
                                    name: "objectid_" + a,
                                    type: "esriFieldTypeOID",
                                    alias: "objectid_" + a,
                                    nullable: !1
                                })
                            }
                        },
                        _featureHasOID: function(a, b) {
                            return a.attributes && (a.attributes[b] || 0 === a.attributes[b])
                        },
                        _randomIntFromInterval: function(a, b) {
                            return Math.floor(Math.random() * (b - a + 1) + a)
                        }
                    })
                })
        },
        "esri/layers/StreamTrackManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/has ../kernel ../graphic ../geometry/Polyline ./TrackManager".split(" "), function(p,
                e, f, h, d, m, q, a) {
                return p([a], {
                    declaredClass: "esri.layers._StreamTrackManager",
                    constructor: function(a) {
                        this.inherited(arguments)
                    },
                    initialize: function(a) {
                        this.inherited(arguments)
                    },
                    addFeatures: function(a, c) {
                        function d(a, b) {
                            var c, f, l, k;
                            e[a] || (e[a] = []);
                            c = e[a];
                            0 < g && (b.length > g && b.splice(0, b.length - g), l = b.length + c.length, l > g && (f = c.splice(0, l - g)));
                            l = b.length;
                            for (k = 0; k < l; k += 1) c.push(b[k]);
                            return {
                                deletes: f,
                                adds: b
                            }
                        }
                        var e, h, l, g, m = {},
                            b = {},
                            p;
                        if (c) return this.inherited(arguments), m;
                        e = this.trackMap;
                        h = this.layer;
                        l = h._trackIdField;
                        g = h.maximumTrackPoints || 0;
                        f.forEach(a, function(a) {
                            var c = a.attributes[l];
                            a.visible && (b[c] || (b[c] = []), b[c].push(a))
                        });
                        for (p in b) b.hasOwnProperty(p) && (h = d(p, b[p]), m[p] = h);
                        return m
                    },
                    removeFeatures: function(a) {
                        var c = [],
                            d = this.layer.objectIdField,
                            e = this.layer._trackIdField;
                        a && (f.forEach(a, function(a) {
                                var l, g, k, b;
                                g = a.attributes[e];
                                l = a.attributes[d];
                                if (k = this.trackMap[g])
                                    for (a = 0; a < k.length; a += 1)
                                        if (b = k[a], b.attributes[d] === l) {
                                            this.trackMap[g].splice(a, 1); - 1 === f.indexOf(g) && c.push(g);
                                            break
                                        }
                            },
                            this), 0 < a.length && this.refreshTracks(c))
                    },
                    drawTracks: function(a) {
                        function c(a) {
                            var c = h[a],
                                f = c && 1 < c.length,
                                k, p, t;
                            if ((t = d.trackLineMap[a]) && !f) e.remove(t), delete d.trackLineMap[a], t = null;
                            if (!f) return !1;
                            f = [];
                            for (k = c.length - 1; 0 <= k; k -= 1)(p = c[k].geometry) && f.push([p.x, p.y]);
                            c = {};
                            c[g] = a;
                            1 < f.length && (t ? (a = t.geometry, a.removePath(0), a.addPath(f), t.setGeometry(a)) : (t = new m(new q({
                                paths: [f],
                                spatialReference: l
                            }), null, c), e.add(t), d.trackLineMap[a] = t))
                        }
                        var d = this,
                            e = this.container,
                            h, l, g, p;
                        if (e)
                            if (h = this.trackMap,
                                l = this.map.spatialReference, g = this.layer._trackIdField, a) f.forEach(a, function(a) {
                                c(a)
                            });
                            else
                                for (p in h) h.hasOwnProperty(p) && c(p)
                    },
                    refreshTracks: function(a) {
                        function c(a) {
                            var c, f;
                            a = d[a] || [];
                            c = a.length;
                            for (f = 0; f < c; f++) e._repaint(a[f], null, !0)
                        }
                        var d = this.trackMap,
                            e = this.layer;
                        e._getRenderer();
                        var h;
                        this.drawTracks(a);
                        if (a) f.forEach(a, function(a) {
                            c(a)
                        });
                        else
                            for (h in d) d.hasOwnProperty(h) && c(h)
                    },
                    getLatestObservations: function() {
                        var a, c, d = this.trackMap,
                            e = [];
                        for (a in d) d.hasOwnProperty(a) && (c = d[a], e.push(c[c.length -
                            1]));
                        return e
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        this.trackLineMap = null
                    }
                })
            })
        },
        "esri/layers/PurgeOptions": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/Stateful", "dojo/has", "../kernel"], function(p, e, f, h, d) {
                return p([f], {
                    declaredClass: "esri.layers.PurgeOptions",
                    constructor: function(d, e) {
                        this.parent = d;
                        for (var a in e) this[a] = e[a]
                    },
                    _displayCountSetter: function(d) {
                        this.displayCount = d;
                        this.parent.refresh()
                    }
                })
            })
        },
        "esri/layers/ArcGISImageServiceLayer": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/has ../kernel ../config ./DynamicMapServiceLayer ./ImageServiceLayerMixin".split(" "),
                function(p, e, f, h, d, m, q) {
                    return p([m, q], {
                        declaredClass: "esri.layers.ArcGISImageServiceLayer",
                        constructor: function(a, d) {
                            this._initialize(a, d);
                            this.useMapImage = d && d.useMapImage || !1
                        },
                        refresh: function(a) {
                            if (a) this.inherited(arguments);
                            else {
                                var d = this.disableClientCaching;
                                this.disableClientCaching = !0;
                                this.inherited(arguments);
                                this.disableClientCaching = d
                            }
                        },
                        exportMapImage: function(a, f) {
                            var c = d.defaults.map,
                                c = e.mixin({
                                    size: c.width + "," + c.height
                                }, this._params, a ? a.toJson(this.normalization) : {}, {
                                    f: "json"
                                });
                            delete c._ts;
                            this._exportMapImage(this._url.path + "/exportImage", c, f)
                        }
                    })
                })
        },
        "esri/layers/ArcGISImageServiceVectorLayer": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/connect dojo/_base/json dojo/sniff ../kernel ../lang ./GraphicsLayer ./ImageServiceLayerMixin ../renderers/VectorFieldRenderer ../geometry/Point ../geometry/Extent ../graphic dojox/gfx".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l) {
                return p([a, k], {
                    declaredClass: "esri.layers.ArcGISImageServiceVectorLayer",
                    constructor: function(a,
                        d) {
                        this.symbolTileSize = d && d.symbolTileSize ? d.symbolTileSize : 50;
                        this._maxMag = this._minMag = null;
                        this.setVectorRendererStyle(d && d.rendererStyle ? d.rendererStyle : c.STYLE_SINGLE_ARROW);
                        var b = e.clone(this._params);
                        delete b.imageServiceParameters;
                        delete b.pixelFilter;
                        delete b.rendererStyle;
                        delete b.symbolTileSize;
                        this._initialize(a, d);
                        this.geometryType = "esriGeometryPoint";
                        this.symbolTileSizeUnits = "Pixels";
                        e.mixin(this._params, b)
                    },
                    getField: function(a) {
                        return this._getField(a, !0)
                    },
                    setVectorRendererStyle: function(a) {
                        this.rendererStyle =
                            a;
                        this._updateVectorFieldRenderer();
                        this.useDefaultRenderer = !0
                    },
                    setRenderer: function() {
                        this.useDefaultRenderer = !1;
                        this.inherited(arguments)
                    },
                    getFlowRepresentation: function() {
                        return this._vectorFlowRepresentation
                    },
                    onRendererChange: function() {},
                    onResume: function() {
                        this.inherited(arguments);
                        this._toggleTime()
                    },
                    onSuspend: function() {
                        this.inherited(arguments);
                        this._toggleTime()
                    },
                    _refresh: function(a) {
                        if (10 > d("ie")) this.onError(Error("Unable to refresh. This layer is not supported in the current browser."));
                        else if (!1 === this.hasMultidimensions) this.onError(Error("Unable to refresh. This layer does not have multi-dimensional info."));
                        else {
                            this.setImageFormat("LERC", !0);
                            a = this.fullExtent.xmin;
                            var c = this.fullExtent.ymax,
                                b = e.clone(this._map.extent),
                                f = this._map.width * (1 / this.symbolTileSize),
                                f = f ? Math.ceil(f) : 50,
                                l = this._map.height * (1 / this.symbolTileSize),
                                l = l ? Math.ceil(l) : Math.ceil(f * ((b.ymax - b.ymin) / (b.xmax - b.xmin))),
                                k = (b.xmax - b.xmin) / f,
                                h = (b.ymax - b.ymin) / l;
                            b.xmin = a + Math.floor((b.xmin - a) / k) * k;
                            b.xmax = a + Math.ceil((b.xmax -
                                a) / k) * k;
                            b.ymin = c + Math.floor((b.ymin - c) / h) * h;
                            b.ymax = c + Math.ceil((b.ymax - c) / h) * h;
                            this._requestData(b, f, l)
                        }
                    },
                    _drawPixelData: function() {
                        this.clear();
                        if (this.pixelData) {
                            var a = this.pixelData.pixelBlock,
                                c = this.pixelData.extent,
                                b = this.pixelData.locations,
                                d = q.isDefined(a.mask) && 0 < a.mask.length;
                            if (a && c && b) {
                                if (this.useDefaultRenderer && this.renderer && (!q.isDefined(this._minMag) || !q.isDefined(this._maxMag))) {
                                    var e = this._getServiceMinMaxStats();
                                    e ? (this._minMag = e.min, this._maxMag = e.max) : (this._minMag = a.statistics[0].minValue,
                                        this._maxMag = a.statistics[0].maxValue);
                                    var e = {
                                            type: "sizeInfo",
                                            minSize: l.px2pt(0.2 * this.symbolTileSize),
                                            maxSize: l.px2pt(0.8 * this.symbolTileSize),
                                            minDataValue: this._minMag,
                                            maxDataValue: this._maxMag
                                        },
                                        f = [];
                                    f.push(e);
                                    f.push({
                                        type: "colorInfo"
                                    });
                                    this.renderer.setVisualVariables(f)
                                }
                                for (var k = f = e = 0, m, p = c.spatialReference ? c.spatialReference._getInfo() : null, e = 0; e < a.height; e++)
                                    for (f = 0; f < a.width; f++, k++)
                                        if (m = b[k], (!d || a.mask[k]) && m && 2 === m.length) {
                                            m = new s(m[0], m[1], c.spatialReference);
                                            p && (m.x = n.prototype._normalizeX(m.x,
                                                p).x);
                                            var u = {
                                                Magnitude: a.pixels[0][k],
                                                Direction: a.pixels[1][k],
                                                Location: h.toJson(m.toJson())
                                            };
                                            m = new r(m, null, u);
                                            this.add(m)
                                        }
                            }
                        }
                    },
                    _getServiceMinMaxStats: function() {
                        if (!q.isDefined(this.minValues) || !q.isDefined(this.maxValues) || 2 > this.minValues.length || 2 > this.maxValues.length) return null;
                        var a = this.minValues[0],
                            c = this.maxValues[0],
                            b = this.minValues[1],
                            d = this.maxValues[1];
                        if (this.pixelFilter && a && c && b && d) {
                            var e = [];
                            e.push([a, c]);
                            e.push([b, d]);
                            b = this._createPixelData(e);
                            this.pixelFilter(b);
                            b && (b.pixelBlock &&
                                b.pixelBlock.pixels && 0 < b.pixelBlock.pixels.length) && (a = b.pixelBlock.pixels[0][0], c = b.pixelBlock.pixels[0][1])
                        }
                        return a && c ? {
                            min: a,
                            max: c
                        } : null
                    },
                    _updateVectorFieldRenderer: function() {
                        var a = {
                                type: "sizeInfo",
                                minSize: l.px2pt(0.2 * this.symbolTileSize),
                                maxSize: l.px2pt(0.8 * this.symbolTileSize),
                                minDataValue: this._minMag,
                                maxDataValue: this._maxMag
                            },
                            d = [];
                        d.push(a);
                        a = new c({
                            style: this.rendererStyle,
                            visualVariables: d,
                            flowRepresentation: this._vectorFlowRepresentation
                        });
                        this.setRenderer(a)
                    },
                    _getField: function(a, c) {
                        if (q.isDefined(a)) return c &&
                            (a = a.toLowerCase()), "magnitude" !== a && "direction" !== a ? null : {
                                name: a,
                                alias: a,
                                domain: null,
                                editable: !1,
                                length: 50,
                                type: "esriFieldTypeDouble"
                            }
                    },
                    _requestDataErrorHandler: function(a) {
                        "CancelError" !== a.name && (this.clear(), this.onError(a))
                    },
                    _setFlowRepresentation: function(a) {
                        a && (this.renderer && q.isDefined(a.FlowDirection)) && (this._vectorFlowRepresentation = "oceanographic" === a.FlowDirection.toLowerCase() ? this.renderer.FLOW_TO : this.renderer.FLOW_FROM);
                        this.renderer && (this.renderer.flowRepresentation = this._vectorFlowRepresentation)
                    }
                })
            })
        },
        "jimu/LayerInfos/LayerInfoForDefaultTile": function() {
            define(["dojo/_base/declare", "./LayerInfoForDefaultService"], function(p, e) {
                return p(e, {
                    constructor: function(e, h) {
                        this.noLegend = !0
                    },
                    getExtent: function() {},
                    initVisible: function() {},
                    _setTopLayerVisible: function(e) {},
                    setLayerVisiblefromTopLayer: function() {},
                    getOpacity: function() {},
                    setOpacity: function(e) {},
                    isShowInMap: function() {
                        return this.originOperLayer.mapService.layerInfo.layerObject.visible
                    }
                })
            })
        },
        "jimu/LayerInfos/LayerInfoForDefaultTable": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/html dojo/Deferred ./LayerInfoForDefault esri/layers/FeatureLayer".split(" "),
                function(p, e, f, h, d, m) {
                    return p(d, {
                        isTable: null,
                        constructor: function() {
                            this.newSubLayers = [];
                            this.isTable = !0
                        },
                        init: function() {},
                        getLayerObject: function() {
                            var d = new h;
                            if (this.layerObject.empty)
                                if (this.layerObject.url) {
                                    var a = this._getLayerOptionsForCreateLayerObject();
                                    this.layerObject = new m(this.layerObject.url, e.mixin(a, this.originOperLayer.options || {}) || {});
                                    this.layerObject.on("load", e.hitch(this, function() {
                                        d.resolve(this.layerObject)
                                    }));
                                    this.layerObject.on("error", e.hitch(this, function() {
                                        d.resolve(null)
                                    }))
                                } else this.layerObject.featureCollectionData ?
                                    (this.layerObject = new m(this.layerObject.featureCollectionData, this.originOperLayer.options || {}), d.resolve(this.layerObject)) : d.resolve(null);
                            else d.resolve(this.layerObject);
                            return d
                        },
                        getLayerType: function() {
                            var d = new h;
                            d.resolve("Table");
                            return d
                        },
                        isVisible: function() {
                            return !1
                        },
                        isLeaf: function() {
                            return !0
                        },
                        isRootLayer: function() {
                            return !1
                        },
                        createLegendsNode: function() {
                            return f.create("div", {
                                "class": "legends-div"
                            })
                        },
                        _initControlPopup: function() {
                            this.controlPopupInfo = {
                                enablePopup: void 0,
                                infoTemplate: void 0
                            }
                        },
                        getFilter: function() {
                            return this.getFilterOfWebmap()
                        }
                    })
                })
        },
        "jimu/LayerInfos/LayerInfoForDefaultImage": function() {
            define("dojo/_base/declare dojo/dom-construct dojo/_base/array dojo/_base/lang dojo/Deferred dojo/promise/all dojo/aspect esri/request ./LayerInfoForDefault".split(" "), function(p, e, f, h, d, m, q, a, k) {
                return p(k, {
                    constructor: function() {
                        this._addImageServiceLayerType()
                    },
                    _addImageServiceLayerType: function() {
                        this.layerObject.type = this.layerObject.serviceDataType && ("esriImageServiceDataTypeVector-UV" ===
                            this.layerObject.serviceDataType || "esriImageServiceDataTypeVector-MagDir" === this.layerObject.serviceDataType) ? "ArcGISImageServiceVectorLayer" : "ArcGISImageServiceLayer"
                    },
                    _initLegendsNode: function(a) {
                        10.2 <= this.layerObject.version ? this._legendRequestServer().then(h.hitch(this, function(d) {
                            e.empty(a);
                            f.forEach(d.layers, function(d) {
                                f.forEach(d.legend, function(d) {
                                    if ("\x3call other values\x3e" !== d.label) {
                                        var f = e.create("div", {
                                                "class": "legend-div"
                                            }, a),
                                            g = e.create("div", {
                                                "class": "legend-symbol jimu-float-leading",
                                                style: "width:50px;height:50px;position:relative"
                                            }, f),
                                            k = null,
                                            k = d.imageData ? "data:" + d.contentType + ";base64," + d.imageData : d.url;
                                        e.create("img", {
                                            "class": "legend-symbol-image",
                                            style: "overflow:auto;margin:auto;position:absolute;top:0;left:0;bottom:0;right:0",
                                            src: k
                                        }, g);
                                        e.create("div", {
                                            "class": "legend-label jimu-float-leading",
                                            innerHTML: d.label || " "
                                        }, f)
                                    }
                                }, this)
                            }, this)
                        }), h.hitch(this, function() {
                            e.empty(a)
                        })) : e.empty(a)
                    },
                    _legendRequestServer: function() {
                        var c = this.layerObject.url + "/legend",
                            d = {
                                f: "json"
                            };
                        this.layerObject._params.bandIds &&
                            (d.bandIds = this.layerObject._params.bandIds);
                        this.layerObject._params.renderingRule && (d.renderingRule = this.layerObject._params.renderingRule);
                        return a({
                            url: c,
                            content: d,
                            handleAs: "json",
                            callbackParamName: "callback"
                        })
                    },
                    getSupportTableInfo: function() {
                        var a = new d,
                            e = {
                                isSupportedLayer: !1,
                                isSupportQuery: !1,
                                layerType: null
                            },
                            f = this.getLayerType(),
                            k = this.getLayerObject();
                        m({
                            type: f,
                            layerObject: k
                        }).then(h.hitch(this, function(d) {
                            var g = d.type;
                            d = d.layerObject;
                            e.layerType = g;
                            0 <= this._getLayerTypesOfSupportTable().indexOf(g) &&
                                (e.isSupportedLayer = !0);
                            d.capabilities && 0 <= d.capabilities.indexOf("Catalog") ? e.isSupportQuery = !0 : e.isSupportedLayer = !1;
                            a.resolve(e)
                        }), function() {
                            a.resolve(e)
                        });
                        return a
                    },
                    _bindEvent: function() {
                        var a;
                        this.inherited(arguments);
                        this.layerObject && !this.layerObject.empty && (a = q.after(this.layerObject, "setRenderingRule", h.hitch(this, this._onRendererChanged)), this._eventHandles.push(a))
                    }
                })
            })
        },
        "jimu/LayerInfos/LayerInfoForDefaultStream": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/Deferred",
                "dojo/promise/all", "./LayerInfoForDefault"
            ], function(p, e, f, h, d) {
                return p(d, {
                    getSupportTableInfo: function() {
                        var d = new f,
                            p = {
                                isSupportedLayer: !1,
                                isSupportQuery: !0,
                                layerType: null,
                                otherReasonCanNotSupport: !0
                            },
                            a = this.getLayerType(),
                            k = this.getLayerObject();
                        h({
                            type: a,
                            layerObject: k
                        }).then(e.hitch(this, function(a) {
                                var e = a.type;
                                a = a.layerObject;
                                p.layerType = e;
                                0 <= this._getLayerTypesOfSupportTable().indexOf(e) && (p.isSupportedLayer = !0);
                                if ((e = a.getLatestObservations()) && 0 < e.length) p.otherReasonCanNotSupport = !1;
                                d.resolve(p)
                            }),
                            function() {
                                d.resolve(p)
                            });
                        return d
                    }
                })
            })
        },
        "dijit/layout/_LayoutWidget": function() {
            define("dojo/_base/lang ../_Widget ../_Container ../_Contained ../Viewport dojo/_base/declare dojo/dom-class dojo/dom-geometry dojo/dom-style".split(" "), function(p, e, f, h, d, m, q, a, k) {
                return m("dijit.layout._LayoutWidget", [e, f, h], {
                    baseClass: "dijitLayoutContainer",
                    isLayoutContainer: !0,
                    _setTitleAttr: null,
                    buildRendering: function() {
                        this.inherited(arguments);
                        q.add(this.domNode, "dijitContainer")
                    },
                    startup: function() {
                        if (!this._started) {
                            this.inherited(arguments);
                            var a = this.getParent && this.getParent();
                            if (!a || !a.isLayoutContainer) this.resize(), this.own(d.on("resize", p.hitch(this, "resize")))
                        }
                    },
                    resize: function(c, d) {
                        var e = this.domNode;
                        c && a.setMarginBox(e, c);
                        var f = d || {};
                        p.mixin(f, c || {});
                        if (!("h" in f) || !("w" in f)) f = p.mixin(a.getMarginBox(e), f);
                        var l = k.getComputedStyle(e),
                            g = a.getMarginExtents(e, l),
                            h = a.getBorderExtents(e, l),
                            f = this._borderBox = {
                                w: f.w - (g.w + h.w),
                                h: f.h - (g.h + h.h)
                            },
                            g = a.getPadExtents(e, l);
                        this._contentBox = {
                            l: k.toPixelValue(e, l.paddingLeft),
                            t: k.toPixelValue(e,
                                l.paddingTop),
                            w: f.w - g.w,
                            h: f.h - g.h
                        };
                        this.layout()
                    },
                    layout: function() {},
                    _setupChild: function(a) {
                        q.add(a.domNode, this.baseClass + "-child " + (a.baseClass ? this.baseClass + "-" + a.baseClass : ""))
                    },
                    addChild: function(a, d) {
                        this.inherited(arguments);
                        this._started && this._setupChild(a)
                    },
                    removeChild: function(a) {
                        q.remove(a.domNode, this.baseClass + "-child" + (a.baseClass ? " " + this.baseClass + "-" + a.baseClass : ""));
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/Menu": function() {
            define("require dojo/_base/array dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-geometry dojo/dom-style dojo/keys dojo/_base/lang dojo/on dojo/sniff dojo/_base/window dojo/window ./popup ./DropDownMenu dojo/ready".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t) {
                    s("dijit-legacy-requires") && t(0, function() {
                        p(["dijit/MenuItem", "dijit/PopupMenuItem", "dijit/CheckedMenuItem", "dijit/MenuSeparator"])
                    });
                    return f("dijit.Menu", g, {
                        constructor: function() {
                            this._bindings = []
                        },
                        targetNodeIds: [],
                        selector: "",
                        contextMenuForWindow: !1,
                        leftClickToOpen: !1,
                        refocus: !0,
                        postCreate: function() {
                            this.contextMenuForWindow ? this.bindDomNode(this.ownerDocumentBody) : e.forEach(this.targetNodeIds, this.bindDomNode, this);
                            this.inherited(arguments)
                        },
                        _iframeContentWindow: function(a) {
                            return r.get(this._iframeContentDocument(a)) ||
                                this._iframeContentDocument(a).__parent__ || a.name && document.frames[a.name] || null
                        },
                        _iframeContentDocument: function(a) {
                            return a.contentDocument || a.contentWindow && a.contentWindow.document || a.name && document.frames[a.name] && document.frames[a.name].document || null
                        },
                        bindDomNode: function(b) {
                            b = h.byId(b, this.ownerDocument);
                            var e;
                            if ("iframe" == b.tagName.toLowerCase()) {
                                var g = b;
                                e = this._iframeContentWindow(g);
                                e = n.body(e.document)
                            } else e = b == n.body(this.ownerDocument) ? this.ownerDocument.documentElement : b;
                            var f = {
                                node: b,
                                iframe: g
                            };
                            d.set(b, "_dijitMenu" + this.id, this._bindings.push(f));
                            var l = k.hitch(this, function(b) {
                                var d = this.selector,
                                    e = d ? function(a) {
                                        return c.selector(d, a)
                                    } : function(a) {
                                        return a
                                    },
                                    f = this;
                                return [c(b, e(this.leftClickToOpen ? "click" : "contextmenu"), function(a) {
                                    a.stopPropagation();
                                    a.preventDefault();
                                    (new Date).getTime() < f._lastKeyDown + 500 || f._scheduleOpen(this, g, {
                                        x: a.pageX,
                                        y: a.pageY
                                    }, a.target)
                                }), c(b, e("keydown"), function(b) {
                                    if (93 == b.keyCode || b.shiftKey && b.keyCode == a.F10 || f.leftClickToOpen && b.keyCode == a.SPACE) b.stopPropagation(),
                                        b.preventDefault(), f._scheduleOpen(this, g, null, b.target), f._lastKeyDown = (new Date).getTime()
                                })]
                            });
                            f.connects = e ? l(e) : [];
                            g && (f.onloadHandler = k.hitch(this, function() {
                                var a = this._iframeContentWindow(g),
                                    a = n.body(a.document);
                                f.connects = l(a)
                            }), g.addEventListener ? g.addEventListener("load", f.onloadHandler, !1) : g.attachEvent("onload", f.onloadHandler))
                        },
                        unBindDomNode: function(a) {
                            var c;
                            try {
                                c = h.byId(a, this.ownerDocument)
                            } catch (e) {
                                return
                            }
                            a = "_dijitMenu" + this.id;
                            if (c && d.has(c, a)) {
                                for (var g = d.get(c, a) - 1, f = this._bindings[g],
                                        l; l = f.connects.pop();) l.remove();
                                (l = f.iframe) && (l.removeEventListener ? l.removeEventListener("load", f.onloadHandler, !1) : l.detachEvent("onload", f.onloadHandler));
                                d.remove(c, a);
                                delete this._bindings[g]
                            }
                        },
                        _scheduleOpen: function(a, c, d, e) {
                            this._openTimer || (this._openTimer = this.defer(function() {
                                delete this._openTimer;
                                this._openMyself({
                                    target: e,
                                    delegatedTarget: a,
                                    iframe: c,
                                    coords: d
                                })
                            }, 1))
                        },
                        _openMyself: function(a) {
                            function c() {
                                r.refocus && t && t.focus();
                                l.close(r)
                            }
                            var d = a.target,
                                e = a.iframe,
                                g = a.coords,
                                f = !g;
                            this.currentTarget =
                                a.delegatedTarget;
                            if (g) {
                                if (e) {
                                    a = m.position(e, !0);
                                    var d = this._iframeContentWindow(e),
                                        d = m.docScroll(d.document),
                                        k = q.getComputedStyle(e),
                                        n = q.toPixelValue,
                                        p = (s("ie") && s("quirks") ? 0 : n(e, k.paddingLeft)) + (s("ie") && s("quirks") ? n(e, k.borderLeftWidth) : 0),
                                        e = (s("ie") && s("quirks") ? 0 : n(e, k.paddingTop)) + (s("ie") && s("quirks") ? n(e, k.borderTopWidth) : 0);
                                    g.x += a.x + p - d.x;
                                    g.y += a.y + e - d.y
                                }
                            } else g = m.position(d, !0), g.x += 10, g.y += 10;
                            var r = this,
                                e = this._focusManager.get("prevNode");
                            a = this._focusManager.get("curNode");
                            var t = !a ||
                                h.isDescendant(a, this.domNode) ? e : a;
                            l.open({
                                popup: this,
                                x: g.x,
                                y: g.y,
                                onExecute: c,
                                onCancel: c,
                                orient: this.isLeftToRight() ? "L" : "R"
                            });
                            this.focus();
                            f || this.defer(function() {
                                this._cleanUp(!0)
                            });
                            this._onBlur = function() {
                                this.inherited("_onBlur", arguments);
                                l.close(this)
                            }
                        },
                        destroy: function() {
                            e.forEach(this._bindings, function(a) {
                                a && this.unBindDomNode(a.node)
                            }, this);
                            this.inherited(arguments)
                        }
                    })
                })
        },
        "dgrid/main": function() {
            define([], 1)
        },
        "dgrid/OnDemandGrid": function() {
            define(["dojo/_base/declare", "./Grid", "./OnDemandList"],
                function(p, e, f) {
                    return p("dgrid.OnDemandGrid", [e, f], {})
                })
        },
        "dgrid/Grid": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/on dojo/has put-selector/put ./List ./util/misc dojo/_base/sniff".split(" "), function(p, e, f, h, d, m, q) {
                function a(a, c) {
                    c && c.nodeType && a.appendChild(c)
                }

                function k(a, c, d, e) {
                    if (this.formatter) {
                        e = this.formatter;
                        var g = this.grid.formatterScope;
                        d.innerHTML = "string" === typeof e && g ? g[e](c, a) : this.formatter(c, a)
                    } else null != c && d.appendChild(document.createTextNode(c))
                }
                var c = 8 > h("ie") &&
                    !h("quirks");
                e = e("dgrid.Grid", m, {
                    columns: null,
                    cellNavigation: !0,
                    tabableHeader: !0,
                    showHeader: !0,
                    column: function(a) {
                        return "object" != typeof a ? this.columns[a] : this.cell(a).column
                    },
                    listType: "grid",
                    cell: function(a, c) {
                        if (a.column && a.element) return a;
                        a.target && a.target.nodeType && (a = a.target);
                        var d;
                        if (a.nodeType) {
                            do {
                                if (this._rowIdToObject[a.id]) break;
                                var e = a.columnId;
                                if (e) {
                                    c = e;
                                    d = a;
                                    break
                                }
                                a = a.parentNode
                            } while (a && a != this.domNode)
                        }
                        if (!d && "undefined" != typeof c) {
                            var g = this.row(a);
                            if (e = g && g.element)
                                for (var e = e.getElementsByTagName("td"),
                                        f = 0; f < e.length; f++)
                                    if (e[f].columnId == c) {
                                        d = e[f];
                                        break
                                    }
                        }
                        if (null != a) return {
                            row: g || this.row(a),
                            column: c && this.column(c),
                            element: d
                        }
                    },
                    createRowCells: function(a, e, f, l) {
                        var g = d("table.dgrid-row-table[role\x3dpresentation]"),
                            k = 9 > h("ie") || h("quirks") ? d(g, "tbody") : g,
                            b, m, p, z, A, x, C, u, E, D;
                        f = f || this.subRows;
                        m = 0;
                        for (p = f.length; m < p; m++) {
                            x = f[m];
                            b = d(k, "tr");
                            x.className && d(b, "." + x.className);
                            z = 0;
                            for (A = x.length; z < A; z++) {
                                C = x[z];
                                u = C.id;
                                E = C.field ? ".field-" + q.escapeCssIdentifier(C.field, "-") : "";
                                (D = "function" === typeof C.className ?
                                    C.className(l) : C.className) && (E += "." + D);
                                E = d(a + (".dgrid-cell.dgrid-cell-padding" + (u ? ".dgrid-column-" + q.escapeCssIdentifier(u, "-") : "") + E.replace(/ +/g, ".")) + "[role\x3d" + ("th" === a ? "columnheader" : "gridcell") + "]");
                                E.columnId = u;
                                c ? (u = d(E, "!dgrid-cell-padding div.dgrid-cell-padding"), E.contents = u) : u = E;
                                if (D = C.colSpan) E.colSpan = D;
                                if (D = C.rowSpan) E.rowSpan = D;
                                e(u, C);
                                b.appendChild(E)
                            }
                        }
                        return g
                    },
                    left: function(a, c) {
                        a.element || (a = this.cell(a));
                        return this.cell(this._move(a, -(c || 1), "dgrid-cell"))
                    },
                    right: function(a,
                        c) {
                        a.element || (a = this.cell(a));
                        return this.cell(this._move(a, c || 1, "dgrid-cell"))
                    },
                    renderRow: function(c, e) {
                        var f = this.createRowCells("td", function(d, g) {
                            var f = c;
                            g.get ? f = g.get(c) : "field" in g && "_item" != g.field && (f = f[g.field]);
                            g.renderCell ? a(d, g.renderCell(c, f, d, e)) : k.call(g, c, f, d, e)
                        }, e && e.subRows, c);
                        return d("div[role\x3drow]\x3e", f)
                    },
                    renderHeader: function() {
                        var e = this,
                            k = this.headerNode,
                            m = k.childNodes.length;
                        for (k.setAttribute("role", "row"); m--;) d(k.childNodes[m], "!");
                        m = this.createRowCells("th", function(d,
                            e) {
                            var f = e.headerNode = d;
                            c && (d = d.parentNode);
                            var b = e.field;
                            b && (d.field = b);
                            if (e.renderHeaderCell) a(f, e.renderHeaderCell(f));
                            else if ("label" in e || e.field) f.appendChild(document.createTextNode("label" in e ? e.label : e.field));
                            !1 !== e.sortable && (b && "_item" != b) && (d.sortable = !0, d.className += " dgrid-sortable")
                        }, this.subRows && this.subRows.headerRows);
                        this._rowIdToObject[m.id = this.id + "-header"] = this.columns;
                        k.appendChild(m);
                        this._sortListener && this._sortListener.remove();
                        this._sortListener = f(m, "click,keydown",
                            function(a) {
                                if ("click" == a.type || 32 == a.keyCode || !h("opera") && 13 == a.keyCode) {
                                    var c = a.target,
                                        d, b, m;
                                    do
                                        if (c.sortable) {
                                            m = [{
                                                attribute: d = c.field || c.columnId,
                                                descending: (b = e._sort[0]) && b.attribute == d && !b.descending
                                            }];
                                            d = {
                                                bubbles: !0,
                                                cancelable: !0,
                                                grid: e,
                                                parentType: a.type,
                                                sort: m
                                            };
                                            f.emit(a.target, "dgrid-sort", d) && (e._sortNode = c, e.set("sort", m));
                                            break
                                        }
                                    while ((c = c.parentNode) && c != k)
                                }
                            })
                    },
                    resize: function() {
                        var a = this.headerNode.firstChild,
                            c = this.contentNode,
                            d;
                        this.inherited(arguments);
                        if (!h("ie") || 7 < h("ie") && !h("quirks"))
                            if (c.style.width =
                                "", c && a && (d = a.offsetWidth) != c.offsetWidth) c.style.width = d + "px"
                    },
                    destroy: function() {
                        this._destroyColumns();
                        this._sortListener && this._sortListener.remove();
                        this.inherited(arguments)
                    },
                    _setSort: function(a, c) {
                        this.inherited(arguments);
                        this.updateSortArrow(this._sort)
                    },
                    _findSortArrowParent: function(a) {
                        var c = this.columns,
                            d;
                        for (d in c) {
                            var e = c[d];
                            if (e.field == a) return e.headerNode
                        }
                    },
                    updateSortArrow: function(a, c) {
                        this._lastSortedArrow && (d(this._lastSortedArrow, "\x3c!dgrid-sort-up!dgrid-sort-down"), d(this._lastSortedArrow,
                            "!"), delete this._lastSortedArrow);
                        c && (this._sort = a);
                        if (a[0]) {
                            var e = a[0].attribute,
                                f = a[0].descending,
                                e = this._sortNode || this._findSortArrowParent(e),
                                g;
                            delete this._sortNode;
                            e && (e = e.contents || e, g = this._lastSortedArrow = d("div.dgrid-sort-arrow.ui-icon[role\x3dpresentation]"), g.innerHTML = "\x26nbsp;", e.insertBefore(g, e.firstChild), d(e, f ? ".dgrid-sort-down" : ".dgrid-sort-up"), this.resize())
                        }
                    },
                    styleColumn: function(a, c) {
                        return this.addCssRule("#" + q.escapeCssIdentifier(this.domNode.id) + " .dgrid-column-" + q.escapeCssIdentifier(a,
                            "-"), c)
                    },
                    _configColumns: function(a, c) {
                        var d = [],
                            e = c instanceof Array;
                        q.each(c, function(g, f) {
                            "string" == typeof g && (c[f] = g = {
                                label: g
                            });
                            !e && !g.field && (g.field = f);
                            f = g.id = g.id || (isNaN(f) ? f : a + f);
                            this._configColumn && (this._configColumn(g, f, c, a), f = g.id);
                            e && (this.columns[f] = g);
                            g.grid = this;
                            "function" === typeof g.init && g.init();
                            d.push(g)
                        }, this);
                        return e ? c : d
                    },
                    _destroyColumns: function() {
                        var a = this.subRows,
                            c = a && a.length,
                            d, e, g, f;
                        this.cleanup();
                        for (d = 0; d < c; d++) {
                            e = 0;
                            for (f = a[d].length; e < f; e++) g = a[d][e], "function" === typeof g.destroy &&
                                g.destroy()
                        }
                    },
                    configStructure: function() {
                        var a = this.subRows,
                            c = this._columns = this.columns;
                        this.columns = !c || c instanceof Array ? {} : c;
                        if (a)
                            for (c = 0; c < a.length; c++) a[c] = this._configColumns(c + "-", a[c]);
                        else this.subRows = [this._configColumns("", c)]
                    },
                    _getColumns: function() {
                        return this._columns || this.columns
                    },
                    _setColumns: function(a) {
                        this._destroyColumns();
                        this.subRows = null;
                        this.columns = a;
                        this._updateColumns()
                    },
                    _setSubRows: function(a) {
                        this._destroyColumns();
                        this.subRows = a;
                        this._updateColumns()
                    },
                    setColumns: function(a) {
                        p.deprecated("setColumns(...)",
                            'use set("columns", ...) instead', "dgrid 0.4");
                        this.set("columns", a)
                    },
                    setSubRows: function(a) {
                        p.deprecated("setSubRows(...)", 'use set("subRows", ...) instead', "dgrid 0.4");
                        this.set("subRows", a)
                    },
                    _updateColumns: function() {
                        this.configStructure();
                        this.renderHeader();
                        this.refresh();
                        this._lastCollection && this.renderArray(this._lastCollection);
                        this._started && (this._sort && this._sort.length ? this.updateSortArrow(this._sort) : this.resize())
                    }
                });
                e.appendIfNode = a;
                e.defaultRenderCell = k;
                return e
            })
        },
        "put-selector/put": function() {
            (function(p) {
                var e,
                    f = /[-+,> ]/;
                p([], e = function(h, d) {
                    function m(d) {
                        function e() {
                            b && (t && b != t) && (t == d && (r || (r = f.test(A) && h.createDocumentFragment())) ? r : t).insertBefore(b, g || null)
                        }
                        for (var r, l, g, t, b, v = arguments, w = v[0], z = 0; z < v.length; z++) {
                            var A = v[z];
                            if ("object" == typeof A) {
                                l = !1;
                                if (A instanceof Array) {
                                    b = h.createDocumentFragment();
                                    for (var x = 0; x < A.length; x++) b.appendChild(m(A[x]));
                                    A = b
                                }
                                if (A.nodeType) b = A, e(), t = A, g = 0;
                                else
                                    for (x in A) b[x] = A[x]
                            } else if (l) l = !1, b.appendChild(h.createTextNode(A));
                            else {
                                1 > z && (d = null);
                                l = !0;
                                if (w = A.replace(p,
                                        function(f, l, p, r, q, w) {
                                            l && (e(), "-" == l || "+" == l ? (t = (g = b || t).parentNode, b = null, "+" == l && (g = g.nextSibling)) : ("\x3c" == l ? t = b = (b || t).parentNode : ("," == l ? t = d : b && (t = b), b = null), g = 0), b && (t = b));
                                            if ((f = !p && r) || !b && (p || q)) "$" == f ? (f = v[++z], t.appendChild(h.createTextNode(f))) : (f = f || m.defaultTag, (l = c && v[z + 1] && v[z + 1].name) && (f = "\x3c" + f + ' name\x3d"' + l + '"\x3e'), b = k && ~(a = f.indexOf("|")) ? h.createElementNS(k[f.slice(0, a)], f.slice(a + 1)) : h.createElement(f));
                                            if (p)
                                                if ("$" == r && (r = v[++z]), "#" == p) b.id = r;
                                                else if (l = (f = b.className) &&
                                                (" " + f + " ").replace(" " + r + " ", " "), "." == p) b.className = f ? (l + r).substring(1) : r;
                                            else if ("!" == A) {
                                                var x;
                                                c ? m("div", b, "\x3c").innerHTML = "" : (x = b.parentNode) && x.removeChild(b)
                                            } else l = l.substring(1, l.length - 1), l != f && (b.className = l);
                                            q && ("$" == w && (w = v[++z]), "style" == q ? b.style.cssText = w : (p = "!" == q.charAt(0) ? (q = q.substring(1)) && "removeAttribute" : "setAttribute", w = "" === w ? q : w, k && ~(a = q.indexOf("|")) ? b[p + "NS"](k[q.slice(0, a)], q.slice(a + 1), w) : b[p](q, w)));
                                            return ""
                                        })) throw new SyntaxError("Unexpected char " + w + " in " + A);
                                e();
                                t = w = b || t
                            }
                        }
                        d && r && d.appendChild(r);
                        return w
                    }
                    f = d || f;
                    var p = /(?:\s*([-+ ,<>]))?\s*(\.|!\.?|#)?([-\w\u00A0-\uFFFF%$|]+)?(?:\[([^\]=]+)=?['"]?([^\]'"]*)['"]?\])?/g,
                        a, k = !1;
                    h = h || document;
                    var c = "object" == typeof h.createElement;
                    m.addNamespace = function(a, c) {
                        h.createElementNS ? (k || (k = {}))[a] = c : h.namespaces.add(a, c)
                    };
                    m.defaultTag = "div";
                    m.forDocument = e;
                    return m
                })
            })(function(p, e, f) {
                f = f || e;
                "function" === typeof define ? define([], function() {
                        return f()
                    }) : "undefined" == typeof window ? require("./node-html")(module, f) : put =
                    f()
            })
        },
        "dgrid/List": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/dom dojo/on dojo/has ./util/misc dojo/has!touch?./TouchScroll xstyle/has-class put-selector/put dojo/_base/sniff xstyle/css!./css/dgrid.css".split(" "), function(p, e, f, h, d, m, q, a, k) {
                function c(a, b) {
                    k(document.body, a, ".dgrid-scrollbar-measure");
                    var c = a["offset" + b] - a["client" + b];
                    a.className = "";
                    document.body.removeChild(a);
                    return c
                }

                function s(a) {
                    var b = a ? "." + a.replace(v, ".") : "";
                    this._class && (b = "!" + this._class.replace(v, "!") +
                        b);
                    k(this.domNode, b);
                    this._class = a
                }

                function n() {
                    return this._class
                }

                function r() {
                    return {
                        x: this.bodyNode.scrollLeft,
                        y: this.bodyNode.scrollTop
                    }
                }

                function l(a) {
                    "undefined" !== typeof a.x && (this.bodyNode.scrollLeft = a.x);
                    "undefined" !== typeof a.y && (this.bodyNode.scrollTop = a.y)
                }
                a("mozilla", "opera", "webkit", "ie", "ie-6", "ie-6-7", "quirks", "no-quirks", "touch");
                var g, t;
                d.add("dom-scrollbar-width", function(a, b, d) {
                    return c(d, "Width")
                });
                d.add("dom-scrollbar-height", function(a, b, d) {
                    return c(d, "Height")
                });
                d.add("dom-rtl-scrollbar-left",
                    function(a, b, c) {
                        a = k("div");
                        k(document.body, c, ".dgrid-scrollbar-measure[dir\x3drtl]");
                        k(c, a);
                        b = !!d("ie") || !!d("trident") || a.offsetLeft >= d("dom-scrollbar-width");
                        c.className = "";
                        document.body.removeChild(c);
                        k(a, "!");
                        c.removeAttribute("dir");
                        return b
                    });
                var b = 0,
                    v = / +/g,
                    w = 7 > d("ie") && !d("quirks") ? function() {
                        var a, b, c;
                        if (this._started && (a = document.documentElement, b = a.clientWidth, a = a.clientHeight, c = this._prevWinDims || [], c[0] !== b || c[1] !== a)) this.resize(), this._prevWinDims = [b, a]
                    } : function() {
                        this._started && this.resize()
                    };
                return e("dgrid.List", d("touch") ? q : null, {
                    tabableHeader: !1,
                    showHeader: !1,
                    showFooter: !1,
                    maintainOddEven: !0,
                    cleanAddedRules: !0,
                    useTouchScroll: null,
                    addUiClasses: !0,
                    shouldObserveStore: !0,
                    cleanEmptyObservers: !0,
                    highlightDuration: 250,
                    postscript: function(a, b) {
                        var c = this;
                        (this._Row = function(a, b, c) {
                            this.id = a;
                            this.data = b;
                            this.element = c
                        }).prototype.remove = function() {
                            c.removeRow(this.element)
                        };
                        b && (this.srcNodeRef = b = b.nodeType ? b : document.getElementById(b));
                        this.create(a, b)
                    },
                    listType: "list",
                    create: function(a, c) {
                        var g =
                            this.domNode = c || k("div"),
                            f;
                        a ? (this.params = a, e.safeMixin(this, a), f = a["class"] || a.className || g.className, this._sort = a.sort || [], delete this.sort) : this._sort = [];
                        this.observers = [];
                        this._numObservers = 0;
                        this._listeners = [];
                        this._rowIdToObject = {};
                        this.postMixInProperties && this.postMixInProperties();
                        this.id = g.id = g.id || this.id || "dgrid_" + b++;
                        null === this.useTouchScroll && (this.useTouchScroll = !d("dom-scrollbar-width"));
                        this.buildRendering();
                        f && s.call(this, f);
                        this.postCreate();
                        delete this.srcNodeRef;
                        this.domNode.offsetHeight &&
                            this.startup()
                    },
                    buildRendering: function() {
                        var a = this.domNode,
                            b = this.addUiClasses,
                            c = this,
                            e, g, f, l;
                        l = this.isRTL = "rtl" == (document.body.dir || document.documentElement.dir || document.body.style.direction).toLowerCase();
                        a.className = "";
                        k(a, "[role\x3dgrid].dgrid.dgrid-" + this.listType + (b ? ".ui-widget" : ""));
                        e = this.headerNode = k(a, "div.dgrid-header.dgrid-header-row" + (b ? ".ui-widget-header" : "") + (this.showHeader ? "" : ".dgrid-header-hidden"));
                        (d("quirks") || 8 > d("ie")) && k(a, "div.dgrid-spacer");
                        g = this.bodyNode = k(a, "div.dgrid-scroller");
                        d("ff") && (g.tabIndex = -1);
                        this.headerScrollNode = k(a, "div.dgrid-header.dgrid-header-scroll.dgrid-scrollbar-width" + (b ? ".ui-widget-header" : ""));
                        f = this.footerNode = k("div.dgrid-footer" + (this.showFooter ? "" : ".dgrid-footer-hidden"));
                        k(a, f);
                        l && (a.className += " dgrid-rtl" + (d("dom-rtl-scrollbar-left") ? " dgrid-rtl-swap" : ""));
                        h(g, "scroll", function(b) {
                            c.showHeader && (e.scrollLeft = b.scrollLeft || g.scrollLeft);
                            b.stopPropagation();
                            h.emit(a, "scroll", {
                                scrollTarget: g
                            })
                        });
                        this.configStructure();
                        this.renderHeader();
                        this.contentNode =
                            this.touchNode = k(this.bodyNode, "div.dgrid-content" + (b ? ".ui-widget-content" : ""));
                        this._listeners.push(this._resizeHandle = h(window, "resize", m.throttleDelayed(w, this)))
                    },
                    postCreate: d("touch") ? function() {
                        this.useTouchScroll && this.inherited(arguments)
                    } : function() {},
                    startup: function() {
                        this._started || (this.inherited(arguments), this._started = !0, this.resize(), this.set("sort", this._sort))
                    },
                    configStructure: function() {},
                    resize: function() {
                        var a = this.bodyNode,
                            b = this.headerNode,
                            c = this.footerNode,
                            e = b.offsetHeight,
                            f = this.showFooter ? c.offsetHeight : 0,
                            l = d("quirks") || 7 > d("ie");
                        this.headerScrollNode.style.height = a.style.marginTop = e + "px";
                        a.style.marginBottom = f + "px";
                        l && (a.style.height = "", a.style.height = Math.max(this.domNode.offsetHeight - e - f, 0) + "px", f && (c.style.bottom = "1px", setTimeout(function() {
                            c.style.bottom = ""
                        }, 0)));
                        g || (g = d("dom-scrollbar-width"), t = d("dom-scrollbar-height"), d("ie") && (g++, t++), m.addCssRule(".dgrid-scrollbar-width", "width: " + g + "px"), m.addCssRule(".dgrid-scrollbar-height", "height: " + t + "px"), 17 != g &&
                            !l && (m.addCssRule(".dgrid-header-row", "right: " + g + "px"), m.addCssRule(".dgrid-rtl-swap .dgrid-header-row", "left: " + g + "px")));
                        l && (b.style.width = a.clientWidth + "px", setTimeout(function() {
                            b.scrollLeft = a.scrollLeft
                        }, 0))
                    },
                    addCssRule: function(a, b) {
                        var c = m.addCssRule(a, b);
                        this.cleanAddedRules && this._listeners.push(c);
                        return c
                    },
                    on: function(a, b) {
                        var c = h(this.domNode, a, b);
                        d("dom-addeventlistener") || this._listeners.push(c);
                        return c
                    },
                    cleanup: function() {
                        var a = this.observers,
                            b;
                        for (b in this._rowIdToObject)
                            if (this._rowIdToObject[b] !=
                                this.columns) {
                                var c = document.getElementById(b);
                                c && this.removeRow(c, !0)
                            }
                        for (b = 0; b < a.length; b++)(c = a[b]) && c.cancel();
                        this.observers = [];
                        this._numObservers = 0;
                        this.preload = null
                    },
                    destroy: function() {
                        if (this._listeners) {
                            for (var a = this._listeners.length; a--;) this._listeners[a].remove();
                            delete this._listeners
                        }
                        this._started = !1;
                        this.cleanup();
                        k(this.domNode, "!");
                        this.useTouchScroll && this.inherited(arguments)
                    },
                    refresh: function() {
                        this.cleanup();
                        this._rowIdToObject = {};
                        this._autoId = 0;
                        this.contentNode.innerHTML = "";
                        this.scrollTo({
                            x: 0,
                            y: 0
                        })
                    },
                    newRow: function(a, b, c, d, e) {
                        if (b) {
                            var g = this.insertRow(a, b, c, d, e);
                            k(g, ".dgrid-highlight" + (this.addUiClasses ? ".ui-state-highlight" : ""));
                            setTimeout(function() {
                                k(g, "!dgrid-highlight!ui-state-highlight")
                            }, this.highlightDuration);
                            return g
                        }
                    },
                    adjustRowIndices: function(a) {
                        var b = a.rowIndex;
                        if (-1 < b) {
                            do -1 < a.rowIndex && (this.maintainOddEven && -1 < (a.className + " ").indexOf("dgrid-row ") && k(a, "." + (1 == b % 2 ? "dgrid-row-odd" : "dgrid-row-even") + "!" + (0 == b % 2 ? "dgrid-row-odd" : "dgrid-row-even")), a.rowIndex =
                                b++); while ((a = a.nextSibling) && a.rowIndex != b)
                        }
                    },
                    renderArray: function(a, b, c) {
                        function d() {
                            var b = arguments;
                            if (-1 < r)
                                for (var g = 0; g < b.length; g++) {
                                    var f = b[g],
                                        l = m[f ? 0 : m.length - 1];
                                    if (l = l && e(l)) {
                                        var h = l[f ? "previousSibling" : "nextSibling"];
                                        h && (h = k.row(h));
                                        h && h.element != l && (f = f ? "unshift" : "push", a[f](h.data), m[f](h.element), c.count++)
                                    }
                                }
                        }

                        function e(a) {
                            return !f.isDescendant(a, k.domNode) && document.getElementById(a.id) ? k.row(a.id.slice(k.id.length + 5)).element : a
                        }

                        function g(a) {
                            t = k.insertRow(a, s, null, h++, c);
                            t.observerIndex =
                                r;
                            return t
                        }

                        function l(a) {
                            v = a.slice(0);
                            (p = b ? b.parentNode : k.contentNode) && p.parentNode && (p !== k.contentNode || a.length) ? (p.insertBefore(s, b || null), (t = a[a.length - 1]) && k.adjustRowIndices(t)) : n[r] && k.cleanEmptyObservers && "undefined" !== typeof r && (n[r].cancel(), n[r] = 0, k._numObservers--);
                            m = a;
                            q && (q.rows = m)
                        }
                        c = c || {};
                        var k = this,
                            h = c.start || 0,
                            n = this.observers,
                            m, p, r;
                        b || (this._lastCollection = a);
                        if (a.observe && this.shouldObserveStore) {
                            k._numObservers++;
                            var q = a.observe(function(g, f, l) {
                                var h, n, q; - 1 < f && m[f] && (h = m.splice(f,
                                    1)[0], h.parentNode == p && ((n = h.nextSibling) && f != l && n.rowIndex--, k.removeRow(h)), c.count--, k._processScroll && k._processScroll());
                                if (-1 < l) {
                                    if (m.length)
                                        if (0 === l) q = (q = m[l]) && e(q);
                                        else {
                                            if (q = m[l - 1]) q = e(q), q = (q.connected || q).nextSibling
                                        }
                                    else q = k._getFirstRowSibling && k._getFirstRowSibling(p);
                                    h && (q && h.id === q.id) && (q = (q.connected || q).nextSibling);
                                    q && !q.parentNode && (q = document.getElementById(q.id));
                                    h = b && b.parentNode || q && q.parentNode || k.contentNode;
                                    if (h = k.newRow(g, h, q, c.start + l, c))
                                        if (h.observerIndex = r, m.splice(l,
                                                0, h), !n || l < f) n = h.previousSibling, n = !n || n.rowIndex + 1 == h.rowIndex || 0 == h.rowIndex ? h : n;
                                    c.count++
                                }
                                0 === f ? d(1, 1) : f === a.length - (-1 === l ? 0 : 1) && d(0, 0);
                                f != l && n && k.adjustRowIndices(n);
                                k._onNotification(m, g, f, l)
                            }, !0);
                            r = n.push(q) - 1
                        }
                        var s = document.createDocumentFragment(),
                            t, v;
                        if (a.map) {
                            if (m = a.map(g, console.error), m.then) return a.then(function(b) {
                                a = b;
                                return m.then(function(a) {
                                    l(a);
                                    d(1, 1, 0, 0);
                                    return v
                                })
                            })
                        } else {
                            m = [];
                            for (var w = 0, M = a.length; w < M; w++) m[w] = g(a[w])
                        }
                        l(m);
                        d(1, 1, 0, 0);
                        return v
                    },
                    _onNotification: function(a, b, c,
                        d) {},
                    renderHeader: function() {},
                    _autoId: 0,
                    insertRow: function(a, b, c, d, e) {
                        var g = e.parentId,
                            g = this.id + "-row-" + (g ? g + "-" : "") + (this.store && this.store.getIdentity ? this.store.getIdentity(a) : this._autoId++),
                            f = document.getElementById(g),
                            l = f && f.previousSibling;
                        f && (f === c && (c = (c.connected || c).nextSibling), this.removeRow(f));
                        f = this.renderRow(a, e);
                        f.className = (f.className || "") + " dgrid-row " + (1 == d % 2 ? "dgrid-row-odd" : "dgrid-row-even") + (this.addUiClasses ? " ui-state-default" : "");
                        this._rowIdToObject[f.id = g] = a;
                        b.insertBefore(f,
                            c || null);
                        l && this.adjustRowIndices(l);
                        f.rowIndex = d;
                        return f
                    },
                    renderRow: function(a, b) {
                        return k("div", "" + a)
                    },
                    removeRow: function(a, b) {
                        a = a.element || a;
                        delete this._rowIdToObject[a.id];
                        b || k(a, "!")
                    },
                    row: function(a) {
                        var b;
                        if (a instanceof this._Row) return a;
                        a.target && a.target.nodeType && (a = a.target);
                        if (a.nodeType) {
                            do {
                                var c = a.id;
                                if (b = this._rowIdToObject[c]) return new this._Row(c.substring(this.id.length + 5), b, a);
                                a = a.parentNode
                            } while (a && a != this.domNode)
                        } else return "object" == typeof a ? b = this.store.getIdentity(a) :
                            (b = a, a = this._rowIdToObject[this.id + "-row-" + b]), new this._Row(b, a, document.getElementById(this.id + "-row-" + b))
                    },
                    cell: function(a) {
                        return {
                            row: this.row(a)
                        }
                    },
                    _move: function(a, b, c, d) {
                        var e, g;
                        g = e = a.element;
                        b = b || 1;
                        do
                            if (a = e[0 > b ? "previousSibling" : "nextSibling"]) {
                                do
                                    if ((e = a) && -1 < (e.className + " ").indexOf(c + " ")) {
                                        g = e;
                                        b += 0 > b ? 1 : -1;
                                        break
                                    }
                                while (a = (!d || !e.hidden) && e[0 > b ? "lastChild" : "firstChild"])
                            } else if (e = e.parentNode, !e || e === this.bodyNode || e === this.headerNode) break; while (b);
                        return g
                    },
                    up: function(a, b, c) {
                        a.element ||
                            (a = this.row(a));
                        return this.row(this._move(a, -(b || 1), "dgrid-row", c))
                    },
                    down: function(a, b, c) {
                        a.element || (a = this.row(a));
                        return this.row(this._move(a, b || 1, "dgrid-row", c))
                    },
                    scrollTo: d("touch") ? function(a) {
                        return this.useTouchScroll ? this.inherited(arguments) : l.call(this, a)
                    } : l,
                    getScrollPosition: d("touch") ? function() {
                        return this.useTouchScroll ? this.inherited(arguments) : r.call(this)
                    } : r,
                    get: function(a) {
                        var b = "_get" + a.charAt(0).toUpperCase() + a.slice(1);
                        return "function" === typeof this[b] ? this[b].apply(this, [].slice.call(arguments,
                            1)) : this[a]
                    },
                    set: function(a, b) {
                        if ("object" === typeof a)
                            for (var c in a) this.set(c, a[c]);
                        else c = "_set" + a.charAt(0).toUpperCase() + a.slice(1), "function" === typeof this[c] ? this[c].apply(this, [].slice.call(arguments, 1)) : this[a] = b;
                        return this
                    },
                    _getClass: n,
                    _setClass: s,
                    _getClassName: n,
                    _setClassName: s,
                    _setSort: function(a, b) {
                        this._sort = "string" != typeof a ? a : [{
                            attribute: a,
                            descending: b
                        }];
                        this.refresh();
                        this._lastCollection && (a.length && ("string" != typeof a && (b = a[0].descending, a = a[0].attribute), this._lastCollection.sort(function(c,
                            d) {
                            var e = c[a],
                                g = d[a];
                            void 0 === e && (e = "");
                            void 0 === g && (g = "");
                            return e == g ? 0 : e > g == !b ? 1 : -1
                        })), this.renderArray(this._lastCollection))
                    },
                    sort: function(a, b) {
                        p.deprecated("sort(...)", 'use set("sort", ...) instead', "dgrid 0.4");
                        this.set("sort", a, b)
                    },
                    _getSort: function() {
                        return this._sort
                    },
                    _setShowHeader: function(a) {
                        var b = this.headerNode;
                        this.showHeader = a;
                        k(b, (a ? "!" : ".") + "dgrid-header-hidden");
                        this.renderHeader();
                        this.resize();
                        a && (b.scrollLeft = this.getScrollPosition().x)
                    },
                    setShowHeader: function(a) {
                        p.deprecated("setShowHeader(...)",
                            'use set("showHeader", ...) instead', "dgrid 0.4");
                        this.set("showHeader", a)
                    },
                    _setShowFooter: function(a) {
                        this.showFooter = a;
                        k(this.footerNode, (a ? "!" : ".") + "dgrid-footer-hidden");
                        this.resize()
                    }
                })
            })
        },
        "dgrid/util/misc": function() {
            define(["dojo/has", "put-selector/put"], function(p, e) {
                p.add("dom-contains", function(a, c, d) {
                    return !!d.contains
                });
                var f = [],
                    h, d, m, q = /([^A-Za-z0-9_\u00A0-\uFFFF-])/g,
                    a = {
                        defaultDelay: 15,
                        throttle: function(d, c, e) {
                            var f = !1;
                            e = e || a.defaultDelay;
                            return function() {
                                f || (f = !0, d.apply(c, arguments),
                                    setTimeout(function() {
                                        f = !1
                                    }, e))
                            }
                        },
                        throttleDelayed: function(d, c, e) {
                            var f = !1;
                            e = e || a.defaultDelay;
                            return function() {
                                if (!f) {
                                    f = !0;
                                    var a = arguments;
                                    setTimeout(function() {
                                        f = !1;
                                        d.apply(c, a)
                                    }, e)
                                }
                            }
                        },
                        debounce: function(d, c, e) {
                            var f;
                            e = e || a.defaultDelay;
                            return function() {
                                f && (clearTimeout(f), f = null);
                                var a = arguments;
                                f = setTimeout(function() {
                                    d.apply(c, a)
                                }, e)
                            }
                        },
                        each: function(a, c, d) {
                            var e, f;
                            if (a)
                                if ("number" === typeof a.length) {
                                    e = 0;
                                    for (f = a.length; e < f; e++) c.call(d, a[e], e, a)
                                } else
                                    for (e in a) c.call(d, a[e], e, a)
                        },
                        contains: function(a,
                            c) {
                            return p("dom-contains") ? a.contains(c) : a.compareDocumentPosition(c) & 8
                        },
                        addCssRule: function(a, c) {
                            h || (h = e(document.getElementsByTagName("head")[0], "style"), h = h.sheet || h.styleSheet, d = h.deleteRule ? "deleteRule" : "removeRule", m = h.cssRules ? "cssRules" : "rules");
                            var p = f.length;
                            f[p] = (h.cssRules || h.rules).length;
                            h.addRule ? h.addRule(a, c) : h.insertRule(a + "{" + c + "}", f[p]);
                            return {
                                get: function(a) {
                                    return h[m][f[p]].style[a]
                                },
                                set: function(a, c) {
                                    "undefined" !== typeof f[p] && (h[m][f[p]].style[a] = c)
                                },
                                remove: function() {
                                    var a =
                                        f[p],
                                        c, e;
                                    if (void 0 !== a) {
                                        h[d](a);
                                        f[p] = void 0;
                                        c = p + 1;
                                        for (e = f.length; c < e; c++) f[c] > a && f[c]--
                                    }
                                }
                            }
                        },
                        escapeCssIdentifier: function(a, c) {
                            return "string" === typeof a ? a.replace(q, c || "\\$1") : a
                        }
                    };
                return a
            })
        },
        "xstyle/has-class": function() {
            define(["dojo/has"], function(p) {
                var e = {};
                return function() {
                    for (var f, h = arguments, d = 0; d < h.length; d++)
                        if (f = h[d], !e[f]) {
                            e[f] = !0;
                            var m = f.match(/^(no-)?(.+?)((-[\d\.]+)(-[\d\.]+)?)?$/),
                                q = p(m[2]),
                                a = -m[4];
                            if ((0 < a ? a <= q && (-m[5] || a) >= q : !!q) == !m[1]) document.documentElement.className += " has-" +
                                f
                        }
                }
            })
        },
        "xstyle/css": function() {
            define(["require"], function(p) {
                function e(e, h, d) {
                    var m = document.documentElement;
                    e = m.insertBefore(document.createElement(e), m.firstChild);
                    e.id = h;
                    h = (e.currentStyle || getComputedStyle(e, null) || {})[d];
                    m.removeChild(e);
                    return h
                }
                return {
                    load: function(f, h, d, m) {
                        function q(a) {
                            var c = e("x-parse", null, "content"),
                                f = a && (a.sheet || a.styleSheet);
                            c && "none" != c && "normal" != c ? h([eval(c)], function(c) {
                                a ? c.process(a, d) : (c.processAll(), d(f))
                            }) : d(f)
                        }
                        var a = h.toUrl(f),
                            k;
                        a.match(/!$/) && (k = {
                                wait: !1
                            },
                            a = a.slice(0, -1));
                        var c = h.cache && h.cache["url:" + a];
                        if (c) c.xCss && (c = c.cssText), p(["./core/load-css"], function(a) {
                            q(a.insertCss(c))
                        });
                        else {
                            if ("none" == e("div", f.replace(/\//g, "-").replace(/\..*/, "") + "-loaded", "display")) return q();
                            p(["./core/load-css"], function(c) {
                                c(a, q, k)
                            })
                        }
                    }
                }
            })
        },
        "dgrid/OnDemandList": function() {
            define("./List ./_StoreMixin dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/dom dojo/on ./util/misc put-selector/put".split(" "), function(p, e, f, h, d, m, q, a, k) {
                return f("dgrid.OnDemandList", [p, e], {
                    minRowsPerPage: 25,
                    maxRowsPerPage: 250,
                    maxEmptySpace: Infinity,
                    bufferRows: 10,
                    farOffRemoval: 2E3,
                    queryRowsOverlap: 0,
                    pagingMethod: "debounce",
                    pagingDelay: a.defaultDelay,
                    keepScrollPosition: !1,
                    rowHeight: 22,
                    postCreate: function() {
                        this.inherited(arguments);
                        var c = this;
                        q(this.bodyNode, "scroll", a[this.pagingMethod](function(a) {
                            c._processScroll(a)
                        }, null, this.pagingDelay))
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        this._refreshTimeout && clearTimeout(this._refreshTimeout)
                    },
                    renderQuery: function(a, e) {
                        function f(a) {
                            k(z,
                                "!");
                            if (a) throw m._refreshDeferred && (m._refreshDeferred.reject(a), delete m._refreshDeferred), a;
                        }
                        var m = this,
                            l = e && e.container || this.contentNode,
                            g = {
                                query: a,
                                count: 0,
                                options: e
                            },
                            p, b = this.preload,
                            q, w = {
                                node: k(l, "div.dgrid-preload", {
                                    rowIndex: 0
                                }),
                                count: 0,
                                query: a,
                                next: g,
                                options: e
                            };
                        w.node.style.height = "0";
                        g.node = p = k(l, "div.dgrid-preload");
                        g.previous = w;
                        p.rowIndex = this.minRowsPerPage;
                        b ? ((g.next = b.next) && p.offsetTop >= b.node.offsetTop ? g.previous = b : (g.next = b, g.previous = b.previous), g.previous.next = g, g.next.previous =
                            g) : this.preload = g;
                        var z = k(p, "-div.dgrid-loading");
                        k(z, "div.dgrid-below").innerHTML = this.loadingMessage;
                        e = h.mixin(this.get("queryOptions"), e, {
                            start: 0,
                            count: this.minRowsPerPage
                        }, "level" in a ? {
                            queryLevel: a.level
                        } : null);
                        this._trackError(function() {
                            return q = a(e)
                        });
                        if ("undefined" === typeof q) f();
                        else return d.when(m.renderArray(q, p, e), function(a) {
                            return d.when("undefined" === typeof q.total ? q.length : q.total, function(b) {
                                var c = a.length,
                                    d = p.parentNode,
                                    f = m.noDataNode;
                                k(z, "!");
                                "queryLevel" in e || (m._total = b);
                                0 ===
                                    b && d && (f && (k(f, "!"), delete m.noDataNode), m.noDataNode = f = k("div.dgrid-no-data"), d.insertBefore(f, m._getFirstRowSibling(d)), f.innerHTML = m.noDataMessage);
                                for (f = d = 0; f < c; f++) d += m._calcRowHeight(a[f]);
                                c && d && (m.rowHeight = d / c);
                                d = m.rowHeight * m.bufferRows;
                                d > m.farOffRemoval && (m.farOffRemoval = d);
                                b -= c;
                                g.count = b;
                                p.rowIndex = c;
                                b ? p.style.height = Math.min(b * m.rowHeight, m.maxEmptySpace) + "px" : (p.style.display = "none", e.count++);
                                m._previousScrollPosition && (m.scrollTo(m._previousScrollPosition), delete m._previousScrollPosition);
                                m._processScroll();
                                m._refreshDeferred && (m._refreshDeferred.resolve(q), delete m._refreshDeferred);
                                return a
                            }, f)
                        }, f), q
                    },
                    refresh: function(a) {
                        var e = this,
                            f = a && a.keepScrollPosition,
                            k;
                        "undefined" === typeof f && (f = this.keepScrollPosition);
                        f && (this._previousScrollPosition = this.getScrollPosition());
                        this.inherited(arguments);
                        if (this.store) return f = this._refreshDeferred = new d, k = e.renderQuery(function(a) {
                            return e.store.query(e.query, a)
                        }), "undefined" === typeof k && f.reject(), f.then(function(a) {
                            e._refreshTimeout = setTimeout(function() {
                                q.emit(e.domNode,
                                    "dgrid-refresh-complete", {
                                        bubbles: !0,
                                        cancelable: !1,
                                        grid: e,
                                        results: a
                                    });
                                e._refreshTimeout = null
                            }, 0);
                            delete e._refreshDeferred;
                            return a
                        }, function(a) {
                            delete e._refreshDeferred;
                            throw a;
                        })
                    },
                    resize: function() {
                        this.inherited(arguments);
                        this._processScroll()
                    },
                    _getFirstRowSibling: function(a) {
                        return a.lastChild
                    },
                    _calcRowHeight: function(a) {
                        var d = a.nextSibling;
                        return d && !/\bdgrid-preload\b/.test(d.className) ? d.offsetTop - a.offsetTop : a.offsetHeight
                    },
                    lastScrollTop: 0,
                    _processScroll: function(a) {
                        function e(a, b, c, d) {
                            var g =
                                l.farOffRemoval,
                                h = a.node;
                            if (b > 2 * g) {
                                for (var m, p = h[c], q = 0, r = 0, s = []; m = p;) {
                                    var t = l._calcRowHeight(m);
                                    if (q + t + g > b || 0 > p.className.indexOf("dgrid-row") && 0 > p.className.indexOf("dgrid-loading")) break;
                                    p = m[c];
                                    q += t;
                                    r += m.count || 1;
                                    l.removeRow(m, !0);
                                    s.push(m)
                                }
                                a.count += r;
                                d ? (h.rowIndex -= r, f(a)) : h.style.height = h.offsetHeight + q + "px";
                                var v = k("div", s);
                                setTimeout(function() {
                                    k(v, "!")
                                }, 1)
                            }
                        }

                        function f(a, b) {
                            a.node.style.height = Math.min(a.count * l.rowHeight, b ? Infinity : l.maxEmptySpace) + "px"
                        }

                        function m(a, b) {
                            do a = b ? a.next : a.previous;
                            while (a && !a.node.offsetWidth);
                            return a
                        }
                        var l = this,
                            g = l.bodyNode;
                        a = a && a.scrollTop || this.getScrollPosition().y;
                        var g = g.offsetHeight + a,
                            p, b, q = l.preload,
                            w = l.lastScrollTop,
                            z = l.bufferRows * l.rowHeight,
                            A = z - l.rowHeight,
                            x, C, u, E = !0;
                        for (l.lastScrollTop = a; q && !q.node.offsetWidth;) q = q.previous;
                        for (; q && q != p;) {
                            p = l.preload;
                            l.preload = q;
                            b = q.node;
                            var D = b.offsetTop;
                            if (g + 1 + A < D) q = m(q, E = !1);
                            else if (a - 1 - A > D + b.offsetHeight) q = m(q, E = !0);
                            else {
                                var B = ((b.rowIndex ? a - z : g) - D) / l.rowHeight,
                                    D = (g - a + 2 * z) / l.rowHeight,
                                    G = Math.max(Math.min((a -
                                        w) * l.rowHeight, l.maxRowsPerPage / 2), l.maxRowsPerPage / -2),
                                    D = D + Math.min(Math.abs(G), 10);
                                0 == b.rowIndex && (B -= D);
                                B = Math.max(B, 0);
                                10 > B && (0 < B && D + B < l.maxRowsPerPage) && (D += Math.max(0, B), B = 0);
                                D = Math.min(Math.max(D, l.minRowsPerPage), l.maxRowsPerPage, q.count);
                                if (0 == D) q = m(q, E);
                                else {
                                    var D = Math.ceil(D),
                                        B = Math.min(Math.floor(B), q.count - D),
                                        I = h.mixin(l.get("queryOptions"), q.options);
                                    q.count -= D;
                                    var K = b,
                                        R, N = l.queryRowsOverlap;
                                    if (G = (0 < b.rowIndex || b.offsetTop > a) && q) {
                                        var P = q.previous;
                                        P && (e(P, a - (P.node.offsetTop + P.node.offsetHeight),
                                            "nextSibling"), 0 < B && P.node == b.previousSibling ? (B = Math.min(q.count, B), q.previous.count += B, f(q.previous, !0), b.rowIndex += B, N = 0) : D += B, q.count -= B);
                                        I.start = b.rowIndex - N;
                                        I.count = Math.min(D + N, l.maxRowsPerPage);
                                        b.rowIndex = I.start + I.count
                                    } else q.next && (e(q.next, q.next.node.offsetTop - g, "previousSibling", !0), K = b.nextSibling, K == q.next.node ? (q.next.count += q.count - B, q.next.node.rowIndex = B + D, f(q.next), q.count = B, N = 0) : R = !0), I.start = q.count, I.count = Math.min(D + N, l.maxRowsPerPage);
                                    R && (K && K.offsetWidth) && (R = K.offsetTop);
                                    f(q);
                                    "level" in q.query && (I.queryLevel = q.query.level);
                                    if ("queryLevel" in I || !(I.start > l._total || 0 > I.count)) {
                                        b = k(K, "-div.dgrid-loading[style\x3dheight:" + D * l.rowHeight + "px]");
                                        k(b, "div.dgrid-" + (G ? "below" : "above")).innerHTML = l.loadingMessage;
                                        b.count = D;
                                        var J = q.query(I);
                                        if (void 0 === l._trackError(function() {
                                                return J
                                            })) {
                                            k(b, "!");
                                            return
                                        }(function(a, b, c, e) {
                                            u = d.when(l.renderArray(e, a, I), function(g) {
                                                C = e;
                                                K = a.nextSibling;
                                                k(a, "!");
                                                if (c && K && K.offsetWidth) {
                                                    var h = l.getScrollPosition();
                                                    l.scrollTo({
                                                        x: h.x,
                                                        y: h.y + K.offsetTop -
                                                            c,
                                                        preserveMomentum: !0
                                                    })
                                                }
                                                d.when(e.total || e.length, function(a) {
                                                    "queryLevel" in I || (l._total = a);
                                                    b && (b.count = a - b.node.rowIndex, 0 === b.count && I.count++, f(b))
                                                });
                                                l._processScroll();
                                                return g
                                            }, function(b) {
                                                k(a, "!");
                                                throw b;
                                            })
                                        }).call(this, b, G, R, J);
                                        q = q.previous
                                    }
                                }
                            }
                        }
                        if (u && (x = this._refreshDeferred)) delete this._refreshDeferred, d.when(u, function() {
                            x.resolve(C)
                        })
                    },
                    removeRow: function(a, d) {
                        if (a) {
                            var e = a.previousSibling,
                                f = a.nextSibling,
                                e = e && (null != e.observerIndex ? e.observerIndex : e.previousObserverIndex),
                                l = f && (null != f.observerIndex ?
                                    f.observerIndex : f.nextObserverIndex),
                                f = a.observerIndex;
                            a.observerIndex = void 0;
                            d && (a.nextObserverIndex = l, a.previousObserverIndex = e);
                            if (this.cleanEmptyObservers && (-1 < f && f !== e && f !== l) && (e = this.observers, l = e[f])) {
                                if (!d)
                                    for (var g = l.rows, k = 0; k < g.length; k++)
                                        if (g[k] != a && m.isDescendant(g[k], this.domNode)) return this.inherited(arguments);
                                l.cancel();
                                this._numObservers--;
                                e[f] = 0
                            }
                        }
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dgrid/_StoreMixin": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/on dojo/aspect put-selector/put".split(" "),
                function(p, e, f, h, d, m, q) {
                    function a(a) {
                        return a
                    }

                    function k(a) {
                        if ("object" !== typeof a) a = Error(a);
                        else if ("cancel" === a.dojoType) return;
                        a.grid = this;
                        d.emit(this.domNode, "dgrid-error", {
                            grid: this,
                            error: a,
                            cancelable: !0,
                            bubbles: !0
                        }) && console.error(a)
                    }
                    return e("dgrid._StoreMixin", null, {
                        store: null,
                        query: null,
                        queryOptions: null,
                        getBeforePut: !0,
                        noDataMessage: "",
                        loadingMessage: "",
                        constructor: function() {
                            this.query = {};
                            this.queryOptions = {};
                            this.dirty = {};
                            this._updating = {};
                            this._columnsWithSet = {};
                            m.before(this, "configStructure",
                                f.hitch(this, function() {
                                    this._columnsWithSet = {}
                                }))
                        },
                        postCreate: function() {
                            this.inherited(arguments);
                            this.store && this._updateNotifyHandle(this.store)
                        },
                        destroy: function() {
                            this.inherited(arguments);
                            this._notifyHandle && this._notifyHandle.remove()
                        },
                        _configColumn: function(a) {
                            a.set && (this._columnsWithSet[a.field] = a);
                            this.inherited(arguments)
                        },
                        _updateNotifyHandle: function(a) {
                            this._notifyHandle && (this._notifyHandle.remove(), delete this._notifyHandle);
                            a && ("function" === typeof a.notify && this.shouldObserveStore) &&
                                (this._notifyHandle = m.after(a, "notify", f.hitch(this, "_onNotify"), !0), a = this.get("sort"), (!a || !a.length) && console.warn("Observable store detected, but no sort order specified. You may experience quirks when adding/updating items.  These can be resolved by setting a sort order on the list or grid."))
                        },
                        _setStore: function(a, d, e) {
                            this._updateNotifyHandle(a);
                            this.store = a;
                            this.dirty = {};
                            this.set("query", d, e)
                        },
                        _setQuery: function(a, d) {
                            var e = d && d.sort;
                            this.query = void 0 !== a ? a : this.query;
                            this.queryOptions = d ||
                                this.queryOptions;
                            this._started && (e ? this.set("sort", e) : this.refresh())
                        },
                        setStore: function(a, d, e) {
                            p.deprecated("setStore(...)", 'use set("store", ...) instead', "dgrid 0.4");
                            this.set("store", a, d, e)
                        },
                        setQuery: function(a, d) {
                            p.deprecated("setQuery(...)", 'use set("query", ...) instead', "dgrid 0.4");
                            this.set("query", a, d)
                        },
                        _getQueryOptions: function() {
                            var a = f.delegate(this.queryOptions, {});
                            if ("function" === typeof this._sort || this._sort.length) a.sort = this._sort;
                            return a
                        },
                        _getQuery: function() {
                            var a = this.query;
                            return "object" == typeof a && null != a ? f.delegate(a, {}) : a
                        },
                        _setSort: function(a, d) {
                            this.store && (this._lastCollection = null);
                            this.inherited(arguments)
                        },
                        _onNotify: function(a, d) {
                            this.inherited(arguments);
                            a && 1 > this._numObservers && this.refresh({
                                keepScrollPosition: !0
                            })
                        },
                        refresh: function() {
                            var a = this.inherited(arguments);
                            this.store || (this.noDataNode = q(this.contentNode, "div.dgrid-no-data"), this.noDataNode.innerHTML = this.noDataMessage);
                            return a
                        },
                        renderArray: function() {
                            var a = this,
                                d = this.inherited(arguments);
                            this.store ||
                                h.when(d, function(d) {
                                    d.length && a.noDataNode && q(a.noDataNode, "!")
                                });
                            return d
                        },
                        insertRow: function(a, d, e, k, l) {
                            var g = this.store,
                                h = this.dirty,
                                g = g && g.getIdentity(a),
                                b;
                            g in h && !(g in this._updating) && (b = h[g]);
                            b && (a = f.delegate(a, b));
                            return this.inherited(arguments)
                        },
                        updateDirty: function(a, d, e) {
                            var f = this.dirty,
                                l = f[a];
                            l || (l = f[a] = {});
                            l[d] = e
                        },
                        setDirty: function(a, d, e) {
                            p.deprecated("setDirty(...)", "use updateDirty() instead", "dgrid 0.4");
                            this.updateDirty(a, d, e)
                        },
                        save: function() {
                            function a(b, c) {
                                return function(a) {
                                    var g =
                                        d._columnsWithSet,
                                        l = d._updating,
                                        k, m;
                                    if ("function" === typeof a.set) a.set(c);
                                    else
                                        for (k in c) a[k] = c[k];
                                    for (k in g) m = g[k].set(a), void 0 !== m && (a[k] = m);
                                    l[b] = !0;
                                    return h.when(e.put(a), function() {
                                        delete f[b];
                                        delete l[b]
                                    })
                                }
                            }
                            var d = this,
                                e = this.store,
                                f = this.dirty,
                                l = new h,
                                g = l.promise,
                                k = function(a) {
                                    var b;
                                    return d.getBeforePut || !(b = d.row(a).data) ? function() {
                                        return e.get(a)
                                    } : function() {
                                        return b
                                    }
                                },
                                b;
                            for (b in f) var m = a(b, f[b]),
                                g = g.then(k(b)).then(m);
                            l.resolve();
                            return g
                        },
                        revert: function() {
                            this.dirty = {};
                            this.refresh()
                        },
                        _trackError: function(c) {
                            var d;
                            "string" == typeof c && (c = f.hitch(this, c));
                            try {
                                d = c()
                            } catch (e) {
                                k.call(this, e)
                            }
                            return h.when(d, a, f.hitch(this, k))
                        },
                        newRow: function() {
                            var a = this.inherited(arguments);
                            this.noDataNode && (q(this.noDataNode, "!"), delete this.noDataNode);
                            return a
                        },
                        removeRow: function(a, d) {
                            var e = {
                                element: a
                            };
                            !d && (this.noDataMessage && this.up(e).element === a && this.down(e).element === a) && (this.noDataNode = q(this.contentNode, "div.dgrid-no-data"), this.noDataNode.innerHTML = this.noDataMessage);
                            return this.inherited(arguments)
                        }
                    })
                })
        },
        "dgrid/Selection": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/_base/Deferred dojo/on dojo/has dojo/aspect ./List dojo/has!touch?./util/touch put-selector/put dojo/query dojo/_base/sniff".split(" "), function(p, e, f, h, d, m, q, a, k) {
                function c(a, c) {
                    for (var d = a.unselectable = c ? "on" : "", e = a.getElementsByTagName("*"), g = e.length; --g;) "INPUT" === e[g].tagName || "TEXTAREA" === e[g].tagName || (e[g].unselectable = d)
                }

                function s(a, e) {
                    var g = a.bodyNode,
                        f = e ? "text" : 21 > d("ff") ? "-moz-none" : "none";
                    r && "msUserSelect" !==
                        r ? g.style[r] = f : d("dom-selectstart") ? !e && !a._selectstartHandle ? a._selectstartHandle = h(g, "selectstart", function(a) {
                            var b = a.target && a.target.tagName;
                            "INPUT" !== b && "TEXTAREA" !== b && a.preventDefault()
                        }) : e && a._selectstartHandle && (a._selectstartHandle.remove(), delete a._selectstartHandle) : (c(g, !e), !e && !a._unselectableHandle ? a._unselectableHandle = m.after(a, "renderRow", function(a) {
                            c(a, !0);
                            return a
                        }) : e && a._unselectableHandle && (a._unselectableHandle.remove(), delete a._unselectableHandle))
                }
                d.add("dom-comparedocumentposition",
                    function(a, c, d) {
                        return !!d.compareDocumentPosition
                    });
                d.add("pointer", function(a) {
                    return "PointerEvent" in a ? "pointer" : "MSPointerEvent" in a ? "MSPointer" : !1
                });
                d.add("css-user-select", function(a, c, d) {
                    a = d.style;
                    c = ["Khtml", "O", "ms", "Moz", "Webkit"];
                    d = c.length;
                    var e = "userSelect";
                    do
                        if ("undefined" !== typeof a[e]) return e; while (d-- && (e = c[d] + "UserSelect"));
                    return !1
                });
                d.add("dom-selectstart", "undefined" !== typeof document.onselectstart);
                var n = d("mac") ? "metaKey" : "ctrlKey",
                    r = d("css-user-select"),
                    l = (q = d("pointer")) &&
                    "MS" === q.slice(0, 2),
                    g = q ? q + (l ? "Down" : "down") : "mousedown",
                    t = q ? q + (l ? "Up" : "up") : "mouseup";
                "WebkitUserSelect" === r && "undefined" !== typeof document.documentElement.style.msUserSelect && (r = !1);
                return e("dgrid.Selection", null, {
                    selectionDelegate: ".dgrid-row",
                    selectionEvents: g + "," + t + ",dgrid-cellfocusin",
                    selectionTouchEvents: d("touch") ? a.tap : null,
                    deselectOnRefresh: !0,
                    allowSelectAll: !1,
                    selection: {},
                    selectionMode: "extended",
                    allowTextSelection: void 0,
                    _selectionTargetType: "rows",
                    create: function() {
                        this.selection = {};
                        return this.inherited(arguments)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this._initSelectionEvents();
                        var a = this.selectionMode;
                        this.selectionMode = "";
                        this._setSelectionMode(a)
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        this._selectstartHandle && this._selectstartHandle.remove();
                        this._unselectableHandle && this._unselectableHandle.remove();
                        this._removeDeselectSignals && this._removeDeselectSignals()
                    },
                    _setSelectionMode: function(a) {
                        a != this.selectionMode && (this.clearSelection(), this.selectionMode =
                            a, this._selectionHandlerName = "_" + a + "SelectionHandler", this._setAllowTextSelection(this.allowTextSelection))
                    },
                    setSelectionMode: function(a) {
                        p.deprecated("setSelectionMode(...)", 'use set("selectionMode", ...) instead', "dgrid 0.4");
                        this.set("selectionMode", a)
                    },
                    _setAllowTextSelection: function(a) {
                        "undefined" !== typeof a ? s(this, a) : s(this, "none" === this.selectionMode);
                        this.allowTextSelection = a
                    },
                    _handleSelect: function(a, c) {
                        if (this[this._selectionHandlerName] && this.allowSelect(this.row(c)) && !("dgrid-cellfocusin" ===
                                a.type && "mousedown" === a.parentType || a.type === t && c != this._waitForMouseUp)) {
                            this._waitForMouseUp = null;
                            this._selectionTriggerEvent = a;
                            if (!a.keyCode || !a.ctrlKey || 32 == a.keyCode)
                                if (!a.shiftKey && a.type === g && this.isSelected(c)) this._waitForMouseUp = c;
                                else this[this._selectionHandlerName](a, c);
                            this._selectionTriggerEvent = null
                        }
                    },
                    _singleSelectionHandler: function(a, c) {
                        var d = a.keyCode ? a.ctrlKey : a[n];
                        this._lastSelected === c ? this.select(c, null, !d || !this.isSelected(c)) : (this.clearSelection(), this.select(c), this._lastSelected =
                            c)
                    },
                    _multipleSelectionHandler: function(a, c) {
                        var d = this._lastSelected,
                            e = a.keyCode ? a.ctrlKey : a[n],
                            g;
                        a.shiftKey || (g = e ? null : !0, d = null);
                        this.select(c, d, g);
                        d || (this._lastSelected = c)
                    },
                    _extendedSelectionHandler: function(a, c) {
                        (2 === a.button ? !this.isSelected(c) : !(a.keyCode ? a.ctrlKey : a[n])) && this.clearSelection(null, !0);
                        this._multipleSelectionHandler(a, c)
                    },
                    _toggleSelectionHandler: function(a, c) {
                        this.select(c, null, null)
                    },
                    _initSelectionEvents: function() {
                        var b = this,
                            c = this.contentNode,
                            e = this.selectionDelegate;
                        this._selectionEventQueues = {
                            deselect: [],
                            select: []
                        };
                        d("touch") && !d("pointer") && this.selectionTouchEvents ? (h(c, a.selector(e, this.selectionTouchEvents), function(a) {
                            b._handleSelect(a, this);
                            b._ignoreMouseSelect = this
                        }), h(c, h.selector(e, this.selectionEvents), function(a) {
                            b._ignoreMouseSelect !== this ? b._handleSelect(a, this) : a.type === t && (b._ignoreMouseSelect = null)
                        })) : h(c, h.selector(e, this.selectionEvents), function(a) {
                            b._handleSelect(a, this)
                        });
                        this.addKeyHandler && this.addKeyHandler(32, function(a) {
                            b._handleSelect(a, a.target)
                        });
                        if (this.allowSelectAll) this.on("keydown",
                            function(a) {
                                a[n] && (65 == a.keyCode && !/\bdgrid-input\b/.test(a.target.className)) && (a.preventDefault(), b[b.allSelected ? "clearSelection" : "selectAll"]())
                            });
                        this._setStore && m.after(this, "_setStore", function() {
                            b._updateDeselectionAspect()
                        });
                        this._updateDeselectionAspect()
                    },
                    _updateDeselectionAspect: function() {
                        function a(b, d, e) {
                            b = d || b && b[c.idProperty || "id"];
                            if (null != b && (d = (b = c.row(b)) && c.selection[b.id])) c[e](b, null, d)
                        }
                        var c = this,
                            d = this.store,
                            e, g;
                        this._removeDeselectSignals && this._removeDeselectSignals();
                        d && d.notify ? (e = m.before(d, "notify", function(c, d) {
                            c || a(c, d, "deselect")
                        }), g = m.after(d, "notify", function(c, d) {
                            a(c, d, "select")
                        }, !0), this._removeDeselectSignals = function() {
                            e.remove();
                            g.remove()
                        }) : (e = m.before(this, "removeRow", function(a, b) {
                            var c;
                            b || (c = this.row(a)) && c.id in this.selection && this.deselect(c)
                        }), this._removeDeselectSignals = function() {
                            e.remove()
                        })
                    },
                    allowSelect: function(a) {
                        return !0
                    },
                    _fireSelectionEvent: function(a) {
                        var c = this._selectionEventQueues[a],
                            d = this._selectionTriggerEvent,
                            e;
                        e = {
                            bubbles: !0,
                            grid: this
                        };
                        d && (e.parentType = d.type);
                        e[this._selectionTargetType] = c;
                        this._selectionEventQueues[a] = [];
                        h.emit(this.contentNode, "dgrid-" + a, e)
                    },
                    _fireSelectionEvents: function() {
                        var a = this._selectionEventQueues,
                            c;
                        for (c in a) a[c].length && this._fireSelectionEvent(c)
                    },
                    _select: function(a, c, d) {
                        var e, g, f;
                        "undefined" === typeof d && (d = !0);
                        a.element || (a = this.row(a));
                        if (!1 === d || this.allowSelect(a))
                            if (e = this.selection, g = !!e[a.id], null === d && (d = !g), f = a.element, !d && !this.allSelected ? delete this.selection[a.id] : e[a.id] =
                                d, f && (d ? k(f, ".dgrid-selected" + (this.addUiClasses ? ".ui-state-active" : "")) : k(f, "!dgrid-selected!ui-state-active")), d !== g && f && this._selectionEventQueues[(d ? "" : "de") + "select"].push(a), c)
                                if (c.element || (c = this.row(c)), c) {
                                    if (c = c.element) {
                                        e = this._determineSelectionDirection(f, c);
                                        e || (c = document.getElementById(c.id), e = this._determineSelectionDirection(f, c));
                                        for (; a.element != c && (a = this[e](a));) this._select(a, null, d)
                                    }
                                } else this._lastSelected = f, console.warn("The selection range has been reset because the beginning of the selection is no longer in the DOM. If you are using OnDemandList, you may wish to increase farOffRemoval to avoid this, but note that keeping more nodes in the DOM may impact performance.")
                    },
                    _determineSelectionDirection: d("dom-comparedocumentposition") ? function(a, c) {
                        var d = c.compareDocumentPosition(a);
                        return d & 1 ? !1 : 2 === d ? "down" : "up"
                    } : function(a, c) {
                        return 1 > c.sourceIndex ? !1 : c.sourceIndex > a.sourceIndex ? "down" : "up"
                    },
                    select: function(a, c, d) {
                        this._select(a, c, d);
                        this._fireSelectionEvents()
                    },
                    deselect: function(a, c) {
                        this.select(a, c, !1)
                    },
                    clearSelection: function(a, c) {
                        this.allSelected = !1;
                        for (var d in this.selection) a !== d && this._select(d, null, !1);
                        c || (this._lastSelected = null);
                        this._fireSelectionEvents()
                    },
                    selectAll: function() {
                        this.allSelected = !0;
                        this.selection = {};
                        for (var a in this._rowIdToObject) {
                            var c = this.row(this._rowIdToObject[a]);
                            this._select(c.id, null, !0)
                        }
                        this._fireSelectionEvents()
                    },
                    isSelected: function(a) {
                        if ("undefined" === typeof a || null === a) return !1;
                        a.element || (a = this.row(a));
                        return a.id in this.selection ? !!this.selection[a.id] : this.allSelected && (!a.data || this.allowSelect(a))
                    },
                    refresh: function() {
                        this.deselectOnRefresh && this.clearSelection();
                        this._lastSelected = null;
                        return this.inherited(arguments)
                    },
                    renderArray: function() {
                        var a = this,
                            c = this.inherited(arguments);
                        f.when(c, function(c) {
                            var d = a.selection,
                                e, g, f;
                            for (e = 0; e < c.length; e++) g = a.row(c[e]), (f = g.id in d ? d[g.id] : a.allSelected) && a._select(g, null, f);
                            a._fireSelectionEvents()
                        });
                        return c
                    }
                })
            })
        },
        "xstyle/main": function() {
            define("xstyle/main", ["require", "xstyle/core/parser", "xstyle/core/base", "xstyle/core/elemental", "xstyle/core/generate"], function(p, e, f, h, d) {
                function m(c) {
                    c = document.getElementsByTagName(c);
                    for (var d = 0; d < c.length; d++) a(c[d])
                }

                function q() {
                    m("link");
                    m("style")
                }

                function a(c, d, e) {
                    function f() {
                        p(["xstyle/core/load-imports"], function(b) {
                            b(c, function() {
                                a(c, d, !0)
                            })
                        })
                    }

                    function l(a) {
                        for (var b = a.cssRules, c = 0; c < b.length; c++) {
                            var e = b[c];
                            if (e.selectorText && "x-" == e.selectorText.substring(0, 2) && (h = !0, /^'/.test(e.style.content))) return k(eval(e.style.content), a, d), !0
                        }
                    }
                    var g = c.sheet || c.styleSheet;
                    if (g && (!g.processed || e)) {
                        g.processed = !0;
                        var h = g.needsParsing,
                            b = g.rules || g.cssRules;
                        if ((g.href || g.imports && g.imports.length) && !e) return f();
                        if (!h)
                            for (var m = 0; m < b.length; m++) {
                                var q =
                                    b[m];
                                if (q.href && !e) {
                                    if (!l(q.styleSheet)) return f();
                                    return
                                }
                            }
                        k(g.localSource || (g.ownerNode || g.owningElement).innerHTML, g, d)
                    }
                }

                function k(a, d, k) {
                    d.addRule || (d.addRule = function(a, c, d) {
                        return this.insertRule(a + "{" + c + "}", 0 <= d ? d : this.cssRules.length)
                    });
                    d.deleteRule || (d.deleteRule = d.removeRule);
                    var h = 1;
                    (d.href || location.href).replace(/[^\/]+$/, "");
                    f.css = a;
                    e(f, a, d);
                    0 == --h && k && k(d);
                    return f
                }
                h.ready(q);
                e.getStyleSheet = function(a, d) {
                    return a.styleSheet || a
                };
                return {
                    process: a,
                    processAll: q,
                    parse: k,
                    generate: d,
                    update: h.update,
                    load: function(c, d, e, f) {
                        d(["xstyle/css"], function(l) {
                            l.load(c, d, function(c) {
                                c ? a({
                                    sheet: c
                                }, e) : (q(), e())
                            }, f)
                        })
                    }
                }
            })
        },
        "xstyle/core/parser": function() {
            define("xstyle/core/parser", [], function() {
                function p() {
                    this.push.apply(this, arguments)
                }

                function e(a) {
                    this.value = a
                }

                function f() {
                    var a, c = this.args[0];
                    if ("string" == typeof c) a = c.split(/\s*,\s*/);
                    else if (c) {
                        a = [];
                        for (var d = 0, e = 0; e < c.length + 1; e++) {
                            var f = c[e];
                            if ("string" == typeof f || void 0 === f)
                                if (f = f && f.split(/\s*,\s*/), 1 < a.length || void 0 === f) {
                                    var b = c.slice(d, e);
                                    0 < d && b.unshift(a.pop());
                                    d = e + 1;
                                    a.push(b);
                                    f && a.push.apply(a, f.slice(1))
                                }
                        }
                    } else return [];
                    return a
                }

                function h(n, r, l) {
                    function g(l, r) {
                        function A(a) {
                            E = !1;
                            var c = b.lastIndex;
                            a.then(function() {
                                E = !0;
                                d && (b.lastIndex = c, x())
                            });
                            var d = !0
                        }

                        function x() {
                            function n(a) {
                                a && ("string" == typeof a && P) && (a = P + a);
                                F ? F.push ? "string" == typeof F[F.length - 1] && "string" == typeof a ? F[F.length - 1] += a : a && F.push(a) : "string" == typeof F && "string" == typeof a ? F += a : F = new p(F, a) : F = a
                            }
                            for (E = !0; E;) {
                                var q = b.exec(l);
                                if (!q) break;
                                var x = q[5],
                                    P = q[1],
                                    J = q[2],
                                    H = q[3],
                                    O = q[4],
                                    L, M, F, Q, O = O && c(O),
                                    J = J && c(J);
                                I ? (H ? (M = J, L = H.charAt(0), Q = "?" == H.charAt(1), -1 < H.indexOf("\n") && (O = H.slice(1))) : O = J, F = O, I = !1) : (O = H ? J + H : J, n(O));
                                "{" != x && (G += q[0]);
                                switch (x) {
                                    case "'":
                                    case '"':
                                        var U = "'" == x ? d : m;
                                        U.lastIndex = b.lastIndex;
                                        (x = U.exec(l)) || C("unterminated string");
                                        J = x[1].replace(/\\([a-fA-F\d]{0,5}[ a-fA-F\d]?)/g, function(a, b) {
                                            if (b) return String.fromCharCode(parseInt(b, 16))
                                        });
                                        b.lastIndex = U.lastIndex;
                                        n(new e(J));
                                        G += x[0];
                                        continue;
                                    case "\\":
                                        x = U.lastIndex++;
                                        n(l.charAt(x));
                                        continue;
                                    case "(":
                                    case "{":
                                    case "[":
                                        if ("{" ==
                                            x) {
                                            I = !0;
                                            ":" == L && H && (J += H);
                                            G = c((G + J).replace(/\s+/g, " "));
                                            n(H = u.newRule(G));
                                            "\x3d" == L && (B = !1, F.creating = !0);
                                            var y = null,
                                                aa = D;
                                            if (q[6] && (O = r.cssRules || r.rules, H.cssRule = y = O[q[6].slice(1)])) G = y.selectorText;
                                            if (u.root && B)
                                                for (O = r.cssRules || r.rules; y = O[D++];)
                                                    if (y.selectorText == G || y.selectorText && y.selectorText.replace(/::/g, ":").replace(/'/g, '"') == G.replace(/::/g, ":").replace(/'/g, '"')) {
                                                        H.cssRule = y;
                                                        break
                                                    }
                                            y || (H.ruleIndex = D = aa);
                                            H.styleSheet = r;
                                            F.creating ? (H.selector = "." + ("\x3d" == L ? J.match(/[\w-]*$/g, "")[0] :
                                                "") + "-x-" + k++, H.creating = !0) : /^@(?!font-face)(?!FONT-FACE)/.test(G) ? H.setMediaSelector(G) : H.selector = u.root ? G : u.selector + " " + G;
                                            G = ""
                                        } else J = O.match(/(.*?)([\w-]*)$/), n(H = u.newCall(J[2], F, u)), H.ref = u.getDefinition(J[2]), H.getArgs = f, (F.calls || (F.calls = [])).push(H);
                                        u.currentName = M;
                                        u.currentSequence = F;
                                        u.assignmentOperator = L;
                                        var W;
                                        if ("{" == x && (W = H.selector.match(/[@:]\w+/))) W = W[0], (M = u.getDefinition(W)) && M.selector && M.selector(H);
                                        s.push(u = H);
                                        u.operator = x;
                                        u.start = b.lastIndex;
                                        F = M = null;
                                        continue
                                }
                                if (F)
                                    if (J = "string" ==
                                        typeof F ? F : F[0], J.charAt && "@" == J.charAt(0))
                                        if (q = J.match(/\w+/)[0], "import" == q) J = h.getStyleSheet((r.cssRules || r.imports)[D++], F, r), q = b.lastIndex, g(J.localSource, J), b.lastIndex = q;
                                        else {
                                            if ("xstyle" == q) {
                                                if ("start" == J.slice(8, 13)) H = u ? u.newRule("") : Y, H.root = u.root, s.push(u = H);
                                                else {
                                                    var Y = u || Y;
                                                    s.pop();
                                                    u = s[s.length - 1]
                                                }
                                                b = u ? t : /(@[\w\s])/g
                                            }
                                        }
                                else if ("\x3d" === L) try {
                                    var T = u.declareDefinition(M, F, Q);
                                    T && T.then && A(T)
                                } catch (ba) {
                                    C(ba)
                                }
                                switch (x) {
                                    case ":":
                                        "\x3d" == L ? (I = !0, L = ":") : n(":");
                                        break;
                                    case "}":
                                        if (M && !u.root && !u.isMediaBlock) try {
                                            u[":" ==
                                                L ? "setValue" : "declareDefinition"](M, F, Q)
                                        } catch (ca) {
                                            C(ca)
                                        }
                                    case ")":
                                    case "]":
                                        a[u.operator] != x && C("Incorrect opening operator " + u.operator + " with closing operator " + x);
                                        M = null;
                                        M = l.slice(u.start, b.lastIndex - 1);
                                        u.cssText = u.cssText ? u.cssText + ";" + M : M;
                                        if ("}" == x) {
                                            "}" == V && (V = u.parent.selector) && "@" == !V.charAt(0) && C("A nested rule must end with a semicolon");
                                            if (u.root) C("Unmatched " + x);
                                            else {
                                                try {
                                                    u.onRule(u.selector, u)
                                                } catch (da) {
                                                    C(da)
                                                }
                                                B = !0
                                            }
                                            G = ""
                                        }
                                        if (")" == x || "]" == x) u.args = [F];
                                        if (")" == x && !L) {
                                            try {
                                                T = s[s.length - 2].onArguments(u)
                                            } catch (ea) {
                                                C(ea)
                                            }
                                            T &&
                                                T.then && A(T)
                                        }
                                        s.pop();
                                        u = s[s.length - 1];
                                        F = u.currentSequence;
                                        M = u.currentName;
                                        L = u.assignmentOperator;
                                        if (u.root && "}" == x) {
                                            if (L) try {
                                                u[":" == L ? "setValue" : "declareDefinition"](M, F, Q)
                                            } catch (fa) {
                                                C(fa)
                                            }
                                            I = !0;
                                            L = !1
                                        }
                                        break;
                                    case "":
                                    case void 0:
                                        return;
                                    case ";":
                                        if (u && M) {
                                            try {
                                                (T = u[":" == L ? "setValue" : "declareDefinition"](M, F, Q)) && T.then && A(T)
                                            } catch ($) {
                                                C($)
                                            }
                                            M
                                        }
                                        F = null;
                                        I = !0;
                                        L = B = !1;
                                        G = ""
                                }
                                var V = x
                            }
                        }

                        function C(a) {
                            var c = l.slice(0, b.lastIndex).split("\n"),
                                d = c[c.length - 1],
                                c = (r.href || "in-page stylesheet") + ":" + c.length + ":" + d.length + " near:\n" +
                                d.slice(-40);
                            if (g.onerror) g.onerror(a, c);
                            console.error(a.message || a, c);
                            a.stack && console.error(a.stack)
                        }
                        l = l.replace(q, function(a) {
                            return a.replace(/[^\n]/g, "")
                        });
                        var u = n;
                        b.lastIndex = 0;
                        var E, D = 0,
                            B = !0,
                            G = "",
                            I = !0;
                        x()
                    }
                    l = l || {
                        addRule: function() {},
                        cssRules: []
                    };
                    var t, b = t = /(\s*)((?:[^{\}\[\]\(\)\\'":=;]|\[(?:[^\]'"]|'(?:\\.|[^'])*'|"(?:\\.|[^"])*")\])*)([=:]\??\s*([^{\}\[\]\(\)\\'":;]*))?(?:([{\}\[\]\(\)\\'":;])(\/\d+)?|$)/g,
                        s = [n];
                    n.parse = g;
                    g(r, l)
                }
                var d = /((?:\\.|[^'])*)'/g,
                    m = /((?:\\.|[^"])*)"/g,
                    q = /\/\*[\w\W]*?\*\//g,
                    a = {
                        "{": "}",
                        "[": "]",
                        "(": ")"
                    },
                    k = 0,
                    c = "".trim ? function(a) {
                        return a.trim()
                    } : function(a) {
                        return a.replace(/^\s+|\s+$/g, "")
                    },
                    s = p.prototype = [];
                s.toString = function() {
                    return this.join("")
                };
                s.isSequence = !0;
                e.prototype.toString = function() {
                    return '"' + this.value.replace(/["\\\n\r]/g, "\\$\x26") + '"'
                };
                e.prototype.isLiteralString = !0;
                return h
            })
        },
        "xstyle/core/base": function() {
            define("xstyle/core/base", "xstyle/core/elemental xstyle/core/expression xstyle/core/Definition xstyle/core/utils put-selector/put xstyle/core/Rule xstyle/core/es6".split(" "),
                function(p, e, f, h, d, m, q) {
                    function a(c, d, e) {
                        function g(a) {
                            return {
                                selectElement: function(d) {
                                    e.newElement && (d = d.parentNode);
                                    if (a && a.selector)
                                        for (; !b(d, a);)
                                            if (d = d.parentNode, !d) throw Error("Rule not found");
                                    if (e.inherit)
                                        for (; !(c in d);)
                                            if (d = d.parentNode, !d) throw Error(c ? c + " not found" : "Property was never defined");
                                    return d
                                },
                                forElement: function(b) {
                                    var d = b;
                                    b = this.selectElement(b);
                                    e.newElement && (b["_" + c + "Node"] = d);
                                    b = e.get ? e.get(b, c) : b[c];
                                    return void 0 === b && a ? n(c).valueOf().forRule(a) : b
                                },
                                forRule: e.inherit &&
                                    function(a) {
                                        return g(a)
                                    }
                            }
                        }
                        var l = new f(function() {
                            return g(d)
                        });
                        l.define = function(b, d) {
                            return a(c || d, b, e)
                        };
                        l.keepCSSValue = !0;
                        l.put = e.inherit ? function(a, b) {
                            return n(c).put(a, b, c)
                        } : function(a) {
                            return {
                                forElement: function(g) {
                                    if (d && d.selector)
                                        for (; !b(g, d);)
                                            if (g = g.parentNode, !g) throw Error("Rule not found");
                                    e.set ? e.set(g, c, a) : g[c] = a;
                                    l.invalidate({
                                        elements: [g]
                                    })
                                }
                            }
                        };
                        return l
                    }

                    function k(a, b, c, d) {
                        return h.when(e.evaluate(a, c), function(b) {
                            b.forElement ? p.addRenderer(a, function(a) {
                                d(b.forElement(a), a)
                            }) : d(b)
                        })
                    }

                    function c(a, b) {
                        return {
                            apply: function(c, d, e) {
                                k(c, e, d[0], function(d, g) {
                                    d.observe(function(d) {
                                        d = d ? a : b;
                                        value.toString().replace(RegExp(a + "\\([^)]+\\)", "g"), d);
                                        g ? g.style[e] = d : c.setStyle(e, d)
                                    })
                                })
                            }
                        }
                    }

                    function s(a, b) {
                        var c = a.variables;
                        if (c && b in c) return c[b];
                        if (c = a.bases)
                            for (var d = 0; d < c.length; d++) {
                                var e = s(c[d], b);
                                if (void 0 !== e) return e
                            }
                    }

                    function n(a) {
                        var b = v[a];
                        b || (b = v[a] = new f(function() {
                                return {
                                    forRule: function(b) {
                                        a: {
                                            do {
                                                var c = s(b, a);
                                                if (void 0 !== c) {
                                                    b = c;
                                                    break a
                                                }
                                                b = b.parent
                                            } while (b);b = void 0
                                        }
                                        return b
                                    }
                                }
                            }),
                            b.put = function(a, c, d) {
                                return {
                                    forRule: function(c) {
                                        function e(a) {
                                            g.push(a);
                                            for (var b in a.rules) e(a.rules[b])
                                        }(c.variables || (c.variables = {}))[d] = a;
                                        for (var g = []; c;) e(c), c = c.parent;
                                        b.invalidate({
                                            rules: g
                                        })
                                    }
                                }
                            });
                        return b
                    }
                    var r = d("div"),
                        l = navigator.userAgent,
                        g = -1 < l.indexOf("WebKit") ? "-webkit-" : -1 < l.indexOf("Firefox") ? "-moz-" : -1 < l.indexOf("MSIE") ? "-ms-" : -1 < l.indexOf("Opera") ? "-o-" : "",
                        t;
                    m = new m;
                    var b = p.matchesRule;
                    m.root = !0;
                    var v = {};
                    m.definitions = {
                        Math: Math,
                        window: window,
                        global: window,
                        module: e.selfResolving(function(a,
                            b) {
                            a[0].value && (a = a[0].value);
                            b || require([a]);
                            return {
                                then: function(b) {
                                    return (new q.Promise(function(b) {
                                        require([a], function(a) {
                                            b(a)
                                        })
                                    })).then(b)
                                }
                            }
                        }),
                        item: a("item", null, {
                            inherit: !0
                        }),
                        pageContent: new f,
                        content: a("content", null, {
                            inherit: !0,
                            newElement: function() {
                                return this.element
                            }
                        }),
                        elementProperty: a(null, null, {}),
                        elementClass: a(null, null, {
                            get: function(a, b) {
                                return -1 < (" " + a.className + " ").indexOf(" " + b + " ")
                            },
                            set: function(a, b, c) {
                                this.get(a, b) != c && (a.className = c ? a.className + (" " + b) : (" " + a.className + " ").replace(" " +
                                    b + " ", "").replace(/^ +| +$/g, ""))
                            }
                        }),
                        element: {
                            forElement: function(a) {
                                return a
                            },
                            define: function(a) {
                                return {
                                    forElement: function(c) {
                                        for (; !b(c, a);)
                                            if (c = c.parentNode, !c) throw Error("Rule not found");
                                        return c
                                    }
                                }
                            }
                        },
                        event: {
                            observe: function(a) {
                                a(t)
                            },
                            valueOf: function() {
                                return t
                            }
                        },
                        each: {
                            put: function(a) {
                                return {
                                    forRule: function(b) {
                                        b.each = a
                                    }
                                }
                            }
                        },
                        prefix: {
                            put: function(a, b, c) {
                                return {
                                    forRule: function(b) {
                                        if ("string" == typeof r.style[g + c]) return b._setStyleFromValue(g + c, a), !0
                                    }
                                }
                            }
                        },
                        "var": {
                            define: function(a, b) {
                                return n(b)
                            },
                            selfResolving: !0,
                            apply: function(a, b) {
                                return n(h.convertCssNameToJs(b[0]))
                            }
                        },
                        inline: c("inline", "none"),
                        block: c("block", "none"),
                        visible: c("visible", "hidden"),
                        "extends": {
                            apply: function(a, b) {
                                for (; 0 < b.length;) return h.extend(a, b[0], console.error)
                            }
                        },
                        set: {
                            selfExecuting: !0,
                            apply: function(a, b) {
                                return b[0].put(b[1].valueOf())
                            }
                        },
                        get: {
                            apply: function(a, b) {
                                return b[0]
                            },
                            put: function(a, b) {
                                e.evaluate(b, a)
                            }
                        },
                        toggle: {
                            selfExecuting: !0,
                            apply: function(a, b) {
                                return b[0].put(!b[0].valueOf())
                            }
                        },
                        on: {
                            put: function(a, b, c) {
                                return {
                                    forRule: function(b) {
                                        p.on(document,
                                            c.charAt(2).toLowerCase() + c.slice(3), b,
                                            function(d) {
                                                t = d;
                                                try {
                                                    h.when(e.evaluate(b, a).valueOf(), function(a) {
                                                        a && a.forRule && (a = a.forRule(b));
                                                        a && a.forElement && a.forElement(d.target);
                                                        t = null
                                                    }, function(b) {
                                                        console.error("Error in " + c + " event handler, executing " + a, b)
                                                    })
                                                } catch (g) {
                                                    console.error("Error in " + c + " event handler, executing " + a, g)
                                                }
                                            })
                                    }
                                }
                            }
                        },
                        title: {
                            put: function(a) {
                                return {
                                    forRule: function(b) {
                                        e.observe(e.evaluate(b, a), function(a) {
                                            document.title = a
                                        })
                                    }
                                }
                            }
                        },
                        "@supports": {
                            selector: function(a) {
                                function b(a) {
                                    var c;
                                    if (c = a.match(/^\s*not(.*)/)) return !b(c[1]);
                                    if (c = a.match(/\((.*)\)/)) return b(c[1]);
                                    if (c = a.match(/([^:]*):(.*)/)) return a = h.convertCssNameToJs(c[1]), c = r.style[a] = c[2], r.style[a] == c;
                                    if (c = a.match(/\w+\[(.*)=(.*)\]/)) return d(c[0])[c[1]] == c[2];
                                    if (c = a.match(/\w+/)) return h.isTagSupported(c);
                                    throw Error("can't parse @supports string");
                                }
                                b(a.selector.slice(10)) ? a.selector = "" : a.disabled = !0
                            }
                        },
                        "true": !0,
                        "false": !1,
                        "null": null
                    };
                    m.elementProperty = a;
                    return m
                })
        },
        "xstyle/core/elemental": function() {
            define("xstyle/core/elemental", ["put-selector/put", "xstyle/core/utils"], function(p, e) {
                function f(a, b, c, d) {
                    function e(a) {
                        if (!c) return d(a);
                        var b = a.target;
                        do
                            if (x(b, c)) return d(a); while ((b = b.parentNode) && 1 === b.nodeType)
                    }
                    n ? a.addEventListener(b, e, !!r[b]) : h(a, r[b] || b, e)
                }

                function h(a, b, c) {
                    b = "on" + b;
                    var d = a[b];
                    a[b] = function(a) {
                        a = a || window.event;
                        a.target = a.target || a.srcElement;
                        d && d(a);
                        c(a)
                    }
                }

                function d(a) {
                    /e/.test(c.readyState || "") ? a() : c.addEventListener("DOMContentLoaded", a)
                }

                function m(a) {
                    for (var b = c.querySelectorAll(a.selector), d = a.name,
                            e = 0, g = b.length; e < g; e++) {
                        var f = b[e],
                            l = f.elementalStyle;
                        l || (l = f.elementalStyle = {}, f.elementalSpecificities = {});
                        var k = f.renderings;
                        k || (k = f.renderings = [], w.push(f));
                        k.push({
                            name: d,
                            rendered: l[d] == a.propertyValue,
                            renderer: a
                        });
                        l[d] = a.propertyValue
                    }
                }

                function q() {
                    for (; w.length;) {
                        for (var a = w.shift(), b = a.renderings, c = a.elementalStyle; b.length;) {
                            var d = b.shift(),
                                e = d.renderer,
                                g = e.rendered;
                            A = c[d.name] == e.propertyValue;
                            if (!g && A) try {
                                e.render(a)
                            } catch (f) {
                                console.error(f, f.stack), p(a, "div.error", f.toString())
                            }
                            g && (!A &&
                                e.unrender) && e.unrender(a)
                        }
                        a.renderings = void 0
                    }
                }

                function a(a, c) {
                    for (var d = 0, e = b.length; d < e; d++) {
                        var g = b[d];
                        (!c || c == g.selector) && x(a, g.rule) && g.render(a)
                    }
                }

                function k(a, c) {
                    var d = {
                        selector: a.selector,
                        rule: a,
                        render: c
                    };
                    b.push(d);
                    z && m(d);
                    q();
                    return {
                        remove: function() {
                            b.splice(b.indexOf(d), 1)
                        }
                    }
                }
                var c = document,
                    s = 1,
                    n = !!c.addEventListener,
                    r = {
                        blur: "focusout",
                        focus: "focusin"
                    };
                f(c, "change", null, function(a) {
                    a = a.target;
                    for (var b = 0, c = v.length; b < c; b++) {
                        var d = v[b];
                        if (-1 < (" " + a.className + " ").indexOf(d.rule.selector.slice(1))) {
                            var e =
                                d.definition.valueOf();
                            e && e.forRule && (e = e.forRule(d.rule));
                            e && e.forElement && (e = e.forElement(a));
                            var g = "checkbox" === a.type ? a.checked : a.value;
                            "number" === typeof e && isFinite(g) && (g = +g);
                            (e = d.definition.put(g)) && e.forRule && (e = e.forRule(d.rule));
                            e && e.forElement && e.forElement(a)
                        }
                    }
                });
                navigator.userAgent.match(/MSIE|Trident/) && f(c, "keydown", null, function(a) {
                    if (13 == a.keyCode) {
                        var b = a.target;
                        if (document.createEvent) a = document.createEvent("Events"), a.initEvent("change", !0, !0), b.dispatchEvent(a);
                        else document.onchange({
                            target: b
                        })
                    }
                });
                var l = c.createElement("div"),
                    g = {
                        "dom-qsa2.1": !!l.querySelectorAll
                    },
                    t = l.matches || l.matchesSelector || l.webkitMatchesSelector || l.mozMatchesSelector || l.msMatchesSelector || l.oMatchesSelector,
                    b = [],
                    v = [],
                    w = [],
                    z;
                d(function() {
                    if (!z)
                        if (z = !0, g["dom-qsa2.1"]) {
                            for (var d = 0, e = b.length; d < e; d++) m(b[d]);
                            q()
                        } else
                            for (var f = c.all, d = 0, e = f.length; d < e; d++) a(f[d])
                });
                var A, x = t ? function(a, b) {
                    return t.call(a, b.selector)
                } : function(a, b) {
                    b.ieId || b.setStyle(b.ieId = "x-ie-" + s++, "true");
                    return !!a.currentStyle[b.ieId]
                };
                return {
                    ready: d,
                    on: f,
                    matchesRule: x,
                    addRenderer: k,
                    addInputConnector: function(a, b) {
                        v.push({
                            rule: a,
                            definition: b
                        })
                    },
                    update: a,
                    clearRenderers: function() {
                        b = []
                    },
                    observeForElement: function(a, b, c) {
                        return e.when(a, function(a) {
                            function d(a) {
                                a.observe ? a.observe(c) : c(a)
                            }
                            a.forElement ? k(b, function(b) {
                                d(a.forElement(b))
                            }) : d(a)
                        })
                    }
                }
            })
        },
        "xstyle/core/utils": function() {
            define("xstyle/core/utils", [], function() {
                function p(d, e) {
                    for (var f = 0, a = d.length; f < a; f++) {
                        var k = d[f];
                        if (k && "object" == typeof k && e in k) return !0
                    }
                }

                function e(d, e) {
                    return e.toUpperCase()
                }
                var f = "div" == document.createElement("div").tagName,
                    h = {};
                return {
                    when: function(d, e, f) {
                        return d && d.then ? d.then(e, f) || d : e(d)
                    },
                    whenAll: function(d, e) {
                        return p(d, "then") ? {
                            then: function(f, a) {
                                function k() {
                                    c--;
                                    c || f(e(h))
                                }
                                for (var c = 1, h = [], n = 0; n < d.length; n++) {
                                    var p = d[n];
                                    c++;
                                    p && p.then ? function(c) {
                                        p.then(function(a) {
                                            h[c] = a;
                                            k()
                                        }, a)
                                    }(n) : (h[n] = p, k())
                                }
                                k()
                            },
                            inputs: d
                        } : e(d)
                    },
                    convertCssNameToJs: function(d) {
                        return d.replace(/-(\w)/g, e)
                    },
                    isTagSupported: function(d) {
                        if (d in h) return h[d];
                        var e = document.createElement(d);
                        f ?
                            (e = e.toString(), e = !("[object HTMLUnknownElement]" == e || "[object]" == e)) : e = e.tagName == d.toUpperCase();
                        return h[d] = e
                    },
                    extend: function(d, e) {
                        var f = e.split(".");
                        e = f[0];
                        var a = d.getDefinition(e, "rules");
                        f[0] = "";
                        d.selector += d.extraSelector = f.join(".");
                        if (a) return this.when(a, function(a) {
                            if (a.extend) a.extend(d, !0);
                            else
                                for (var c in a) d[c] = a[c]
                        });
                        d.tagName = e;
                        if (!this.isTagSupported(e)) throw Error("Extending undefined definition " + e);
                    },
                    someHasProperty: p
                }
            })
        },
        "xstyle/core/expression": function() {
            define("xstyle/core/expression", ["xstyle/core/utils", "xstyle/core/Definition"], function(p, e) {
                function f(a, c) {
                    var d = c[0];
                    return d && a ? (d = k(d), f(a.property ? a.property(d) : a[d], c.slice(1))) : a
                }

                function h(a, d, e) {
                    if (c(d, a)) {
                        var b = {};
                        b[a] = function(b) {
                            for (var c = [], f = 0, k = d.length; f < k; f++) {
                                var h = d[f];
                                h && "function" == typeof h[a] && (h = h[a](b));
                                c[f] = h
                            }
                            return e(c)
                        };
                        return b
                    }
                    return e(d)
                }

                function d(a, c) {
                    return {
                        apply: function(d, b, e) {
                            for (var f = 0, k = b.length; f < k; f++) {
                                var n = b[f];
                                n.dependencyOf && n.dependencyOf(e)
                            }
                            f = function() {
                                var c = [];
                                if (a.selfExecuting) return a.apply(d,
                                    b, e);
                                for (var g = 0, f = b.length; g < f; g++) c[g] = b[g].valueOf();
                                if (a.selfWaiting) return a.apply(d, c, e);
                                c.push(d);
                                return p.whenAll(c, function(b) {
                                    var c = b.pop();
                                    return h("forRule", b, function(b) {
                                        return h("forElement", b, function(b) {
                                            return a.apply(c, b, e)
                                        })
                                    })
                                })
                            };
                            f.reverse = function(a) {
                                return c(a, b)
                            };
                            return f
                        }
                    }
                }

                function m(a) {
                    return n[a] || (n[a] = new Function("a", "b", "return " + a))
                }

                function q(a, c, e, b, f) {
                    function k(a) {
                        a.skipResolve = !0;
                        a.precedence = c;
                        a.infix = !1 !== f
                    }
                    var h = function(a, c) {
                            var d = c[0],
                                e = c[1];
                            if (d && d.put) e = b(a,
                                e && e.valueOf()), e !== s && d.put(e);
                            else if (e && e.put) e.put(f(a, d && d.valueOf()));
                            else throw new TypeError("Can not put");
                        },
                        n = {
                            apply: function(c, g, n) {
                                var p;
                                e = m(e);
                                b = b && m(b);
                                f = f && m(f);
                                r[a] = p = d(e, h);
                                k(p);
                                return p.apply(c, g, n)
                            }
                        };
                    k(n);
                    r[a] = n
                }

                function a(c, g) {
                    function k(a) {
                        for (; m <= a.precedence;) {
                            var b = q.pop(),
                                c = r[q.pop()],
                                d = new e;
                            d.setCompute(c.apply(null, c.infix ? [q.pop(), b] : [b], d));
                            s = q.length ? q[q.length - 1] : void 0;
                            q.push(d);
                            m = s && r[s] && r[s].precedence
                        }
                    }
                    var b, h;
                    g = g.join ? g.slice() : [g];
                    for (b = 0; b < g.length; b++)
                        if (h =
                            g[b], "string" == typeof h) {
                            var n = h.match(/"[^\"]*"|[+\-<>\|\/\?\:^*!&|]+|[\w_$\.\/-]+/g);
                            h = [b, 1];
                            n && h.push.apply(h, n);
                            g.splice.apply(g, h);
                            b += h.length - 3
                        }
                    var m, q = [],
                        s, n = {};
                    for (b = 0; b < g.length; b++) {
                        h = g[b];
                        if ("(" == h.operator) {
                            var C = q[q.length - 1];
                            void 0 === C || r.hasOwnProperty(C) ? h = a(c, h.getArgs()[0]) : (q.pop(), h = function(b, g) {
                                function f(e) {
                                    return p.when(b.valueOf(), function(f) {
                                        var m = b.parent && b.parent.valueOf();
                                        if (!f.selfResolving) {
                                            if (!k) {
                                                k = [];
                                                for (var p = 0, q = g.length; p < q; p++) k[p] = a(c, g[p]);
                                                h = f.selfReacting ?
                                                    f.apply(m, k, n) : d(f).apply(m, k, n)
                                            }
                                            return h()
                                        }
                                        f = f.apply(m, g, n);
                                        return e ? f : f.valueOf()
                                    })
                                }
                                var k, h, n = new e(f);
                                n.setReverseCompute(function() {
                                    var a = arguments;
                                    return p.when(f(!0), function(b) {
                                        return b.put.apply(b, a)
                                    })
                                });
                                return n
                            }(C, h.getArgs()))
                        } else if (r.hasOwnProperty(h)) C = r[h], k(C), m = (s || C).precedence;
                        else if (-1 < h) h = +h;
                        else if (h.isLiteralString) h = h.value;
                        else {
                            h = h.split(/\s*\/\s*/);
                            var C = h[0],
                                u = c.getDefinition(C);
                            if ("string" == typeof u || u instanceof Array) u = a(c, u);
                            else if (void 0 === u) throw Error('Could not find reference "' +
                                C + '"');
                            n[C] = u;
                            1 < h.length && (u = f(u, h.slice(1)));
                            h = u
                        }
                        q.push(h)
                    }
                    k({
                        precedence: 100
                    });
                    if (1 < q.length) throw Error("Could not reduce expression");
                    h = q[0];
                    h.inputs = n;
                    return h
                }
                var k = p.convertCssNameToJs,
                    c = p.someHasProperty,
                    s = {},
                    n = {},
                    r = {};
                q("+", 6, "a+b", "a-b", "a-b");
                q("-", 6, "a-b", "a+b", "b-a");
                q("*", 5, "a*b", "a/b", "a/b");
                q("/", 5, "a/b", "a*b", "b/a");
                q("?", 16, "b[a?0:1]", "a\x3d\x3d\x3db[0]||(a\x3d\x3d\x3db[1]?false:deny)", "[a,b]");
                q(":", 15, "[a,b]", "a[0]?a[1]:deny", "a[1]");
                q("!", 4, "!a", "!a", !1);
                q("%", 5, "a%b");
                q("\x3e",
                    8, "a\x3eb");
                q("\x3e\x3d", 8, "a\x3e\x3db");
                q("\x3c", 8, "a\x3cb");
                q("\x3c\x3d", 8, "a\x3c\x3db");
                q("\x3d\x3d", 9, "a\x3d\x3d\x3db");
                q("\x26", 8, "a\x26\x26b");
                q("|", 8, "a||b");
                return {
                    react: d,
                    evaluate: a,
                    selfResolving: function(a) {
                        a.selfResolving = !0;
                        return a
                    }
                }
            })
        },
        "xstyle/core/Definition": function() {
            define(["xstyle/core/utils", "xstyle/core/es6"], function(p, e) {
                function f(a) {
                    (this.computeValue = a) && a.reverse && this.setReverseCompute(a.reverse)
                }

                function h(a, f, c) {
                    if (f && f.forElement) return {
                        forElement: function(h) {
                            h = f.selectElement ?
                                f.selectElement(h) : h;
                            var n = ["_cache_" + a.id];
                            if (n in h) {
                                var m = h[n + "observe"];
                                m.addKey && m.addKey(c);
                                return h[n][c]
                            }
                            var l = h[n] = f.forElement(h),
                                g = h[n + "observe"] = d(a, l, c, {
                                    elements: [h]
                                });
                            h.xcleanup = function(a) {
                                a && e.unobserve(l, g)
                            };
                            return l[c]
                        }
                    }
                }

                function d(a, d, c, f) {
                    var h = a._properties,
                        m;
                    "object" == typeof d && (m = function(a) {
                        for (var c = 0; c < a.length; c++) {
                            var d = h[a[c].name];
                            d && d.invalidate && d.invalidate(f)
                        }
                    }, e.observe(d, m), m.addKey && m.addKey(c));
                    return m
                }
                var m = {},
                    q = 1;
                f.prototype = {
                    id: "x-variable-" + q++,
                    cache: m,
                    valueOf: function() {
                        if ((this.dependents ||
                                this._properties) && this.cache !== m) return this.cache;
                        var a = this,
                            d = this.computeValue;
                        if (d.then) return this.cache = d.then(function(c) {
                            a.computeValue = c;
                            (c = a.cache = c()) && c.then && c.then(function(c) {
                                a.cache = c
                            });
                            return c
                        });
                        (d = a.cache = d()) && d.then && d.then(function(c) {
                            a.cache = c
                        });
                        return d
                    },
                    property: function(a) {
                        var e = this._properties || (this._properties = {}),
                            c = e[a];
                        if (!c) {
                            var m = this,
                                c = e[a] = new f(function() {
                                    return p.when(m.valueOf(), function(c) {
                                        if (c && c.forRule) return {
                                            forRule: function(e) {
                                                e = c.selectRule ? c.selectRule(e) :
                                                    e;
                                                var g = ["_cache_" + m.id],
                                                    f;
                                                if ((f = g in e ? e[g] : e[g] = c.forRule(e)) && f.forElement) return h(m, f, a);
                                                var b = e[g + "observe"];
                                                b && (b.addKey ? b.addKey(a) : e[g + "observe"] = d(m, f, a, {
                                                    rules: [e]
                                                }));
                                                return f[a]
                                            }
                                        };
                                        if (c && c.forElement) return h(m, c, a);
                                        var e = m.cacheObserve;
                                        e ? e.addKey && e.addKey(a) : e = m.cacheObserve = d(m, c, a);
                                        return c[a]
                                    })
                                });
                            c.key = a;
                            c.parent = this;
                            c.put = function(c) {
                                return p.when(m.valueOf(), function(d) {
                                    function e(d) {
                                        if (d.forElement) return {
                                            forElement: function(e) {
                                                d.forElement(e)[a] = c
                                            }
                                        };
                                        d[a] = c
                                    }
                                    if (d.forRule) return {
                                        forRule: function(a) {
                                            return e(d.forRule(a))
                                        }
                                    };
                                    e(d)
                                })
                            };
                            c.id = this.id + "-" + a
                        }
                        return c
                    },
                    invalidate: function(a) {
                        var d = this.cacheObserve;
                        d && (e.unobserve(this.cache, d), this.cacheObserve = null);
                        this.cache = m;
                        var c, d = this._properties;
                        for (c in d) d[c].invalidate(a);
                        var f = this.dependents || 0;
                        c = 0;
                        for (d = f.length; c < d; c++) try {
                            f[c].invalidate(a)
                        } catch (h) {
                            console.error(h, "invalidating a definition")
                        }
                    },
                    dependencyOf: function(a) {
                        (this.dependents || (this.dependents = [])).push(a)
                    },
                    notDependencyOf: function(a) {
                        for (var d = this.dependents || 0, c = 0; c < d.length; c++) d[c] === a && d.splice(c--,
                            1)
                    },
                    setReverseCompute: function(a) {
                        this.put = function() {
                            var d = a.apply(this, arguments);
                            this.invalidate();
                            return d
                        }
                    },
                    setCompute: function(a) {
                        (this.computeValue = a) && a.reverse && this.setReverseCompute(a.reverse);
                        this.invalidate()
                    },
                    setSource: function(a) {
                        this.computeValue = function() {
                            return a
                        };
                        this.invalidate()
                    },
                    observe: function(a) {
                        this.computeValue && a(this.valueOf());
                        var d = this;
                        return this.dependencyOf({
                            invalidate: function() {
                                a(d.valueOf())
                            }
                        })
                    },
                    newElement: function() {
                        return p.when(this.valueOf(), function(a) {
                            return a &&
                                a.newElement && a.newElement()
                        })
                    }
                };
                return f
            })
        },
        "xstyle/core/es6": function() {
            define("xstyle/core/es6", [], function() {
                function p(a, c, d) {
                    q ? -1 === q.indexOf(a) && q.push(a) : (q = [a], setTimeout(function() {
                        q.forEach(function(a) {
                            var c = [];
                            a.properties.forEach(function(d) {
                                c.push({
                                    target: a.object,
                                    name: d
                                })
                            });
                            a(c);
                            a.object = null;
                            a.properties = null
                        });
                        q = null
                    }, 0));
                    a.object = c;
                    a = a.properties || (a.properties = []); - 1 === a.indexOf(d) && a.push(d)
                }

                function e() {
                    return e
                }
                var f = Object.observe,
                    h;
                if (h = Object.defineProperty) a: {
                    try {
                        Object.defineProperty({},
                            "t", {});
                        h = !0;
                        break a
                    } catch (d) {}
                    h = void 0
                }
                var m = {
                        observe: f,
                        defineProperty: h,
                        promise: "undefined" !== typeof Promise,
                        WeakMap: "function" === typeof WeakMap
                    },
                    f = m.observe ? Object.observe : m.defineProperty ? function(a, c) {
                        c.addKey = function(d) {
                            var b = "key" + d;
                            if (!this[b]) {
                                this[b] = !0;
                                var e = a[d];
                                if ((b = Object.getOwnPropertyDescriptor(a, d)) && b.set) {
                                    var f = b.set,
                                        k = b.get;
                                    Object.defineProperty(a, d, {
                                        get: function() {
                                            return e = k.call(this)
                                        },
                                        set: function(a) {
                                            f.call(this, a);
                                            e !== a && (e = a, c && p(c, this, d))
                                        }
                                    })
                                } else Object.defineProperty(a,
                                    d, {
                                        get: function() {
                                            return e
                                        },
                                        set: function(a) {
                                            e !== a && (e = a, c && p(c, this, d))
                                        }
                                    })
                            }
                        };
                        c.remove = function() {
                            c = null
                        }
                    } : function(d, e) {
                        s || (s = !0, setInterval(function() {
                            for (var b = 0, d = a.length; b < d; b++) {
                                var e = k[b],
                                    f = a[b],
                                    g = c[b],
                                    l = void 0,
                                    h = void 0;
                                for (h in e) e.hasOwnProperty(h) && e[h] !== f[h] && (e[h] = f[h], (l || (l = [])).push({
                                    name: h
                                }));
                                for (h in f) f.hasOwnProperty(h) && !e.hasOwnProperty(h) && (e[h] = f[h], (l || (l = [])).push({
                                    name: h
                                }));
                                l && g(l)
                            }
                        }, 20));
                        var f = {},
                            b;
                        for (b in d) d.hasOwnProperty(b) && (f[b] = d[b]);
                        a.push(d);
                        k.push(f);
                        c.push(e)
                    },
                    q;
                h = m.observe ? Object.unobserve : function(d, e) {
                    e.remove && e.remove();
                    for (var f = 0, b = a.length; f < b; f++)
                        if (a[f] === d && c[f] === e) {
                            a.splice(f, 1);
                            k.splice(f, 1);
                            c.splice(f, 1);
                            break
                        }
                };
                var a = [],
                    k = [],
                    c = [],
                    s = !1,
                    n = 1,
                    r = function() {};
                r.prototype.toJSON = e;
                return {
                    Promise: m.promise ? Promise : function() {
                        function a(c) {
                            function d(a) {
                                a && a.then ? a.then(d, b) : (h = a, e())
                            }

                            function b(a) {
                                k = a;
                                e()
                            }

                            function e() {
                                f = !0;
                                for (var a = 0, b = n.length; a < b; a++) n[a]();
                                n = 0
                            }
                            var f, h, k, n = 0;
                            c(d, b);
                            return {
                                then: function(b, c) {
                                    return new a(function(a, d) {
                                        function e() {
                                            try {
                                                k &&
                                                    !c ? d(k) : a(k ? c(k) : b ? b(h) : h)
                                            } catch (f) {
                                                d(f)
                                            }
                                        }
                                        f ? e() : (n || (n = [])).push(e)
                                    })
                                }
                            }
                        }
                        return a
                    }(),
                    WeakMap: m.WeakMap ? WeakMap : function(a, c) {
                        var d = "__" + (c || "") + n++;
                        return m.defineProperty ? {
                            get: function(a) {
                                return a[d]
                            },
                            set: function(a, c) {
                                Object.defineProperty(a, d, {
                                    value: c,
                                    enumerable: !1
                                })
                            }
                        } : {
                            get: function(a) {
                                return (a = a[d]) && a.value
                            },
                            set: function(a, c) {
                                (a[d] || (a[d] = new r)).value = c
                            }
                        }
                    },
                    observe: f,
                    unobserve: h,
                    copy: function(a, c) {
                        for (var d in c) a[d] = c[d];
                        return a
                    }
                }
            })
        },
        "xstyle/core/Rule": function() {
            define("xstyle/core/Rule", ["xstyle/core/expression",
                "xstyle/core/Definition", "put-selector/put", "xstyle/core/es6", "xstyle/core/utils"
            ], function(p, e, f, h, d) {
                function m(a, c, d) {
                    try {
                        a[c] = d
                    } catch (e) {}
                }

                function q() {}

                function a(a, c, d, f) {
                    if (a.calls) {
                        var g;
                        for (d = 0; d < a.length; d++) {
                            var h = a[d];
                            if (h instanceof k) {
                                a.hasOwnProperty(d) || (a[d] = h = n(h));
                                var l = h.ref && (h.ref.selfResolving ? h.ref.apply(c, h.getArgs(), c) : p.evaluate(c, [h.caller, h]));
                                void 0 !== l && ((g || (g = [])).push(l), h.evaluated = !0)
                            }
                        }
                    }
                    if (g) return c = p.react(function() {
                        for (var c = 0, d = a.slice(), e = 0; e < a.length; e++) {
                            var f =
                                a[e];
                            f instanceof k && f.evaluated && (d[e - 1] = a[e - 1].slice(0, -f.caller.length), d[e] = arguments[c++])
                        }
                        return d.join("")
                    }), c.skipResolve = !0, f = new e, f.setCompute(c.apply(f, g, f)), f;
                    if (!f) return a.toString()
                }

                function k(a) {
                    this.caller = a;
                    this.args = []
                }

                function c(a, c, e, f) {
                    return d.when(c, function(c) {
                        var d = c;
                        c && c.forRule && ((a._subRuleListeners || (a._subRuleListeners = [])).push(function(a) {
                            var b = d.forRule(a, !0);
                            b && b.forElement ? s(a, b, f) : e && e(b)
                        }), c = c.forRule(a));
                        if (c && c.forElement) return s(a, c, f);
                        e && e(c)
                    })
                }

                function s(a,
                    c, d) {
                    return require(["xstyle/core/elemental"], function(e) {
                        e.addRenderer(a, function(a) {
                            var b = c.forElement(a);
                            d && d(b, a)
                        })
                    })
                }
                var n = Object.create || function(a) {
                        function c() {}
                        c.prototype = a;
                        return new c
                    },
                    r = d.convertCssNameToJs,
                    l = {
                        "{": "}",
                        "[": "]",
                        "(": ")"
                    },
                    g = f("div").style;
                q.prototype = {
                    property: function(a) {
                        return (this._properties || (this._properties = {}))[a] || (this._properties[a] = new Proxy(this.get(a)))
                    },
                    eachProperty: function(a) {
                        for (var c = this.values || 0, d = 0; d < c.length; d++) {
                            var e = c[d];
                            a.call(this, e || "unnamed",
                                c[e])
                        }
                    },
                    fullSelector: function() {
                        return (this.parent ? this.parent.fullSelector() : "") + (this.selector || "") + " "
                    },
                    newRule: function(a) {
                        a = (this.rules || (this.rules = {}))[a] = new q;
                        a.disabled = this.disabled;
                        a.parent = this;
                        return a
                    },
                    newCall: function(a) {
                        a = new k(a);
                        a.parent = this;
                        return a
                    },
                    addSheetRule: function(a, c) {
                        if ("@" != a.charAt(0)) {
                            var d = this.styleSheet,
                                e = d.cssRules || d.rules,
                                f = -1 < this.ruleIndex ? this.ruleIndex : e.length;
                            try {
                                d.addRule(a, c || " ", f)
                            } catch (g) {
                                a.match(/-(moz|webkit|ie)-/) || console.warn("Unable to add rule",
                                    a, c)
                            }
                            return e[f]
                        }
                    },
                    onRule: function() {
                        var a = this.getCssRule();
                        if (this.installStyles)
                            for (var c = 0; c < this.installStyles.length; c++) {
                                var d = this.installStyles[c];
                                m(a.style, d[0], d[1])
                            }
                    },
                    setMediaSelector: function(a) {
                        this.isMediaBlock = !0;
                        this.selector = a
                    },
                    setStyle: function(a, c) {
                        this.cssRule ? m(this.cssRule.style, a, c) : (this.installStyles || (this.installStyles = [])).push([a, c])
                    },
                    getCssRule: function() {
                        this.cssRule || (this.cssRule = this.addSheetRule(this.selector, this.cssText));
                        return this.cssRule
                    },
                    get: function(a) {
                        return this.values[a]
                    },
                    elements: function(a) {
                        var c = this;
                        require(["xstyle/core/elemental"], function(d) {
                            d.addRenderer(c, function(c) {
                                a(c)
                            })
                        })
                    },
                    declareDefinition: function(a, c, e) {
                        a = a && r(a);
                        if (!this.disabled) {
                            var f = this;
                            if (c.length)
                                if ("\x3e" == c[0].toString().charAt(0)) a || (this.generator = c, require(["xstyle/core/generate", "xstyle/core/elemental"], function(a, b) {
                                    c = a.forSelector(c, f);
                                    b.addRenderer(f, c)
                                }));
                                else {
                                    var h = a in g || this.getDefinition(a);
                                    if (!e || !h) {
                                        e = this.definitions || (this.definitions = {});
                                        var k = c[0];
                                        if (k.indexOf && -1 < k.indexOf(","))
                                            for (var k =
                                                    c.join("").split(/\s*,\s*/), l = [], n = 0; n < k.length; n++) l[n] = p.evaluate(this, k[n]);
                                        c[0] && "{" == c[0].operator ? l = c[0] : c[1] && "{" == c[1].operator && (l = c[1], d.extend(l, c[0]));
                                        l = l || p.evaluate(this, c);
                                        if (l.then) var m = l,
                                            l = {
                                                then: function(a) {
                                                    return m.then(function(b) {
                                                        return a(q(b))
                                                    })
                                                }
                                            };
                                        var q = function(c) {
                                            c.define && (c = c.define(f, a));
                                            return c
                                        };
                                        h && console.warn('Overriding existing property "' + a + '"');
                                        return e[a] = q(l)
                                    }
                                }
                            else return e = this.definitions || (this.definitions = {}), e[a] = c
                        }
                    },
                    onArguments: function(a) {
                        var c = a.ref;
                        return c &&
                            c.apply(this, a.getArgs(), this)
                    },
                    setValue: function(a, d, e) {
                        var f = r(a);
                        if (!this.disabled) {
                            var h = this.values || (this.values = []);
                            h.push(a);
                            h[a] = d;
                            if (a) {
                                do {
                                    h = (e || this).getDefinition(a);
                                    if (void 0 !== h) {
                                        if (this.cssRule && (!h || !h.keepCSSValue)) {
                                            var k = this.cssRule.style;
                                            f in k && m(k, f, "")
                                        }
                                        c(this, h.put(d, this, f))
                                    }
                                    a = a.substring(0, a.lastIndexOf("-"))
                                } while (a)
                            }
                            f in g && this._setStyleFromValue(f, d, !0)
                        }
                    },
                    _setStyleFromValue: function(b, c, e) {
                        var f = c[0];
                        if (f instanceof q) {
                            e = f.values;
                            for (f = 0; f < e.length; f++) {
                                var g = e[f];
                                this._setStyleFromValue(b +
                                    ("main" == g ? "" : g.charAt(0).toUpperCase() + g.slice(1)), e[g])
                            }
                        } else {
                            if (c.calls) {
                                var h = this;
                                if (c.expression = a(c, this, b, !0)) {
                                    var k = c.expression && c.expression.valueOf(),
                                        l = function(a, c) {
                                            var d = k && k.forRule ? k.forRule(a, !0) : k;
                                            if (d && d.forElement) {
                                                var e = c && c.elements;
                                                if (e)
                                                    for (var f = 0; f < e.length; f++)
                                                        for (var g = e[f].querySelectorAll(a.selector), h = 0; h < g.length; h++) {
                                                            var l = g[h];
                                                            m(l.style, b, d.forElement(l))
                                                        } else s(a, d, function(a, c) {
                                                            m(c.style, b, a)
                                                        })
                                            } else a.setStyle(b, d)
                                        },
                                        n = [h];
                                    d.when(k, function(a) {
                                        if ((k = a) && k.forRule)(h._subRuleListeners ||
                                            (h._subRuleListeners = [])).push(function(a) {
                                            n.push(a);
                                            l(a)
                                        });
                                        l(h)
                                    });
                                    c.expression.dependencyOf({
                                        invalidate: function(a) {
                                            d.when(c.expression.valueOf(), function(b) {
                                                k = b;
                                                for (b = 0; b < n.length; b++) {
                                                    var c = !0,
                                                        d = n[b];
                                                    if (a && a.rules)
                                                        for (var c = !1, e = 0; e < a.rules.length; e++)
                                                            if (a.rules[e] === d) {
                                                                c = !0;
                                                                break
                                                            }
                                                    c && l(d, a)
                                                }
                                            })
                                        }
                                    })
                                }
                            }
                            e || this.setStyle(b, c)
                        }
                    },
                    put: function(a) {
                        var c = this;
                        return {
                            forRule: function(d) {
                                c.extend(d);
                                if ("defaults" != a && a && "string" == typeof a && c.values)
                                    for (var e = a.toString().split(/,\s*/), f = 0; f < e.length; f++) {
                                        var g =
                                            c.values[f];
                                        g && d.setValue(g, e[f], c)
                                    }
                            }
                        }
                    },
                    extend: function(a, c) {
                        (this.derivatives || (this.derivatives = [])).push(a);
                        var d = this.extraSelector;
                        d && (a.selector += d);
                        for (var e = this.cssRule.style, f = a.getCssRule().style, k = a.inheritedStyles || (a.inheritedStyles = {}), d = 0; d < e.length; d++) {
                            var l = r(e[d]);
                            if (!f[l] || k[l]) f[l] = e[l], k[l] = !0
                        }
                        if (d = this.values) {
                            var d = n(d),
                                m = a.values;
                            a.values = m ? h.copy(d, m) : d
                        }
                        if (c) {
                            if (d = this.definitions) {
                                var d = n(d),
                                    p = a.definitions;
                                a.definitions = p ? h.copy(d, p) : d
                            }
                            a.tagName = this.tagName || a.tagName
                        }(a.bases ||
                            (a.bases = [])).push(this);
                        l = this._subRuleListeners || 0;
                        for (d = 0; d < l.length; d++) l[d](a);
                        var q = a.getCssRule().style;
                        this.eachProperty(function(c, d) {
                            var e = r(c);
                            "object" == typeof d && (d = n(d));
                            e in g && !q[e] && a._setStyleFromValue(e, d)
                        });
                        if (m && a.definitions) {
                            d = 0;
                            for (e = m.length; d < e; d++) l = m[d], f = r(l), a.definitions[f] !== (p && p[f]) && a.setValue(l, m[f])
                        }
                        if (m = this.generator) {
                            if (m instanceof Array) {
                                m = m.slice(0);
                                for (d = 0; d < m.length; d++) p = m[d], "{" === p.operator && (l = a.newRule(), l.selector = p.selector + a.selector.slice(1), l.styleSheet =
                                    a.styleSheet || a.cssRule.parentStyleSheet, p.extend(l, !0), m[d] = l)
                            }
                            a.declareDefinition(null, m)
                        }
                    },
                    getDefinition: function(a, c) {
                        a = r(a);
                        var d = this;
                        do {
                            var e = d.definitions && d.definitions[a];
                            void 0 === e && (c && d[c]) && (e = d[c][a]);
                            d = d.parent
                        } while (void 0 === e && d);
                        return e
                    },
                    newElement: function() {
                        return f((this.tagName || "span") + (this.selector || ""))
                    },
                    cssText: ""
                };
                p.evaluateText = a;
                var t = k.prototype = new q;
                t.declareDefinition = t.setValue = function(a, c) {
                    this.args.push(c)
                };
                t.toString = function() {
                    var a = this.operator;
                    return a +
                        this.args + l[a]
                };
                q.updateStaleProperties = function() {};
                return q
            })
        },
        "xstyle/core/generate": function() {
            define("xstyle/core/generate", ["xstyle/core/elemental", "put-selector/put", "xstyle/core/utils", "xstyle/core/expression", "xstyle/core/base"], function(p, e, f, h, d) {
                function m(a, d) {
                    a = a.sort ? a : [a];
                    return function(h, l, n) {
                        var m = h,
                            r;
                        "content" in h || (h.content = void 0);
                        if (void 0 === n) {
                            var s = (h._contentNode || h).childNodes || 0,
                                t = s[0];
                            if (t) {
                                var D = g.createDocumentFragment();
                                do D.appendChild(t); while (t = s[0]);
                                h.content =
                                    D
                            }
                            if (h._contentNode) {
                                h._contentNode = void 0;
                                try {
                                    h.innerHTML = ""
                                } catch (B) {}
                            }
                        }
                        for (var G = 0, I = [h], K = [], s = 0, t = a.length; s < t; s++) {
                            var R = N,
                                N = a[s];
                            try {
                                if (N.eachProperty) {
                                    if (N.args)
                                        if ("(" == N.operator) {
                                            var P = a[s + 1];
                                            q(N, P, m, function(a, b, e) {
                                                c(a, b, e, d)
                                            })
                                        } else {
                                            var J = N.args[0];
                                            if ("string" === typeof J) {
                                                var H = J.split("\x3d");
                                                try {
                                                    m.setAttribute(H[0], H[1])
                                                } catch (O) {
                                                    console.error(O)
                                                }
                                            } else {
                                                var L = J[0].replace(/=$/, ""),
                                                    M = J[1];
                                                "(" == M.operator ? q(J[1], L, m, function(a, b, c) {
                                                    k(a, b, c, d)
                                                }) : m.setAttribute(L, M.value)
                                            }
                                        }
                                } else if ("string" ==
                                    typeof N) {
                                    "\x3d" == N.charAt(0) && (N = N.slice(1));
                                    var F = m,
                                        P = a[s + 1],
                                        H = [];
                                    N.replace(/([,\n]+)?([\t ]*)?(\.|#)?([-\w%$|\.\#]+)(?:\[([^\]=]+)=?['"]?([^\]'"]*)['"]?\])?/g, function() {
                                        H.push(arguments)
                                    });
                                    for (var Q = 0; Q < H.length; Q++)(function(a, b, c, g, k, p, q) {
                                        function s() {
                                            var a = F._contentNode;
                                            a && (a.innerHTML = "", F = a)
                                        }
                                        b ? (a = c ? c.length : 0, a > G ? (s(), I[a] = F) : F = I[a] || F, G = a) : s();
                                        var t;
                                        if (g) t = (R && R.args ? "" : "span") + g + k;
                                        else {
                                            g = k.match(/^[-\w]+/);
                                            if (!g) throw new SyntaxError("Unable to parse selector", k);
                                            g = g[0];
                                            var u;
                                            Q === H.length -
                                                1 && P && P.selector ? (P.bases || f.extend(P, g), u = P) : u = d.getDefinition(g);
                                            u && (u.then || u.newElement) ? F = function(a, b, c, d) {
                                                var g, h;
                                                f.when(u && u.newElement && u.newElement(), function(a) {
                                                    (g = a) ? (c = c.slice(d.length)) && e(g, c): g = e(c);
                                                    if (h) {
                                                        h.parentNode.replaceChild(g, h);
                                                        a = h.childNodes;
                                                        var b;
                                                        for (g = g._contentNode || g; b = a[0];) g.appendChild(b)
                                                    }
                                                });
                                                if (g) return a.insertBefore(g, b || null);
                                                h = e("span");
                                                return a.insertBefore(h, b || null)
                                            }(F, n, k, g) : t = k
                                        }
                                        t && (F = e(n || F, (n ? "-" : "") + t));
                                        n = null;
                                        p && F.setAttribute(p, "" === q ? p : q);
                                        l && (F.item = l);
                                        r = r || F;
                                        (Q < H.length - 1 || F != m && F != h) && K.push(Q == H.length - 1 && P && P.selector, F);
                                        m = F
                                    }).apply(this, H[Q])
                                } else m.appendChild(g.createTextNode(N.value))
                            } catch (U) {
                                console.error(U, U.stack), m.innerHTML && (m.innerHTML = ""), m.appendChild(g.createTextNode(U))
                            }
                        }
                        for (; N = K.pop();) p.update(N, K.pop());
                        return r
                    }
                }

                function q(a, c, d, f) {
                    var g, k;
                    c && c.eachProperty ? (e(d, g = c.selector), k = c) : (e(d, g = a.selector || (a.selector = ".-xbind-" + t++)), k = a);
                    var l = a.getArgs()[0],
                        n = a.expressionResult,
                        m = a.expressionDefinition;
                    m || (m = a.expressionDefinition =
                        h.evaluate(a.parent, l), n = m.valueOf(), p.addInputConnector(k, m),
                        function(c, d, e) {
                            a.expressionResult = n;
                            e.dependencyOf && e.dependencyOf({
                                invalidate: function(a) {
                                    a = a ? p.matchesRule(a.elements[0], k) ? a.elements : a.elements[0].querySelectorAll(d) : document.querySelectorAll(d);
                                    for (var b = 0, g = a.length; b < g; b++) f(a[b], c, e.valueOf())
                                }
                            })
                        }(c, g, m));
                    f(d, c, n)
                }

                function a(a, c, d, e) {
                    return f.when(a, function(a) {
                        a && a.forRule && (a = a.forRule(c));
                        a && a.forElement && (a = a.forElement(d));
                        e(a)
                    })
                }

                function k(b, c, d, e) {
                    a(d, e, b, function(a) {
                        b.setAttribute(c,
                            a)
                    })
                }

                function c(b, c, d, f) {
                    b._defaultBinding = !0;
                    if (d && d.then && "INPUT" !== b.tagName) try {
                        b.appendChild(g.createTextNode("Loading"))
                    } catch (h) {}
                    a(d, f, b, function(a) {
                        if (b._defaultBinding)
                            if (s(b), b.childNodes.length && (b.innerHTML = ""), a && a.sort)
                                if (a.isSequence) m(a, f)(b);
                                else {
                                    var d = c && c.definitions && c.definitions.each,
                                        h = f.newRule(),
                                        d = d ? m(d, h) : function(a, b, c) {
                                            return e(c || a, (c ? "-" : "") + (r[a.tagName] || "span"), "" + b)
                                        },
                                        k = [],
                                        n;
                                    a.track && (a = a.track(), n = a.tracking);
                                    a.forEach(function(a) {
                                        k.push(d(b, a, null))
                                    });
                                    if (a.on) var p =
                                        a.on("add,delete,update", function(a) {
                                            var c = a.target,
                                                e = a.previousIndex;
                                            a = a.index;
                                            if (-1 < e) {
                                                var f = k[e];
                                                s(f, !0);
                                                f.parentNode.removeChild(f);
                                                k.splice(e, 1)
                                            } - 1 < a && k.splice(a, 0, d(b, c, k[a] || null))
                                        });
                                    if (n = n || p) b.xcleanup = function() {
                                        n.remove()
                                    }
                                }
                        else a && a.nodeType ? b.appendChild(a) : (a = void 0 === a ? "" : a, b.tagName in l ? "checkbox" === b.type ? b.checked = a : b.value = a : b.appendChild(g.createTextNode(a)))
                    })
                }

                function s(a, c) {
                    a.xcleanup && a.xcleanup(c);
                    for (var d = a.getElementsByTagName("*"), e = 0, f = d.length; e < f; e++) {
                        var g = d[e];
                        g.xcleanup &&
                            g.xcleanup(!0)
                    }
                }

                function n(a, c) {
                    return m(c, d)(a)
                }
                var r = {
                        TABLE: "tr",
                        TBODY: "tr",
                        TR: "td",
                        UL: "li",
                        OL: "li",
                        SELECT: "option"
                    },
                    l = {
                        INPUT: 1,
                        TEXTAREA: 1,
                        SELECT: 1
                    },
                    g = document,
                    t = 1;
                n.forSelector = m;
                return n
            })
        },
        "dojo/store/Memory": function() {
            define(["../_base/declare", "./util/QueryResults", "./util/SimpleQueryEngine"], function(p, e, f) {
                return p("dojo.store.Memory", null, {
                    constructor: function(e) {
                        for (var d in e) this[d] = e[d];
                        this.setData(this.data || [])
                    },
                    data: null,
                    idProperty: "id",
                    index: null,
                    queryEngine: f,
                    get: function(e) {
                        return this.data[this.index[e]]
                    },
                    getIdentity: function(e) {
                        return e[this.idProperty]
                    },
                    put: function(e, d) {
                        var f = this.data,
                            p = this.index,
                            a = this.idProperty,
                            a = e[a] = d && "id" in d ? d.id : a in e ? e[a] : Math.random();
                        if (a in p) {
                            if (d && !1 === d.overwrite) throw Error("Object already exists");
                            f[p[a]] = e
                        } else p[a] = f.push(e) - 1;
                        return a
                    },
                    add: function(e, d) {
                        (d = d || {}).overwrite = !1;
                        return this.put(e, d)
                    },
                    remove: function(e) {
                        var d = this.index,
                            f = this.data;
                        if (e in d) return f.splice(d[e], 1), this.setData(f), !0
                    },
                    query: function(f, d) {
                        return e(this.queryEngine(f, d)(this.data))
                    },
                    setData: function(e) {
                        e.items ? (this.idProperty = e.identifier || this.idProperty, e = this.data = e.items) : this.data = e;
                        this.index = {};
                        for (var d = 0, f = e.length; d < f; d++) this.index[e[d][this.idProperty]] = d
                    }
                })
            })
        },
        "dojo/store/util/SimpleQueryEngine": function() {
            define(["../../_base/array"], function(p) {
                return function(e, f) {
                    function h(d) {
                        d = p.filter(d, e);
                        var h = f && f.sort;
                        h && d.sort("function" == typeof h ? h : function(a, c) {
                            for (var d, e = 0; d = h[e]; e++) {
                                var f = a[d.attribute],
                                    l = c[d.attribute],
                                    f = null != f ? f.valueOf() : f,
                                    l = null != l ? l.valueOf() :
                                    l;
                                if (f != l) return !!d.descending == (null == f || f > l) ? -1 : 1
                            }
                            return 0
                        });
                        if (f && (f.start || f.count)) {
                            var a = d.length;
                            d = d.slice(f.start || 0, (f.start || 0) + (f.count || Infinity));
                            d.total = a
                        }
                        return d
                    }
                    switch (typeof e) {
                        default: throw Error("Can not query with a " + typeof e);
                        case "object":
                                case "undefined":
                                var d = e;e = function(e) {
                                for (var f in d) {
                                    var a = d[f];
                                    if (a && a.test) {
                                        if (!a.test(e[f], e)) return !1
                                    } else if (a != e[f]) return !1
                                }
                                return !0
                            };
                            break;
                        case "string":
                                if (!this[e]) throw Error("No filter function " + e + " was found in store");e = this[e];
                        case "function":
                    }
                    h.matches = e;
                    return h
                }
            })
        },
        "dojo/dnd/Source": function() {
            define("../_base/array ../_base/declare ../_base/kernel ../_base/lang ../dom-class ../dom-geometry ../mouse ../ready ../topic ./common ./Selector ./Manager".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n) {
                f.isAsync || a(0, function() {
                    require(["dojo/dnd/AutoSource", "dojo/dnd/Target"])
                });
                var r = e("dojo.dnd.Source", s, {
                    isSource: !0,
                    horizontal: !1,
                    copyOnly: !1,
                    selfCopy: !1,
                    selfAccept: !0,
                    skipForm: !1,
                    withHandles: !1,
                    autoSync: !1,
                    delay: 0,
                    accept: ["text"],
                    generateText: !0,
                    constructor: function(a, c) {
                        h.mixin(this, h.mixin({}, c));
                        var e = this.accept;
                        if (e.length) {
                            this.accept = {};
                            for (var b = 0; b < e.length; ++b) this.accept[e[b]] = 1
                        }
                        this.mouseDown = this.isDragging = !1;
                        this.targetBox = this.targetAnchor = null;
                        this.before = !0;
                        this._lastY = this._lastX = 0;
                        this.sourceState = "";
                        this.isSource && d.add(this.node, "dojoDndSource");
                        this.targetState = "";
                        this.accept && d.add(this.node, "dojoDndTarget");
                        this.horizontal && d.add(this.node, "dojoDndHorizontal");
                        this.topics = [k.subscribe("/dnd/source/over",
                            h.hitch(this, "onDndSourceOver")), k.subscribe("/dnd/start", h.hitch(this, "onDndStart")), k.subscribe("/dnd/drop", h.hitch(this, "onDndDrop")), k.subscribe("/dnd/cancel", h.hitch(this, "onDndCancel"))]
                    },
                    checkAcceptance: function(a, c) {
                        if (this == a) return !this.copyOnly || this.selfAccept;
                        for (var d = 0; d < c.length; ++d) {
                            for (var b = a.getItem(c[d].id).type, e = !1, f = 0; f < b.length; ++f)
                                if (b[f] in this.accept) {
                                    e = !0;
                                    break
                                }
                            if (!e) return !1
                        }
                        return !0
                    },
                    copyState: function(a, c) {
                        if (a) return !0;
                        2 > arguments.length && (c = this == n.manager().target);
                        if (c) {
                            if (this.copyOnly) return this.selfCopy
                        } else return this.copyOnly;
                        return !1
                    },
                    destroy: function() {
                        r.superclass.destroy.call(this);
                        p.forEach(this.topics, function(a) {
                            a.remove()
                        });
                        this.targetAnchor = null
                    },
                    onMouseMove: function(a) {
                        if (!(this.isDragging && "Disabled" == this.targetState)) {
                            r.superclass.onMouseMove.call(this, a);
                            var d = n.manager();
                            if (!this.isDragging && this.mouseDown && this.isSource && (Math.abs(a.pageX - this._lastX) > this.delay || Math.abs(a.pageY - this._lastY) > this.delay)) {
                                var e = this.getSelectedNodes();
                                e.length && d.startDrag(this, e, this.copyState(c.getCopyKeyState(a), !0))
                            }
                            if (this.isDragging) {
                                e = !1;
                                if (this.current) {
                                    if (!this.targetBox || this.targetAnchor != this.current) this.targetBox = m.position(this.current, !0);
                                    e = this.horizontal ? a.pageX - this.targetBox.x < this.targetBox.w / 2 == m.isBodyLtr(this.current.ownerDocument) : a.pageY - this.targetBox.y < this.targetBox.h / 2
                                }
                                if (this.current != this.targetAnchor || e != this.before) this._markTargetAnchor(e), d.canDrop(!this.current || d.source != this || !(this.current.id in this.selection))
                            }
                        }
                    },
                    onMouseDown: function(a) {
                        if (!this.mouseDown && this._legalMouseDown(a) && (!this.skipForm || !c.isFormElement(a))) this.mouseDown = !0, this._lastX = a.pageX, this._lastY = a.pageY, r.superclass.onMouseDown.call(this, a)
                    },
                    onMouseUp: function(a) {
                        this.mouseDown && (this.mouseDown = !1, r.superclass.onMouseUp.call(this, a))
                    },
                    onDndSourceOver: function(a) {
                        this !== a ? (this.mouseDown = !1, this.targetAnchor && this._unmarkTargetAnchor()) : this.isDragging && (a = n.manager(), a.canDrop("Disabled" != this.targetState && (!this.current || a.source != this ||
                            !(this.current.id in this.selection))))
                    },
                    onDndStart: function(a, c, d) {
                        this.autoSync && this.sync();
                        this.isSource && this._changeState("Source", this == a ? d ? "Copied" : "Moved" : "");
                        c = this.accept && this.checkAcceptance(a, c);
                        this._changeState("Target", c ? "" : "Disabled");
                        this == a && n.manager().overSource(this);
                        this.isDragging = !0
                    },
                    onDndDrop: function(a, c, d, b) {
                        if (this == b) this.onDrop(a, c, d);
                        this.onDndCancel()
                    },
                    onDndCancel: function() {
                        this.targetAnchor && (this._unmarkTargetAnchor(), this.targetAnchor = null);
                        this.before = !0;
                        this.mouseDown =
                            this.isDragging = !1;
                        this._changeState("Source", "");
                        this._changeState("Target", "")
                    },
                    onDrop: function(a, c, d) {
                        if (this != a) this.onDropExternal(a, c, d);
                        else this.onDropInternal(c, d)
                    },
                    onDropExternal: function(a, d, e) {
                        var b = this._normalizedCreator;
                        this._normalizedCreator = this.creator ? function(c, d) {
                            return b.call(this, a.getItem(c.id).data, d)
                        } : e ? function(b) {
                            var d = a.getItem(b.id);
                            b = b.cloneNode(!0);
                            b.id = c.getUniqueId();
                            return {
                                node: b,
                                data: d.data,
                                type: d.type
                            }
                        } : function(b) {
                            var c = a.getItem(b.id);
                            a.delItem(b.id);
                            return {
                                node: b,
                                data: c.data,
                                type: c.type
                            }
                        };
                        this.selectNone();
                        !e && !this.creator && a.selectNone();
                        this.insertNodes(!0, d, this.before, this.current);
                        !e && this.creator && a.deleteSelectedNodes();
                        this._normalizedCreator = b
                    },
                    onDropInternal: function(a, d) {
                        var e = this._normalizedCreator;
                        if (!(this.current && this.current.id in this.selection)) {
                            if (d) this._normalizedCreator = this.creator ? function(a, c) {
                                return e.call(this, this.getItem(a.id).data, c)
                            } : function(a) {
                                var d = this.getItem(a.id);
                                a = a.cloneNode(!0);
                                a.id = c.getUniqueId();
                                return {
                                    node: a,
                                    data: d.data,
                                    type: d.type
                                }
                            };
                            else {
                                if (!this.current) return;
                                this._normalizedCreator = function(a) {
                                    var c = this.getItem(a.id);
                                    return {
                                        node: a,
                                        data: c.data,
                                        type: c.type
                                    }
                                }
                            }
                            this._removeSelection();
                            this.insertNodes(!0, a, this.before, this.current);
                            this._normalizedCreator = e
                        }
                    },
                    onDraggingOver: function() {},
                    onDraggingOut: function() {},
                    onOverEvent: function() {
                        r.superclass.onOverEvent.call(this);
                        n.manager().overSource(this);
                        if (this.isDragging && "Disabled" != this.targetState) this.onDraggingOver()
                    },
                    onOutEvent: function() {
                        r.superclass.onOutEvent.call(this);
                        n.manager().outSource(this);
                        if (this.isDragging && "Disabled" != this.targetState) this.onDraggingOut()
                    },
                    _markTargetAnchor: function(a) {
                        this.current == this.targetAnchor && this.before == a || (this.targetAnchor && this._removeItemClass(this.targetAnchor, this.before ? "Before" : "After"), this.targetAnchor = this.current, this.targetBox = null, this.before = a, this.targetAnchor && this._addItemClass(this.targetAnchor, this.before ? "Before" : "After"))
                    },
                    _unmarkTargetAnchor: function() {
                        this.targetAnchor && (this._removeItemClass(this.targetAnchor,
                            this.before ? "Before" : "After"), this.targetBox = this.targetAnchor = null, this.before = !0)
                    },
                    _markDndStatus: function(a) {
                        this._changeState("Source", a ? "Copied" : "Moved")
                    },
                    _legalMouseDown: function(a) {
                        if ("touchstart" != a.type && !q.isLeft(a)) return !1;
                        if (!this.withHandles) return !0;
                        for (a = a.target; a && a !== this.node; a = a.parentNode) {
                            if (d.contains(a, "dojoDndHandle")) return !0;
                            if (d.contains(a, "dojoDndItem") || d.contains(a, "dojoDndIgnore")) break
                        }
                        return !1
                    }
                });
                return r
            })
        },
        "dojo/dnd/Selector": function() {
            define("../_base/array ../_base/declare ../_base/kernel ../_base/lang ../dom ../dom-construct ../mouse ../_base/NodeList ../on ../touch ./common ./Container".split(" "),
                function(p, e, f, h, d, m, q, a, k, c, s, n) {
                    var r = e("dojo.dnd.Selector", n, {
                        constructor: function(a, d) {
                            d || (d = {});
                            this.singular = d.singular;
                            this.autoSync = d.autoSync;
                            this.selection = {};
                            this.anchor = null;
                            this.simpleSelection = !1;
                            this.events.push(k(this.node, c.press, h.hitch(this, "onMouseDown")), k(this.node, c.release, h.hitch(this, "onMouseUp")))
                        },
                        singular: !1,
                        getSelectedNodes: function() {
                            var c = new a,
                                e = s._empty,
                                f;
                            for (f in this.selection) f in e || c.push(d.byId(f));
                            return c
                        },
                        selectNone: function() {
                            return this._removeSelection()._removeAnchor()
                        },
                        selectAll: function() {
                            this.forInItems(function(a, c) {
                                this._addItemClass(d.byId(c), "Selected");
                                this.selection[c] = 1
                            }, this);
                            return this._removeAnchor()
                        },
                        deleteSelectedNodes: function() {
                            var a = s._empty,
                                c;
                            for (c in this.selection)
                                if (!(c in a)) {
                                    var e = d.byId(c);
                                    this.delItem(c);
                                    m.destroy(e)
                                }
                            this.anchor = null;
                            this.selection = {};
                            return this
                        },
                        forInSelectedItems: function(a, c) {
                            c = c || f.global;
                            var d = this.selection,
                                b = s._empty,
                                e;
                            for (e in d) e in b || a.call(c, this.getItem(e), e, this)
                        },
                        sync: function() {
                            r.superclass.sync.call(this);
                            this.anchor && !this.getItem(this.anchor.id) && (this.anchor = null);
                            var a = [],
                                c = s._empty,
                                d;
                            for (d in this.selection) d in c || this.getItem(d) || a.push(d);
                            p.forEach(a, function(a) {
                                delete this.selection[a]
                            }, this);
                            return this
                        },
                        insertNodes: function(a, c, d, b) {
                            var e = this._normalizedCreator;
                            this._normalizedCreator = function(b, c) {
                                var d = e.call(this, b, c);
                                a ? (this.anchor ? this.anchor != d.node && (this._removeItemClass(d.node, "Anchor"), this._addItemClass(d.node, "Selected")) : (this.anchor = d.node, this._removeItemClass(d.node, "Selected"),
                                    this._addItemClass(this.anchor, "Anchor")), this.selection[d.node.id] = 1) : (this._removeItemClass(d.node, "Selected"), this._removeItemClass(d.node, "Anchor"));
                                return d
                            };
                            r.superclass.insertNodes.call(this, c, d, b);
                            this._normalizedCreator = e;
                            return this
                        },
                        destroy: function() {
                            r.superclass.destroy.call(this);
                            this.selection = this.anchor = null
                        },
                        onMouseDown: function(a) {
                            this.autoSync && this.sync();
                            if (this.current)
                                if (!this.singular && !s.getCopyKeyState(a) && !a.shiftKey && this.current.id in this.selection) this.simpleSelection = !0, q.isLeft(a) && (a.stopPropagation(), a.preventDefault());
                                else {
                                    if (!this.singular && a.shiftKey) {
                                        s.getCopyKeyState(a) || this._removeSelection();
                                        var c = this.getAllNodes();
                                        if (c.length && (this.anchor || (this.anchor = c[0], this._addItemClass(this.anchor, "Anchor")), this.selection[this.anchor.id] = 1, this.anchor != this.current)) {
                                            for (var d = 0, b; d < c.length && !(b = c[d], b == this.anchor || b == this.current); ++d);
                                            for (++d; d < c.length; ++d) {
                                                b = c[d];
                                                if (b == this.anchor || b == this.current) break;
                                                this._addItemClass(b, "Selected");
                                                this.selection[b.id] =
                                                    1
                                            }
                                            this._addItemClass(this.current, "Selected");
                                            this.selection[this.current.id] = 1
                                        }
                                    } else this.singular ? this.anchor == this.current ? s.getCopyKeyState(a) && this.selectNone() : (this.selectNone(), this.anchor = this.current, this._addItemClass(this.anchor, "Anchor"), this.selection[this.current.id] = 1) : s.getCopyKeyState(a) ? this.anchor == this.current ? (delete this.selection[this.anchor.id], this._removeAnchor()) : this.current.id in this.selection ? (this._removeItemClass(this.current, "Selected"), delete this.selection[this.current.id]) :
                                        (this.anchor && (this._removeItemClass(this.anchor, "Anchor"), this._addItemClass(this.anchor, "Selected")), this.anchor = this.current, this._addItemClass(this.current, "Anchor"), this.selection[this.current.id] = 1) : this.current.id in this.selection || (this.selectNone(), this.anchor = this.current, this._addItemClass(this.current, "Anchor"), this.selection[this.current.id] = 1);
                                    a.stopPropagation();
                                    a.preventDefault()
                                }
                        },
                        onMouseUp: function() {
                            this.simpleSelection && (this.simpleSelection = !1, this.selectNone(), this.current &&
                                (this.anchor = this.current, this._addItemClass(this.anchor, "Anchor"), this.selection[this.current.id] = 1))
                        },
                        onMouseMove: function() {
                            this.simpleSelection = !1
                        },
                        onOverEvent: function() {
                            this.onmousemoveEvent = k(this.node, c.move, h.hitch(this, "onMouseMove"))
                        },
                        onOutEvent: function() {
                            this.onmousemoveEvent && (this.onmousemoveEvent.remove(), delete this.onmousemoveEvent)
                        },
                        _removeSelection: function() {
                            var a = s._empty,
                                c;
                            for (c in this.selection)
                                if (!(c in a)) {
                                    var e = d.byId(c);
                                    e && this._removeItemClass(e, "Selected")
                                }
                            this.selection = {};
                            return this
                        },
                        _removeAnchor: function() {
                            this.anchor && (this._removeItemClass(this.anchor, "Anchor"), this.anchor = null);
                            return this
                        }
                    });
                    return r
                })
        },
        "dojo/dnd/Container": function() {
            define("../_base/array ../_base/declare ../_base/kernel ../_base/lang ../_base/window ../dom ../dom-class ../dom-construct ../Evented ../has ../on ../query ../touch ./common".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l) {
                e = e("dojo.dnd.Container", k, {
                    skipForm: !1,
                    allowNested: !1,
                    constructor: function(a, c) {
                        this.node = m.byId(a);
                        c || (c = {});
                        this.creator = c.creator || null;
                        this.skipForm = c.skipForm;
                        this.parent = c.dropParent && m.byId(c.dropParent);
                        this.map = {};
                        this.current = null;
                        this.containerState = "";
                        q.add(this.node, "dojoDndContainer");
                        (!c || !c._skipStartup) && this.startup();
                        this.events = [s(this.node, r.over, h.hitch(this, "onMouseOver")), s(this.node, r.out, h.hitch(this, "onMouseOut")), s(this.node, "dragstart", h.hitch(this, "onSelectStart")), s(this.node, "selectstart", h.hitch(this, "onSelectStart"))]
                    },
                    creator: function() {},
                    getItem: function(a) {
                        return this.map[a]
                    },
                    setItem: function(a, c) {
                        this.map[a] = c
                    },
                    delItem: function(a) {
                        delete this.map[a]
                    },
                    forInItems: function(a, c) {
                        c = c || f.global;
                        var b = this.map,
                            d = l._empty,
                            e;
                        for (e in b) e in d || a.call(c, b[e], e, this);
                        return c
                    },
                    clearItems: function() {
                        this.map = {}
                    },
                    getAllNodes: function() {
                        return n((this.allowNested ? "" : "\x3e ") + ".dojoDndItem", this.parent)
                    },
                    sync: function() {
                        var a = {};
                        this.getAllNodes().forEach(function(c) {
                            if (c.id) {
                                var b = this.getItem(c.id);
                                if (b) {
                                    a[c.id] = b;
                                    return
                                }
                            } else c.id = l.getUniqueId();
                            var b = c.getAttribute("dndType"),
                                d = c.getAttribute("dndData");
                            a[c.id] = {
                                data: d || c.innerHTML,
                                type: b ? b.split(/\s*,\s*/) : ["text"]
                            }
                        }, this);
                        this.map = a;
                        return this
                    },
                    insertNodes: function(a, c, b) {
                        this.parent.firstChild ? c ? b || (b = this.parent.firstChild) : b && (b = b.nextSibling) : b = null;
                        var d;
                        if (b)
                            for (c = 0; c < a.length; ++c) d = this._normalizedCreator(a[c]), this.setItem(d.node.id, {
                                data: d.data,
                                type: d.type
                            }), b.parentNode.insertBefore(d.node, b);
                        else
                            for (c = 0; c < a.length; ++c) d = this._normalizedCreator(a[c]), this.setItem(d.node.id, {
                                data: d.data,
                                type: d.type
                            }), this.parent.appendChild(d.node);
                        return this
                    },
                    destroy: function() {
                        p.forEach(this.events, function(a) {
                            a.remove()
                        });
                        this.clearItems();
                        this.node = this.parent = this.current = null
                    },
                    markupFactory: function(a, c, b) {
                        a._skipStartup = !0;
                        return new b(c, a)
                    },
                    startup: function() {
                        if (!this.parent && (this.parent = this.node, "table" == this.parent.tagName.toLowerCase())) {
                            var a = this.parent.getElementsByTagName("tbody");
                            a && a.length && (this.parent = a[0])
                        }
                        this.defaultCreator = l._defaultCreator(this.parent);
                        this.sync()
                    },
                    onMouseOver: function(a) {
                        for (var c = a.relatedTarget; c &&
                            c != this.node;) try {
                            c = c.parentNode
                        } catch (b) {
                            c = null
                        }
                        c || (this._changeState("Container", "Over"), this.onOverEvent());
                        c = this._getChildByEvent(a);
                        this.current != c && (this.current && this._removeItemClass(this.current, "Over"), c && this._addItemClass(c, "Over"), this.current = c)
                    },
                    onMouseOut: function(a) {
                        for (a = a.relatedTarget; a;) {
                            if (a == this.node) return;
                            try {
                                a = a.parentNode
                            } catch (c) {
                                a = null
                            }
                        }
                        this.current && (this._removeItemClass(this.current, "Over"), this.current = null);
                        this._changeState("Container", "");
                        this.onOutEvent()
                    },
                    onSelectStart: function(a) {
                        if (!this.skipForm ||
                            !l.isFormElement(a)) a.stopPropagation(), a.preventDefault()
                    },
                    onOverEvent: function() {},
                    onOutEvent: function() {},
                    _changeState: function(a, c) {
                        var b = "dojoDnd" + a,
                            d = a.toLowerCase() + "State";
                        q.replace(this.node, b + c, b + this[d]);
                        this[d] = c
                    },
                    _addItemClass: function(a, c) {
                        q.add(a, "dojoDndItem" + c)
                    },
                    _removeItemClass: function(a, c) {
                        q.remove(a, "dojoDndItem" + c)
                    },
                    _getChildByEvent: function(a) {
                        if (a = a.target)
                            for (var c = a.parentNode; c; a = c, c = a.parentNode)
                                if ((c == this.parent || this.allowNested) && q.contains(a, "dojoDndItem")) return a;
                        return null
                    },
                    _normalizedCreator: function(a, c) {
                        var b = (this.creator || this.defaultCreator).call(this, a, c);
                        h.isArray(b.type) || (b.type = ["text"]);
                        b.node.id || (b.node.id = l.getUniqueId());
                        q.add(b.node, "dojoDndItem");
                        return b
                    }
                });
                l._createNode = function(c) {
                    return !c ? l._createSpan : function(d) {
                        return a.create(c, {
                            innerHTML: d
                        })
                    }
                };
                l._createTrTd = function(c) {
                    var d = a.create("tr");
                    a.create("td", {
                        innerHTML: c
                    }, d);
                    return d
                };
                l._createSpan = function(c) {
                    return a.create("span", {
                        innerHTML: c
                    })
                };
                l._defaultCreatorNodes = {
                    ul: "li",
                    ol: "li",
                    div: "div",
                    p: "div"
                };
                l._defaultCreator = function(a) {
                    a = a.tagName.toLowerCase();
                    var c = "tbody" == a || "thead" == a ? l._createTrTd : l._createNode(l._defaultCreatorNodes[a]);
                    return function(a, d) {
                        var e = a && h.isObject(a),
                            f, g;
                        e && a.tagName && a.nodeType && a.getAttribute ? (f = a.getAttribute("dndData") || a.innerHTML, e = (e = a.getAttribute("dndType")) ? e.split(/\s*,\s*/) : ["text"], g = a) : (f = e && a.data ? a.data : a, e = e && a.type ? a.type : ["text"], g = ("avatar" == d ? l._createSpan : c)(String(f)));
                        g.id || (g.id = l.getUniqueId());
                        return {
                            node: g,
                            data: f,
                            type: e
                        }
                    }
                };
                return e
            })
        },
        "dojo/dnd/Manager": function() {
            define("../_base/array ../_base/declare ../_base/lang ../_base/window ../dom-class ../Evented ../has ../keys ../on ../topic ../touch ./common ./autoscroll ./Avatar".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l) {
                var g = e("dojo.dnd.Manager", [m], {
                    constructor: function() {
                        this.source = this.avatar = null;
                        this.nodes = [];
                        this.copy = !0;
                        this.target = null;
                        this.canDropFlag = !1;
                        this.events = []
                    },
                    OFFSET_X: q("touch") ? 0 : 16,
                    OFFSET_Y: q("touch") ? -64 : 16,
                    overSource: function(a) {
                        this.avatar &&
                            (this.target = a && "Disabled" != a.targetState ? a : null, this.canDropFlag = Boolean(this.target), this.avatar.update());
                        c.publish("/dnd/source/over", a)
                    },
                    outSource: function(a) {
                        this.avatar ? this.target == a && (this.target = null, this.canDropFlag = !1, this.avatar.update(), c.publish("/dnd/source/over", null)) : c.publish("/dnd/source/over", null)
                    },
                    startDrag: function(a, b, e) {
                        function g(a) {
                            a.preventDefault();
                            a.stopPropagation()
                        }
                        r.autoScrollStart(h.doc);
                        this.source = a;
                        this.nodes = b;
                        this.copy = Boolean(e);
                        this.avatar = this.makeAvatar();
                        h.body().appendChild(this.avatar.node);
                        c.publish("/dnd/start", a, b, this.copy);
                        this.events = [k(h.doc, s.move, f.hitch(this, "onMouseMove")), k(h.doc, s.release, f.hitch(this, "onMouseUp")), k(h.doc, "keydown", f.hitch(this, "onKeyDown")), k(h.doc, "keyup", f.hitch(this, "onKeyUp")), k(h.doc, "dragstart", g), k(h.body(), "selectstart", g)];
                        d.add(h.body(), "dojoDnd" + (e ? "Copy" : "Move"))
                    },
                    canDrop: function(a) {
                        a = Boolean(this.target && a);
                        this.canDropFlag != a && (this.canDropFlag = a, this.avatar.update())
                    },
                    stopDrag: function() {
                        d.remove(h.body(), ["dojoDndCopy", "dojoDndMove"]);
                        p.forEach(this.events, function(a) {
                            a.remove()
                        });
                        this.events = [];
                        this.avatar.destroy();
                        this.source = this.target = this.avatar = null;
                        this.nodes = []
                    },
                    makeAvatar: function() {
                        return new l(this)
                    },
                    updateAvatar: function() {
                        this.avatar.update()
                    },
                    onMouseMove: function(a) {
                        var b = this.avatar;
                        b && (r.autoScrollNodes(a), b = b.node.style, b.left = a.pageX + this.OFFSET_X + "px", b.top = a.pageY + this.OFFSET_Y + "px", b = Boolean(this.source.copyState(n.getCopyKeyState(a))), this.copy != b && this._setCopyStatus(b));
                        q("touch") && a.preventDefault()
                    },
                    onMouseUp: function(a) {
                        if (this.avatar) {
                            if (this.target && this.canDropFlag) {
                                var b = Boolean(this.source.copyState(n.getCopyKeyState(a)));
                                c.publish("/dnd/drop/before", this.source, this.nodes, b, this.target, a);
                                c.publish("/dnd/drop", this.source, this.nodes, b, this.target, a)
                            } else c.publish("/dnd/cancel");
                            this.stopDrag()
                        }
                    },
                    onKeyDown: function(d) {
                        if (this.avatar) switch (d.keyCode) {
                            case a.CTRL:
                                d = Boolean(this.source.copyState(!0));
                                this.copy != d && this._setCopyStatus(d);
                                break;
                            case a.ESCAPE:
                                c.publish("/dnd/cancel"),
                                    this.stopDrag()
                        }
                    },
                    onKeyUp: function(c) {
                        this.avatar && c.keyCode == a.CTRL && (c = Boolean(this.source.copyState(!1)), this.copy != c && this._setCopyStatus(c))
                    },
                    _setCopyStatus: function(a) {
                        this.copy = a;
                        this.source._markDndStatus(this.copy);
                        this.updateAvatar();
                        d.replace(h.body(), "dojoDnd" + (this.copy ? "Copy" : "Move"), "dojoDnd" + (this.copy ? "Move" : "Copy"))
                    }
                });
                n._manager = null;
                g.manager = n.manager = function() {
                    n._manager || (n._manager = new g);
                    return n._manager
                };
                return g
            })
        },
        "dojo/dnd/Avatar": function() {
            define("../_base/declare ../_base/window ../dom ../dom-attr ../dom-class ../dom-construct ../hccss ../query".split(" "),
                function(p, e, f, h, d, m, q, a) {
                    return p("dojo.dnd.Avatar", null, {
                        constructor: function(a) {
                            this.manager = a;
                            this.construct()
                        },
                        construct: function() {
                            var a = m.create("table", {
                                    "class": "dojoDndAvatar",
                                    style: {
                                        position: "absolute",
                                        zIndex: "1999",
                                        margin: "0px"
                                    }
                                }),
                                c = this.manager.source,
                                d, e = m.create("tbody", null, a),
                                f = m.create("tr", null, e),
                                l = m.create("td", null, f),
                                g = Math.min(5, this.manager.nodes.length),
                                p = 0;
                            q("highcontrast") && m.create("span", {
                                id: "a11yIcon",
                                innerHTML: this.manager.copy ? "+" : "\x3c"
                            }, l);
                            m.create("span", {
                                innerHTML: c.generateText ?
                                    this._generateText() : ""
                            }, l);
                            for (h.set(f, {
                                    "class": "dojoDndAvatarHeader",
                                    style: {
                                        opacity: 0.9
                                    }
                                }); p < g; ++p) c.creator ? d = c._normalizedCreator(c.getItem(this.manager.nodes[p].id).data, "avatar").node : (d = this.manager.nodes[p].cloneNode(!0), "tr" == d.tagName.toLowerCase() && (f = m.create("table"), m.create("tbody", null, f).appendChild(d), d = f)), d.id = "", f = m.create("tr", null, e), l = m.create("td", null, f), l.appendChild(d), h.set(f, {
                                "class": "dojoDndAvatarItem",
                                style: {
                                    opacity: (9 - p) / 10
                                }
                            });
                            this.node = a
                        },
                        destroy: function() {
                            m.destroy(this.node);
                            this.node = !1
                        },
                        update: function() {
                            d.toggle(this.node, "dojoDndAvatarCanDrop", this.manager.canDropFlag);
                            if (q("highcontrast")) {
                                var e = f.byId("a11yIcon"),
                                    c = "+";
                                this.manager.canDropFlag && !this.manager.copy ? c = "\x3c " : !this.manager.canDropFlag && !this.manager.copy ? c = "o" : this.manager.canDropFlag || (c = "x");
                                e.innerHTML = c
                            }
                            a("tr.dojoDndAvatarHeader td span" + (q("highcontrast") ? " span" : ""), this.node).forEach(function(a) {
                                a.innerHTML = this.manager.source.generateText ? this._generateText() : ""
                            }, this)
                        },
                        _generateText: function() {
                            return this.manager.nodes.length.toString()
                        }
                    })
                })
        },
        "dijit/CheckedMenuItem": function() {
            define(["dojo/_base/declare", "dojo/dom-class", "./MenuItem", "dojo/text!./templates/CheckedMenuItem.html", "./hccss"], function(p, e, f, h) {
                return p("dijit.CheckedMenuItem", f, {
                    baseClass: "dijitMenuItem dijitCheckedMenuItem",
                    templateString: h,
                    checked: !1,
                    _setCheckedAttr: function(d) {
                        this.domNode.setAttribute("aria-checked", d ? "true" : "false");
                        this._set("checked", d)
                    },
                    iconClass: "",
                    role: "menuitemcheckbox",
                    checkedChar: "\x26#10003;",
                    onChange: function() {},
                    _onClick: function(d) {
                        this.disabled ||
                            (this.set("checked", !this.checked), this.onChange(this.checked));
                        this.onClick(d)
                    }
                })
            })
        },
        "dijit/ColorPalette": function() {
            define("require dojo/text!./templates/ColorPalette.html ./_Widget ./_TemplatedMixin ./_PaletteMixin ./hccss dojo/i18n dojo/_base/Color dojo/_base/declare dojo/dom-construct dojo/string dojo/i18n!dojo/nls/colors dojo/colors".split(" "), function(p, e, f, h, d, m, q, a, k, c, s) {
                var n = k("dijit.ColorPalette", [f, h, d], {
                    palette: "7x10",
                    _palettes: {
                        "7x10": ["white seashell cornsilk lemonchiffon lightyellow palegreen paleturquoise lightcyan lavender plum".split(" "),
                            "lightgray pink bisque moccasin khaki lightgreen lightseagreen lightskyblue cornflowerblue violet".split(" "), "silver lightcoral sandybrown orange palegoldenrod chartreuse mediumturquoise skyblue mediumslateblue orchid".split(" "), "gray red orangered darkorange yellow limegreen darkseagreen royalblue slateblue mediumorchid".split(" "), "dimgray crimson chocolate coral gold forestgreen seagreen blue blueviolet darkorchid".split(" "), "darkslategray firebrick saddlebrown sienna olive green darkcyan mediumblue darkslateblue darkmagenta".split(" "),
                            "black darkred maroon brown darkolivegreen darkgreen midnightblue navy indigo purple".split(" ")
                        ],
                        "3x4": [
                            ["white", "lime", "green", "blue"],
                            ["silver", "yellow", "fuchsia", "navy"],
                            ["gray", "red", "purple", "black"]
                        ]
                    },
                    templateString: e,
                    baseClass: "dijitColorPalette",
                    _dyeFactory: function(a, c, d, e) {
                        return new this._dyeClass(a, c, d, e)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this._dyeClass = k(n._Color, {
                            palette: this.palette
                        });
                        this._preparePalette(this._palettes[this.palette], q.getLocalization("dojo", "colors",
                            this.lang))
                    }
                });
                n._Color = k("dijit._Color", a, {
                    template: "\x3cspan class\x3d'dijitInline dijitPaletteImg'\x3e\x3cimg src\x3d'${blankGif}' alt\x3d'${alt}' title\x3d'${title}' class\x3d'dijitColorPaletteSwatch' style\x3d'background-color: ${color}'/\x3e\x3c/span\x3e",
                    hcTemplate: "\x3cspan class\x3d'dijitInline dijitPaletteImg' style\x3d'position: relative; overflow: hidden; height: 12px; width: 14px;'\x3e\x3cimg src\x3d'${image}' alt\x3d'${alt}' title\x3d'${title}' style\x3d'position: absolute; left: ${left}px; top: ${top}px; ${size}'/\x3e\x3c/span\x3e",
                    _imagePaths: {
                        "7x10": p.toUrl("./themes/a11y/colors7x10.png"),
                        "3x4": p.toUrl("./themes/a11y/colors3x4.png")
                    },
                    constructor: function(c, d, e, f) {
                        this._title = f;
                        this._row = d;
                        this._col = e;
                        this.setColor(a.named[c])
                    },
                    getValue: function() {
                        return this.toHex()
                    },
                    fillCell: function(a, d) {
                        var e = s.substitute(m("highcontrast") ? this.hcTemplate : this.template, {
                            color: this.toHex(),
                            blankGif: d,
                            alt: this._title,
                            title: this._title,
                            image: this._imagePaths[this.palette].toString(),
                            left: -20 * this._col - 5,
                            top: -20 * this._row - 5,
                            size: "7x10" == this.palette ?
                                "height: 145px; width: 206px" : "height: 64px; width: 86px"
                        });
                        c.place(e, a)
                    }
                });
                return n
            })
        },
        "dijit/_PaletteMixin": function() {
            define("dojo/_base/declare dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/keys dojo/_base/lang dojo/on ./_CssStateMixin ./a11yclick ./focus ./typematic".split(" "), function(p, e, f, h, d, m, q, a, k, c, s) {
                return p("dijit._PaletteMixin", a, {
                    defaultTimeout: 500,
                    timeoutChangeRate: 0.9,
                    value: "",
                    _selectedCell: -1,
                    tabIndex: "0",
                    cellClass: "dijitPaletteCell",
                    dyeClass: null,
                    _dyeFactory: function(a) {
                        return new("string" ==
                            typeof this.dyeClass ? m.getObject(this.dyeClass) : this.dyeClass)(a)
                    },
                    _preparePalette: function(a, c) {
                        this._cells = [];
                        var e = this._blankGif;
                        this.own(q(this.gridNode, k, m.hitch(this, "_onCellClick")));
                        for (var f = 0; f < a.length; f++)
                            for (var p = h.create("tr", {
                                    tabIndex: "-1",
                                    role: "row"
                                }, this.gridNode), b = 0; b < a[f].length; b++) {
                                var v = a[f][b];
                                if (v) {
                                    var w = this._dyeFactory(v, f, b, c[v]),
                                        v = h.create("td", {
                                            "class": this.cellClass,
                                            tabIndex: "-1",
                                            title: c[v],
                                            role: "gridcell"
                                        }, p);
                                    w.fillCell(v, e);
                                    v.idx = this._cells.length;
                                    this._cells.push({
                                        node: v,
                                        dye: w
                                    })
                                }
                            }
                        this._xDim = a[0].length;
                        this._yDim = a.length;
                        var z = {
                                UP_ARROW: -this._xDim,
                                DOWN_ARROW: this._xDim,
                                RIGHT_ARROW: this.isLeftToRight() ? 1 : -1,
                                LEFT_ARROW: this.isLeftToRight() ? -1 : 1
                            },
                            A;
                        for (A in z) this.own(s.addKeyListener(this.domNode, {
                            keyCode: d[A],
                            ctrlKey: !1,
                            altKey: !1,
                            shiftKey: !1
                        }, this, function() {
                            var a = z[A];
                            return function(b) {
                                this._navigateByKey(a, b)
                            }
                        }(), this.timeoutChangeRate, this.defaultTimeout))
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this._setCurrent(this._cells[0].node)
                    },
                    focus: function() {
                        c.focus(this._currentFocus)
                    },
                    _onCellClick: function(a) {
                        for (var d = a.target;
                            "TD" != d.tagName;) {
                            if (!d.parentNode || d == this.gridNode) return;
                            d = d.parentNode
                        }
                        var e = this._getDye(d).getValue();
                        this._setCurrent(d);
                        c.focus(d);
                        this._setValueAttr(e, !0);
                        a.stopPropagation();
                        a.preventDefault()
                    },
                    _setCurrent: function(a) {
                        "_currentFocus" in this && e.set(this._currentFocus, "tabIndex", "-1");
                        (this._currentFocus = a) && e.set(a, "tabIndex", this.tabIndex)
                    },
                    _setValueAttr: function(a, c) {
                        0 <= this._selectedCell && f.remove(this._cells[this._selectedCell].node, this.cellClass +
                            "Selected");
                        this._selectedCell = -1;
                        if (a)
                            for (var d = 0; d < this._cells.length; d++)
                                if (a == this._cells[d].dye.getValue()) {
                                    this._selectedCell = d;
                                    f.add(this._cells[d].node, this.cellClass + "Selected");
                                    break
                                }
                        this._set("value", 0 <= this._selectedCell ? a : null);
                        if (c || void 0 === c) this.onChange(a)
                    },
                    onChange: function() {},
                    _navigateByKey: function(a, d) {
                        if (-1 != d) {
                            var e = this._currentFocus.idx + a;
                            e < this._cells.length && -1 < e && (e = this._cells[e].node, this._setCurrent(e), this.defer(m.hitch(c, "focus", e)))
                        }
                    },
                    _getDye: function(a) {
                        return this._cells[a.idx].dye
                    }
                })
            })
        },
        "dojo/_base/query": function() {
            define(["../query", "./NodeList"], function(p) {
                return p
            })
        },
        "dijit/form/CheckBox": function() {
            define("require dojo/_base/declare dojo/dom-attr dojo/has dojo/query dojo/ready ./ToggleButton ./_CheckBoxMixin dojo/text!./templates/CheckBox.html dojo/NodeList-dom ../a11yclick".split(" "), function(p, e, f, h, d, m, q, a, k) {
                h("dijit-legacy-requires") && m(0, function() {
                    p(["dijit/form/RadioButton"])
                });
                return e("dijit.form.CheckBox", [q, a], {
                    templateString: k,
                    baseClass: "dijitCheckBox",
                    _setValueAttr: function(a,
                        d) {
                        "string" == typeof a && (this.inherited(arguments), a = !0);
                        this._created && this.set("checked", a, d)
                    },
                    _getValueAttr: function() {
                        return this.checked && this._get("value")
                    },
                    _setIconClassAttr: null,
                    _setNameAttr: "focusNode",
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.checkedAttrSetting = ""
                    },
                    _fillContent: function() {},
                    _onFocus: function() {
                        this.id && d("label[for\x3d'" + this.id + "']").addClass("dijitFocusedLabel");
                        this.inherited(arguments)
                    },
                    _onBlur: function() {
                        this.id && d("label[for\x3d'" + this.id + "']").removeClass("dijitFocusedLabel");
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/_CheckBoxMixin": function() {
            define(["dojo/_base/declare", "dojo/dom-attr"], function(p, e) {
                return p("dijit.form._CheckBoxMixin", null, {
                    type: "checkbox",
                    value: "on",
                    readOnly: !1,
                    _aria_attr: "aria-checked",
                    _setReadOnlyAttr: function(f) {
                        this._set("readOnly", f);
                        e.set(this.focusNode, "readOnly", f)
                    },
                    _setLabelAttr: void 0,
                    _getSubmitValue: function(e) {
                        return null == e || "" === e ? "on" : e
                    },
                    _setValueAttr: function(f) {
                        f = this._getSubmitValue(f);
                        this._set("value", f);
                        e.set(this.focusNode,
                            "value", f)
                    },
                    reset: function() {
                        this.inherited(arguments);
                        this._set("value", this._getSubmitValue(this.params.value));
                        e.set(this.focusNode, "value", this.value)
                    },
                    _onClick: function(e) {
                        return this.readOnly ? (e.stopPropagation(), e.preventDefault(), !1) : this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/ComboBox": function() {
            define(["dojo/_base/declare", "./ValidationTextBox", "./ComboBoxMixin"], function(p, e, f) {
                return p("dijit.form.ComboBox", [e, f], {})
            })
        },
        "dijit/form/ComboBoxMixin": function() {
            define("dojo/_base/declare dojo/Deferred dojo/_base/kernel dojo/_base/lang dojo/store/util/QueryResults ./_AutoCompleterMixin ./_ComboBoxMenu ../_HasDropDown dojo/text!./templates/DropDownBox.html".split(" "),
                function(p, e, f, h, d, m, q, a, k) {
                    return p("dijit.form.ComboBoxMixin", [a, m], {
                        dropDownClass: q,
                        hasDownArrow: !0,
                        templateString: k,
                        baseClass: "dijitTextBox dijitComboBox",
                        cssStateNodes: {
                            _buttonNode: "dijitDownArrowButton"
                        },
                        _setHasDownArrowAttr: function(a) {
                            this._set("hasDownArrow", a);
                            this._buttonNode.style.display = a ? "" : "none"
                        },
                        _showResultList: function() {
                            this.displayMessage("");
                            this.inherited(arguments)
                        },
                        _setStoreAttr: function(a) {
                            a.get || h.mixin(a, {
                                _oldAPI: !0,
                                get: function(a) {
                                    var c = new e;
                                    this.fetchItemByIdentity({
                                        identity: a,
                                        onItem: function(a) {
                                            c.resolve(a)
                                        },
                                        onError: function(a) {
                                            c.reject(a)
                                        }
                                    });
                                    return c.promise
                                },
                                query: function(a, c) {
                                    var f = new e(function() {
                                        k.abort && k.abort()
                                    });
                                    f.total = new e;
                                    var k = this.fetch(h.mixin({
                                        query: a,
                                        onBegin: function(a) {
                                            f.total.resolve(a)
                                        },
                                        onComplete: function(a) {
                                            f.resolve(a)
                                        },
                                        onError: function(a) {
                                            f.reject(a)
                                        }
                                    }, c));
                                    return d(f)
                                }
                            });
                            this._set("store", a)
                        },
                        postMixInProperties: function() {
                            var a = this.params.store || this.store;
                            a && this._setStoreAttr(a);
                            this.inherited(arguments);
                            if (!this.params.store && this.store &&
                                !this.store._oldAPI) {
                                var d = this.declaredClass;
                                h.mixin(this.store, {
                                    getValue: function(a, c) {
                                        f.deprecated(d + ".store.getValue(item, attr) is deprecated for builtin store.  Use item.attr directly", "", "2.0");
                                        return a[c]
                                    },
                                    getLabel: function(a) {
                                        f.deprecated(d + ".store.getLabel(item) is deprecated for builtin store.  Use item.label directly", "", "2.0");
                                        return a.name
                                    },
                                    fetch: function(a) {
                                        f.deprecated(d + ".store.fetch() is deprecated for builtin store.", "Use store.query()", "2.0");
                                        require(["dojo/data/ObjectStore"],
                                            h.hitch(this, function(c) {
                                                (new c({
                                                    objectStore: this
                                                })).fetch(a)
                                            }))
                                    }
                                })
                            }
                        },
                        buildRendering: function() {
                            this.inherited(arguments);
                            this.focusNode.setAttribute("aria-autocomplete", this.autoComplete ? "both" : "list")
                        }
                    })
                })
        },
        "dijit/form/_AutoCompleterMixin": function() {
            define("dojo/aspect dojo/_base/declare dojo/dom-attr dojo/keys dojo/_base/lang dojo/query dojo/regexp dojo/sniff ./DataList ./_TextBoxMixin ./_SearchMixin".split(" "), function(p, e, f, h, d, m, q, a, k, c, s) {
                e = e("dijit.form._AutoCompleterMixin", s, {
                    item: null,
                    autoComplete: !0,
                    highlightMatch: "first",
                    labelAttr: "",
                    labelType: "text",
                    maxHeight: -1,
                    _stopClickEvents: !1,
                    _getCaretPos: function(c) {
                        var d = 0;
                        if ("number" == typeof c.selectionStart) d = c.selectionStart;
                        else if (a("ie")) {
                            var e = c.ownerDocument.selection.createRange().duplicate();
                            c = c.createTextRange();
                            e.move("character", 0);
                            c.move("character", 0);
                            try {
                                c.setEndPoint("EndToEnd", e), d = String(c.text).replace(/\r/g, "").length
                            } catch (f) {}
                        }
                        return d
                    },
                    _setCaretPos: function(a, d) {
                        d = parseInt(d);
                        c.selectInputText(a, d, d)
                    },
                    _setDisabledAttr: function(a) {
                        this.inherited(arguments);
                        this.domNode.setAttribute("aria-disabled", a ? "true" : "false")
                    },
                    _onKey: function(a) {
                        if (!(32 <= a.charCode)) {
                            var c = a.charCode || a.keyCode;
                            if (!(c == h.ALT || c == h.CTRL || c == h.META || c == h.SHIFT)) {
                                var d = this.dropDown,
                                    e = null;
                                this._abortQuery();
                                this.inherited(arguments);
                                if (!a.altKey && !a.ctrlKey && !a.metaKey) switch (this._opened && (e = d.getHighlightedOption()), c) {
                                    case h.PAGE_DOWN:
                                    case h.DOWN_ARROW:
                                    case h.PAGE_UP:
                                    case h.UP_ARROW:
                                        this._opened && this._announceOption(e);
                                        a.stopPropagation();
                                        a.preventDefault();
                                        break;
                                    case h.ENTER:
                                        if (e) {
                                            if (e ==
                                                d.nextButton) {
                                                this._nextSearch(1);
                                                a.stopPropagation();
                                                a.preventDefault();
                                                break
                                            } else if (e == d.previousButton) {
                                                this._nextSearch(-1);
                                                a.stopPropagation();
                                                a.preventDefault();
                                                break
                                            }
                                            a.stopPropagation();
                                            a.preventDefault()
                                        } else this._setBlurValue(), this._setCaretPos(this.focusNode, this.focusNode.value.length);
                                    case h.TAB:
                                        c = this.get("displayedValue");
                                        if (d && (c == d._messages.previousMessage || c == d._messages.nextMessage)) break;
                                        e && this._selectOption(e);
                                    case h.ESCAPE:
                                        this._opened && (this._lastQuery = null, this.closeDropDown())
                                }
                            }
                        }
                    },
                    _autoCompleteText: function(a) {
                        var d = this.focusNode;
                        c.selectInputText(d, d.value.length);
                        var e = this.ignoreCase ? "toLowerCase" : "substr";
                        0 == a[e](0).indexOf(this.focusNode.value[e](0)) ? (e = this.autoComplete ? this._getCaretPos(d) : d.value.length, e + 1 > d.value.length && (d.value = a, c.selectInputText(d, e))) : (d.value = a, c.selectInputText(d))
                    },
                    _openResultList: function(a, c, e) {
                        var f = this.dropDown.getHighlightedOption();
                        this.dropDown.clearResultList();
                        !a.length && 0 == e.start ? this.closeDropDown() : (this._nextSearch = this.dropDown.onPage =
                            d.hitch(this, function(c) {
                                a.nextPage(-1 !== c);
                                this.focus()
                            }), this.dropDown.createOptions(a, e, d.hitch(this, "_getMenuLabelFromItem")), this._showResultList(), "direction" in e ? (e.direction ? this.dropDown.highlightFirstOption() : e.direction || this.dropDown.highlightLastOption(), f && this._announceOption(this.dropDown.getHighlightedOption())) : this.autoComplete && (!this._prev_key_backspace && !/^[*]+$/.test(c[this.searchAttr].toString())) && this._announceOption(this.dropDown.containerNode.firstChild.nextSibling))
                    },
                    _showResultList: function() {
                        this.closeDropDown(!0);
                        this.openDropDown();
                        this.domNode.setAttribute("aria-expanded", "true")
                    },
                    loadDropDown: function() {
                        this._startSearchAll()
                    },
                    isLoaded: function() {
                        return !1
                    },
                    closeDropDown: function() {
                        this._abortQuery();
                        this._opened && (this.inherited(arguments), this.domNode.setAttribute("aria-expanded", "false"))
                    },
                    _setBlurValue: function() {
                        var a = this.get("displayedValue"),
                            c = this.dropDown;
                        c && (a == c._messages.previousMessage || a == c._messages.nextMessage) ? this._setValueAttr(this._lastValueReported, !0) : "undefined" == typeof this.item ? (this.item = null, this.set("displayedValue", a)) : (this.value != this._lastValueReported && this._handleOnChange(this.value, !0), this._refreshState());
                        this.focusNode.removeAttribute("aria-activedescendant")
                    },
                    _setItemAttr: function(a, c, d) {
                        var e = "";
                        a && (d || (d = this.store._oldAPI ? this.store.getValue(a, this.searchAttr) : a[this.searchAttr]), e = this._getValueField() != this.searchAttr ? this.store.getIdentity(a) : d);
                        this.set("value", e, c, d, a)
                    },
                    _announceOption: function(a) {
                        if (a) {
                            var c;
                            if (a ==
                                this.dropDown.nextButton || a == this.dropDown.previousButton) c = a.innerHTML, this.item = void 0, this.value = "";
                            else {
                                var d = this.dropDown.items[a.getAttribute("item")];
                                c = (this.store._oldAPI ? this.store.getValue(d, this.searchAttr) : d[this.searchAttr]).toString();
                                this.set("item", d, !1, c)
                            }
                            this.focusNode.value = this.focusNode.value.substring(0, this._lastInput.length);
                            this.focusNode.setAttribute("aria-activedescendant", f.get(a, "id"));
                            this._autoCompleteText(c)
                        }
                    },
                    _selectOption: function(a) {
                        this.closeDropDown();
                        a && this._announceOption(a);
                        this._setCaretPos(this.focusNode, this.focusNode.value.length);
                        this._handleOnChange(this.value, !0);
                        this.focusNode.removeAttribute("aria-activedescendant")
                    },
                    _startSearchAll: function() {
                        this._startSearch("")
                    },
                    _startSearchFromInput: function() {
                        this.item = void 0;
                        this.inherited(arguments)
                    },
                    _startSearch: function(a) {
                        if (!this.dropDown) {
                            var c = this.id + "_popup";
                            this.dropDown = new(d.isString(this.dropDownClass) ? d.getObject(this.dropDownClass, !1) : this.dropDownClass)({
                                onChange: d.hitch(this, this._selectOption),
                                id: c,
                                dir: this.dir,
                                textDir: this.textDir
                            })
                        }
                        this._lastInput = a;
                        this.inherited(arguments)
                    },
                    _getValueField: function() {
                        return this.searchAttr
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        if (!this.store && this.srcNodeRef && (this.store = new k({}, this.srcNodeRef), !("value" in this.params))) {
                            var a = this.item = this.store.fetchSelectedItem();
                            if (a) {
                                var c = this._getValueField();
                                this.value = this.store._oldAPI ? this.store.getValue(a, c) : a[c]
                            }
                        }
                    },
                    postCreate: function() {
                        var a = m('label[for\x3d"' + this.id + '"]');
                        a.length &&
                            (a[0].id || (a[0].id = this.id + "_label"), this.domNode.setAttribute("aria-labelledby", a[0].id));
                        this.inherited(arguments);
                        p.after(this, "onSearch", d.hitch(this, "_openResultList"), !0)
                    },
                    _getMenuLabelFromItem: function(a) {
                        a = this.labelFunc(a, this.store);
                        var c = this.labelType;
                        "none" != this.highlightMatch && ("text" == this.labelType && this._lastInput) && (a = this.doHighlight(a, this._lastInput), c = "html");
                        return {
                            html: "html" == c,
                            label: a
                        }
                    },
                    doHighlight: function(a, c) {
                        var d = (this.ignoreCase ? "i" : "") + ("all" == this.highlightMatch ?
                                "g" : ""),
                            e = this.queryExpr.indexOf("${0}");
                        c = q.escapeString(c);
                        return this._escapeHtml(a.replace(RegExp((0 == e ? "^" : "") + "(" + c + ")" + (e == this.queryExpr.length - 4 ? "$" : ""), d), "\uffff$1\uffff")).replace(/\uFFFF([^\uFFFF]+)\uFFFF/g, '\x3cspan class\x3d"dijitComboBoxHighlightMatch"\x3e$1\x3c/span\x3e')
                    },
                    _escapeHtml: function(a) {
                        return a = String(a).replace(/&/gm, "\x26amp;").replace(/</gm, "\x26lt;").replace(/>/gm, "\x26gt;").replace(/"/gm, "\x26quot;")
                    },
                    reset: function() {
                        this.item = null;
                        this.inherited(arguments)
                    },
                    labelFunc: function(a,
                        c) {
                        return (c._oldAPI ? c.getValue(a, this.labelAttr || this.searchAttr) : a[this.labelAttr || this.searchAttr]).toString()
                    },
                    _setValueAttr: function(a, c, d, e) {
                        this._set("item", e || null);
                        null == a && (a = "");
                        this.inherited(arguments)
                    }
                });
                a("dojo-bidi") && e.extend({
                    _setTextDirAttr: function(a) {
                        this.inherited(arguments);
                        this.dropDown && this.dropDown._set("textDir", a)
                    }
                });
                return e
            })
        },
        "dijit/form/DataList": function() {
            define("dojo/_base/declare dojo/dom dojo/_base/lang dojo/query dojo/store/Memory ../registry".split(" "), function(p,
                e, f, h, d, m) {
                function q(a) {
                    return {
                        id: a.value,
                        value: a.value,
                        name: f.trim(a.innerText || a.textContent || "")
                    }
                }
                return p("dijit.form.DataList", d, {
                    constructor: function(a, d) {
                        this.domNode = e.byId(d);
                        f.mixin(this, a);
                        this.id && m.add(this);
                        this.domNode.style.display = "none";
                        this.inherited(arguments, [{
                            data: h("option", this.domNode).map(q)
                        }])
                    },
                    destroy: function() {
                        m.remove(this.id)
                    },
                    fetchSelectedItem: function() {
                        var a = h("\x3e option[selected]", this.domNode)[0] || h("\x3e option", this.domNode)[0];
                        return a && q(a)
                    }
                })
            })
        },
        "dijit/form/_SearchMixin": function() {
            define("dojo/_base/declare dojo/keys dojo/_base/lang dojo/query dojo/string dojo/when ../registry".split(" "),
                function(p, e, f, h, d, m, q) {
                    return p("dijit.form._SearchMixin", null, {
                        pageSize: Infinity,
                        store: null,
                        fetchProperties: {},
                        query: {},
                        list: "",
                        _setListAttr: function(a) {
                            this._set("list", a)
                        },
                        searchDelay: 200,
                        searchAttr: "name",
                        queryExpr: "${0}*",
                        ignoreCase: !0,
                        _patternToRegExp: function(a) {
                            return RegExp("^" + a.replace(/(\\.)|(\*)|(\?)|\W/g, function(a, c, d, e) {
                                return d ? ".*" : e ? "." : c ? c : "\\" + a
                            }) + "$", this.ignoreCase ? "mi" : "m")
                        },
                        _abortQuery: function() {
                            this.searchTimer && (this.searchTimer = this.searchTimer.remove());
                            this._queryDeferHandle &&
                                (this._queryDeferHandle = this._queryDeferHandle.remove());
                            this._fetchHandle && (this._fetchHandle.abort && (this._cancelingQuery = !0, this._fetchHandle.abort(), this._cancelingQuery = !1), this._fetchHandle.cancel && (this._cancelingQuery = !0, this._fetchHandle.cancel(), this._cancelingQuery = !1), this._fetchHandle = null)
                        },
                        _processInput: function(a) {
                            if (!this.disabled && !this.readOnly) {
                                a = a.charOrCode;
                                var d = !1;
                                this._prev_key_backspace = !1;
                                switch (a) {
                                    case e.DELETE:
                                    case e.BACKSPACE:
                                        d = this._maskValidSubsetError = this._prev_key_backspace = !0;
                                        break;
                                    default:
                                        d = "string" == typeof a || 229 == a
                                }
                                if (d)
                                    if (this.store) this.searchTimer = this.defer("_startSearchFromInput", 1);
                                    else this.onSearch()
                            }
                        },
                        onSearch: function() {},
                        _startSearchFromInput: function() {
                            this._startSearch(this.focusNode.value)
                        },
                        _startSearch: function(a) {
                            this._abortQuery();
                            var e = this,
                                c = f.clone(this.query),
                                h = {
                                    start: 0,
                                    count: this.pageSize,
                                    queryOptions: {
                                        ignoreCase: this.ignoreCase,
                                        deep: !0
                                    }
                                },
                                n = d.substitute(this.queryExpr, [a.replace(/([\\\*\?])/g, "\\$1")]),
                                p, l = function() {
                                    var a = e._fetchHandle = e.store.query(c,
                                        h);
                                    !e.disabled && !(e.readOnly || p !== e._lastQuery) && m(a, function(d) {
                                        e._fetchHandle = null;
                                        !e.disabled && (!e.readOnly && p === e._lastQuery) && m(a.total, function(a) {
                                            d.total = a;
                                            var f = e.pageSize;
                                            if (isNaN(f) || f > d.total) f = d.total;
                                            d.nextPage = function(a) {
                                                h.direction = a = !1 !== a;
                                                h.count = f;
                                                a ? (h.start += d.length, h.start >= d.total && (h.count = 0)) : (h.start -= f, 0 > h.start && (h.count = Math.max(f + h.start, 0), h.start = 0));
                                                0 >= h.count ? (d.length = 0, e.onSearch(d, c, h)) : l()
                                            };
                                            e.onSearch(d, c, h)
                                        })
                                    }, function(a) {
                                        e._fetchHandle = null;
                                        e._cancelingQuery ||
                                            console.error(e.declaredClass + " " + a.toString())
                                    })
                                };
                            f.mixin(h, this.fetchProperties);
                            this.store._oldAPI ? p = n : (p = this._patternToRegExp(n), p.toString = function() {
                                return n
                            });
                            this._lastQuery = c[this.searchAttr] = p;
                            this._queryDeferHandle = this.defer(l, this.searchDelay)
                        },
                        constructor: function() {
                            this.query = {};
                            this.fetchProperties = {}
                        },
                        postMixInProperties: function() {
                            if (!this.store) {
                                var a = this.list;
                                a && (this.store = q.byId(a))
                            }
                            this.inherited(arguments)
                        }
                    })
                })
        },
        "dijit/form/_ComboBoxMenu": function() {
            define("dojo/_base/declare dojo/dom-class dojo/dom-style dojo/keys ../_WidgetBase ../_TemplatedMixin ./_ComboBoxMenuMixin ./_ListMouseMixin".split(" "),
                function(p, e, f, h, d, m, q, a) {
                    return p("dijit.form._ComboBoxMenu", [d, m, a, q], {
                        templateString: "\x3cdiv class\x3d'dijitReset dijitMenu' data-dojo-attach-point\x3d'containerNode' style\x3d'overflow: auto; overflow-x: hidden;' role\x3d'listbox'\x3e\x3cdiv class\x3d'dijitMenuItem dijitMenuPreviousButton' data-dojo-attach-point\x3d'previousButton' role\x3d'option'\x3e\x3c/div\x3e\x3cdiv class\x3d'dijitMenuItem dijitMenuNextButton' data-dojo-attach-point\x3d'nextButton' role\x3d'option'\x3e\x3c/div\x3e\x3c/div\x3e",
                        baseClass: "dijitComboBoxMenu",
                        postCreate: function() {
                            this.inherited(arguments);
                            this.isLeftToRight() || (e.add(this.previousButton, "dijitMenuItemRtl"), e.add(this.nextButton, "dijitMenuItemRtl"));
                            this.containerNode.setAttribute("role", "listbox")
                        },
                        _createMenuItem: function() {
                            var a = this.ownerDocument.createElement("div");
                            a.className = "dijitReset dijitMenuItem" + (this.isLeftToRight() ? "" : " dijitMenuItemRtl");
                            a.setAttribute("role", "option");
                            return a
                        },
                        onHover: function(a) {
                            e.add(a, "dijitMenuItemHover")
                        },
                        onUnhover: function(a) {
                            e.remove(a,
                                "dijitMenuItemHover")
                        },
                        onSelect: function(a) {
                            e.add(a, "dijitMenuItemSelected")
                        },
                        onDeselect: function(a) {
                            e.remove(a, "dijitMenuItemSelected")
                        },
                        _page: function(a) {
                            var c = 0,
                                d = this.domNode.scrollTop,
                                e = f.get(this.domNode, "height");
                            for (this.getHighlightedOption() || this.selectNextNode(); c < e;) {
                                var h = this.getHighlightedOption();
                                if (a) {
                                    if (!h.previousSibling || "none" == h.previousSibling.style.display) break;
                                    this.selectPreviousNode()
                                } else {
                                    if (!h.nextSibling || "none" == h.nextSibling.style.display) break;
                                    this.selectNextNode()
                                }
                                h =
                                    this.domNode.scrollTop;
                                c += (h - d) * (a ? -1 : 1);
                                d = h
                            }
                        },
                        handleKey: function(a) {
                            switch (a.keyCode) {
                                case h.DOWN_ARROW:
                                    return this.selectNextNode(), !1;
                                case h.PAGE_DOWN:
                                    return this._page(!1), !1;
                                case h.UP_ARROW:
                                    return this.selectPreviousNode(), !1;
                                case h.PAGE_UP:
                                    return this._page(!0), !1;
                                default:
                                    return !0
                            }
                        }
                    })
                })
        },
        "dijit/form/_ComboBoxMenuMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/has dojo/i18n dojo/i18n!./nls/ComboBox".split(" "), function(p, e, f, h, d) {
                var m = e("dijit.form._ComboBoxMenuMixin" +
                    (h("dojo-bidi") ? "_NoBidi" : ""), null, {
                        _messages: null,
                        postMixInProperties: function() {
                            this.inherited(arguments);
                            this._messages = d.getLocalization("dijit.form", "ComboBox", this.lang)
                        },
                        buildRendering: function() {
                            this.inherited(arguments);
                            this.previousButton.innerHTML = this._messages.previousMessage;
                            this.nextButton.innerHTML = this._messages.nextMessage
                        },
                        _setValueAttr: function(d) {
                            this._set("value", d);
                            this.onChange(d)
                        },
                        onClick: function(d) {
                            if (d == this.previousButton) this._setSelectedAttr(null), this.onPage(-1);
                            else if (d ==
                                this.nextButton) this._setSelectedAttr(null), this.onPage(1);
                            else this.onChange(d)
                        },
                        onChange: function() {},
                        onPage: function() {},
                        onClose: function() {
                            this._setSelectedAttr(null)
                        },
                        _createOption: function(d, a) {
                            var e = this._createMenuItem(),
                                c = a(d);
                            c.html ? e.innerHTML = c.label : e.appendChild(e.ownerDocument.createTextNode(c.label));
                            "" == e.innerHTML && (e.innerHTML = "\x26#160;");
                            return e
                        },
                        createOptions: function(d, a, e) {
                            this.items = d;
                            this.previousButton.style.display = 0 == a.start ? "none" : "";
                            f.set(this.previousButton, "id", this.id +
                                "_prev");
                            p.forEach(d, function(a, c) {
                                var d = this._createOption(a, e);
                                d.setAttribute("item", c);
                                f.set(d, "id", this.id + c);
                                this.nextButton.parentNode.insertBefore(d, this.nextButton)
                            }, this);
                            var c = !1;
                            d.total && !d.total.then && -1 != d.total ? a.start + a.count < d.total ? c = !0 : a.start + a.count > d.total && a.count == d.length && (c = !0) : a.count == d.length && (c = !0);
                            this.nextButton.style.display = c ? "" : "none";
                            f.set(this.nextButton, "id", this.id + "_next")
                        },
                        clearResultList: function() {
                            for (var d = this.containerNode; 2 < d.childNodes.length;) d.removeChild(d.childNodes[d.childNodes.length -
                                2]);
                            this._setSelectedAttr(null)
                        },
                        highlightFirstOption: function() {
                            this.selectFirstNode()
                        },
                        highlightLastOption: function() {
                            this.selectLastNode()
                        },
                        selectFirstNode: function() {
                            this.inherited(arguments);
                            this.getHighlightedOption() == this.previousButton && this.selectNextNode()
                        },
                        selectLastNode: function() {
                            this.inherited(arguments);
                            this.getHighlightedOption() == this.nextButton && this.selectPreviousNode()
                        },
                        getHighlightedOption: function() {
                            return this.selected
                        }
                    });
                h("dojo-bidi") && (m = e("dijit.form._ComboBoxMenuMixin",
                    m, {
                        _createOption: function() {
                            var d = this.inherited(arguments);
                            this.applyTextDir(d);
                            return d
                        }
                    }));
                return m
            })
        },
        "dijit/form/_ListMouseMixin": function() {
            define(["dojo/_base/declare", "dojo/on", "dojo/touch", "./_ListBase"], function(p, e, f, h) {
                return p("dijit.form._ListMouseMixin", h, {
                    postCreate: function() {
                        this.inherited(arguments);
                        this.domNode.dojoClick = !0;
                        this._listConnect("click", "_onClick");
                        this._listConnect("mousedown", "_onMouseDown");
                        this._listConnect("mouseup", "_onMouseUp");
                        this._listConnect("mouseover",
                            "_onMouseOver");
                        this._listConnect("mouseout", "_onMouseOut")
                    },
                    _onClick: function(d, e) {
                        this._setSelectedAttr(e, !1);
                        this._deferredClick && this._deferredClick.remove();
                        this._deferredClick = this.defer(function() {
                            this._deferredClick = null;
                            this.onClick(e)
                        })
                    },
                    _onMouseDown: function(d, e) {
                        this._hoveredNode && (this.onUnhover(this._hoveredNode), this._hoveredNode = null);
                        this._isDragging = !0;
                        this._setSelectedAttr(e, !1)
                    },
                    _onMouseUp: function(d, e) {
                        this._isDragging = !1;
                        var f = this.selected,
                            a = this._hoveredNode;
                        f && e == f ? this.defer(function() {
                            this._onClick(d,
                                f)
                        }) : a && this.defer(function() {
                            this._onClick(d, a)
                        })
                    },
                    _onMouseOut: function(d, e) {
                        this._hoveredNode && (this.onUnhover(this._hoveredNode), this._hoveredNode = null);
                        this._isDragging && (this._cancelDrag = (new Date).getTime() + 1E3)
                    },
                    _onMouseOver: function(d, e) {
                        this._cancelDrag && ((new Date).getTime() > this._cancelDrag && (this._isDragging = !1), this._cancelDrag = null);
                        this._hoveredNode = e;
                        this.onHover(e);
                        this._isDragging && this._setSelectedAttr(e, !1)
                    }
                })
            })
        },
        "dijit/form/_ListBase": function() {
            define(["dojo/_base/declare", "dojo/on",
                "dojo/window"
            ], function(p, e, f) {
                return p("dijit.form._ListBase", null, {
                    selected: null,
                    _listConnect: function(f, d) {
                        var m = this;
                        return m.own(e(m.containerNode, e.selector(function(d, a, e) {
                            return d.parentNode == e
                        }, f), function(e) {
                            m[d](e, this)
                        }))
                    },
                    selectFirstNode: function() {
                        for (var e = this.containerNode.firstChild; e && "none" == e.style.display;) e = e.nextSibling;
                        this._setSelectedAttr(e, !0)
                    },
                    selectLastNode: function() {
                        for (var e = this.containerNode.lastChild; e && "none" == e.style.display;) e = e.previousSibling;
                        this._setSelectedAttr(e, !0)
                    },
                    selectNextNode: function() {
                        var e = this.selected;
                        if (e) {
                            for (e = e.nextSibling; e && "none" == e.style.display;) e = e.nextSibling;
                            e ? this._setSelectedAttr(e, !0) : this.selectFirstNode()
                        } else this.selectFirstNode()
                    },
                    selectPreviousNode: function() {
                        var e = this.selected;
                        if (e) {
                            for (e = e.previousSibling; e && "none" == e.style.display;) e = e.previousSibling;
                            e ? this._setSelectedAttr(e, !0) : this.selectLastNode()
                        } else this.selectLastNode()
                    },
                    _setSelectedAttr: function(e, d) {
                        if (this.selected != e) {
                            var m = this.selected;
                            if (m) this.onDeselect(m);
                            e && (d && f.scrollIntoView(e), this.onSelect(e));
                            this._set("selected", e)
                        } else if (e) this.onSelect(e)
                    }
                })
            })
        },
        "url:esri/dijit/templates/InfoWindow.html": '\x3cdiv id\x3d"${id}.infowindow" class\x3d"infowindow" dojoAttachPoint\x3d"_infowindow"\r\n  \x3e\x3cdiv style\x3d"position:relative;"\r\n    \x3e\x3cdiv class\x3d"window" dojoAttachPoint\x3d"_window"\r\n      \x3e\x3cdiv class\x3d"top"\r\n        \x3e\x3cdiv class\x3d"left" dojoAttachPoint\x3d"_topleft"\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\x3e\x3c/div\r\n    \t\t\x3e\x3cdiv class\x3d"right" dojoAttachPoint\x3d"_topright"\r\n    \t\t\t\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\r\n    \t\t\t\x3e\x3cdiv class\x3d"user" dojoAttachPoint\x3d"_user"\r\n    \t\t\t  \x3e\x3cdiv class\x3d"titlebar" dojoAttachPoint\x3d"_titlebar"\r\n    \t\t\t    \x3e\x3ca class\x3d"hide" dojoAttachPoint\x3d"_hide" dojoAttachEvent\x3d"onclick:hide"\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\x3e\x3c/a\r\n              \x3e\x3cdiv class\x3d"title" dojoAttachPoint\x3d"_title"\x3e${title}\x3c/div\r\n    \t\t\t  \x3e\x3c/div\r\n            \x3e\x3cdiv class\x3d"border" dojoAttachPoint\x3d"_border"\x3e\x3c/div\r\n    \t\t\t  \x3e\x3cdiv class\x3d"layout content" dojoAttachPoint\x3d"_content, containerNode"\r\n    \t\t\t  \x3e\x3c/div\r\n    \t\t\t\x3e\x3c/div\r\n    \t\t\x3e\x3c/div\r\n        \x3e\x3cdiv class\x3d"bottom"\r\n          \x3e\x3cdiv class\x3d"left" dojoAttachPoint\x3d"_bottomleft"\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\x3e\x3c/div\r\n\t\t      \x3e\x3cdiv class\x3d"right" dojoAttachPoint\x3d"_bottomright"\x3e\x3cdiv class\x3d"sprite"\x3e\x3c/div\x3e\x3c/div\r\n        \x3e\x3c/div\r\n      \x3e\x3c/div\r\n    \x3e\x3c/div\r\n    \x3e\x3cdiv class\x3d"pointer" dojoAttachPoint\x3d"_pointer"\x3e\x3cdiv dojoAttachPoint\x3d"_sprite" class\x3d"sprite"\x3e\x3c/div\x3e\x3c/div\r\n  \x3e\x3c/div\r\n\x3e\x3c/div\x3e',
        "url:jimu/dijit/templates/LoadingShelter.html": '\x3cdiv\x3e\r\n  \x3cdiv class\x3d"loading-container"\x3e\r\n      \x3cdiv data-dojo-attach-point\x3d"imgDiv" class\x3d"img-div"\x3e\r\n        \x3cimg data-dojo-attach-point\x3d"loadingImg"/\x3e\r\n      \x3c/div\x3e\r\n      \x3cp data-dojo-attach-point\x3d"textNode"\x3e\x3c/p\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e',
        "url:dijit/templates/Menu.html": '\x3ctable class\x3d"dijit dijitMenu dijitMenuPassive dijitReset dijitMenuTable" role\x3d"menu" tabIndex\x3d"${tabIndex}"\r\n\t   cellspacing\x3d"0"\x3e\r\n\t\x3ctbody class\x3d"dijitReset" data-dojo-attach-point\x3d"containerNode"\x3e\x3c/tbody\x3e\r\n\x3c/table\x3e\r\n',
        "url:dijit/templates/MenuItem.html": '\x3ctr class\x3d"dijitReset" data-dojo-attach-point\x3d"focusNode" role\x3d"menuitem" tabIndex\x3d"-1"\x3e\r\n\t\x3ctd class\x3d"dijitReset dijitMenuItemIconCell" role\x3d"presentation"\x3e\r\n\t\t\x3cspan role\x3d"presentation" class\x3d"dijitInline dijitIcon dijitMenuItemIcon" data-dojo-attach-point\x3d"iconNode"\x3e\x3c/span\x3e\r\n\t\x3c/td\x3e\r\n\t\x3ctd class\x3d"dijitReset dijitMenuItemLabel" colspan\x3d"2" data-dojo-attach-point\x3d"containerNode,textDirNode"\r\n\t\trole\x3d"presentation"\x3e\x3c/td\x3e\r\n\t\x3ctd class\x3d"dijitReset dijitMenuItemAccelKey" style\x3d"display: none" data-dojo-attach-point\x3d"accelKeyNode"\x3e\x3c/td\x3e\r\n\t\x3ctd class\x3d"dijitReset dijitMenuArrowCell" role\x3d"presentation"\x3e\r\n\t\t\x3cspan data-dojo-attach-point\x3d"arrowWrapper" style\x3d"visibility: hidden"\x3e\r\n\t\t\t\x3cspan class\x3d"dijitInline dijitIcon dijitMenuExpand"\x3e\x3c/span\x3e\r\n\t\t\t\x3cspan class\x3d"dijitMenuExpandA11y"\x3e+\x3c/span\x3e\r\n\t\t\x3c/span\x3e\r\n\t\x3c/td\x3e\r\n\x3c/tr\x3e\r\n',
        "url:dijit/templates/MenuSeparator.html": '\x3ctr class\x3d"dijitMenuSeparator" role\x3d"separator"\x3e\r\n\t\x3ctd class\x3d"dijitMenuSeparatorIconCell"\x3e\r\n\t\t\x3cdiv class\x3d"dijitMenuSeparatorTop"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv class\x3d"dijitMenuSeparatorBottom"\x3e\x3c/div\x3e\r\n\t\x3c/td\x3e\r\n\t\x3ctd colspan\x3d"3" class\x3d"dijitMenuSeparatorLabelCell"\x3e\r\n\t\t\x3cdiv class\x3d"dijitMenuSeparatorTop dijitMenuSeparatorLabel"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv class\x3d"dijitMenuSeparatorBottom"\x3e\x3c/div\x3e\r\n\t\x3c/td\x3e\r\n\x3c/tr\x3e\r\n',
        "url:dijit/form/templates/Select.html": '\x3ctable class\x3d"dijit dijitReset dijitInline dijitLeft"\r\n\tdata-dojo-attach-point\x3d"_buttonNode,tableNode,focusNode,_popupStateNode" cellspacing\x3d\'0\' cellpadding\x3d\'0\'\r\n\trole\x3d"listbox" aria-haspopup\x3d"true"\r\n\t\x3e\x3ctbody role\x3d"presentation"\x3e\x3ctr role\x3d"presentation"\r\n\t\t\x3e\x3ctd class\x3d"dijitReset dijitStretch dijitButtonContents" role\x3d"presentation"\r\n\t\t\t\x3e\x3cdiv class\x3d"dijitReset dijitInputField dijitButtonText"  data-dojo-attach-point\x3d"containerNode,textDirNode" role\x3d"presentation"\x3e\x3c/div\r\n\t\t\t\x3e\x3cdiv class\x3d"dijitReset dijitValidationContainer"\r\n\t\t\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitValidationIcon dijitValidationInner" value\x3d"\x26#935; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\r\n\t\t\t/\x3e\x3c/div\r\n\t\t\t\x3e\x3cinput type\x3d"hidden" ${!nameAttrSetting} data-dojo-attach-point\x3d"valueNode" value\x3d"${value}" aria-hidden\x3d"true"\r\n\t\t/\x3e\x3c/td\r\n\t\t\x3e\x3ctd class\x3d"dijitReset dijitRight dijitButtonNode dijitArrowButton dijitDownArrowButton dijitArrowButtonContainer"\r\n\t\t\tdata-dojo-attach-point\x3d"titleNode" role\x3d"presentation"\r\n\t\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitArrowButtonInner" value\x3d"\x26#9660; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\r\n\t\t\t\t${_buttonInputDisabled}\r\n\t\t/\x3e\x3c/td\r\n\t\x3e\x3c/tr\x3e\x3c/tbody\r\n\x3e\x3c/table\x3e\r\n',
        "url:jimu/dijit/templates/SymbolChooser.html": '\x3cdiv style\x3d"width:320px;"\x3e\r\n\t\x3cdiv class\x3d"symbol-section point-symbol-section" data-dojo-attach-point\x3d"pointSection"\x3e\r\n\t\t\x3ctable class\x3d"symbol-set-table" cellspacing\x3d"0"\x3e\r\n\t\t\t\x3ccolgroup\x3e\r\n\t\t\t\t\x3ccol width\x3d"130px"\x3e\x3c/col\x3e\r\n\t\t\t\t\x3ccol width\x3d"auto"\x3e\x3c/col\x3e\r\n\t\t\t\x3c/colgroup\x3e\r\n\t\t\t\x3ctbody\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.preview}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"pointSymPreview" style\x3d"width:100%;"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr class\x3d"point-sym-class-select-tr"\x3e\r\n\t\t\t\t\t\x3ctd colspan\x3d"2"\x3e\r\n\t\t\t\t\t\t\x3cselect class\x3d"restrict-select-width" data-dojo-attach-point\x3d"pointSymClassSelect" data-dojo-type\x3d"dijit/form/Select" style\x3d"width:100%;height:30px;"\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'0\' selected\x3d"selected"\x3e${nls.basic}\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'1\'\x3eA-Z\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'2\'\x3e${nls.arrows}\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'3\'\x3e${nls.business}\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'4\'\x3e${nls.cartographic}\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'5\'\x3e${nls.nationalParkService}\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'6\'\x3e${nls.outdoorRecreation}\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'7\'\x3e${nls.peoplePlaces}\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'8\'\x3e${nls.safetyHealth}\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'9\'\x3e${nls.shapes}\x3c/option\x3e\r\n\t\t\t\t\t\t\t \x3coption value\x3d\'10\'\x3e${nls.transportation}\x3c/option\x3e\r\n\t\t\t\t\t\t\x3c/select\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr class\x3d"point-icon-tables-tr"\x3e\r\n\t\t\t\t\t\x3ctd colspan\x3d"2"\x3e\r\n\t\t\t\t\t\t\x3cdiv class\x3d"icon-tables" data-dojo-attach-point\x3d"pointIconTables"\x3e\r\n\t\t\t\t\t\t\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.symbolSize}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cinput data-dojo-attach-point\x3d"pointSize" data-dojo-type\x3d"dijit/form/NumberSpinner" style\x3d"width:100%;"\r\n                        data-dojo-props\x3d\'value:18,smallDelta:1,largeDelta:10,constraints:{min:1,max:50},intermediateChanges:true\'\x3e\x3c/input\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr data-dojo-attach-point\x3d"pointColorTr"\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.color}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"pointColor" data-dojo-type\x3d"jimu/dijit/ColorPicker" style\x3d"width:100%;height:30px;" data-dojo-props\x3d\'color:[0,0,128,128]\'\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr data-dojo-attach-point\x3d"pointOpacityTr"\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.transparency}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"pointAlpha" data-dojo-type\x3d"jimu/dijit/_Transparency" data-dojo-props\x3d\'alpha:0.5\' style\x3d"width:100%;font-size:13px;"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr data-dojo-attach-point\x3d"pointOutlineColorTr"\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.outlineColor}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"pointOutlineColor" data-dojo-type\x3d"jimu/dijit/ColorPicker" style\x3d"width:100%;height:30px;" data-dojo-props\x3d\'color:[0,0,128,255]\'\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr data-dojo-attach-point\x3d"pointOulineWidthTr"\x3e\r\n\t\t\t\t\t\x3ctd\x3e${nls.outlineWidth}:\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cinput data-dojo-attach-point\x3d"pointOutlineWidth" data-dojo-type\x3d"dijit/form/NumberSpinner" style\x3d"width:100%;"\r\n                        data-dojo-props\x3d\'value:1,smallDelta:1,constraints:{min:0,max:5},intermediateChanges:true\'\x3e\x3c/input\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\x3c/tbody\x3e\r\n\t\t\x3c/table\x3e\r\n\t\x3c/div\x3e\r\n\t\x3cdiv class\x3d"symbol-section line-symbol-section" data-dojo-attach-point\x3d"lineSection"\x3e\r\n\t\t\x3ctable class\x3d"symbol-set-table" cellspacing\x3d"0"\x3e\r\n\t\t\t\x3ccolgroup\x3e\r\n\t\t\t\t\x3ccol width\x3d"130px"\x3e\x3c/col\x3e\r\n\t\t\t\t\x3ccol width\x3d"auto"\x3e\x3c/col\x3e\r\n\t\t\t\x3c/colgroup\x3e\r\n\t\t\t\x3ctbody\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.preview}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"lineSymPreview" style\x3d"width:100%;overflow:hidden;"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd colspan\x3d"2"\x3e\r\n\t\t\t\t\t\t\x3cdiv class\x3d"icon-tables" data-dojo-attach-point\x3d"lineIconTables"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.color}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"lineColor" data-dojo-type\x3d"jimu/dijit/ColorPicker" style\x3d"width:100%;height:30px;" data-dojo-props\x3d\'color:"#9bbb59"\'\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.style}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cselect class\x3d"restrict-select-width" data-dojo-attach-point\x3d"lineStylesSelect" data-dojo-type\x3d"dijit/form/Select" style\x3d"width:100%;height:30px;"\x3e\r\n\t\t\t\t\t\t\t\x3coption value\x3d"solid"\x3e${nls.solid}\x3c/option\x3e\r\n\t\t\t\t\t\t\t\x3coption value\x3d"dash"\x3e${nls.dash}\x3c/option\x3e\r\n\t\t\t\t\t\t\t\x3coption value\x3d"dot"\x3e${nls.dot}\x3c/option\x3e\r\n\t\t\t\t\t\t\t\x3coption value\x3d"dashdot"\x3e${nls.dashDot}\x3c/option\x3e\r\n\t\t\t\t\t\t\t\x3coption value\x3d"longdashdotdot"\x3e${nls.dashDotDot}\x3c/option\x3e\r\n\t\t\t\t\t\t\x3c/select\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.transparency}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"lineAlpha" data-dojo-type\x3d"jimu/dijit/_Transparency" data-dojo-props\x3d\'alpha:1\' style\x3d"width:100%;font-size:13px;"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.width}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cinput data-dojo-attach-point\x3d"lineWidth" data-dojo-type\x3d"dijit/form/NumberSpinner" style\x3d"width:100%;"\r\n\t\t\t\t\t\tdata-dojo-props\x3d\'value:3,smallDelta:1,constraints:{min:1,max:50},intermediateChanges:true\'\x3e\x3c/input\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\x3c/tbody\x3e\r\n\t\t\x3c/table\x3e\r\n\t\x3c/div\x3e\r\n\t\x3cdiv class\x3d"symbol-section fill-symbol-section" data-dojo-attach-point\x3d"fillSection"\x3e\r\n\t\t\x3ctable class\x3d"symbol-set-table" cellspacing\x3d"0"\x3e\r\n\t\t\t\x3ccolgroup\x3e\r\n\t\t\t\t\x3ccol width\x3d"130px"\x3e\x3c/col\x3e\r\n\t\t\t\t\x3ccol width\x3d"auto"\x3e\x3c/col\x3e\r\n\t\t\t\x3c/colgroup\x3e\r\n\t\t\t\x3ctbody\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.preview}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"fillSymPreview" style\x3d"width:100%;"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd colspan\x3d"2"\x3e\r\n\t\t\t\t\t\t\x3cdiv class\x3d"icon-tables" data-dojo-attach-point\x3d"fillIconTables"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.color}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"fillColor" data-dojo-type\x3d"jimu/dijit/ColorPicker" style\x3d"width:100%;height:30px;" data-dojo-props\x3d\'color:"#9bbb59"\'\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.transparency}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"fillAlpha" data-dojo-type\x3d"jimu/dijit/_Transparency" data-dojo-props\x3d\'alpha:0.5\' style\x3d"width:100%;font-size:13px;"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.outlineColor}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"fillOutlineColor" data-dojo-type\x3d"jimu/dijit/ColorPicker" style\x3d"width:100%;height:30px;" data-dojo-props\x3d\'color:"#738c3d"\'\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.outlineWidth}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cinput data-dojo-attach-point\x3d"fillOutlineWidth" data-dojo-type\x3d"dijit/form/NumberSpinner" style\x3d"width:100%;"\r\n\t\t\t\t\t\tdata-dojo-props\x3d\'value:2,smallDelta:1,constraints:{min:0,max:50},intermediateChanges:true\'\x3e\x3c/input\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\x3c/tbody\x3e\r\n\t\t\x3c/table\x3e\r\n\t\x3c/div\x3e\r\n\t\x3cdiv class\x3d"symbol-section text-symbol-section" data-dojo-attach-point\x3d"textSection"\x3e\r\n\t\t\x3ctable class\x3d"symbol-set-table" cellspacing\x3d"0"\x3e\r\n\t\t\t\x3ccolgroup\x3e\r\n\t\t\t\t\x3ccol width\x3d"130px"\x3e\x3c/col\x3e\r\n\t\t\t\t\x3ccol width\x3d"auto"\x3e\x3c/col\x3e\r\n\t\t\t\x3c/colgroup\x3e\r\n\t\t\t\x3ctbody\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.preview}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan data-dojo-attach-point\x3d"textPreview"\x3e\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.text}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cinput class\x3d"text-input" data-dojo-attach-point\x3d"inputText" type\x3d"text" style\x3d"width:100%;" /\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.fontColor}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cdiv data-dojo-attach-point\x3d"textColor" data-dojo-type\x3d"jimu/dijit/ColorPicker" style\x3d"width:100%;height:30px;" data-dojo-props\x3d\'color:"#000"\'\x3e\x3c/div\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cspan\x3e${nls.fontSize}:\x3c/span\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\x3cinput data-dojo-attach-point\x3d"textFontSize" data-dojo-type\x3d"dijit/form/NumberSpinner" style\x3d"width:100%;" data-dojo-props\x3d\'value:20,smallDelta:1,constraints:{min:1,max:100},intermediateChanges:true\'\x3e\x3c/input\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\x3c/tbody\x3e\r\n\t\t\x3c/table\x3e\r\n\t\x3c/div\x3e\r\n\x3c/div\x3e',
        "url:dijit/form/templates/Spinner.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline dijitLeft"\r\n\tid\x3d"widget_${id}" role\x3d"presentation"\r\n\t\x3e\x3cdiv class\x3d"dijitReset dijitButtonNode dijitSpinnerButtonContainer"\r\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitSpinnerButtonInner" type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\r\n\t\t/\x3e\x3cdiv class\x3d"dijitReset dijitLeft dijitButtonNode dijitArrowButton dijitUpArrowButton"\r\n\t\t\tdata-dojo-attach-point\x3d"upArrowNode"\r\n\t\t\t\x3e\x3cdiv class\x3d"dijitArrowButtonInner"\r\n\t\t\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField" value\x3d"\x26#9650; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\r\n\t\t\t\t\t${_buttonInputDisabled}\r\n\t\t\t/\x3e\x3c/div\r\n\t\t\x3e\x3c/div\r\n\t\t\x3e\x3cdiv class\x3d"dijitReset dijitLeft dijitButtonNode dijitArrowButton dijitDownArrowButton"\r\n\t\t\tdata-dojo-attach-point\x3d"downArrowNode"\r\n\t\t\t\x3e\x3cdiv class\x3d"dijitArrowButtonInner"\r\n\t\t\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField" value\x3d"\x26#9660; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\r\n\t\t\t\t\t${_buttonInputDisabled}\r\n\t\t\t/\x3e\x3c/div\r\n\t\t\x3e\x3c/div\r\n\t\x3e\x3c/div\r\n\t\x3e\x3cdiv class\x3d\'dijitReset dijitValidationContainer\'\r\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitValidationIcon dijitValidationInner" value\x3d"\x26#935; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\r\n\t/\x3e\x3c/div\r\n\t\x3e\x3cdiv class\x3d"dijitReset dijitInputField dijitInputContainer"\r\n\t\t\x3e\x3cinput class\x3d\'dijitReset dijitInputInner\' data-dojo-attach-point\x3d"textbox,focusNode" type\x3d"${type}" data-dojo-attach-event\x3d"onkeydown:_onKeyDown"\r\n\t\t\trole\x3d"spinbutton" autocomplete\x3d"off" ${!nameAttrSetting}\r\n\t/\x3e\x3c/div\r\n\x3e\x3c/div\x3e\r\n',
        "url:dojox/widget/ColorPicker/ColorPicker.html": '\x3ctable class\x3d"dojoxColorPicker" dojoAttachEvent\x3d"onkeypress: _handleKey" cellpadding\x3d"0" cellspacing\x3d"0" role\x3d"presentation"\x3e\r\n\t\x3ctr\x3e\r\n\t\t\x3ctd valign\x3d"top" class\x3d"dojoxColorPickerRightPad"\x3e\r\n\t\t\t\x3cdiv class\x3d"dojoxColorPickerBox"\x3e\r\n\t\t\t\t\x3c!-- Forcing ABS in style attr due to dojo DND issue with not picking it up form the class. --\x3e\r\n\t\t\t\t\x3cimg title\x3d"${saturationPickerTitle}" alt\x3d"${saturationPickerTitle}" class\x3d"dojoxColorPickerPoint" src\x3d"${_pickerPointer}" tabIndex\x3d"0" dojoAttachPoint\x3d"cursorNode" style\x3d"position: absolute; top: 0px; left: 0px;"\x3e\r\n\t\t\t\t\x3cimg role\x3d"presentation" alt\x3d"" dojoAttachPoint\x3d"colorUnderlay" dojoAttachEvent\x3d"onclick: _setPoint, onmousedown: _stopDrag" class\x3d"dojoxColorPickerUnderlay" src\x3d"${_underlay}" ondragstart\x3d"return false"\x3e\r\n\t\t\t\x3c/div\x3e\r\n\t\t\x3c/td\x3e\r\n\t\t\x3ctd valign\x3d"top" class\x3d"dojoxColorPickerRightPad"\x3e\r\n\t\t\t\x3cdiv class\x3d"dojoxHuePicker"\x3e\r\n\t\t\t\t\x3c!-- Forcing ABS in style attr due to dojo DND issue with not picking it up form the class. --\x3e\r\n\t\t\t\t\x3cimg dojoAttachPoint\x3d"hueCursorNode" tabIndex\x3d"0" class\x3d"dojoxHuePickerPoint" title\x3d"${huePickerTitle}" alt\x3d"${huePickerTitle}" src\x3d"${_huePickerPointer}" style\x3d"position: absolute; top: 0px; left: 0px;"\x3e\r\n\t\t\t\t\x3cdiv class\x3d"dojoxHuePickerUnderlay" dojoAttachPoint\x3d"hueNode"\x3e\r\n\t\t\t\t    \x3cimg role\x3d"presentation" alt\x3d"" dojoAttachEvent\x3d"onclick: _setHuePoint, onmousedown: _stopDrag" src\x3d"${_hueUnderlay}"\x3e\r\n\t\t\t\t\x3c/div\x3e\r\n\t\t\t\x3c/div\x3e\r\n\t\t\x3c/td\x3e\r\n\t\t\x3ctd valign\x3d"top"\x3e\r\n\t\t\t\x3ctable cellpadding\x3d"0" cellspacing\x3d"0" role\x3d"presentation"\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd valign\x3d"top" class\x3d"dojoxColorPickerPreviewContainer"\x3e\r\n\t\t\t\t\t\t\x3ctable cellpadding\x3d"0" cellspacing\x3d"0" role\x3d"presentation"\x3e\r\n\t\t\t\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\t\t\t\x3ctd valign\x3d"top" class\x3d"dojoxColorPickerRightPad"\x3e\r\n\t\t\t\t\t\t\t\t\t\x3cdiv dojoAttachPoint\x3d"previewNode" class\x3d"dojoxColorPickerPreview"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\t\t\t\x3ctd valign\x3d"top"\x3e\r\n\t\t\t\t\t\t\t\t\t\x3cdiv dojoAttachPoint\x3d"safePreviewNode" class\x3d"dojoxColorPickerWebSafePreview"\x3e\x3c/div\x3e\r\n\t\t\t\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\t\t\x3c/table\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\x3ctd valign\x3d"bottom"\x3e\r\n\t\t\t\t\t\t\x3ctable class\x3d"dojoxColorPickerOptional" cellpadding\x3d"0" cellspacing\x3d"0" role\x3d"presentation"\x3e\r\n\t\t\t\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\t\t\t\x3cdiv class\x3d"dijitInline dojoxColorPickerRgb" dojoAttachPoint\x3d"rgbNode"\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3ctable cellpadding\x3d"1" cellspacing\x3d"1" role\x3d"presentation"\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d"${_uId}_r"\x3e${redLabel}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput id\x3d"${_uId}_r" dojoAttachPoint\x3d"Rval" size\x3d"1" dojoAttachEvent\x3d"onchange: _colorInputChange"\x3e\x3c/td\x3e\x3c/tr\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d"${_uId}_g"\x3e${greenLabel}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput id\x3d"${_uId}_g" dojoAttachPoint\x3d"Gval" size\x3d"1" dojoAttachEvent\x3d"onchange: _colorInputChange"\x3e\x3c/td\x3e\x3c/tr\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d"${_uId}_b"\x3e${blueLabel}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput id\x3d"${_uId}_b" dojoAttachPoint\x3d"Bval" size\x3d"1" dojoAttachEvent\x3d"onchange: _colorInputChange"\x3e\x3c/td\x3e\x3c/tr\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3c/table\x3e\r\n\t\t\t\t\t\t\t\t\t\x3c/div\x3e\r\n\t\t\t\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\t\t\t\x3ctd\x3e\r\n\t\t\t\t\t\t\t\t\t\x3cdiv class\x3d"dijitInline dojoxColorPickerHsv" dojoAttachPoint\x3d"hsvNode"\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3ctable cellpadding\x3d"1" cellspacing\x3d"1" role\x3d"presentation"\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d"${_uId}_h"\x3e${hueLabel}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput id\x3d"${_uId}_h" dojoAttachPoint\x3d"Hval"size\x3d"1" dojoAttachEvent\x3d"onchange: _colorInputChange"\x3e ${degLabel}\x3c/td\x3e\x3c/tr\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d"${_uId}_s"\x3e${saturationLabel}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput id\x3d"${_uId}_s" dojoAttachPoint\x3d"Sval" size\x3d"1" dojoAttachEvent\x3d"onchange: _colorInputChange"\x3e ${percentSign}\x3c/td\x3e\x3c/tr\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d"${_uId}_v"\x3e${valueLabel}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput id\x3d"${_uId}_v" dojoAttachPoint\x3d"Vval" size\x3d"1" dojoAttachEvent\x3d"onchange: _colorInputChange"\x3e ${percentSign}\x3c/td\x3e\x3c/tr\x3e\r\n\t\t\t\t\t\t\t\t\t\t\x3c/table\x3e\r\n\t\t\t\t\t\t\t\t\t\x3c/div\x3e\r\n\t\t\t\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\t\t\t\x3ctr\x3e\r\n\t\t\t\t\t\t\t\t\x3ctd colspan\x3d"2"\x3e\r\n\t\t\t\t\t\t\t\t\t\x3cdiv class\x3d"dojoxColorPickerHex" dojoAttachPoint\x3d"hexNode" aria-live\x3d"polite"\x3e\t\r\n\t\t\t\t\t\t\t\t\t\t\x3clabel for\x3d"${_uId}_hex"\x3e\x26nbsp;${hexLabel}\x26nbsp;\x3c/label\x3e\x3cinput id\x3d"${_uId}_hex" dojoAttachPoint\x3d"hexCode, focusNode, valueNode" size\x3d"6" class\x3d"dojoxColorPickerHexCode" dojoAttachEvent\x3d"onchange: _colorInputChange"\x3e\r\n\t\t\t\t\t\t\t\t\t\x3c/div\x3e\r\n\t\t\t\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\t\t\t\x3c/table\x3e\r\n\t\t\t\t\t\x3c/td\x3e\r\n\t\t\t\t\x3c/tr\x3e\r\n\t\t\t\x3c/table\x3e\r\n\t\t\x3c/td\x3e\r\n\t\x3c/tr\x3e\r\n\x3c/table\x3e\r\n\r\n',
        "url:jimu/dijit/templates/_Transparency.html": '\x3cdiv\x3e\r\n  \x3cdiv data-dojo-attach-point\x3d"opacitySlider" data-dojo-type\x3d"dijit/form/HorizontalSlider" showbuttons\x3d"true" value\x3d"0" minimum\x3d"0" maximum\x3d"100" discretevalues\x3d"101" intermediatechanges\x3d"true" style\x3d"width:100%;" data-dojo-attach-event\x3d"change: _onAlphaChanged"\x3e\r\n    \x3cdiv data-dojo-type\x3d"dijit/form/HorizontalRuleLabels" container\x3d"topDecoration" labels\x3d"${nls.opaque},${nls.transparent}" style\x3d"height: 1.5em; font-size: 0.8em; color: #666"\x3e\r\n    \x3c/div\x3e\r\n    \x3cdiv data-dojo-type\x3d"dijit/form/HorizontalRule" container\x3d"bottomDecoration" count\x3d"5" style\x3d"height: 5px;"\x3e\r\n    \x3c/div\x3e\r\n    \x3col data-dojo-type\x3d"dijit/form/HorizontalRuleLabels" container\x3d"bottomDecoration" style\x3d"height: 1em; font-size: 0.75em; color: darkblue;"\x3e\r\n      \x3cli\x3e0%\x3c/li\x3e\r\n      \x3cli\x3e50%\x3c/li\x3e\r\n      \x3cli\x3e100%\x3c/li\x3e\r\n    \x3c/ol\x3e\r\n  \x3c/div\x3e\r\n\x3c/div\x3e',
        "url:dijit/form/templates/HorizontalSlider.html": '\x3ctable class\x3d"dijit dijitReset dijitSlider dijitSliderH" cellspacing\x3d"0" cellpadding\x3d"0" border\x3d"0" rules\x3d"none" data-dojo-attach-event\x3d"onkeydown:_onKeyDown, onkeyup:_onKeyUp"\r\n\trole\x3d"presentation"\r\n\t\x3e\x3ctr class\x3d"dijitReset"\r\n\t\t\x3e\x3ctd class\x3d"dijitReset" colspan\x3d"2"\x3e\x3c/td\r\n\t\t\x3e\x3ctd data-dojo-attach-point\x3d"topDecoration" class\x3d"dijitReset dijitSliderDecoration dijitSliderDecorationT dijitSliderDecorationH"\x3e\x3c/td\r\n\t\t\x3e\x3ctd class\x3d"dijitReset" colspan\x3d"2"\x3e\x3c/td\r\n\t\x3e\x3c/tr\r\n\t\x3e\x3ctr class\x3d"dijitReset"\r\n\t\t\x3e\x3ctd class\x3d"dijitReset dijitSliderButtonContainer dijitSliderButtonContainerH"\r\n\t\t\t\x3e\x3cdiv class\x3d"dijitSliderDecrementIconH" style\x3d"display:none" data-dojo-attach-point\x3d"decrementButton"\x3e\x3cspan class\x3d"dijitSliderButtonInner"\x3e-\x3c/span\x3e\x3c/div\r\n\t\t\x3e\x3c/td\r\n\t\t\x3e\x3ctd class\x3d"dijitReset"\r\n\t\t\t\x3e\x3cdiv class\x3d"dijitSliderBar dijitSliderBumper dijitSliderBumperH dijitSliderLeftBumper" data-dojo-attach-event\x3d"press:_onClkDecBumper"\x3e\x3c/div\r\n\t\t\x3e\x3c/td\r\n\t\t\x3e\x3ctd class\x3d"dijitReset"\r\n\t\t\t\x3e\x3cinput data-dojo-attach-point\x3d"valueNode" type\x3d"hidden" ${!nameAttrSetting}\r\n\t\t\t/\x3e\x3cdiv class\x3d"dijitReset dijitSliderBarContainerH" role\x3d"presentation" data-dojo-attach-point\x3d"sliderBarContainer"\r\n\t\t\t\t\x3e\x3cdiv role\x3d"presentation" data-dojo-attach-point\x3d"progressBar" class\x3d"dijitSliderBar dijitSliderBarH dijitSliderProgressBar dijitSliderProgressBarH" data-dojo-attach-event\x3d"press:_onBarClick"\r\n\t\t\t\t\t\x3e\x3cdiv class\x3d"dijitSliderMoveable dijitSliderMoveableH"\r\n\t\t\t\t\t\t\x3e\x3cdiv data-dojo-attach-point\x3d"sliderHandle,focusNode" class\x3d"dijitSliderImageHandle dijitSliderImageHandleH" data-dojo-attach-event\x3d"press:_onHandleClick" role\x3d"slider"\x3e\x3c/div\r\n\t\t\t\t\t\x3e\x3c/div\r\n\t\t\t\t\x3e\x3c/div\r\n\t\t\t\t\x3e\x3cdiv role\x3d"presentation" data-dojo-attach-point\x3d"remainingBar" class\x3d"dijitSliderBar dijitSliderBarH dijitSliderRemainingBar dijitSliderRemainingBarH" data-dojo-attach-event\x3d"press:_onBarClick"\x3e\x3c/div\r\n\t\t\t\x3e\x3c/div\r\n\t\t\x3e\x3c/td\r\n\t\t\x3e\x3ctd class\x3d"dijitReset"\r\n\t\t\t\x3e\x3cdiv class\x3d"dijitSliderBar dijitSliderBumper dijitSliderBumperH dijitSliderRightBumper" data-dojo-attach-event\x3d"press:_onClkIncBumper"\x3e\x3c/div\r\n\t\t\x3e\x3c/td\r\n\t\t\x3e\x3ctd class\x3d"dijitReset dijitSliderButtonContainer dijitSliderButtonContainerH"\r\n\t\t\t\x3e\x3cdiv class\x3d"dijitSliderIncrementIconH" style\x3d"display:none" data-dojo-attach-point\x3d"incrementButton"\x3e\x3cspan class\x3d"dijitSliderButtonInner"\x3e+\x3c/span\x3e\x3c/div\r\n\t\t\x3e\x3c/td\r\n\t\x3e\x3c/tr\r\n\t\x3e\x3ctr class\x3d"dijitReset"\r\n\t\t\x3e\x3ctd class\x3d"dijitReset" colspan\x3d"2"\x3e\x3c/td\r\n\t\t\x3e\x3ctd data-dojo-attach-point\x3d"containerNode,bottomDecoration" class\x3d"dijitReset dijitSliderDecoration dijitSliderDecorationB dijitSliderDecorationH"\x3e\x3c/td\r\n\t\t\x3e\x3ctd class\x3d"dijitReset" colspan\x3d"2"\x3e\x3c/td\r\n\t\x3e\x3c/tr\r\n\x3e\x3c/table\x3e\r\n',
        "url:jimu/dijit/templates/TabContainer3.html": '\x3cdiv\x3e\r\n  \x3cdiv class\x3d"control-node" data-dojo-attach-point\x3d"controlNode"\x3e\r\n    \x3ctable data-dojo-attach-point\x3d"controlTable" class\x3d"control-table" cellpading\x3d"0"\x3e\r\n      \x3ctbody\x3e\r\n        \x3ctr data-dojo-attach-point\x3d"tabTr"\x3e\r\n        \x3c/tr\x3e\r\n      \x3c/tbody\x3e\r\n    \x3c/table\x3e\r\n  \x3c/div\x3e\r\n  \x3cdiv class\x3d"container-node" data-dojo-attach-point\x3d"containerNode"\x3e\x3c/div\x3e\r\n  \x3cdiv class\x3d"tab-shelter" data-dojo-attach-point\x3d"shelter"\x3e\x3c/div\x3e\r\n\x3c/div\x3e',
        "url:jimu/dijit/templates/DrawBox.html": '\x3cdiv style\x3d"position:relative;width:100%;"\x3e\r\n\t\x3cdiv class\x3d"draw-items"\x3e\r\n\t\t\x3cdiv title\x3d"${nls.point}" data-geotype\x3d"POINT" data-commontype\x3d"point" class\x3d"draw-item point-icon" data-dojo-attach-point\x3d"pointIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.line}" data-geotype\x3d"LINE" data-commontype\x3d"polyline" class\x3d"draw-item line-icon" data-dojo-attach-point\x3d"lineIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.polyline}" data-geotype\x3d"POLYLINE" data-commontype\x3d"polyline" class\x3d"draw-item polyline-icon" data-dojo-attach-point\x3d"polylineIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.freehandPolyline}" data-geotype\x3d"FREEHAND_POLYLINE" data-commontype\x3d"polyline" class\x3d"draw-item freehand-polyline-icon" data-dojo-attach-point\x3d"freehandPolylineIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.triangle}" data-geotype\x3d"TRIANGLE" data-commontype\x3d"polygon" class\x3d"draw-item triangle-icon" data-dojo-attach-point\x3d"triangleIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.extent}" data-geotype\x3d"EXTENT" data-commontype\x3d"polygon" class\x3d"draw-item extent-icon" data-dojo-attach-point\x3d"extentIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.circle}" data-geotype\x3d"CIRCLE" data-commontype\x3d"polygon" class\x3d"draw-item circle-icon" data-dojo-attach-point\x3d"circleIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.ellipse}" data-geotype\x3d"ELLIPSE" data-commontype\x3d"polygon" class\x3d"draw-item ellipse-icon" data-dojo-attach-point\x3d"ellipseIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.polygon}" data-geotype\x3d"POLYGON" data-commontype\x3d"polygon" class\x3d"draw-item polygon-icon" data-dojo-attach-point\x3d"polygonIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.freehandPolygon}" data-geotype\x3d"FREEHAND_POLYGON" data-commontype\x3d"polygon" class\x3d"draw-item freehand-polygon-icon" data-dojo-attach-point\x3d"freehandPolygonIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv title\x3d"${nls.text}" data-geotype\x3d"TEXT" data-commontype\x3d"text" class\x3d"draw-item text-icon" data-dojo-attach-point\x3d"textIcon" data-dojo-attach-point\x3d"textIcon"\x3e\x3c/div\x3e\r\n\t\t\x3cdiv class\x3d"drawings-clear" data-dojo-attach-point\x3d"btnClear" title\x3d"${nls.clear}"\x3e\x3c/div\x3e\r\n\t\x3c/div\x3e\r\n\x3c/div\x3e',
        "url:dijit/templates/CheckedMenuItem.html": '\x3ctr class\x3d"dijitReset" data-dojo-attach-point\x3d"focusNode" role\x3d"${role}" tabIndex\x3d"-1" aria-checked\x3d"${checked}"\x3e\r\n\t\x3ctd class\x3d"dijitReset dijitMenuItemIconCell" role\x3d"presentation"\x3e\r\n\t\t\x3cspan class\x3d"dijitInline dijitIcon dijitMenuItemIcon dijitCheckedMenuItemIcon" data-dojo-attach-point\x3d"iconNode"\x3e\x3c/span\x3e\r\n\t\t\x3cspan class\x3d"dijitMenuItemIconChar dijitCheckedMenuItemIconChar"\x3e${!checkedChar}\x3c/span\x3e\r\n\t\x3c/td\x3e\r\n\t\x3ctd class\x3d"dijitReset dijitMenuItemLabel" colspan\x3d"2" data-dojo-attach-point\x3d"containerNode,labelNode,textDirNode"\x3e\x3c/td\x3e\r\n\t\x3ctd class\x3d"dijitReset dijitMenuItemAccelKey" style\x3d"display: none" data-dojo-attach-point\x3d"accelKeyNode"\x3e\x3c/td\x3e\r\n\t\x3ctd class\x3d"dijitReset dijitMenuArrowCell" role\x3d"presentation"\x3e\x26#160;\x3c/td\x3e\r\n\x3c/tr\x3e\r\n',
        "url:dijit/templates/ColorPalette.html": '\x3cdiv class\x3d"dijitInline dijitColorPalette" role\x3d"grid"\x3e\r\n\t\x3ctable data-dojo-attach-point\x3d"paletteTableNode" class\x3d"dijitPaletteTable" cellSpacing\x3d"0" cellPadding\x3d"0" role\x3d"presentation"\x3e\r\n\t\t\x3ctbody data-dojo-attach-point\x3d"gridNode"\x3e\x3c/tbody\x3e\r\n\t\x3c/table\x3e\r\n\x3c/div\x3e\r\n',
        "url:dijit/form/templates/CheckBox.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline" role\x3d"presentation"\r\n\t\x3e\x3cinput\r\n\t \t${!nameAttrSetting} type\x3d"${type}" role\x3d"${type}" aria-checked\x3d"false" ${checkedAttrSetting}\r\n\t\tclass\x3d"dijitReset dijitCheckBoxInput"\r\n\t\tdata-dojo-attach-point\x3d"focusNode"\r\n\t \tdata-dojo-attach-event\x3d"ondijitclick:_onClick"\r\n/\x3e\x3c/div\x3e\r\n',
        "url:dijit/form/templates/DropDownBox.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline dijitLeft"\r\n\tid\x3d"widget_${id}"\r\n\trole\x3d"combobox"\r\n\taria-haspopup\x3d"true"\r\n\tdata-dojo-attach-point\x3d"_popupStateNode"\r\n\t\x3e\x3cdiv class\x3d\'dijitReset dijitRight dijitButtonNode dijitArrowButton dijitDownArrowButton dijitArrowButtonContainer\'\r\n\t\tdata-dojo-attach-point\x3d"_buttonNode" role\x3d"presentation"\r\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitArrowButtonInner" value\x3d"\x26#9660; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"button presentation" aria-hidden\x3d"true"\r\n\t\t\t${_buttonInputDisabled}\r\n\t/\x3e\x3c/div\r\n\t\x3e\x3cdiv class\x3d\'dijitReset dijitValidationContainer\'\r\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitValidationIcon dijitValidationInner" value\x3d"\x26#935; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\r\n\t/\x3e\x3c/div\r\n\t\x3e\x3cdiv class\x3d"dijitReset dijitInputField dijitInputContainer"\r\n\t\t\x3e\x3cinput class\x3d\'dijitReset dijitInputInner\' ${!nameAttrSetting} type\x3d"${type}" autocomplete\x3d"off"\r\n\t\t\tdata-dojo-attach-point\x3d"textbox,focusNode" role\x3d"textbox"\r\n\t/\x3e\x3c/div\r\n\x3e\x3c/div\x3e\r\n',
        "*now": function(p) {
            p(['dojo/i18n!*preload*jimu/nls/main*["ar","cs","da","de","en","el","es","et","fi","fr","he","hr","it","ja","ko","lt","lv","nb","nl","pl","pt-br","pt-pt","ro","ru","sr","sv","th","tr","zh-cn","vi","zh-hk","zh-tw","ROOT"]'])
        }
    }
});
define("./ConfigManager ./LayoutManager ./DataManager ./WidgetManager ./FeatureActionManager ./SelectionManager dojo/_base/html dojo/_base/lang dojo/_base/array dojo/on dojo/mouse dojo/topic dojo/cookie dojo/Deferred dojo/promise/all dojo/io-query dojo/domReady! esri/config esri/request esri/urlUtils esri/IdentityManager jimu/portalUrlUtils ./utils require dojo/i18n dojo/i18n!./nls/main".split(" "), function(p, e, f, h, d, m, q, a, k, c, s, n, r, l, g, t, b, v, w, z, A, x, C, u, E, D) {
    function B(a) {
        G = a
    }
    l = {};
    var G;
    v.defaults.io.timeout =
        18E4;
    "function" !== typeof r.getAll && (r.getAll = function(a) {
        var b = [];
        (a = r(a)) && b.push(a);
        return b
    });
    window.jimuNls = D;
    A.setProtocolErrorHandler(function() {
        return !0
    });
    v = C.getAncestorWindow();
    var I = !1;
    try {
        I = 0 === v.location.href.indexOf("https://")
    } catch (K) {
        console.log(K), I = "https:" === window.location.protocol
    }
    w.setRequestPreCallback(function(a) {
        a.content && a.content.printFlag && (a.timeout = 3E5);
        I && (a.url = a.url.replace(/^http(s?):\/\//gi, "//")); - 1 !== a.url.indexOf("/queryRelatedRecords?") && !C.isHostedService(a.url) &&
            (a.url = a.url.replace("FeatureServer", "MapServer"));
        !window.isBuilder && (G && !G.mode && G.appProxies && 0 < G.appProxies.length) && k.some(G.appProxies, function(b) {
            if (0 <= a.url.indexOf(b.sourceUrl)) return a.url = a.url.replace(b.sourceUrl, b.proxyUrl), !0
        });
        return a
    });
    c(window, "mousedown", function(a) {
        if (s.isMiddle(a)) return a.preventDefault(), a.stopPropagation(), a.returnValue = !1
    });
    String.prototype.startWith = function(a) {
        return this.substr(0, a.length) === a ? !0 : !1
    };
    String.prototype.endWith = function(a) {
        return this.substr(this.length -
            a.length, a.length) === a ? !0 : !1
    };
    "undefined" === typeof jimuConfig && (jimuConfig = {});
    jimuConfig = a.mixin({
        loadingId: "main-loading",
        loadingImageId: "app-loading",
        loadingGifId: "loading-gif",
        layoutId: "jimu-layout-manager",
        mapId: "map",
        mainPageId: "main-page",
        timeout: 5E3,
        breakPoints: [600, 1280]
    }, jimuConfig);
    window.wabVersion = "2.2";
    window.productVersion = "Portal for ArcGIS 10.5";
    window.isBuilder ? (n.subscribe("app/appConfigLoaded", B), n.subscribe("app/appConfigChanged", B)) : (n.subscribe("appConfigLoaded", B), n.subscribe("appConfigChanged",
        B));
    l.initApp = function() {
        var a, b;
        console.log("jimu.js init...");
        a = window.location.search;
        a = "" === a ? {} : t.queryToObject(a.substr(1));
        if (a.mobileBreakPoint) try {
            b = parseInt(a.mobileBreakPoint, 10), jimuConfig.breakPoints[0] = b
        } catch (c) {
            console.error("mobileBreakPoint URL parameter must be a number.", c)
        }
        f.getInstance(h.getInstance());
        d.getInstance();
        m.getInstance();
        q.setStyle(jimuConfig.loadingId, "display", "none");
        q.setStyle(jimuConfig.mainPageId, "display", "block");
        b = e.getInstance({
                mapId: jimuConfig.mapId,
                urlParams: a
            },
            jimuConfig.layoutId);
        a = p.getInstance(a);
        b.startup();
        a.loadConfig();
        u(["dynamic-modules/preload"])
    };
    return l
});